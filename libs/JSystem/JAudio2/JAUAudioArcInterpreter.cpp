//
// Generated By: dol2asm
// Translation Unit: JAUAudioArcInterpreter
//

#include "JSystem/JAudio2/JAUAudioArcInterpreter.h"
#include "JSystem/JUtility/JUTAssert.h"

//
// Forward References:
//

//
// Declarations:
//

/* 802A4244-802A4260 29EB84 001C+00 0/0 1/1 0/0 .text            __ct__22JAUAudioArcInterpreterFv */
JAUAudioArcInterpreter::JAUAudioArcInterpreter() {
    mBase = NULL;
    mReadPtr = NULL;
}

/* 802A4260-802A42A8 29EBA0 0048+00 1/0 3/3 0/0 .text            __dt__22JAUAudioArcInterpreterFv */
JAUAudioArcInterpreter::~JAUAudioArcInterpreter() {}

/* 802A42A8-802A4314 29EBE8 006C+00 0/0 1/1 0/0 .text            parse__22JAUAudioArcInterpreterFPCv
 */
bool JAUAudioArcInterpreter::parse(void const* param_0) {
    mBase = (const u8*)param_0;
    mReadPtr = mBase;
    if (readU32_() != 'AA_<') {
        return false;
    }
    while (readCommand_()) {}
    return true;
}

/* 802A4314-802A431C 29EC54 0008+00 1/0 1/0 0/0 .text readCommandMore__22JAUAudioArcInterpreterFUl
 */
bool JAUAudioArcInterpreter::readCommandMore(u32 param_0) {
    return false;
}

/* 802A431C-802A4740 29EC5C 0424+00 1/1 0/0 0/0 .text readCommand___22JAUAudioArcInterpreterFv */
bool JAUAudioArcInterpreter::readCommand_() {
    u32 cmd = readU32_();
    switch (cmd) {
    case '>_AA':
        return false;
    case 'ws  ': {
        u32 var1 = readU32_();
        u32 var2 = readU32_();
        u32 var3 = readU32_();
        readWS(var1, getContent_(var2), var3);
        break;
    }
    case 'bnk ': {
        u32 var1 = readU32_();
        u32 var2 = readU32_();
        readBNK(var1, getContent_(var2));
        break;
    }
    case 'bl_<': {
        u32 var1 = readU32_();
        u32 var2 = readU32_();
        beginBNKList(var1, var2);
        break;
    }
    case '>_bl':
        endBNKList();
        break;
    case 'bsc ': {
        u32 var1 = readU32_();
        u32 var2 = readU32_();
        readBSC(getContent_(var1), var2 - var1);
        break;
    }
    case 'bst ': {
        u32 var1 = readU32_();
        u32 var2 = readU32_();
        readBST(getContent_(var1), var2 - var1);
        break;
    }
    case 'bstn': {
        u32 var1 = readU32_();
        u32 var2 = readU32_();
        readBSTN(getContent_(var1), var2 - var1);
        break;
    }
    case 'bms ': {
        u32 var1 = readU32_();
        u32 var2 = readU32_();
        u32 var3 = readU32_();
        readBMS(var1, getContent_(var2), var3 - var2);
        break;
    }
    case 'bmsa': {
        u32 var1 = readU32_();
        readBMS_fromArchive(var1);
        break;
    }
    case 'vbnk': {
        u32 var1 = readU32_();
        u32 var2 = readU32_();
        newVoiceBank(var1, var2);
        break;
    }
    case 'dsqb': {
        u32 var1 = readU32_();
        newDynamicSeqBlock(var1);
        break;
    }
    case 'bsft': {
        u32 var1 = readU32_();
        readBSFT(getContent_(var1));
        break;
    }
    case 'sect': {
        readU8_();
        u8 var1 = readU8_();
        u8 var2 = readU8_();
        u8 var3 = readU8_();
        readMaxSeCategory(var1, var2, var3);
        break;
    }
    default:
        if (!readCommandMore(cmd)) {
            JUT_ASSERT("JAUAudioArcInterpreter.cpp", 0x91, false);
        }
        break;
    }
    return true;
}
