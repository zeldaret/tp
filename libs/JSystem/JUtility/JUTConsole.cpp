//
// Generated By: dol2asm
// Translation Unit: JUTConsole
//

#include "JSystem/JUtility/JUTConsole.h"
#include "dol2asm.h"
#include "dolphin/types.h"

//
// Types:
//

struct JUTVideo {
    static u8 sManager[4];
};

struct JUTDirectPrint {
    /* 802E4288 */ void erase(int, int, int, int);
    /* 802E46D8 */ void drawString(u16, u16, char*);
    /* 802E4798 */ void setCharColor(JUtility::TColor);

    static u8 sDirectPrint[4 + 4 /* padding */];
};

struct JKRHeap {
    /* 802CE474 */ void alloc(u32, int, JKRHeap*);

    static u8 sCurrentHeap[4];
};

struct JUTConsoleManager {
    /* 802E81CC */ JUTConsoleManager();
    /* 802E81F4 */ void createManager(JKRHeap*);
    /* 802E8240 */ void appendConsole(JUTConsole*);
    /* 802E82B0 */ void removeConsole(JUTConsole*);
    /* 802E8384 */ void draw() const;
    /* 802E8450 */ void drawDirect(bool) const;
    /* 802E84C4 */ void setDirectConsole(JUTConsole*);

    static u8 sManager[4];
};

struct J2DOrthoGraph {
    /* 802E96D0 */ J2DOrthoGraph(f32, f32, f32, f32, f32, f32);
    /* 802E97B4 */ void setPort();
};

//
// Forward References:
//

extern "C" void create__10JUTConsoleFUiUiP7JKRHeap();
extern "C" void create__10JUTConsoleFUiPvUl();
extern "C" void __ct__10JUTConsoleFUiUib();
extern "C" void __dt__10JUTConsoleFv();
extern "C" void getObjectSizeFromBufferSize__10JUTConsoleFUiUi();
extern "C" void getLineFromObjectSize__10JUTConsoleFUlUi();
extern "C" void clear__10JUTConsoleFv();
extern "C" void doDraw__10JUTConsoleCFQ210JUTConsole12EConsoleType();
extern "C" void print_f__10JUTConsoleFPCce();
extern "C" void print__10JUTConsoleFPCc();
extern "C" void JUTConsole_print_f_va_();
extern "C" void dumpToTerminal__10JUTConsoleFUi();
extern "C" void scroll__10JUTConsoleFi();
extern "C" void getUsedLine__10JUTConsoleCFv();
extern "C" void getLineOffset__10JUTConsoleCFv();
extern "C" void __ct__17JUTConsoleManagerFv();
extern "C" void createManager__17JUTConsoleManagerFP7JKRHeap();
extern "C" void appendConsole__17JUTConsoleManagerFP10JUTConsole();
extern "C" void removeConsole__17JUTConsoleManagerFP10JUTConsole();
extern "C" void draw__17JUTConsoleManagerCFv();
extern "C" void drawDirect__17JUTConsoleManagerCFb();
extern "C" void setDirectConsole__17JUTConsoleManagerFP10JUTConsole();
extern "C" void JUTSetReportConsole();
extern "C" u32 JUTGetReportConsole();
extern "C" void JUTSetWarningConsole();
extern "C" u32 JUTGetWarningConsole();
extern "C" static void JUTReportConsole_f_va();
extern "C" void JUTReportConsole_f();
extern "C" void JUTReportConsole();
extern "C" void JUTWarningConsole_f();
extern "C" void JUTWarningConsole();
extern "C" extern char const* const JUTConsole__stringBase0;
extern "C" u8 sManager__17JUTConsoleManager[4];

//
// External References:
//

extern "C" void OSReport();
extern "C" void alloc__7JKRHeapFUliP7JKRHeap();
extern "C" void* __nw__FUlP7JKRHeapi();
extern "C" void __dl__FPv();
extern "C" void __ct__11JKRDisposerFv();
extern "C" void __dt__11JKRDisposerFv();
extern "C" void
Insert__Q27JGadget13TNodeLinkListFQ37JGadget13TNodeLinkList8iteratorPQ27JGadget13TLinkListNode();
extern "C" void Remove__Q27JGadget13TNodeLinkListFPQ27JGadget13TLinkListNode();
extern "C" void setCharColor__7JUTFontFQ28JUtility6TColor();
extern "C" void drawString_size_scale__7JUTFontFffffPCcUlb();
extern "C" void erase__14JUTDirectPrintFiiii();
extern "C" void drawString__14JUTDirectPrintFUsUsPc();
extern "C" void setCharColor__14JUTDirectPrintFQ28JUtility6TColor();
extern "C" void __ct__13J2DOrthoGraphFffffff();
extern "C" void setPort__13J2DOrthoGraphFv();
extern "C" void J2DFillBox__FffffQ28JUtility6TColor();
extern "C" void OSEnableInterrupts();
extern "C" void OSRestoreInterrupts();
extern "C" void VIGetRetraceCount();
extern "C" void _savegpr_20();
extern "C" void _savegpr_27();
extern "C" void _savegpr_28();
extern "C" void _savegpr_29();
extern "C" void _restgpr_20();
extern "C" void _restgpr_27();
extern "C" void _restgpr_28();
extern "C" void _restgpr_29();
extern "C" void vsnprintf();
extern "C" void strlen();
extern "C" extern void* __vt__14J2DGrafContext[10];
extern "C" extern void* __vt__13J2DOrthoGraph[10];
extern "C" u8 sCurrentHeap__7JKRHeap[4];
extern "C" u8 sDirectPrint__14JUTDirectPrint[4 + 4 /* padding */];
extern "C" u8 sManager__8JUTVideo[4];

//
// Declarations:
//

/* ############################################################################################## */
/* 80451570-80451574 000A70 0004+00 4/4 7/7 0/0 .sbss            sManager__17JUTConsoleManager */
u8 JUTConsoleManager::sManager[4];

/* 802E7354-802E73E4 2E1C94 0090+00 0/0 1/1 0/0 .text            create__10JUTConsoleFUiUiP7JKRHeap
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JUTConsole::create(unsigned int param_0, unsigned int param_1, JKRHeap* param_2) {
    nofralloc
#include "asm/JSystem/JUtility/JUTConsole/create__10JUTConsoleFUiUiP7JKRHeap.s"
}
#pragma pop

/* 802E73E4-802E746C 2E1D24 0088+00 0/0 1/1 0/0 .text            create__10JUTConsoleFUiPvUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JUTConsole::create(unsigned int param_0, void* param_1, u32 param_2) {
    nofralloc
#include "asm/JSystem/JUtility/JUTConsole/create__10JUTConsoleFUiPvUl.s"
}
#pragma pop

/* ############################################################################################## */
/* 803CC9A8-803CC9B8 029AC8 000C+04 2/2 0/0 0/0 .data            __vt__10JUTConsole */
SECTION_DATA extern void* __vt__10JUTConsole[3 + 1 /* padding */] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__10JUTConsoleFv,
    /* padding */
    NULL,
};

/* 802E746C-802E755C 2E1DAC 00F0+00 2/2 0/0 0/0 .text            __ct__10JUTConsoleFUiUib */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm JUTConsole::JUTConsole(unsigned int param_0, unsigned int param_1, bool param_2) {
    nofralloc
#include "asm/JSystem/JUtility/JUTConsole/__ct__10JUTConsoleFUiUib.s"
}
#pragma pop

/* 802E755C-802E75CC 2E1E9C 0070+00 1/0 0/0 0/0 .text            __dt__10JUTConsoleFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm JUTConsole::~JUTConsole() {
    nofralloc
#include "asm/JSystem/JUtility/JUTConsole/__dt__10JUTConsoleFv.s"
}
#pragma pop

/* 802E75CC-802E75DC 2E1F0C 0010+00 1/1 0/0 0/0 .text
 * getObjectSizeFromBufferSize__10JUTConsoleFUiUi               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JUTConsole::getObjectSizeFromBufferSize(unsigned int param_0, unsigned int param_1) {
    nofralloc
#include "asm/JSystem/JUtility/JUTConsole/getObjectSizeFromBufferSize__10JUTConsoleFUiUi.s"
}
#pragma pop

/* 802E75DC-802E75EC 2E1F1C 0010+00 1/1 1/1 0/0 .text getLineFromObjectSize__10JUTConsoleFUlUi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JUTConsole::getLineFromObjectSize(u32 param_0, unsigned int param_1) {
    nofralloc
#include "asm/JSystem/JUtility/JUTConsole/getLineFromObjectSize__10JUTConsoleFUlUi.s"
}
#pragma pop

/* 802E75EC-802E7648 2E1F2C 005C+00 2/2 2/2 0/0 .text            clear__10JUTConsoleFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JUTConsole::clear() {
    nofralloc
#include "asm/JSystem/JUtility/JUTConsole/clear__10JUTConsoleFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 80456118-8045611C 004718 0004+00 1/1 0/0 0/0 .sdata2          @2460 */
SECTION_SDATA2 static f32 lit_2460 = 2.0f;

/* 8045611C-80456120 00471C 0004+00 1/1 0/0 0/0 .sdata2          @2461 */
SECTION_SDATA2 static u8 lit_2461[4] = {
    0x00,
    0x00,
    0x00,
    0x00,
};

/* 80456120-80456124 004720 0004+00 1/1 0/0 0/0 .sdata2          @2462 */
SECTION_SDATA2 static f32 lit_2462 = 640.0f;

/* 80456124-80456128 004724 0004+00 1/1 0/0 0/0 .sdata2          @2463 */
SECTION_SDATA2 static f32 lit_2463 = 480.0f;

/* 80456128-8045612C 004728 0004+00 1/1 0/0 0/0 .sdata2          @2464 */
SECTION_SDATA2 static f32 lit_2464 = -1.0f;

/* 8045612C-80456130 00472C 0004+00 1/1 0/0 0/0 .sdata2          @2465 */
SECTION_SDATA2 static f32 lit_2465 = 1.0f;

/* 80456130-80456138 004730 0004+04 1/1 0/0 0/0 .sdata2          @2466 */
SECTION_SDATA2 static f32 lit_2466[1 + 1 /* padding */] = {
    4.0f,
    /* padding */
    0.0f,
};

/* 80456138-80456140 004738 0008+00 1/1 0/0 0/0 .sdata2          @2469 */
SECTION_SDATA2 static f64 lit_2469 = 4503599627370496.0 /* cast u32 to float */;

/* 80456140-80456148 004740 0008+00 1/1 0/0 0/0 .sdata2          @2471 */
SECTION_SDATA2 static f64 lit_2471 = 4503601774854144.0 /* cast s32 to float */;

/* 802E7648-802E7BB8 2E1F88 0570+00 2/2 0/0 0/0 .text
 * doDraw__10JUTConsoleCFQ210JUTConsole12EConsoleType           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JUTConsole::doDraw(JUTConsole::EConsoleType param_0) const {
    nofralloc
#include "asm/JSystem/JUtility/JUTConsole/doDraw__10JUTConsoleCFQ210JUTConsole12EConsoleType.s"
}
#pragma pop

/* 802E7BB8-802E7C38 2E24F8 0080+00 0/0 13/13 0/0 .text            print_f__10JUTConsoleFPCce */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JUTConsole::print_f(char const* param_0, ...) {
    nofralloc
#include "asm/JSystem/JUtility/JUTConsole/print_f__10JUTConsoleFPCce.s"
}
#pragma pop

/* 802E7C38-802E7F30 2E2578 02F8+00 2/2 10/10 0/0 .text            print__10JUTConsoleFPCc */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JUTConsole::print(char const* param_0) {
    nofralloc
#include "asm/JSystem/JUtility/JUTConsole/print__10JUTConsoleFPCc.s"
}
#pragma pop

/* 802E7F30-802E7F7C 2E2870 004C+00 1/1 1/1 0/0 .text            JUTConsole_print_f_va_ */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JUTConsole_print_f_va_() {
    nofralloc
#include "asm/JSystem/JUtility/JUTConsole/JUTConsole_print_f_va_.s"
}
#pragma pop

/* ############################################################################################## */
/* 8039D9A8-8039D9A8 02A008 0000+00 0/0 0/0 0/0 .rodata          @stringBase0 */
#pragma push
#pragma force_active on
SECTION_DEAD static char const* const stringBase_8039D9A8 = "[%03d] %s\n";
SECTION_DEAD static char const* const stringBase_8039D9B3 = "%s\n";
#pragma pop

/* 802E7F7C-802E80A8 2E28BC 012C+00 0/0 2/2 0/0 .text            dumpToTerminal__10JUTConsoleFUi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JUTConsole::dumpToTerminal(unsigned int param_0) {
    nofralloc
#include "asm/JSystem/JUtility/JUTConsole/dumpToTerminal__10JUTConsoleFUi.s"
}
#pragma pop

/* 802E80A8-802E8184 2E29E8 00DC+00 0/0 3/3 0/0 .text            scroll__10JUTConsoleFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JUTConsole::scroll(int param_0) {
    nofralloc
#include "asm/JSystem/JUtility/JUTConsole/scroll__10JUTConsoleFi.s"
}
#pragma pop

/* 802E8184-802E81A8 2E2AC4 0024+00 0/0 2/2 0/0 .text            getUsedLine__10JUTConsoleCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JUTConsole::getUsedLine() const {
    nofralloc
#include "asm/JSystem/JUtility/JUTConsole/getUsedLine__10JUTConsoleCFv.s"
}
#pragma pop

/* 802E81A8-802E81CC 2E2AE8 0024+00 0/0 3/3 0/0 .text            getLineOffset__10JUTConsoleCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm int JUTConsole::getLineOffset() const {
    nofralloc
#include "asm/JSystem/JUtility/JUTConsole/getLineOffset__10JUTConsoleCFv.s"
}
#pragma pop

/* 802E81CC-802E81F4 2E2B0C 0028+00 1/1 0/0 0/0 .text            __ct__17JUTConsoleManagerFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm JUTConsoleManager::JUTConsoleManager() {
    nofralloc
#include "asm/JSystem/JUtility/JUTConsole/__ct__17JUTConsoleManagerFv.s"
}
#pragma pop

/* 802E81F4-802E8240 2E2B34 004C+00 0/0 1/1 0/0 .text createManager__17JUTConsoleManagerFP7JKRHeap
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JUTConsoleManager::createManager(JKRHeap* param_0) {
    nofralloc
#include "asm/JSystem/JUtility/JUTConsole/createManager__17JUTConsoleManagerFP7JKRHeap.s"
}
#pragma pop

/* 802E8240-802E82B0 2E2B80 0070+00 3/3 0/0 0/0 .text
 * appendConsole__17JUTConsoleManagerFP10JUTConsole             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JUTConsoleManager::appendConsole(JUTConsole* param_0) {
    nofralloc
#include "asm/JSystem/JUtility/JUTConsole/appendConsole__17JUTConsoleManagerFP10JUTConsole.s"
}
#pragma pop

/* 802E82B0-802E8384 2E2BF0 00D4+00 2/2 0/0 0/0 .text
 * removeConsole__17JUTConsoleManagerFP10JUTConsole             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JUTConsoleManager::removeConsole(JUTConsole* param_0) {
    nofralloc
#include "asm/JSystem/JUtility/JUTConsole/removeConsole__17JUTConsoleManagerFP10JUTConsole.s"
}
#pragma pop

/* 802E8384-802E8450 2E2CC4 00CC+00 0/0 1/1 0/0 .text            draw__17JUTConsoleManagerCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JUTConsoleManager::draw() const {
    nofralloc
#include "asm/JSystem/JUtility/JUTConsole/draw__17JUTConsoleManagerCFv.s"
}
#pragma pop

/* 802E8450-802E84C4 2E2D90 0074+00 0/0 5/5 0/0 .text            drawDirect__17JUTConsoleManagerCFb
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JUTConsoleManager::drawDirect(bool param_0) const {
    nofralloc
#include "asm/JSystem/JUtility/JUTConsole/drawDirect__17JUTConsoleManagerCFb.s"
}
#pragma pop

/* 802E84C4-802E8520 2E2E04 005C+00 0/0 2/2 0/0 .text
 * setDirectConsole__17JUTConsoleManagerFP10JUTConsole          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JUTConsoleManager::setDirectConsole(JUTConsole* param_0) {
    nofralloc
#include "asm/JSystem/JUtility/JUTConsole/setDirectConsole__17JUTConsoleManagerFP10JUTConsole.s"
}
#pragma pop

/* ############################################################################################## */
/* 80451574-80451578 000A74 0004+00 2/1 0/0 0/0 .sbss            sReportConsole */
static u8 sReportConsole[4];

/* 802E8520-802E8528 2E2E60 0008+00 1/1 1/1 0/0 .text            JUTSetReportConsole */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JUTSetReportConsole() {
    nofralloc
#include "asm/JSystem/JUtility/JUTConsole/JUTSetReportConsole.s"
}
#pragma pop

/* 802E8528-802E8530 -00001 0008+00 0/0 0/0 0/0 .text            JUTGetReportConsole */
u32 JUTGetReportConsole() {
    return *(u32*)(&sReportConsole);
}

/* ############################################################################################## */
/* 80451578-80451580 000A78 0004+04 2/1 0/0 0/0 .sbss            sWarningConsole */
static u8 sWarningConsole[4 + 4 /* padding */];

/* 802E8530-802E8538 2E2E70 0008+00 1/1 1/1 0/0 .text            JUTSetWarningConsole */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JUTSetWarningConsole() {
    nofralloc
#include "asm/JSystem/JUtility/JUTConsole/JUTSetWarningConsole.s"
}
#pragma pop

/* 802E8538-802E8540 -00001 0008+00 0/0 0/0 0/0 .text            JUTGetWarningConsole */
u32 JUTGetWarningConsole() {
    return *(u32*)(&sWarningConsole);
}

/* 802E8540-802E85C8 2E2E80 0088+00 2/2 0/0 0/0 .text            JUTReportConsole_f_va */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void JUTReportConsole_f_va() {
    nofralloc
#include "asm/JSystem/JUtility/JUTConsole/JUTReportConsole_f_va.s"
}
#pragma pop

/* 802E85C8-802E8648 2E2F08 0080+00 2/2 8/8 0/0 .text            JUTReportConsole_f */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JUTReportConsole_f() {
    nofralloc
#include "asm/JSystem/JUtility/JUTConsole/JUTReportConsole_f.s"
}
#pragma pop

/* ############################################################################################## */
/* 8039D9A8-8039D9A8 02A008 0000+00 0/0 0/0 0/0 .rodata          @stringBase0 */
#pragma push
#pragma force_active on
SECTION_DEAD static char const* const stringBase_8039D9B7 =
    "\n:::dump of console[%x]----------------\n";
SECTION_DEAD static char const* const stringBase_8039D9E0 =
    ":::dump of console[%x] END------------\n";
SECTION_DEAD static char const* const stringBase_8039DA08 = "%s";
/* @stringBase0 padding */
SECTION_DEAD static char const* const pad_8039DA0B = "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0";
#pragma pop

/* 802E8648-802E867C 2E2F88 0034+00 0/0 6/6 0/0 .text            JUTReportConsole */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JUTReportConsole() {
    nofralloc
#include "asm/JSystem/JUtility/JUTConsole/JUTReportConsole.s"
}
#pragma pop

/* 802E867C-802E86FC 2E2FBC 0080+00 0/0 9/9 0/0 .text            JUTWarningConsole_f */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JUTWarningConsole_f() {
    nofralloc
#include "asm/JSystem/JUtility/JUTConsole/JUTWarningConsole_f.s"
}
#pragma pop

/* 802E86FC-802E8730 2E303C 0034+00 0/0 2/2 0/0 .text            JUTWarningConsole */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JUTWarningConsole() {
    nofralloc
#include "asm/JSystem/JUtility/JUTConsole/JUTWarningConsole.s"
}
#pragma pop

/* 8039D9A8-8039D9A8 02A008 0000+00 0/0 0/0 0/0 .rodata          @stringBase0 */
