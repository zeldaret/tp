//
// Generated By: dol2asm
// Translation Unit: JPADynamicsBlock
//

#include "JSystem/JParticle/JPADynamicsBlock.h"
#include "dol2asm.h"
#include "dolphin/types.h"

//
// Types:
//

struct JPAEmitterWorkData {};

struct JPABaseEmitter {
    /* 8027EA40 */ void createParticle();
};

struct JMath {
    static u8 sincosTable_[65536];
};

//
// Forward References:
//

extern "C" static void JPAVolumePoint__FP18JPAEmitterWorkData();
extern "C" static void JPAVolumeLine__FP18JPAEmitterWorkData();
extern "C" static void JPAVolumeCircle__FP18JPAEmitterWorkData();
extern "C" static void JPAVolumeCube__FP18JPAEmitterWorkData();
extern "C" static void JPAVolumeSphere__FP18JPAEmitterWorkData();
extern "C" static void JPAVolumeCylinder__FP18JPAEmitterWorkData();
extern "C" static void JPAVolumeTorus__FP18JPAEmitterWorkData();
extern "C" void __ct__16JPADynamicsBlockFPCUc();
extern "C" void init__16JPADynamicsBlockFv();
extern "C" void create__16JPADynamicsBlockFP18JPAEmitterWorkData();

//
// External References:
//

extern "C" void createParticle__14JPABaseEmitterFv();
extern "C" u8 sincosTable___5JMath[65536];

//
// Declarations:
//

/* ############################################################################################## */
/* 80455310-80455314 003910 0004+00 7/7 0/0 0/0 .sdata2          @2287 */
SECTION_SDATA2 static u8 lit_2287[4] = {
    0x00,
    0x00,
    0x00,
    0x00,
};

/* 80455314-80455318 003914 0004+00 7/7 0/0 0/0 .sdata2          @2288 */
SECTION_SDATA2 static f32 lit_2288 = 1.0f;

/* 80455318-80455320 003918 0004+04 3/3 0/0 0/0 .sdata2          @2289 */
SECTION_SDATA2 static f32 lit_2289[1 + 1 /* padding */] = {
    0.5f,
    /* padding */
    0.0f,
};

/* 8027B144-8027B220 275A84 00DC+00 1/1 0/0 0/0 .text JPAVolumePoint__FP18JPAEmitterWorkData */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void JPAVolumePoint(JPAEmitterWorkData* param_0) {
    nofralloc
#include "asm/JSystem/JParticle/JPADynamicsBlock/JPAVolumePoint__FP18JPAEmitterWorkData.s"
}
#pragma pop

/* ############################################################################################## */
/* 80455320-80455328 003920 0008+00 6/6 0/0 0/0 .sdata2          @2321 */
SECTION_SDATA2 static f64 lit_2321 = 4503601774854144.0 /* cast s32 to float */;

/* 8027B220-8027B33C 275B60 011C+00 1/1 0/0 0/0 .text JPAVolumeLine__FP18JPAEmitterWorkData */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void JPAVolumeLine(JPAEmitterWorkData* param_0) {
    nofralloc
#include "asm/JSystem/JParticle/JPADynamicsBlock/JPAVolumeLine__FP18JPAEmitterWorkData.s"
}
#pragma pop

/* 8027B33C-8027B4E8 275C7C 01AC+00 1/1 0/0 0/0 .text JPAVolumeCircle__FP18JPAEmitterWorkData */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void JPAVolumeCircle(JPAEmitterWorkData* param_0) {
    nofralloc
#include "asm/JSystem/JParticle/JPADynamicsBlock/JPAVolumeCircle__FP18JPAEmitterWorkData.s"
}
#pragma pop

/* 8027B4E8-8027B5F0 275E28 0108+00 1/1 0/0 0/0 .text JPAVolumeCube__FP18JPAEmitterWorkData */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void JPAVolumeCube(JPAEmitterWorkData* param_0) {
    nofralloc
#include "asm/JSystem/JParticle/JPADynamicsBlock/JPAVolumeCube__FP18JPAEmitterWorkData.s"
}
#pragma pop

/* ############################################################################################## */
/* 80455328-80455330 003928 0004+04 1/1 0/0 0/0 .sdata2          @2501 */
SECTION_SDATA2 static f32 lit_2501[1 + 1 /* padding */] = {
    32768.0f,
    /* padding */
    0.0f,
};

/* 80455330-80455338 003930 0008+00 1/1 0/0 0/0 .sdata2          @2503 */
SECTION_SDATA2 static f64 lit_2503 = 4503599627370496.0 /* cast u32 to float */;

/* 8027B5F0-8027B87C 275F30 028C+00 1/1 0/0 0/0 .text JPAVolumeSphere__FP18JPAEmitterWorkData */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void JPAVolumeSphere(JPAEmitterWorkData* param_0) {
    nofralloc
#include "asm/JSystem/JParticle/JPADynamicsBlock/JPAVolumeSphere__FP18JPAEmitterWorkData.s"
}
#pragma pop

/* 8027B87C-8027B9F8 2761BC 017C+00 1/1 0/0 0/0 .text JPAVolumeCylinder__FP18JPAEmitterWorkData */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void JPAVolumeCylinder(JPAEmitterWorkData* param_0) {
    nofralloc
#include "asm/JSystem/JParticle/JPADynamicsBlock/JPAVolumeCylinder__FP18JPAEmitterWorkData.s"
}
#pragma pop

/* 8027B9F8-8027BB18 276338 0120+00 1/1 0/0 0/0 .text JPAVolumeTorus__FP18JPAEmitterWorkData */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void JPAVolumeTorus(JPAEmitterWorkData* param_0) {
    nofralloc
#include "asm/JSystem/JParticle/JPADynamicsBlock/JPAVolumeTorus__FP18JPAEmitterWorkData.s"
}
#pragma pop

/* 8027BB18-8027BB4C 276458 0034+00 0/0 1/1 0/0 .text            __ct__16JPADynamicsBlockFPCUc */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm JPADynamicsBlock::JPADynamicsBlock(u8 const* param_0) {
    nofralloc
#include "asm/JSystem/JParticle/JPADynamicsBlock/__ct__16JPADynamicsBlockFPCUc.s"
}
#pragma pop

/* ############################################################################################## */
/* 803C4488-803C44A8 -00001 001C+04 1/1 0/0 0/0 .data            @2631 */
SECTION_DATA static void* lit_2631[7 + 1 /* padding */] = {
    (void*)(((char*)init__16JPADynamicsBlockFv) + 0x2C),
    (void*)(((char*)init__16JPADynamicsBlockFv) + 0x3C),
    (void*)(((char*)init__16JPADynamicsBlockFv) + 0x4C),
    (void*)(((char*)init__16JPADynamicsBlockFv) + 0x5C),
    (void*)(((char*)init__16JPADynamicsBlockFv) + 0x6C),
    (void*)(((char*)init__16JPADynamicsBlockFv) + 0x7C),
    (void*)(((char*)init__16JPADynamicsBlockFv) + 0x8C),
    /* padding */
    NULL,
};

/* 8027BB4C-8027BBE8 27648C 009C+00 2/1 0/0 0/0 .text            init__16JPADynamicsBlockFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPADynamicsBlock::init() {
    nofralloc
#include "asm/JSystem/JParticle/JPADynamicsBlock/init__16JPADynamicsBlockFv.s"
}
#pragma pop

/* 8027BBE8-8027BDEC 276528 0204+00 0/0 1/1 0/0 .text
 * create__16JPADynamicsBlockFP18JPAEmitterWorkData             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPADynamicsBlock::create(JPAEmitterWorkData* param_0) {
    nofralloc
#include "asm/JSystem/JParticle/JPADynamicsBlock/create__16JPADynamicsBlockFP18JPAEmitterWorkData.s"
}
#pragma pop
