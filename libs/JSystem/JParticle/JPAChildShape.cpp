//
// Generated By: dol2asm
// Translation Unit: JPAChildShape
//

#include "JSystem/JParticle/JPAChildShape.h"
#include "JSystem/JParticle/JPAParticle.h"
#include "dol2asm.h"
#include "dolphin/types.h"

//
// Types:
//

struct JPAChildShape {
public:
    /* 8027B038 */ JPAChildShape(u8 const*);

public:
    u8 const* mpData;
};

//
// Forward References:
//

extern "C" void JPARegistChildPrmEnv__FP18JPAEmitterWorkData();
extern "C" void JPACalcChildAlphaOut__FP18JPAEmitterWorkDataP15JPABaseParticle();
extern "C" void JPACalcChildScaleOut__FP18JPAEmitterWorkDataP15JPABaseParticle();
extern "C" void __ct__13JPAChildShapeFPCUc();

//
// Declarations:
//

/* 8027AEBC-8027AFDC 2757FC 0120+00 0/0 1/1 0/0 .text JPARegistChildPrmEnv__FP18JPAEmitterWorkData
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPARegistChildPrmEnv(JPAEmitterWorkData* param_0) {
    nofralloc
#include "asm/JSystem/JParticle/JPAChildShape/JPARegistChildPrmEnv__FP18JPAEmitterWorkData.s"
}
#pragma pop

/* ############################################################################################## */
/* 80455308-8045530C 003908 0004+00 1/1 0/0 0/0 .sdata2          @2318 */
SECTION_SDATA2 static f32 lit_2318 = 255.0f;

/* 8045530C-80455310 00390C 0004+00 2/2 0/0 0/0 .sdata2          @2319 */
SECTION_SDATA2 static f32 lit_2319 = 1.0f;

/* 8027AFDC-8027B008 27591C 002C+00 0/0 1/1 0/0 .text
 * JPACalcChildAlphaOut__FP18JPAEmitterWorkDataP15JPABaseParticle */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPACalcChildAlphaOut(JPAEmitterWorkData* param_0, JPABaseParticle* param_1) {
    nofralloc
#include "asm/JSystem/JParticle/JPAChildShape/JPACalcChildAlphaOut__FP18JPAEmitterWorkDataP15JPABaseParticle.s"
}
#pragma pop

/* 8027B008-8027B038 275948 0030+00 0/0 1/1 0/0 .text
 * JPACalcChildScaleOut__FP18JPAEmitterWorkDataP15JPABaseParticle */
#ifdef NONMATCHING
void JPACalcChildScaleOut(JPAEmitterWorkData* work, JPABaseParticle* ptcl) {
    // literal
    ptcl->mParticleScaleX = ptcl->mScaleOut * (1.0f - ptcl->mTime);
    ptcl->mParticleScaleY = ptcl->mAlphaWaveRandom * (1.0f - ptcl->mTime);
}
#else
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPACalcChildScaleOut(JPAEmitterWorkData* param_0, JPABaseParticle* param_1) {
    nofralloc
#include "asm/JSystem/JParticle/JPAChildShape/JPACalcChildScaleOut__FP18JPAEmitterWorkDataP15JPABaseParticle.s"
}
#pragma pop
#endif

/* 8027B038-8027B040 -00001 0008+00 0/0 0/0 0/0 .text            __ct__13JPAChildShapeFPCUc */
JPAChildShape::JPAChildShape(u8 const* pData) {
    mpData = pData;
}
