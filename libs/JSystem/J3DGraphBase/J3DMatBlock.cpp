//
// Generated By: dol2asm
// Translation Unit: J3DMatBlock
//

#include "JSystem/J3DGraphBase/J3DMatBlock.h"
#include "dol2asm.h"
#include "dolphin/types.h"

//
// Types:
//

struct _GXTexMapID {};

struct _GXTexCoordID {};

struct _GXTevStageID {};

struct _GXTevRegID {};

struct _GXTevKColorID {};

struct _GXIndTexStageID {};

struct _GXIndTexScale {};

struct _GXIndTexMtxID {};

struct _GXFogType {};

struct _GXFogAdjTable {};

struct _GXChannelID {};

struct J3DZMode {};

struct J3DTexMtx {
    /* 803238C4 */ void load(u32) const;
    /* 80323900 */ void calc(f32 const (*)[4]);
    /* 80323C0C */ void calcPostTexMtx(f32 const (*)[4]);
};

struct J3DNBTScale {};

struct J3DTexGenBlock {
    /* 80317334 */ bool getNBTScale();
    /* 80317420 */ void setNBTScale(J3DNBTScale);
    /* 80317424 */ void setNBTScale(J3DNBTScale const*);
};

struct J3DTexCoord {};

struct J3DTexGenBlockPatched {
    /* 80317180 */ ~J3DTexGenBlockPatched();
    /* 80317644 */ void initialize();
    /* 80317B9C */ s32 countDLSize();
    /* 8031AA88 */ void patch();
    /* 8031AC68 */ void diff(u32);
    /* 8031ACD0 */ void diffTexMtx();
    /* 8031AD30 */ void diffTexGen();
    /* 80320084 */ void reset(J3DTexGenBlock*);
    /* 803213C0 */ void calc(f32 const (*)[4]);
    /* 80321584 */ void calcWithoutViewMtx(f32 const (*)[4]);
    /* 803216D8 */ void calcPostTexMtx(f32 const (*)[4]);
    /* 8032181C */ void calcPostTexMtxWithoutViewMtx(f32 const (*)[4]);
    /* 80322D34 */ void setTexGenNum(u32);
    /* 80322D3C */ void setTexGenNum(u32 const*);
    /* 80322D48 */ void getTexGenNum() const;
    /* 80322D50 */ void setTexCoord(u32, J3DTexCoord const*);
    /* 80322D64 */ void getTexCoord(u32);
    /* 80322D78 */ void setTexMtx(u32, J3DTexMtx*);
    /* 80322D88 */ void getTexMtx(u32);
    /* 80322D98 */ void getTexMtxOffset() const;
    /* 80322DA0 */ void setTexMtxOffset(u32);
    /* 80322E70 */ void load();
    /* 80322E74 */ void getType();
};

struct J3DTexGenBlockBasic {
    /* 803176A4 */ void initialize();
    /* 80317BAC */ s32 countDLSize();
    /* 8031A9E8 */ void load();
    /* 8031ABC0 */ void patch();
    /* 803202DC */ void reset(J3DTexGenBlock*);
    /* 80322C6C */ void getType();
    /* 80322C9C */ void setNBTScale(J3DNBTScale const*);
    /* 80322C78 */ void setNBTScale(J3DNBTScale);
    /* 80322CC0 */ void getNBTScale();
    /* 80322CC8 */ ~J3DTexGenBlockBasic();
};

struct J3DTexGenBlock4 {
    /* 80317674 */ void initialize();
    /* 80317BA4 */ s32 countDLSize();
    /* 8031A948 */ void load();
    /* 8031AB18 */ void patch();
    /* 803201A0 */ void reset(J3DTexGenBlock*);
    /* 80322DA8 */ void getType();
    /* 80322DD8 */ void setNBTScale(J3DNBTScale const*);
    /* 80322DB4 */ void setNBTScale(J3DNBTScale);
    /* 80322DFC */ void getNBTScale();
    /* 80322E04 */ ~J3DTexGenBlock4();
};

struct J3DTevSwapModeTable {};

struct J3DTevSwapModeInfo {};

struct J3DTevStage {};

struct J3DTevOrder {};

struct J3DIndTevStage {};

struct J3DGXColor {};

struct J3DTevBlock {
    /* 8000DBC8 */ void patchTexNoAndTexCoordScale();
    /* 8000DBD4 */ void patch();
    /* 8000DF84 */ bool getIndTevStage(u32);
    /* 8000DF8C */ bool getTevStage(u32);
    /* 8000DF94 */ void getTexNo(u32) const;
    /* 8000DFA0 */ bool getTevSwapModeTable(u32);
    /* 8000DFA8 */ bool getTevKAlphaSel(u32);
    /* 8000DFB0 */ bool getTevKColorSel(u32);
    /* 8000DFB8 */ bool getTevOrder(u32);
    /* 8000DFC0 */ bool getTevKColor(u32);
    /* 8000DFC8 */ bool getTevColor(u32);
    /* 8000DFD0 */ bool getTevStageNum() const;
    /* 8000E0A4 */ void setIndTevStage(u32, J3DIndTevStage);
    /* 80323554 */ void setIndTevStage(u32, J3DIndTevStage const*);
    /* 8000E0A8 */ void setTevStage(u32, J3DTevStage);
    /* 80323550 */ void setTevStage(u32, J3DTevStage const*);
    /* 8000E0AC */ void setTexNo(u32, u16);
    /* 80323544 */ void setTexNo(u32, u16 const*);
    /* 8000E0B0 */ void setTevSwapModeTable(u32, J3DTevSwapModeTable);
    /* 80322960 */ void setTevSwapModeTable(u32, J3DTevSwapModeTable const*);
    /* 8000E0B4 */ void setTevKAlphaSel(u32, u8);
    /* 80322954 */ void setTevKAlphaSel(u32, u8 const*);
    /* 8000E0B8 */ void setTevKColorSel(u32, u8);
    /* 80322950 */ void setTevKColorSel(u32, u8 const*);
    /* 8000E0BC */ void setTevOrder(u32, J3DTevOrder);
    /* 80323548 */ void setTevOrder(u32, J3DTevOrder const*);
    /* 800732AC */ void setTevKColor(u32, J3DGXColor const*);
    /* 8000E0C0 */ void setTevKColor(u32, J3DGXColor);
    /* 80110E80 */ void setTevColor(u32, J3DGXColorS10 const*);
    /* 8000E0C4 */ void setTevColor(u32, J3DGXColorS10);
    /* 8032354C */ void setTevStageNum(u8 const*);
    /* 8000E0C8 */ void setTevStageNum(u8);
    /* 80317224 */ ~J3DTevBlock();
    /* 8031730C */ bool countDLSize();
    /* 80317330 */ void load();
    /* 80317350 */ void reset(J3DTevBlock*);
    /* 8031CD44 */ void diff(u32);
    /* 8031E098 */ void indexToPtr_private(u32);
    /* 80321938 */ void diffTevReg();
    /* 8032193C */ void diffTevStageIndirect();
    /* 80321940 */ void diffTevStage();
    /* 80321944 */ void diffTexCoordScale();
    /* 80321948 */ void diffTexNo();
    /* 80321FE0 */ void setTexNoOffset(u32);
    /* 80322958 */ void setTevSwapModeInfo(u32, J3DTevSwapModeInfo);
    /* 8032295C */ void setTevSwapModeInfo(u32, J3DTevSwapModeInfo const*);
    /* 80322964 */ bool getTevRegOffset() const;
    /* 8032296C */ void setTevRegOffset(u32);
    /* 8032353C */ void patchTexNo();
    /* 80323540 */ void patchTevReg();
    /* 80323558 */ bool getTexNoOffset() const;
};

struct J3DTevBlockPatched {
    /* 803176E0 */ void initialize();
    /* 80317BB4 */ s32 countDLSize();
    /* 8031BF4C */ void patchTexNo();
    /* 8031BFE0 */ void patchTevReg();
    /* 8031C0AC */ void patchTexNoAndTexCoordScale();
    /* 8031C228 */ void patch();
    /* 8031CE00 */ void diffTexNo();
    /* 8031CE64 */ void diffTevStage();
    /* 8031CF78 */ void diffTevStageIndirect();
    /* 8031D028 */ void diffTevReg();
    /* 8031D0C4 */ void diffTexCoordScale();
    /* 8031DFB4 */ void ptrToIndex();
    /* 80320418 */ void reset(J3DTevBlock*);
    /* 80322970 */ void load();
    /* 80322974 */ void indexToPtr();
    /* 80322998 */ void getType();
    /* 803229A4 */ void setTevStageNum(u8);
    /* 803229AC */ void setTevStageNum(u8 const*);
    /* 803229B8 */ void getTevStageNum() const;
    /* 803229C0 */ void setTexNo(u32, u16);
    /* 803229D0 */ void setTexNo(u32, u16 const*);
    /* 803229E4 */ void getTexNo(u32) const;
    /* 80322A08 */ void setTevOrder(u32, J3DTevOrder const*);
    /* 803229F4 */ void setTevOrder(u32, J3DTevOrder);
    /* 80322A1C */ void getTevOrder(u32);
    /* 80322A30 */ void setTevStage(u32, J3DTevStage);
    /* 80322A6C */ void setTevStage(u32, J3DTevStage const*);
    /* 80322AA8 */ void getTevStage(u32);
    /* 80322ABC */ void setIndTevStage(u32, J3DIndTevStage);
    /* 80322AD0 */ void setIndTevStage(u32, J3DIndTevStage const*);
    /* 80322AE4 */ void getIndTevStage(u32);
    /* 80322B24 */ void setTevColor(u32, J3DGXColorS10 const*);
    /* 80322AF8 */ void setTevColor(u32, J3DGXColorS10);
    /* 80322B50 */ void getTevColor(u32);
    /* 80322B90 */ void setTevKColor(u32, J3DGXColor const*);
    /* 80322B64 */ void setTevKColor(u32, J3DGXColor);
    /* 80322BBC */ void getTevKColor(u32);
    /* 80322BD0 */ void setTevKColorSel(u32, u8);
    /* 80322BDC */ void setTevKColorSel(u32, u8 const*);
    /* 80322BEC */ void getTevKColorSel(u32);
    /* 80322BF8 */ void getTexNoOffset() const;
    /* 80322C00 */ void getTevRegOffset() const;
    /* 80322C08 */ void setTevRegOffset(u32);
    /* 80322C10 */ ~J3DTevBlockPatched();
};

struct J3DTevBlockNull {
    /* 803176D4 */ void initialize();
};

struct J3DTevBlock4 {
    /* 803178EC */ void initialize();
    /* 80317BCC */ s32 countDLSize();
    /* 8031B4C0 */ void load();
    /* 8031C6F4 */ void patchTexNo();
    /* 8031C788 */ void patchTevReg();
    /* 8031C854 */ void patchTexNoAndTexCoordScale();
    /* 8031C9D0 */ void patch();
    /* 8031D758 */ void diffTexNo();
    /* 8031D7BC */ void diffTevReg();
    /* 8031D858 */ void diffTevStage();
    /* 8031D96C */ void diffTevStageIndirect();
    /* 8031DA1C */ void diffTexCoordScale();
    /* 8032098C */ void reset(J3DTevBlock*);
    /* 80321FE8 */ void ptrToIndex();
    /* 80321FEC */ void indexToPtr();
    /* 80322010 */ void getType();
    /* 8032201C */ void setTexNo(u32, u16);
    /* 8032202C */ void setTexNo(u32, u16 const*);
    /* 80322040 */ void getTexNo(u32) const;
    /* 80322050 */ void setTevOrder(u32, J3DTevOrder);
    /* 80322064 */ void setTevOrder(u32, J3DTevOrder const*);
    /* 80322078 */ void getTevOrder(u32);
    /* 8032208C */ void setTevColor(u32, J3DGXColorS10);
    /* 803220B8 */ void setTevColor(u32, J3DGXColorS10 const*);
    /* 803220E4 */ void getTevColor(u32);
    /* 80322124 */ void setTevKColor(u32, J3DGXColor const*);
    /* 803220F8 */ void setTevKColor(u32, J3DGXColor);
    /* 80322150 */ void getTevKColor(u32);
    /* 80322164 */ void setTevKColorSel(u32, u8);
    /* 80322170 */ void setTevKColorSel(u32, u8 const*);
    /* 80322180 */ void getTevKColorSel(u32);
    /* 8032218C */ void setTevKAlphaSel(u32, u8);
    /* 80322198 */ void setTevKAlphaSel(u32, u8 const*);
    /* 803221A8 */ void getTevKAlphaSel(u32);
    /* 803221B4 */ void setTevStageNum(u8);
    /* 803221BC */ void setTevStageNum(u8 const*);
    /* 803221C8 */ void getTevStageNum() const;
    /* 8032220C */ void setTevStage(u32, J3DTevStage const*);
    /* 803221D0 */ void setTevStage(u32, J3DTevStage);
    /* 80322248 */ void getTevStage(u32);
    /* 80322294 */ void setTevSwapModeInfo(u32, J3DTevSwapModeInfo const*);
    /* 8032225C */ void setTevSwapModeInfo(u32, J3DTevSwapModeInfo);
    /* 803222CC */ void setTevSwapModeTable(u32, J3DTevSwapModeTable);
    /* 803222DC */ void setTevSwapModeTable(u32, J3DTevSwapModeTable const*);
    /* 803222EC */ void getTevSwapModeTable(u32);
    /* 80322310 */ void setIndTevStage(u32, J3DIndTevStage const*);
    /* 803222FC */ void setIndTevStage(u32, J3DIndTevStage);
    /* 80322324 */ void getIndTevStage(u32);
    /* 80322338 */ void getTexNoOffset() const;
    /* 80322340 */ void getTevRegOffset() const;
    /* 80322348 */ void setTevRegOffset(u32);
    /* 80322350 */ ~J3DTevBlock4();
};

struct J3DTevBlock2 {
    /* 80317810 */ void initialize();
    /* 80317BC4 */ s32 countDLSize();
    /* 8031AFA4 */ void load();
    /* 8031C3F8 */ void patchTexNo();
    /* 8031C48C */ void patchTevReg();
    /* 8031C558 */ void patchTexNoAndTexCoordScale();
    /* 8031C6A8 */ void patch();
    /* 8031D3D0 */ void diffTexNo();
    /* 8031D434 */ void diffTevReg();
    /* 8031D4D0 */ void diffTevStage();
    /* 8031D5E4 */ void diffTevStageIndirect();
    /* 8031D694 */ void diffTexCoordScale();
    /* 803206AC */ void reset(J3DTevBlock*);
    /* 803223AC */ void ptrToIndex();
    /* 803223B0 */ void indexToPtr();
    /* 803223D4 */ void getType();
    /* 803223E0 */ void setTexNo(u32, u16);
    /* 803223F0 */ void setTexNo(u32, u16 const*);
    /* 80322404 */ void getTexNo(u32) const;
    /* 80322414 */ void setTevOrder(u32, J3DTevOrder);
    /* 80322428 */ void setTevOrder(u32, J3DTevOrder const*);
    /* 8032243C */ void getTevOrder(u32);
    /* 80322450 */ void setTevColor(u32, J3DGXColorS10);
    /* 8032247C */ void setTevColor(u32, J3DGXColorS10 const*);
    /* 803224A8 */ void getTevColor(u32);
    /* 803224BC */ void setTevKColor(u32, J3DGXColor);
    /* 803224E8 */ void setTevKColor(u32, J3DGXColor const*);
    /* 80322514 */ void getTevKColor(u32);
    /* 80322528 */ void setTevKColorSel(u32, u8);
    /* 80322534 */ void setTevKColorSel(u32, u8 const*);
    /* 80322544 */ void getTevKColorSel(u32);
    /* 80322550 */ void setTevKAlphaSel(u32, u8);
    /* 8032255C */ void setTevKAlphaSel(u32, u8 const*);
    /* 8032256C */ void getTevKAlphaSel(u32);
    /* 80322580 */ void setTevStageNum(u8 const*);
    /* 80322578 */ void setTevStageNum(u8);
    /* 8032258C */ void getTevStageNum() const;
    /* 80322594 */ void setTevStage(u32, J3DTevStage);
    /* 803225D0 */ void setTevStage(u32, J3DTevStage const*);
    /* 8032260C */ void getTevStage(u32);
    /* 80322620 */ void setTevSwapModeInfo(u32, J3DTevSwapModeInfo);
    /* 80322658 */ void setTevSwapModeInfo(u32, J3DTevSwapModeInfo const*);
    /* 80322690 */ void setTevSwapModeTable(u32, J3DTevSwapModeTable);
    /* 803226A0 */ void setTevSwapModeTable(u32, J3DTevSwapModeTable const*);
    /* 803226B0 */ void getTevSwapModeTable(u32);
    /* 803226C0 */ void setIndTevStage(u32, J3DIndTevStage);
    /* 803226D4 */ void setIndTevStage(u32, J3DIndTevStage const*);
    /* 803226E8 */ void getIndTevStage(u32);
    /* 803226FC */ void getTexNoOffset() const;
    /* 80322704 */ void getTevRegOffset() const;
    /* 8032270C */ void setTevRegOffset(u32);
    /* 80322714 */ ~J3DTevBlock2();
};

struct J3DTevBlock16 {
    /* 80317A00 */ void initialize();
    /* 80317BD4 */ s32 countDLSize();
    /* 8031BA04 */ void load();
    /* 8031CA1C */ void patchTexNo();
    /* 8031CAB0 */ void patchTevReg();
    /* 8031CB7C */ void patchTexNoAndTexCoordScale();
    /* 8031CCF8 */ void patch();
    /* 8031DB14 */ void diffTexNo();
    /* 8031DB78 */ void diffTevReg();
    /* 8031DC14 */ void diffTevStage();
    /* 8031DD28 */ void diffTevStageIndirect();
    /* 8031DDD8 */ void diffTexCoordScale();
    /* 8031DED0 */ void ptrToIndex();
    /* 80320E24 */ void reset(J3DTevBlock*);
    /* 80321C20 */ void indexToPtr();
    /* 80321C44 */ void getType();
    /* 80321C50 */ void setTexNo(u32, u16);
    /* 80321C60 */ void setTexNo(u32, u16 const*);
    /* 80321C74 */ void getTexNo(u32) const;
    /* 80321C84 */ void setTevOrder(u32, J3DTevOrder);
    /* 80321C98 */ void setTevOrder(u32, J3DTevOrder const*);
    /* 80321CAC */ void getTevOrder(u32);
    /* 80321CC0 */ void setTevColor(u32, J3DGXColorS10);
    /* 80321CEC */ void setTevColor(u32, J3DGXColorS10 const*);
    /* 80321D18 */ void getTevColor(u32);
    /* 80321D2C */ void setTevKColor(u32, J3DGXColor);
    /* 80321D58 */ void setTevKColor(u32, J3DGXColor const*);
    /* 80321D84 */ void getTevKColor(u32);
    /* 80321D98 */ void setTevKColorSel(u32, u8);
    /* 80321DA4 */ void setTevKColorSel(u32, u8 const*);
    /* 80321DB4 */ void getTevKColorSel(u32);
    /* 80321DC0 */ void setTevKAlphaSel(u32, u8);
    /* 80321DCC */ void setTevKAlphaSel(u32, u8 const*);
    /* 80321DDC */ void getTevKAlphaSel(u32);
    /* 80321DE8 */ void setTevStageNum(u8);
    /* 80321DF0 */ void setTevStageNum(u8 const*);
    /* 80321DFC */ void getTevStageNum() const;
    /* 80321E04 */ void setTevStage(u32, J3DTevStage);
    /* 80321E40 */ void setTevStage(u32, J3DTevStage const*);
    /* 80321E7C */ void getTevStage(u32);
    /* 80321E90 */ void setTevSwapModeInfo(u32, J3DTevSwapModeInfo);
    /* 80321EC8 */ void setTevSwapModeInfo(u32, J3DTevSwapModeInfo const*);
    /* 80321F00 */ void setTevSwapModeTable(u32, J3DTevSwapModeTable);
    /* 80321F10 */ void setTevSwapModeTable(u32, J3DTevSwapModeTable const*);
    /* 80321F20 */ void getTevSwapModeTable(u32);
    /* 80321F30 */ void setIndTevStage(u32, J3DIndTevStage);
    /* 80321F44 */ void setIndTevStage(u32, J3DIndTevStage const*);
    /* 80321F58 */ void getIndTevStage(u32);
    /* 80321F6C */ void getTexNoOffset() const;
    /* 80321F74 */ void getTevRegOffset() const;
    /* 80321F7C */ void setTevRegOffset(u32);
    /* 80321F84 */ ~J3DTevBlock16();
};

struct J3DTevBlock1 {
    /* 803177E8 */ void initialize();
    /* 80317BBC */ s32 countDLSize();
    /* 8031AD64 */ void load();
    /* 8031C274 */ void patchTexNo();
    /* 8031C2E4 */ void patchTevReg();
    /* 8031C2E8 */ void patchTexNoAndTexCoordScale();
    /* 8031C3CC */ void patch();
    /* 8031D1BC */ void diffTexNo();
    /* 8031D1F4 */ void diffTevReg();
    /* 8031D1F8 */ void diffTevStage();
    /* 8031D2E8 */ void diffTevStageIndirect();
    /* 8031D368 */ void diffTexCoordScale();
    /* 803205D4 */ void reset(J3DTevBlock*);
    /* 80322770 */ void ptrToIndex();
    /* 80322774 */ void indexToPtr();
    /* 80322798 */ void getType();
    /* 803227A4 */ void setTexNo(u32, u16);
    /* 803227B4 */ void setTexNo(u32, u16 const*);
    /* 803227C8 */ void getTexNo(u32) const;
    /* 803227D8 */ void setTevOrder(u32, J3DTevOrder);
    /* 803227EC */ void setTevOrder(u32, J3DTevOrder const*);
    /* 80322800 */ void getTevOrder(u32);
    /* 80322814 */ void setTevStageNum(u8);
    /* 80322818 */ void setTevStageNum(u8 const*);
    /* 8032281C */ bool getTevStageNum() const;
    /* 80322824 */ void setTevStage(u32, J3DTevStage);
    /* 80322860 */ void setTevStage(u32, J3DTevStage const*);
    /* 8032289C */ void getTevStage(u32);
    /* 803228B0 */ void setIndTevStage(u32, J3DIndTevStage);
    /* 803228C4 */ void setIndTevStage(u32, J3DIndTevStage const*);
    /* 803228D8 */ void getIndTevStage(u32);
    /* 803228EC */ void getTexNoOffset() const;
    /* 803228F4 */ ~J3DTevBlock1();
};

struct J3DSys {
    static u8 sTexCoordScaleTable[64 + 4 /* padding */];
};

struct J3DPEBlockXlu {
    /* 80317BF4 */ s32 countDLSize();
    /* 8031E98C */ void load();
    /* 80323258 */ void getType();
    /* 80323264 */ ~J3DPEBlockXlu();
};

struct J3DPEBlockTexEdge {
    /* 80317BEC */ s32 countDLSize();
    /* 8031E6C8 */ void load();
    /* 803232C0 */ void getType();
    /* 803232CC */ ~J3DPEBlockTexEdge();
};

struct J3DPEBlockOpa {
    /* 80317BE4 */ s32 countDLSize();
    /* 8031E408 */ void load();
    /* 80323328 */ void getType();
    /* 80323334 */ ~J3DPEBlockOpa();
};

struct J3DBlend {};

struct J3DFog {};

struct J3DAlphaComp {};

struct J3DPEBlock {
    /* 8000DBCC */ void patch();
    /* 8000DF3C */ bool getZCompLoc() const;
    /* 8000DF44 */ bool getZMode();
    /* 8000DF4C */ bool getBlend();
    /* 8000DF54 */ bool getAlphaComp();
    /* 8000DF5C */ bool getFog();
    /* 8000E010 */ void setZCompLoc(u8);
    /* 80317378 */ void setZCompLoc(u8 const*);
    /* 8000E014 */ void setZMode(J3DZMode);
    /* 80317374 */ void setZMode(J3DZMode const*);
    /* 8000E018 */ void setBlend(J3DBlend const&);
    /* 80317370 */ void setBlend(J3DBlend const*);
    /* 8000E01C */ void setAlphaComp(J3DAlphaComp const&);
    /* 8031736C */ void setAlphaComp(J3DAlphaComp const*);
    /* 80317344 */ void diff(u32);
    /* 80317348 */ void reset(J3DPEBlock*);
    /* 8031735C */ void diffFog();
    /* 80317360 */ void diffBlend();
    /* 80317364 */ void setFog(J3DFog*);
    /* 80317368 */ void setFog(J3DFog);
    /* 80317380 */ void setDither(u8 const*);
    /* 8031737C */ void setDither(u8);
    /* 80317384 */ bool getDither() const;
    /* 8031738C */ bool getFogOffset() const;
    /* 80317394 */ void setFogOffset(u32);
};

struct J3DPEBlockFull {
    /* 80317B58 */ void initialize();
    /* 80317C04 */ s32 countDLSize();
    /* 8031F3C0 */ void load();
    /* 8031F890 */ void patch();
    /* 8031F940 */ void diffFog();
    /* 8031F9B8 */ void diffBlend();
    /* 8031FCA0 */ void diff(u32);
    /* 8032129C */ void reset(J3DPEBlock*);
    /* 8032194C */ void getType();
    /* 80321958 */ void setFog(J3DFog*);
    /* 8032197C */ void setFog(J3DFog);
    /* 803219A0 */ void getFog();
    /* 803219A8 */ void setAlphaComp(J3DAlphaComp const&);
    /* 803219C4 */ void setAlphaComp(J3DAlphaComp const*);
    /* 803219E0 */ void getAlphaComp();
    /* 803219E8 */ void setBlend(J3DBlend const&);
    /* 803219F4 */ void setBlend(J3DBlend const*);
    /* 80321A00 */ void getBlend();
    /* 80321A08 */ void setZMode(J3DZMode);
    /* 80321A14 */ void setZMode(J3DZMode const*);
    /* 80321A20 */ void getZMode();
    /* 80321A28 */ void setZCompLoc(u8);
    /* 80321A30 */ void setZCompLoc(u8 const*);
    /* 80321A3C */ void getZCompLoc() const;
    /* 80321A44 */ void setDither(u8);
    /* 80321A4C */ void setDither(u8 const*);
    /* 80321A58 */ void getDither() const;
    /* 80321A60 */ void getFogOffset() const;
    /* 80321A68 */ void setFogOffset(u32);
    /* 80321A70 */ ~J3DPEBlockFull();
};

struct J3DPEBlockFogOff {
    /* 80317B34 */ void initialize();
    /* 80317BFC */ s32 countDLSize();
    /* 8031EC50 */ void load();
    /* 8031F0D8 */ void diffBlend();
    /* 803211B4 */ void reset(J3DPEBlock*);
    /* 80321ACC */ void diff(u32);
    /* 80321B00 */ void getType();
    /* 80321B0C */ void setAlphaComp(J3DAlphaComp const&);
    /* 80321B28 */ void setAlphaComp(J3DAlphaComp const*);
    /* 80321B44 */ void getAlphaComp();
    /* 80321B4C */ void setBlend(J3DBlend const&);
    /* 80321B58 */ void setBlend(J3DBlend const*);
    /* 80321B64 */ void getBlend();
    /* 80321B6C */ void setZMode(J3DZMode);
    /* 80321B78 */ void setZMode(J3DZMode const*);
    /* 80321B84 */ void getZMode();
    /* 80321B8C */ void setZCompLoc(u8);
    /* 80321B94 */ void setZCompLoc(u8 const*);
    /* 80321BA0 */ void getZCompLoc() const;
    /* 80321BA8 */ void setDither(u8);
    /* 80321BB0 */ void setDither(u8 const*);
    /* 80321BBC */ void getDither() const;
    /* 80321BC4 */ ~J3DPEBlockFogOff();
};

struct J3DNBTScaleInfo {
    /* 8032587C */ void operator=(J3DNBTScaleInfo const&);
};

struct J3DLightObj {
    /* 80323590 */ void load(u32) const;
};

struct J3DIndTexOrder {};

struct J3DIndTexMtxInfo {
    /* 803257DC */ void operator=(J3DIndTexMtxInfo const&);
};

struct J3DIndTexMtx {
    /* 8000E064 */ ~J3DIndTexMtx();
};

struct J3DIndTexCoordScale {
    /* 8000E024 */ ~J3DIndTexCoordScale();
};

struct J3DIndBlock {};

struct J3DIndBlockFull {
    /* 80317B28 */ void initialize();
    /* 80317BDC */ s32 countDLSize();
    /* 8031E12C */ void load();
    /* 8031E328 */ void diff(u32);
    /* 803210B0 */ void reset(J3DIndBlock*);
    /* 80323390 */ void getType();
    /* 8032339C */ void setIndTexStageNum(u8);
    /* 803233A4 */ void getIndTexStageNum() const;
    /* 803233C0 */ void setIndTexOrder(u32, J3DIndTexOrder const*);
    /* 803233AC */ void setIndTexOrder(u32, J3DIndTexOrder);
    /* 803233D4 */ void getIndTexOrder(u32);
    /* 803233E8 */ void setIndTexMtx(u32, J3DIndTexMtx);
    /* 8032341C */ void setIndTexMtx(u32, J3DIndTexMtx const*);
    /* 80323450 */ void getIndTexMtx(u32);
    /* 80323464 */ void setIndTexCoordScale(u32, J3DIndTexCoordScale);
    /* 80323478 */ void setIndTexCoordScale(u32, J3DIndTexCoordScale const*);
    /* 8032348C */ void getIndTexCoordScale(u32);
    /* 803234A0 */ ~J3DIndBlockFull();
};

struct J3DFogInfo {
    /* 80325800 */ void operator=(J3DFogInfo const&);
};

struct J3DColorChan {};

struct J3DColorBlock {
    /* 8000DFF0 */ bool getAmbColor(u32);
    /* 801A4C0C */ void setAmbColor(u32, J3DGXColor const*);
    /* 8000E0D4 */ void setAmbColor(u32, J3DGXColor);
    /* 801A4C08 */ void setLight(u32, J3DLightObj*);
    /* 80317438 */ void diffAmbColor();
    /* 80317444 */ void diffLightObj(u32);
    /* 80317454 */ bool getLight(u32);
};

struct J3DColorBlockLightOn {
    /* 80317580 */ void initialize();
    /* 80317B94 */ s32 countDLSize();
    /* 803187F4 */ void load();
    /* 803194E8 */ void patch();
    /* 80319534 */ void patchMatColor();
    /* 803196E0 */ void patchLight();
    /* 8031A13C */ void diff(u32);
    /* 8031A1DC */ void diffAmbColor();
    /* 8031A358 */ void diffMatColor();
    /* 8031A4D4 */ void diffColorChan();
    /* 8031A8E0 */ void diffLightObj(u32);
    /* 8031FF34 */ void reset(J3DColorBlock*);
    /* 80322E80 */ void getType();
    /* 80322E8C */ void setMatColor(u32, J3DGXColor);
    /* 80322EB8 */ void setMatColor(u32, J3DGXColor const*);
    /* 80322EE4 */ void getMatColor(u32);
    /* 80322F24 */ void setAmbColor(u32, J3DGXColor const*);
    /* 80322EF8 */ void setAmbColor(u32, J3DGXColor);
    /* 80322F50 */ void getAmbColor(u32);
    /* 80322F64 */ void setColorChanNum(u8 const*);
    /* 80322F70 */ void setColorChanNum(u8);
    /* 80322F78 */ void getColorChanNum() const;
    /* 80322F80 */ void setColorChan(u32, J3DColorChan const*);
    /* 80322F94 */ void setColorChan(u32, J3DColorChan const&);
    /* 80322FA8 */ void getColorChan(u32);
    /* 80322FBC */ void setLight(u32, J3DLightObj*);
    /* 80322FCC */ void getLight(u32);
    /* 80322FDC */ void setCullMode(u8);
    /* 80322FE4 */ void setCullMode(u8 const*);
    /* 80322FF0 */ void getCullMode() const;
    /* 80322FF8 */ void getMatColorOffset() const;
    /* 80323000 */ void getColorChanOffset() const;
    /* 80323008 */ void setMatColorOffset(u32);
    /* 80323010 */ void setColorChanOffset(u32);
    /* 80323018 */ ~J3DColorBlockLightOn();
};

struct J3DColorBlockLightOff {
    /* 803170DC */ ~J3DColorBlockLightOff();
    /* 8031747C */ void initialize();
    /* 80317B84 */ s32 countDLSize();
    /* 80317C0C */ void load();
    /* 80318EB4 */ void patch();
    /* 80318F00 */ void patchMatColor();
    /* 803190AC */ void patchLight();
    /* 80319B4C */ void diff(u32);
    /* 80319BB4 */ void diffMatColor();
    /* 80319D30 */ void diffColorChan();
    /* 8031FD08 */ void reset(J3DColorBlock*);
    /* 80323184 */ void setMatColor(u32, J3DGXColor const*);
    /* 80323158 */ void setMatColor(u32, J3DGXColor);
    /* 803231B0 */ void getMatColor(u32);
    /* 803231C4 */ void setColorChanNum(u8 const*);
    /* 803231D0 */ void setColorChanNum(u8);
    /* 803231D8 */ void getColorChanNum() const;
    /* 803231E0 */ void setColorChan(u32, J3DColorChan const*);
    /* 803231F4 */ void setColorChan(u32, J3DColorChan const&);
    /* 80323208 */ void getColorChan(u32);
    /* 8032321C */ void setCullMode(u8);
    /* 80323224 */ void setCullMode(u8 const*);
    /* 80323230 */ void getCullMode() const;
    /* 80323238 */ void getMatColorOffset() const;
    /* 80323240 */ void getColorChanOffset() const;
    /* 80323248 */ void setMatColorOffset(u32);
    /* 80323250 */ void setColorChanOffset(u32);
    /* 80323560 */ void getType();
};

struct J3DColorBlockAmbientOn {
    /* 803174DC */ void initialize();
    /* 80317B8C */ s32 countDLSize();
    /* 8031816C */ void load();
    /* 8031FDE4 */ void reset(J3DColorBlock*);
    /* 80323074 */ void getType();
    /* 80323080 */ void setAmbColor(u32, J3DGXColor);
    /* 803230AC */ void setAmbColor(u32, J3DGXColor const*);
    /* 803230D8 */ void getAmbColor(u32);
    /* 803230EC */ ~J3DColorBlockAmbientOn();
};

//
// Forward References:
//

extern "C" void initialize__21J3DColorBlockLightOffFv();
extern "C" void initialize__22J3DColorBlockAmbientOnFv();
extern "C" void initialize__20J3DColorBlockLightOnFv();
extern "C" void initialize__21J3DTexGenBlockPatchedFv();
extern "C" void initialize__15J3DTexGenBlock4Fv();
extern "C" void initialize__19J3DTexGenBlockBasicFv();
extern "C" void initialize__15J3DTevBlockNullFv();
extern "C" void initialize__18J3DTevBlockPatchedFv();
extern "C" void initialize__12J3DTevBlock1Fv();
extern "C" void initialize__12J3DTevBlock2Fv();
extern "C" void initialize__12J3DTevBlock4Fv();
extern "C" void initialize__13J3DTevBlock16Fv();
extern "C" void initialize__15J3DIndBlockFullFv();
extern "C" void initialize__16J3DPEBlockFogOffFv();
extern "C" void initialize__14J3DPEBlockFullFv();
extern "C" s32 countDLSize__21J3DColorBlockLightOffFv();
extern "C" s32 countDLSize__22J3DColorBlockAmbientOnFv();
extern "C" s32 countDLSize__20J3DColorBlockLightOnFv();
extern "C" s32 countDLSize__21J3DTexGenBlockPatchedFv();
extern "C" s32 countDLSize__15J3DTexGenBlock4Fv();
extern "C" s32 countDLSize__19J3DTexGenBlockBasicFv();
extern "C" s32 countDLSize__18J3DTevBlockPatchedFv();
extern "C" s32 countDLSize__12J3DTevBlock1Fv();
extern "C" s32 countDLSize__12J3DTevBlock2Fv();
extern "C" s32 countDLSize__12J3DTevBlock4Fv();
extern "C" s32 countDLSize__13J3DTevBlock16Fv();
extern "C" s32 countDLSize__15J3DIndBlockFullFv();
extern "C" s32 countDLSize__13J3DPEBlockOpaFv();
extern "C" s32 countDLSize__17J3DPEBlockTexEdgeFv();
extern "C" s32 countDLSize__13J3DPEBlockXluFv();
extern "C" s32 countDLSize__16J3DPEBlockFogOffFv();
extern "C" s32 countDLSize__14J3DPEBlockFullFv();
extern "C" void load__21J3DColorBlockLightOffFv();
extern "C" void load__22J3DColorBlockAmbientOnFv();
extern "C" void load__20J3DColorBlockLightOnFv();
extern "C" void patch__21J3DColorBlockLightOffFv();
extern "C" void patchMatColor__21J3DColorBlockLightOffFv();
extern "C" void patchLight__21J3DColorBlockLightOffFv();
extern "C" void patch__20J3DColorBlockLightOnFv();
extern "C" void patchMatColor__20J3DColorBlockLightOnFv();
extern "C" void patchLight__20J3DColorBlockLightOnFv();
extern "C" void diff__21J3DColorBlockLightOffFUl();
extern "C" void diffMatColor__21J3DColorBlockLightOffFv();
extern "C" void diffColorChan__21J3DColorBlockLightOffFv();
extern "C" void diff__20J3DColorBlockLightOnFUl();
extern "C" void diffAmbColor__20J3DColorBlockLightOnFv();
extern "C" void diffMatColor__20J3DColorBlockLightOnFv();
extern "C" void diffColorChan__20J3DColorBlockLightOnFv();
extern "C" void diffLightObj__20J3DColorBlockLightOnFUl();
extern "C" void load__15J3DTexGenBlock4Fv();
extern "C" void load__19J3DTexGenBlockBasicFv();
extern "C" void patch__21J3DTexGenBlockPatchedFv();
extern "C" void patch__15J3DTexGenBlock4Fv();
extern "C" void patch__19J3DTexGenBlockBasicFv();
extern "C" void diff__21J3DTexGenBlockPatchedFUl();
extern "C" void diffTexMtx__21J3DTexGenBlockPatchedFv();
extern "C" void diffTexGen__21J3DTexGenBlockPatchedFv();
extern "C" void load__12J3DTevBlock1Fv();
extern "C" void load__12J3DTevBlock2Fv();
extern "C" void load__12J3DTevBlock4Fv();
extern "C" void load__13J3DTevBlock16Fv();
extern "C" void patchTexNo__18J3DTevBlockPatchedFv();
extern "C" void patchTevReg__18J3DTevBlockPatchedFv();
extern "C" void patchTexNoAndTexCoordScale__18J3DTevBlockPatchedFv();
extern "C" void patch__18J3DTevBlockPatchedFv();
extern "C" void patchTexNo__12J3DTevBlock1Fv();
extern "C" void patchTevReg__12J3DTevBlock1Fv();
extern "C" void patchTexNoAndTexCoordScale__12J3DTevBlock1Fv();
extern "C" void patch__12J3DTevBlock1Fv();
extern "C" void patchTexNo__12J3DTevBlock2Fv();
extern "C" void patchTevReg__12J3DTevBlock2Fv();
extern "C" void patchTexNoAndTexCoordScale__12J3DTevBlock2Fv();
extern "C" void patch__12J3DTevBlock2Fv();
extern "C" void patchTexNo__12J3DTevBlock4Fv();
extern "C" void patchTevReg__12J3DTevBlock4Fv();
extern "C" void patchTexNoAndTexCoordScale__12J3DTevBlock4Fv();
extern "C" void patch__12J3DTevBlock4Fv();
extern "C" void patchTexNo__13J3DTevBlock16Fv();
extern "C" void patchTevReg__13J3DTevBlock16Fv();
extern "C" void patchTexNoAndTexCoordScale__13J3DTevBlock16Fv();
extern "C" void patch__13J3DTevBlock16Fv();
extern "C" void diff__11J3DTevBlockFUl();
extern "C" void diffTexNo__18J3DTevBlockPatchedFv();
extern "C" void diffTevStage__18J3DTevBlockPatchedFv();
extern "C" void diffTevStageIndirect__18J3DTevBlockPatchedFv();
extern "C" void diffTevReg__18J3DTevBlockPatchedFv();
extern "C" void diffTexCoordScale__18J3DTevBlockPatchedFv();
extern "C" void diffTexNo__12J3DTevBlock1Fv();
extern "C" void diffTevReg__12J3DTevBlock1Fv();
extern "C" void diffTevStage__12J3DTevBlock1Fv();
extern "C" void diffTevStageIndirect__12J3DTevBlock1Fv();
extern "C" void diffTexCoordScale__12J3DTevBlock1Fv();
extern "C" void diffTexNo__12J3DTevBlock2Fv();
extern "C" void diffTevReg__12J3DTevBlock2Fv();
extern "C" void diffTevStage__12J3DTevBlock2Fv();
extern "C" void diffTevStageIndirect__12J3DTevBlock2Fv();
extern "C" void diffTexCoordScale__12J3DTevBlock2Fv();
extern "C" void diffTexNo__12J3DTevBlock4Fv();
extern "C" void diffTevReg__12J3DTevBlock4Fv();
extern "C" void diffTevStage__12J3DTevBlock4Fv();
extern "C" void diffTevStageIndirect__12J3DTevBlock4Fv();
extern "C" void diffTexCoordScale__12J3DTevBlock4Fv();
extern "C" void diffTexNo__13J3DTevBlock16Fv();
extern "C" void diffTevReg__13J3DTevBlock16Fv();
extern "C" void diffTevStage__13J3DTevBlock16Fv();
extern "C" void diffTevStageIndirect__13J3DTevBlock16Fv();
extern "C" void diffTexCoordScale__13J3DTevBlock16Fv();
extern "C" void ptrToIndex__13J3DTevBlock16Fv();
extern "C" void ptrToIndex__18J3DTevBlockPatchedFv();
extern "C" void indexToPtr_private__11J3DTevBlockFUl();
extern "C" void load__15J3DIndBlockFullFv();
extern "C" void diff__15J3DIndBlockFullFUl();
extern "C" void load__13J3DPEBlockOpaFv();
extern "C" void load__17J3DPEBlockTexEdgeFv();
extern "C" void load__13J3DPEBlockXluFv();
extern "C" void load__16J3DPEBlockFogOffFv();
extern "C" void diffBlend__16J3DPEBlockFogOffFv();
extern "C" void load__14J3DPEBlockFullFv();
extern "C" void patch__14J3DPEBlockFullFv();
extern "C" void diffFog__14J3DPEBlockFullFv();
extern "C" void diffBlend__14J3DPEBlockFullFv();
extern "C" void diff__14J3DPEBlockFullFUl();
extern "C" void reset__21J3DColorBlockLightOffFP13J3DColorBlock();
extern "C" void reset__22J3DColorBlockAmbientOnFP13J3DColorBlock();
extern "C" void reset__20J3DColorBlockLightOnFP13J3DColorBlock();
extern "C" void reset__21J3DTexGenBlockPatchedFP14J3DTexGenBlock();
extern "C" void reset__15J3DTexGenBlock4FP14J3DTexGenBlock();
extern "C" void reset__19J3DTexGenBlockBasicFP14J3DTexGenBlock();
extern "C" void reset__18J3DTevBlockPatchedFP11J3DTevBlock();
extern "C" void reset__12J3DTevBlock1FP11J3DTevBlock();
extern "C" void reset__12J3DTevBlock2FP11J3DTevBlock();
extern "C" void reset__12J3DTevBlock4FP11J3DTevBlock();
extern "C" void reset__13J3DTevBlock16FP11J3DTevBlock();
extern "C" void reset__15J3DIndBlockFullFP11J3DIndBlock();
extern "C" void reset__16J3DPEBlockFogOffFP10J3DPEBlock();
extern "C" void reset__14J3DPEBlockFullFP10J3DPEBlock();
extern "C" void calc__21J3DTexGenBlockPatchedFPA4_Cf();
extern "C" void calcWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf();
extern "C" void calcPostTexMtx__21J3DTexGenBlockPatchedFPA4_Cf();
extern "C" void calcPostTexMtxWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf();
extern "C" void diffTevReg__11J3DTevBlockFv();
extern "C" void diffTevStageIndirect__11J3DTevBlockFv();
extern "C" void diffTevStage__11J3DTevBlockFv();
extern "C" void diffTexCoordScale__11J3DTevBlockFv();
extern "C" void diffTexNo__11J3DTevBlockFv();
extern "C" void getType__14J3DPEBlockFullFv();
extern "C" void setFog__14J3DPEBlockFullFP6J3DFog();
extern "C" void setFog__14J3DPEBlockFullF6J3DFog();
extern "C" void getFog__14J3DPEBlockFullFv();
extern "C" void setAlphaComp__14J3DPEBlockFullFRC12J3DAlphaComp();
extern "C" void setAlphaComp__14J3DPEBlockFullFPC12J3DAlphaComp();
extern "C" void getAlphaComp__14J3DPEBlockFullFv();
extern "C" void setBlend__14J3DPEBlockFullFRC8J3DBlend();
extern "C" void setBlend__14J3DPEBlockFullFPC8J3DBlend();
extern "C" void getBlend__14J3DPEBlockFullFv();
extern "C" void setZMode__14J3DPEBlockFullF8J3DZMode();
extern "C" void setZMode__14J3DPEBlockFullFPC8J3DZMode();
extern "C" void getZMode__14J3DPEBlockFullFv();
extern "C" void setZCompLoc__14J3DPEBlockFullFUc();
extern "C" void setZCompLoc__14J3DPEBlockFullFPCUc();
extern "C" void getZCompLoc__14J3DPEBlockFullCFv();
extern "C" void setDither__14J3DPEBlockFullFUc();
extern "C" void setDither__14J3DPEBlockFullFPCUc();
extern "C" void getDither__14J3DPEBlockFullCFv();
extern "C" void getFogOffset__14J3DPEBlockFullCFv();
extern "C" void setFogOffset__14J3DPEBlockFullFUl();
extern "C" void __dt__14J3DPEBlockFullFv();
extern "C" void diff__16J3DPEBlockFogOffFUl();
extern "C" void getType__16J3DPEBlockFogOffFv();
extern "C" void setAlphaComp__16J3DPEBlockFogOffFRC12J3DAlphaComp();
extern "C" void setAlphaComp__16J3DPEBlockFogOffFPC12J3DAlphaComp();
extern "C" void getAlphaComp__16J3DPEBlockFogOffFv();
extern "C" void setBlend__16J3DPEBlockFogOffFRC8J3DBlend();
extern "C" void setBlend__16J3DPEBlockFogOffFPC8J3DBlend();
extern "C" void getBlend__16J3DPEBlockFogOffFv();
extern "C" void setZMode__16J3DPEBlockFogOffF8J3DZMode();
extern "C" void setZMode__16J3DPEBlockFogOffFPC8J3DZMode();
extern "C" void getZMode__16J3DPEBlockFogOffFv();
extern "C" void setZCompLoc__16J3DPEBlockFogOffFUc();
extern "C" void setZCompLoc__16J3DPEBlockFogOffFPCUc();
extern "C" void getZCompLoc__16J3DPEBlockFogOffCFv();
extern "C" void setDither__16J3DPEBlockFogOffFUc();
extern "C" void setDither__16J3DPEBlockFogOffFPCUc();
extern "C" void getDither__16J3DPEBlockFogOffCFv();
extern "C" void __dt__16J3DPEBlockFogOffFv();
extern "C" void indexToPtr__13J3DTevBlock16Fv();
extern "C" void getType__13J3DTevBlock16Fv();
extern "C" void setTexNo__13J3DTevBlock16FUlUs();
extern "C" void setTexNo__13J3DTevBlock16FUlPCUs();
extern "C" void getTexNo__13J3DTevBlock16CFUl();
extern "C" void setTevOrder__13J3DTevBlock16FUl11J3DTevOrder();
extern "C" void setTevOrder__13J3DTevBlock16FUlPC11J3DTevOrder();
extern "C" void getTevOrder__13J3DTevBlock16FUl();
extern "C" void setTevColor__13J3DTevBlock16FUl13J3DGXColorS10();
extern "C" void setTevColor__13J3DTevBlock16FUlPC13J3DGXColorS10();
extern "C" void getTevColor__13J3DTevBlock16FUl();
extern "C" void setTevKColor__13J3DTevBlock16FUl10J3DGXColor();
extern "C" void setTevKColor__13J3DTevBlock16FUlPC10J3DGXColor();
extern "C" void getTevKColor__13J3DTevBlock16FUl();
extern "C" void setTevKColorSel__13J3DTevBlock16FUlUc();
extern "C" void setTevKColorSel__13J3DTevBlock16FUlPCUc();
extern "C" void getTevKColorSel__13J3DTevBlock16FUl();
extern "C" void setTevKAlphaSel__13J3DTevBlock16FUlUc();
extern "C" void setTevKAlphaSel__13J3DTevBlock16FUlPCUc();
extern "C" void getTevKAlphaSel__13J3DTevBlock16FUl();
extern "C" void setTevStageNum__13J3DTevBlock16FUc();
extern "C" void setTevStageNum__13J3DTevBlock16FPCUc();
extern "C" void getTevStageNum__13J3DTevBlock16CFv();
extern "C" void setTevStage__13J3DTevBlock16FUl11J3DTevStage();
extern "C" void setTevStage__13J3DTevBlock16FUlPC11J3DTevStage();
extern "C" void getTevStage__13J3DTevBlock16FUl();
extern "C" void setTevSwapModeInfo__13J3DTevBlock16FUl18J3DTevSwapModeInfo();
extern "C" void setTevSwapModeInfo__13J3DTevBlock16FUlPC18J3DTevSwapModeInfo();
extern "C" void setTevSwapModeTable__13J3DTevBlock16FUl19J3DTevSwapModeTable();
extern "C" void setTevSwapModeTable__13J3DTevBlock16FUlPC19J3DTevSwapModeTable();
extern "C" void getTevSwapModeTable__13J3DTevBlock16FUl();
extern "C" void setIndTevStage__13J3DTevBlock16FUl14J3DIndTevStage();
extern "C" void setIndTevStage__13J3DTevBlock16FUlPC14J3DIndTevStage();
extern "C" void getIndTevStage__13J3DTevBlock16FUl();
extern "C" void getTexNoOffset__13J3DTevBlock16CFv();
extern "C" void getTevRegOffset__13J3DTevBlock16CFv();
extern "C" void setTevRegOffset__13J3DTevBlock16FUl();
extern "C" void __dt__13J3DTevBlock16Fv();
extern "C" void setTexNoOffset__11J3DTevBlockFUl();
extern "C" void ptrToIndex__12J3DTevBlock4Fv();
extern "C" void indexToPtr__12J3DTevBlock4Fv();
extern "C" void getType__12J3DTevBlock4Fv();
extern "C" void setTexNo__12J3DTevBlock4FUlUs();
extern "C" void setTexNo__12J3DTevBlock4FUlPCUs();
extern "C" void getTexNo__12J3DTevBlock4CFUl();
extern "C" void setTevOrder__12J3DTevBlock4FUl11J3DTevOrder();
extern "C" void setTevOrder__12J3DTevBlock4FUlPC11J3DTevOrder();
extern "C" void getTevOrder__12J3DTevBlock4FUl();
extern "C" void setTevColor__12J3DTevBlock4FUl13J3DGXColorS10();
extern "C" void setTevColor__12J3DTevBlock4FUlPC13J3DGXColorS10();
extern "C" void getTevColor__12J3DTevBlock4FUl();
extern "C" void setTevKColor__12J3DTevBlock4FUl10J3DGXColor();
extern "C" void setTevKColor__12J3DTevBlock4FUlPC10J3DGXColor();
extern "C" void getTevKColor__12J3DTevBlock4FUl();
extern "C" void setTevKColorSel__12J3DTevBlock4FUlUc();
extern "C" void setTevKColorSel__12J3DTevBlock4FUlPCUc();
extern "C" void getTevKColorSel__12J3DTevBlock4FUl();
extern "C" void setTevKAlphaSel__12J3DTevBlock4FUlUc();
extern "C" void setTevKAlphaSel__12J3DTevBlock4FUlPCUc();
extern "C" void getTevKAlphaSel__12J3DTevBlock4FUl();
extern "C" void setTevStageNum__12J3DTevBlock4FUc();
extern "C" void setTevStageNum__12J3DTevBlock4FPCUc();
extern "C" void getTevStageNum__12J3DTevBlock4CFv();
extern "C" void setTevStage__12J3DTevBlock4FUl11J3DTevStage();
extern "C" void setTevStage__12J3DTevBlock4FUlPC11J3DTevStage();
extern "C" void getTevStage__12J3DTevBlock4FUl();
extern "C" void setTevSwapModeInfo__12J3DTevBlock4FUl18J3DTevSwapModeInfo();
extern "C" void setTevSwapModeInfo__12J3DTevBlock4FUlPC18J3DTevSwapModeInfo();
extern "C" void setTevSwapModeTable__12J3DTevBlock4FUl19J3DTevSwapModeTable();
extern "C" void setTevSwapModeTable__12J3DTevBlock4FUlPC19J3DTevSwapModeTable();
extern "C" void getTevSwapModeTable__12J3DTevBlock4FUl();
extern "C" void setIndTevStage__12J3DTevBlock4FUl14J3DIndTevStage();
extern "C" void setIndTevStage__12J3DTevBlock4FUlPC14J3DIndTevStage();
extern "C" void getIndTevStage__12J3DTevBlock4FUl();
extern "C" void getTexNoOffset__12J3DTevBlock4CFv();
extern "C" void getTevRegOffset__12J3DTevBlock4CFv();
extern "C" void setTevRegOffset__12J3DTevBlock4FUl();
extern "C" void __dt__12J3DTevBlock4Fv();
extern "C" void ptrToIndex__12J3DTevBlock2Fv();
extern "C" void indexToPtr__12J3DTevBlock2Fv();
extern "C" void getType__12J3DTevBlock2Fv();
extern "C" void setTexNo__12J3DTevBlock2FUlUs();
extern "C" void setTexNo__12J3DTevBlock2FUlPCUs();
extern "C" void getTexNo__12J3DTevBlock2CFUl();
extern "C" void setTevOrder__12J3DTevBlock2FUl11J3DTevOrder();
extern "C" void setTevOrder__12J3DTevBlock2FUlPC11J3DTevOrder();
extern "C" void getTevOrder__12J3DTevBlock2FUl();
extern "C" void setTevColor__12J3DTevBlock2FUl13J3DGXColorS10();
extern "C" void setTevColor__12J3DTevBlock2FUlPC13J3DGXColorS10();
extern "C" void getTevColor__12J3DTevBlock2FUl();
extern "C" void setTevKColor__12J3DTevBlock2FUl10J3DGXColor();
extern "C" void setTevKColor__12J3DTevBlock2FUlPC10J3DGXColor();
extern "C" void getTevKColor__12J3DTevBlock2FUl();
extern "C" void setTevKColorSel__12J3DTevBlock2FUlUc();
extern "C" void setTevKColorSel__12J3DTevBlock2FUlPCUc();
extern "C" void getTevKColorSel__12J3DTevBlock2FUl();
extern "C" void setTevKAlphaSel__12J3DTevBlock2FUlUc();
extern "C" void setTevKAlphaSel__12J3DTevBlock2FUlPCUc();
extern "C" void getTevKAlphaSel__12J3DTevBlock2FUl();
extern "C" void setTevStageNum__12J3DTevBlock2FUc();
extern "C" void setTevStageNum__12J3DTevBlock2FPCUc();
extern "C" void getTevStageNum__12J3DTevBlock2CFv();
extern "C" void setTevStage__12J3DTevBlock2FUl11J3DTevStage();
extern "C" void setTevStage__12J3DTevBlock2FUlPC11J3DTevStage();
extern "C" void getTevStage__12J3DTevBlock2FUl();
extern "C" void setTevSwapModeInfo__12J3DTevBlock2FUl18J3DTevSwapModeInfo();
extern "C" void setTevSwapModeInfo__12J3DTevBlock2FUlPC18J3DTevSwapModeInfo();
extern "C" void setTevSwapModeTable__12J3DTevBlock2FUl19J3DTevSwapModeTable();
extern "C" void setTevSwapModeTable__12J3DTevBlock2FUlPC19J3DTevSwapModeTable();
extern "C" void getTevSwapModeTable__12J3DTevBlock2FUl();
extern "C" void setIndTevStage__12J3DTevBlock2FUl14J3DIndTevStage();
extern "C" void setIndTevStage__12J3DTevBlock2FUlPC14J3DIndTevStage();
extern "C" void getIndTevStage__12J3DTevBlock2FUl();
extern "C" void getTexNoOffset__12J3DTevBlock2CFv();
extern "C" void getTevRegOffset__12J3DTevBlock2CFv();
extern "C" void setTevRegOffset__12J3DTevBlock2FUl();
extern "C" void __dt__12J3DTevBlock2Fv();
extern "C" void ptrToIndex__12J3DTevBlock1Fv();
extern "C" void indexToPtr__12J3DTevBlock1Fv();
extern "C" void getType__12J3DTevBlock1Fv();
extern "C" void setTexNo__12J3DTevBlock1FUlUs();
extern "C" void setTexNo__12J3DTevBlock1FUlPCUs();
extern "C" void getTexNo__12J3DTevBlock1CFUl();
extern "C" void setTevOrder__12J3DTevBlock1FUl11J3DTevOrder();
extern "C" void setTevOrder__12J3DTevBlock1FUlPC11J3DTevOrder();
extern "C" void getTevOrder__12J3DTevBlock1FUl();
extern "C" void setTevStageNum__12J3DTevBlock1FUc();
extern "C" void setTevStageNum__12J3DTevBlock1FPCUc();
extern "C" bool getTevStageNum__12J3DTevBlock1CFv();
extern "C" void setTevStage__12J3DTevBlock1FUl11J3DTevStage();
extern "C" void setTevStage__12J3DTevBlock1FUlPC11J3DTevStage();
extern "C" void getTevStage__12J3DTevBlock1FUl();
extern "C" void setIndTevStage__12J3DTevBlock1FUl14J3DIndTevStage();
extern "C" void setIndTevStage__12J3DTevBlock1FUlPC14J3DIndTevStage();
extern "C" void getIndTevStage__12J3DTevBlock1FUl();
extern "C" void getTexNoOffset__12J3DTevBlock1CFv();
extern "C" void __dt__12J3DTevBlock1Fv();
extern "C" void setTevKColorSel__11J3DTevBlockFUlPCUc();
extern "C" void setTevKAlphaSel__11J3DTevBlockFUlPCUc();
extern "C" void setTevSwapModeInfo__11J3DTevBlockFUl18J3DTevSwapModeInfo();
extern "C" void setTevSwapModeInfo__11J3DTevBlockFUlPC18J3DTevSwapModeInfo();
extern "C" void setTevSwapModeTable__11J3DTevBlockFUlPC19J3DTevSwapModeTable();
extern "C" bool getTevRegOffset__11J3DTevBlockCFv();
extern "C" void setTevRegOffset__11J3DTevBlockFUl();
extern "C" void load__18J3DTevBlockPatchedFv();
extern "C" void indexToPtr__18J3DTevBlockPatchedFv();
extern "C" void getType__18J3DTevBlockPatchedFv();
extern "C" void setTevStageNum__18J3DTevBlockPatchedFUc();
extern "C" void setTevStageNum__18J3DTevBlockPatchedFPCUc();
extern "C" void getTevStageNum__18J3DTevBlockPatchedCFv();
extern "C" void setTexNo__18J3DTevBlockPatchedFUlUs();
extern "C" void setTexNo__18J3DTevBlockPatchedFUlPCUs();
extern "C" void getTexNo__18J3DTevBlockPatchedCFUl();
extern "C" void setTevOrder__18J3DTevBlockPatchedFUl11J3DTevOrder();
extern "C" void setTevOrder__18J3DTevBlockPatchedFUlPC11J3DTevOrder();
extern "C" void getTevOrder__18J3DTevBlockPatchedFUl();
extern "C" void setTevStage__18J3DTevBlockPatchedFUl11J3DTevStage();
extern "C" void setTevStage__18J3DTevBlockPatchedFUlPC11J3DTevStage();
extern "C" void getTevStage__18J3DTevBlockPatchedFUl();
extern "C" void setIndTevStage__18J3DTevBlockPatchedFUl14J3DIndTevStage();
extern "C" void setIndTevStage__18J3DTevBlockPatchedFUlPC14J3DIndTevStage();
extern "C" void getIndTevStage__18J3DTevBlockPatchedFUl();
extern "C" void setTevColor__18J3DTevBlockPatchedFUl13J3DGXColorS10();
extern "C" void setTevColor__18J3DTevBlockPatchedFUlPC13J3DGXColorS10();
extern "C" void getTevColor__18J3DTevBlockPatchedFUl();
extern "C" void setTevKColor__18J3DTevBlockPatchedFUl10J3DGXColor();
extern "C" void setTevKColor__18J3DTevBlockPatchedFUlPC10J3DGXColor();
extern "C" void getTevKColor__18J3DTevBlockPatchedFUl();
extern "C" void setTevKColorSel__18J3DTevBlockPatchedFUlUc();
extern "C" void setTevKColorSel__18J3DTevBlockPatchedFUlPCUc();
extern "C" void getTevKColorSel__18J3DTevBlockPatchedFUl();
extern "C" void getTexNoOffset__18J3DTevBlockPatchedCFv();
extern "C" void getTevRegOffset__18J3DTevBlockPatchedCFv();
extern "C" void setTevRegOffset__18J3DTevBlockPatchedFUl();
extern "C" void __dt__18J3DTevBlockPatchedFv();
extern "C" void getType__19J3DTexGenBlockBasicFv();
extern "C" void setNBTScale__19J3DTexGenBlockBasicF11J3DNBTScale();
extern "C" void setNBTScale__19J3DTexGenBlockBasicFPC11J3DNBTScale();
extern "C" void getNBTScale__19J3DTexGenBlockBasicFv();
extern "C" void __dt__19J3DTexGenBlockBasicFv();
extern "C" void setTexGenNum__21J3DTexGenBlockPatchedFUl();
extern "C" void setTexGenNum__21J3DTexGenBlockPatchedFPCUl();
extern "C" void getTexGenNum__21J3DTexGenBlockPatchedCFv();
extern "C" void setTexCoord__21J3DTexGenBlockPatchedFUlPC11J3DTexCoord();
extern "C" void getTexCoord__21J3DTexGenBlockPatchedFUl();
extern "C" void setTexMtx__21J3DTexGenBlockPatchedFUlP9J3DTexMtx();
extern "C" void getTexMtx__21J3DTexGenBlockPatchedFUl();
extern "C" void getTexMtxOffset__21J3DTexGenBlockPatchedCFv();
extern "C" void setTexMtxOffset__21J3DTexGenBlockPatchedFUl();
extern "C" void getType__15J3DTexGenBlock4Fv();
extern "C" void setNBTScale__15J3DTexGenBlock4F11J3DNBTScale();
extern "C" void setNBTScale__15J3DTexGenBlock4FPC11J3DNBTScale();
extern "C" void getNBTScale__15J3DTexGenBlock4Fv();
extern "C" void __dt__15J3DTexGenBlock4Fv();
extern "C" void load__21J3DTexGenBlockPatchedFv();
extern "C" void getType__21J3DTexGenBlockPatchedFv();
extern "C" void getType__20J3DColorBlockLightOnFv();
extern "C" void setMatColor__20J3DColorBlockLightOnFUl10J3DGXColor();
extern "C" void setMatColor__20J3DColorBlockLightOnFUlPC10J3DGXColor();
extern "C" void getMatColor__20J3DColorBlockLightOnFUl();
extern "C" void setAmbColor__20J3DColorBlockLightOnFUl10J3DGXColor();
extern "C" void setAmbColor__20J3DColorBlockLightOnFUlPC10J3DGXColor();
extern "C" void getAmbColor__20J3DColorBlockLightOnFUl();
extern "C" void setColorChanNum__20J3DColorBlockLightOnFPCUc();
extern "C" void setColorChanNum__20J3DColorBlockLightOnFUc();
extern "C" void getColorChanNum__20J3DColorBlockLightOnCFv();
extern "C" void setColorChan__20J3DColorBlockLightOnFUlPC12J3DColorChan();
extern "C" void setColorChan__20J3DColorBlockLightOnFUlRC12J3DColorChan();
extern "C" void getColorChan__20J3DColorBlockLightOnFUl();
extern "C" void setLight__20J3DColorBlockLightOnFUlP11J3DLightObj();
extern "C" void getLight__20J3DColorBlockLightOnFUl();
extern "C" void setCullMode__20J3DColorBlockLightOnFUc();
extern "C" void setCullMode__20J3DColorBlockLightOnFPCUc();
extern "C" void getCullMode__20J3DColorBlockLightOnCFv();
extern "C" void getMatColorOffset__20J3DColorBlockLightOnCFv();
extern "C" void getColorChanOffset__20J3DColorBlockLightOnCFv();
extern "C" void setMatColorOffset__20J3DColorBlockLightOnFUl();
extern "C" void setColorChanOffset__20J3DColorBlockLightOnFUl();
extern "C" void __dt__20J3DColorBlockLightOnFv();
extern "C" void getType__22J3DColorBlockAmbientOnFv();
extern "C" void setAmbColor__22J3DColorBlockAmbientOnFUl10J3DGXColor();
extern "C" void setAmbColor__22J3DColorBlockAmbientOnFUlPC10J3DGXColor();
extern "C" void getAmbColor__22J3DColorBlockAmbientOnFUl();
extern "C" void __dt__22J3DColorBlockAmbientOnFv();
extern "C" void setMatColor__21J3DColorBlockLightOffFUl10J3DGXColor();
extern "C" void setMatColor__21J3DColorBlockLightOffFUlPC10J3DGXColor();
extern "C" void getMatColor__21J3DColorBlockLightOffFUl();
extern "C" void setColorChanNum__21J3DColorBlockLightOffFPCUc();
extern "C" void setColorChanNum__21J3DColorBlockLightOffFUc();
extern "C" void getColorChanNum__21J3DColorBlockLightOffCFv();
extern "C" void setColorChan__21J3DColorBlockLightOffFUlPC12J3DColorChan();
extern "C" void setColorChan__21J3DColorBlockLightOffFUlRC12J3DColorChan();
extern "C" void getColorChan__21J3DColorBlockLightOffFUl();
extern "C" void setCullMode__21J3DColorBlockLightOffFUc();
extern "C" void setCullMode__21J3DColorBlockLightOffFPCUc();
extern "C" void getCullMode__21J3DColorBlockLightOffCFv();
extern "C" void getMatColorOffset__21J3DColorBlockLightOffCFv();
extern "C" void getColorChanOffset__21J3DColorBlockLightOffCFv();
extern "C" void setMatColorOffset__21J3DColorBlockLightOffFUl();
extern "C" void setColorChanOffset__21J3DColorBlockLightOffFUl();
extern "C" void getType__13J3DPEBlockXluFv();
extern "C" void __dt__13J3DPEBlockXluFv();
extern "C" void getType__17J3DPEBlockTexEdgeFv();
extern "C" void __dt__17J3DPEBlockTexEdgeFv();
extern "C" void getType__13J3DPEBlockOpaFv();
extern "C" void __dt__13J3DPEBlockOpaFv();
extern "C" void getType__15J3DIndBlockFullFv();
extern "C" void setIndTexStageNum__15J3DIndBlockFullFUc();
extern "C" void getIndTexStageNum__15J3DIndBlockFullCFv();
extern "C" void setIndTexOrder__15J3DIndBlockFullFUl14J3DIndTexOrder();
extern "C" void setIndTexOrder__15J3DIndBlockFullFUlPC14J3DIndTexOrder();
extern "C" void getIndTexOrder__15J3DIndBlockFullFUl();
extern "C" void setIndTexMtx__15J3DIndBlockFullFUl12J3DIndTexMtx();
extern "C" void setIndTexMtx__15J3DIndBlockFullFUlPC12J3DIndTexMtx();
extern "C" void getIndTexMtx__15J3DIndBlockFullFUl();
extern "C" void setIndTexCoordScale__15J3DIndBlockFullFUl19J3DIndTexCoordScale();
extern "C" void setIndTexCoordScale__15J3DIndBlockFullFUlPC19J3DIndTexCoordScale();
extern "C" void getIndTexCoordScale__15J3DIndBlockFullFUl();
extern "C" void __dt__15J3DIndBlockFullFv();
extern "C" void patchTexNo__11J3DTevBlockFv();
extern "C" void patchTevReg__11J3DTevBlockFv();
extern "C" void setTexNo__11J3DTevBlockFUlPCUs();
extern "C" void setTevOrder__11J3DTevBlockFUlPC11J3DTevOrder();
extern "C" void setTevStageNum__11J3DTevBlockFPCUc();
extern "C" void setTevStage__11J3DTevBlockFUlPC11J3DTevStage();
extern "C" void setIndTevStage__11J3DTevBlockFUlPC14J3DIndTevStage();
extern "C" bool getTexNoOffset__11J3DTevBlockCFv();
extern "C" void getType__21J3DColorBlockLightOffFv();
extern "C" void __sinit_J3DMatBlock_cpp();
extern "C" extern char const* const J3DMatBlock__stringBase0;

//
// External References:
//

SECTION_INIT void memcpy();
extern "C" void OSReport();
extern "C" void patchTexNoAndTexCoordScale__11J3DTevBlockFv();
extern "C" void patch__10J3DPEBlockFv();
extern "C" void patch__11J3DTevBlockFv();
extern "C" bool getZCompLoc__10J3DPEBlockCFv();
extern "C" bool getZMode__10J3DPEBlockFv();
extern "C" bool getBlend__10J3DPEBlockFv();
extern "C" bool getAlphaComp__10J3DPEBlockFv();
extern "C" bool getFog__10J3DPEBlockFv();
extern "C" bool getIndTevStage__11J3DTevBlockFUl();
extern "C" bool getTevStage__11J3DTevBlockFUl();
extern "C" void getTexNo__11J3DTevBlockCFUl();
extern "C" bool getTevSwapModeTable__11J3DTevBlockFUl();
extern "C" bool getTevKAlphaSel__11J3DTevBlockFUl();
extern "C" bool getTevKColorSel__11J3DTevBlockFUl();
extern "C" bool getTevOrder__11J3DTevBlockFUl();
extern "C" bool getTevKColor__11J3DTevBlockFUl();
extern "C" bool getTevColor__11J3DTevBlockFUl();
extern "C" bool getTevStageNum__11J3DTevBlockCFv();
extern "C" bool getAmbColor__13J3DColorBlockFUl();
extern "C" void setZCompLoc__10J3DPEBlockFUc();
extern "C" void setZMode__10J3DPEBlockF8J3DZMode();
extern "C" void setBlend__10J3DPEBlockFRC8J3DBlend();
extern "C" void setAlphaComp__10J3DPEBlockFRC12J3DAlphaComp();
extern "C" void __dt__19J3DIndTexCoordScaleFv();
extern "C" void __dt__12J3DIndTexMtxFv();
extern "C" void setIndTevStage__11J3DTevBlockFUl14J3DIndTevStage();
extern "C" void setTevStage__11J3DTevBlockFUl11J3DTevStage();
extern "C" void setTexNo__11J3DTevBlockFUlUs();
extern "C" void setTevSwapModeTable__11J3DTevBlockFUl19J3DTevSwapModeTable();
extern "C" void setTevKAlphaSel__11J3DTevBlockFUlUc();
extern "C" void setTevKColorSel__11J3DTevBlockFUlUc();
extern "C" void setTevOrder__11J3DTevBlockFUl11J3DTevOrder();
extern "C" void setTevKColor__11J3DTevBlockFUl10J3DGXColor();
extern "C" void setTevColor__11J3DTevBlockFUl13J3DGXColorS10();
extern "C" void setTevStageNum__11J3DTevBlockFUc();
extern "C" void setAmbColor__13J3DColorBlockFUl10J3DGXColor();
extern "C" void setTevKColor__11J3DTevBlockFUlPC10J3DGXColor();
extern "C" void setTevColor__11J3DTevBlockFUlPC13J3DGXColorS10();
extern "C" void setLight__13J3DColorBlockFUlP11J3DLightObj();
extern "C" void setAmbColor__13J3DColorBlockFUlPC10J3DGXColor();
extern "C" void __dl__FPv();
extern "C" void J3DGDSetTexCoordScale2__F13_GXTexCoordIDUsUcUcUsUcUc();
extern "C" void J3DGDSetIndTexMtx__F14_GXIndTexMtxIDPA3_fSc();
extern "C" void
J3DGDSetIndTexCoordScale__F16_GXIndTexStageID14_GXIndTexScale14_GXIndTexScale14_GXIndTexScale14_GXIndTexScale();
extern "C" void
J3DGDSetIndTexOrder__FUl13_GXTexCoordID11_GXTexMapID13_GXTexCoordID11_GXTexMapID13_GXTexCoordID11_GXTexMapID13_GXTexCoordID11_GXTexMapID();
extern "C" void
J3DGDSetTevOrder__F13_GXTevStageID13_GXTexCoordID11_GXTexMapID12_GXChannelID13_GXTexCoordID11_GXTexMapID12_GXChannelID();
extern "C" void J3DGDSetTevKColor__F14_GXTevKColorID8_GXColor();
extern "C" void J3DGDSetTevColorS10__F11_GXTevRegID11_GXColorS10();
extern "C" void J3DGDSetFog__F10_GXFogTypeffff8_GXColor();
extern "C" void J3DGDSetFogRangeAdj__FUcUsP14_GXFogAdjTable();
extern "C" void __dt__21J3DColorBlockLightOffFv();
extern "C" void __dt__21J3DTexGenBlockPatchedFv();
extern "C" void __dt__11J3DTevBlockFv();
extern "C" bool countDLSize__11J3DTevBlockFv();
extern "C" void load__11J3DTevBlockFv();
extern "C" bool getNBTScale__14J3DTexGenBlockFv();
extern "C" void diff__10J3DPEBlockFUl();
extern "C" void reset__10J3DPEBlockFP10J3DPEBlock();
extern "C" void reset__11J3DTevBlockFP11J3DTevBlock();
extern "C" void diffFog__10J3DPEBlockFv();
extern "C" void diffBlend__10J3DPEBlockFv();
extern "C" void setFog__10J3DPEBlockFP6J3DFog();
extern "C" void setFog__10J3DPEBlockF6J3DFog();
extern "C" void setAlphaComp__10J3DPEBlockFPC12J3DAlphaComp();
extern "C" void setBlend__10J3DPEBlockFPC8J3DBlend();
extern "C" void setZMode__10J3DPEBlockFPC8J3DZMode();
extern "C" void setZCompLoc__10J3DPEBlockFPCUc();
extern "C" void setDither__10J3DPEBlockFUc();
extern "C" void setDither__10J3DPEBlockFPCUc();
extern "C" bool getDither__10J3DPEBlockCFv();
extern "C" bool getFogOffset__10J3DPEBlockCFv();
extern "C" void setFogOffset__10J3DPEBlockFUl();
extern "C" void setNBTScale__14J3DTexGenBlockF11J3DNBTScale();
extern "C" void setNBTScale__14J3DTexGenBlockFPC11J3DNBTScale();
extern "C" void diffAmbColor__13J3DColorBlockFv();
extern "C" void diffLightObj__13J3DColorBlockFUl();
extern "C" bool getLight__13J3DColorBlockFUl();
extern "C" void load__11J3DLightObjCFUl();
extern "C" void loadTexCoordGens__FUlP11J3DTexCoord();
extern "C" void load__9J3DTexMtxCFUl();
extern "C" void calc__9J3DTexMtxFPA4_Cf();
extern "C" void calcPostTexMtx__9J3DTexMtxFPA4_Cf();
extern "C" void isTexNoReg__FPv();
extern "C" void getTexNoReg__FPv();
extern "C" void loadTexNo__FUlRCUs();
extern "C" void patchTexNo_PtrToIdx__FUlRCUs();
extern "C" void __as__16J3DIndTexMtxInfoFRC16J3DIndTexMtxInfo();
extern "C" void __as__10J3DFogInfoFRC10J3DFogInfo();
extern "C" void __as__15J3DNBTScaleInfoFRC15J3DNBTScaleInfo();
extern "C" void DCStoreRange();
extern "C" void PSMTXCopy();
extern "C" void PSMTXConcat();
extern "C" void PSMTXInverse();
extern "C" void GDOverflowed();
extern "C" void __destroy_arr();
extern "C" void _savegpr_24();
extern "C" void _savegpr_25();
extern "C" void _savegpr_26();
extern "C" void _savegpr_27();
extern "C" void _savegpr_28();
extern "C" void _savegpr_29();
extern "C" void _restgpr_24();
extern "C" void _restgpr_25();
extern "C" void _restgpr_26();
extern "C" void _restgpr_27();
extern "C" void _restgpr_28();
extern "C" void _restgpr_29();
extern "C" extern u8 const j3dDefaultMtx[48];
extern "C" extern void* __vt__10J3DPEBlock[31];
extern "C" extern void* __vt__11J3DIndBlock[19];
extern "C" extern void* __vt__14J3DTexGenBlock[27];
extern "C" extern void* __vt__13J3DColorBlock[36];
extern "C" extern u8 j3dSys[284];
extern "C" u8 sTexCoordScaleTable__6J3DSys[64 + 4 /* padding */];
extern "C" extern u8 j3dTevSwapTableTable[1024];
extern "C" extern u8 j3dAlphaCmpTable[768];
extern "C" extern u8 j3dZModeTable[96];
extern "C" extern u8 __GDCurrentDL[4];
extern "C" extern u32 j3dDefaultColInfo;
extern "C" extern u32 j3dDefaultAmbInfo;
extern "C" extern u32 j3dDefaultTevColor;
extern "C" extern u32 j3dDefaultTevKColor;

//
// Declarations:
//

/* 8031747C-803174DC 311DBC 0060+00 0/0 1/1 0/0 .text initialize__21J3DColorBlockLightOffFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOff::initialize() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/initialize__21J3DColorBlockLightOffFv.s"
}
#pragma pop

/* 803174DC-80317580 311E1C 00A4+00 0/0 1/1 0/0 .text initialize__22J3DColorBlockAmbientOnFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockAmbientOn::initialize() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/initialize__22J3DColorBlockAmbientOnFv.s"
}
#pragma pop

/* 80317580-80317644 311EC0 00C4+00 0/0 1/1 0/0 .text initialize__20J3DColorBlockLightOnFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOn::initialize() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/initialize__20J3DColorBlockLightOnFv.s"
}
#pragma pop

/* 80317644-80317674 311F84 0030+00 0/0 2/2 0/0 .text initialize__21J3DTexGenBlockPatchedFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexGenBlockPatched::initialize() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/initialize__21J3DTexGenBlockPatchedFv.s"
}
#pragma pop

/* 80317674-803176A4 311FB4 0030+00 0/0 1/1 0/0 .text            initialize__15J3DTexGenBlock4Fv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexGenBlock4::initialize() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/initialize__15J3DTexGenBlock4Fv.s"
}
#pragma pop

/* 803176A4-803176D4 311FE4 0030+00 0/0 1/1 0/0 .text            initialize__19J3DTexGenBlockBasicFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexGenBlockBasic::initialize() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/initialize__19J3DTexGenBlockBasicFv.s"
}
#pragma pop

/* 803176D4-803176E0 312014 000C+00 0/0 1/1 0/0 .text            initialize__15J3DTevBlockNullFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlockNull::initialize() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/initialize__15J3DTevBlockNullFv.s"
}
#pragma pop

/* 803176E0-803177E8 312020 0108+00 0/0 1/1 0/0 .text            initialize__18J3DTevBlockPatchedFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlockPatched::initialize() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/initialize__18J3DTevBlockPatchedFv.s"
}
#pragma pop

/* 803177E8-80317810 312128 0028+00 0/0 1/1 0/0 .text            initialize__12J3DTevBlock1Fv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock1::initialize() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/initialize__12J3DTevBlock1Fv.s"
}
#pragma pop

/* 80317810-803178EC 312150 00DC+00 0/0 1/1 0/0 .text            initialize__12J3DTevBlock2Fv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::initialize() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/initialize__12J3DTevBlock2Fv.s"
}
#pragma pop

/* 803178EC-80317A00 31222C 0114+00 0/0 1/1 0/0 .text            initialize__12J3DTevBlock4Fv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::initialize() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/initialize__12J3DTevBlock4Fv.s"
}
#pragma pop

/* 80317A00-80317B28 312340 0128+00 0/0 1/1 0/0 .text            initialize__13J3DTevBlock16Fv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::initialize() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/initialize__13J3DTevBlock16Fv.s"
}
#pragma pop

/* 80317B28-80317B34 312468 000C+00 0/0 1/1 0/0 .text            initialize__15J3DIndBlockFullFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DIndBlockFull::initialize() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/initialize__15J3DIndBlockFullFv.s"
}
#pragma pop

/* 80317B34-80317B58 312474 0024+00 0/0 1/1 0/0 .text            initialize__16J3DPEBlockFogOffFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFogOff::initialize() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/initialize__16J3DPEBlockFogOffFv.s"
}
#pragma pop

/* 80317B58-80317B84 312498 002C+00 0/0 1/1 0/0 .text            initialize__14J3DPEBlockFullFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFull::initialize() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/initialize__14J3DPEBlockFullFv.s"
}
#pragma pop

/* 80317B84-80317B8C 3124C4 0008+00 1/0 0/0 0/0 .text countDLSize__21J3DColorBlockLightOffFv */
s32 J3DColorBlockLightOff::countDLSize() {
    return 34;
}

/* 80317B8C-80317B94 3124CC 0008+00 1/0 0/0 0/0 .text countDLSize__22J3DColorBlockAmbientOnFv */
s32 J3DColorBlockAmbientOn::countDLSize() {
    return 47;
}

/* 80317B94-80317B9C 3124D4 0008+00 1/0 0/0 0/0 .text countDLSize__20J3DColorBlockLightOnFv */
s32 J3DColorBlockLightOn::countDLSize() {
    return 623;
}

/* 80317B9C-80317BA4 3124DC 0008+00 1/0 0/0 0/0 .text countDLSize__21J3DTexGenBlockPatchedFv */
s32 J3DTexGenBlockPatched::countDLSize() {
    return 424;
}

/* 80317BA4-80317BAC 3124E4 0008+00 1/0 0/0 0/0 .text            countDLSize__15J3DTexGenBlock4Fv */
s32 J3DTexGenBlock4::countDLSize() {
    return 254;
}

/* 80317BAC-80317BB4 3124EC 0008+00 1/0 0/0 0/0 .text countDLSize__19J3DTexGenBlockBasicFv */
s32 J3DTexGenBlockBasic::countDLSize() {
    return 498;
}

/* 80317BB4-80317BBC 3124F4 0008+00 1/0 0/0 0/0 .text            countDLSize__18J3DTevBlockPatchedFv
 */
s32 J3DTevBlockPatched::countDLSize() {
    return 560;
}

/* 80317BBC-80317BC4 3124FC 0008+00 1/0 0/0 0/0 .text            countDLSize__12J3DTevBlock1Fv */
s32 J3DTevBlock1::countDLSize() {
    return 105;
}

/* 80317BC4-80317BCC 312504 0008+00 1/0 0/0 0/0 .text            countDLSize__12J3DTevBlock2Fv */
s32 J3DTevBlock2::countDLSize() {
    return 335;
}

/* 80317BCC-80317BD4 31250C 0008+00 1/0 0/0 0/0 .text            countDLSize__12J3DTevBlock4Fv */
s32 J3DTevBlock4::countDLSize() {
    return 580;
}

/* 80317BD4-80317BDC 312514 0008+00 1/0 0/0 0/0 .text            countDLSize__13J3DTevBlock16Fv */
s32 J3DTevBlock16::countDLSize() {
    return 1000;
}

/* 80317BDC-80317BE4 31251C 0008+00 1/0 0/0 0/0 .text            countDLSize__15J3DIndBlockFullFv */
s32 J3DIndBlockFull::countDLSize() {
    return 140;
}

/* 80317BE4-80317BEC 312524 0008+00 1/0 0/0 0/0 .text            countDLSize__13J3DPEBlockOpaFv */
s32 J3DPEBlockOpa::countDLSize() {
    return 30;
}

/* 80317BEC-80317BF4 31252C 0008+00 1/0 0/0 0/0 .text            countDLSize__17J3DPEBlockTexEdgeFv
 */
s32 J3DPEBlockTexEdge::countDLSize() {
    return 30;
}

/* 80317BF4-80317BFC 312534 0008+00 1/0 0/0 0/0 .text            countDLSize__13J3DPEBlockXluFv */
s32 J3DPEBlockXlu::countDLSize() {
    return 30;
}

/* 80317BFC-80317C04 31253C 0008+00 1/0 0/0 0/0 .text            countDLSize__16J3DPEBlockFogOffFv
 */
s32 J3DPEBlockFogOff::countDLSize() {
    return 30;
}

/* 80317C04-80317C0C 312544 0008+00 1/0 0/0 0/0 .text            countDLSize__14J3DPEBlockFullFv */
s32 J3DPEBlockFull::countDLSize() {
    return 85;
}

/* ############################################################################################## */
/* 804515D8-804515DC 000AD8 0004+00 2/2 0/0 0/0 .sbss            SizeOfJ3DColorBlockLightOffLoad */
static u8 SizeOfJ3DColorBlockLightOffLoad[4];

/* 804563A8-804563AC 0049A8 0004+00 7/7 0/0 0/0 .sdata2          @585 */
SECTION_SDATA2 static u32 lit_585 = 0x02000201;

/* 80317C0C-8031816C 31254C 0560+00 1/0 0/0 0/0 .text            load__21J3DColorBlockLightOffFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOff::load() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/load__21J3DColorBlockLightOffFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 804515DC-804515E0 000ADC 0004+00 3/3 0/0 0/0 .sbss            SizeOfJ3DColorBlockAmbientOnLoad */
static u8 SizeOfJ3DColorBlockAmbientOnLoad[4];

/* 8031816C-803187F4 312AAC 0688+00 1/0 0/0 0/0 .text            load__22J3DColorBlockAmbientOnFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockAmbientOn::load() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/load__22J3DColorBlockAmbientOnFv.s"
}
#pragma pop

/* 803187F4-80318EB4 313134 06C0+00 1/0 0/0 0/0 .text            load__20J3DColorBlockLightOnFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOn::load() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/load__20J3DColorBlockLightOnFv.s"
}
#pragma pop

/* 80318EB4-80318F00 3137F4 004C+00 2/0 0/0 0/0 .text            patch__21J3DColorBlockLightOffFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOff::patch() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/patch__21J3DColorBlockLightOffFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 80450960-80450964 0003E0 0004+00 5/5 0/0 0/0 .sdata           SizeOfLoadMatColors */
SECTION_SDATA static u32 SizeOfLoadMatColors = 0x0000000D;

/* 80318F00-803190AC 313840 01AC+00 2/0 0/0 0/0 .text patchMatColor__21J3DColorBlockLightOffFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOff::patchMatColor() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/patchMatColor__21J3DColorBlockLightOffFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 80450964-80450968 0003E4 0004+00 2/2 0/0 0/0 .sdata           SizeOfLoadAmbColors */
SECTION_SDATA static u32 SizeOfLoadAmbColors = 0x0000000D;

/* 80450968-80450970 0003E8 0004+04 5/5 0/0 0/0 .sdata           SizeOfLoadColorChans */
SECTION_SDATA static u32 SizeOfLoadColorChans[1 + 1 /* padding */] = {
    0x00000015,
    /* padding */
    0x00000000,
};

/* 803190AC-803194E8 3139EC 043C+00 2/0 0/0 0/0 .text patchLight__21J3DColorBlockLightOffFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOff::patchLight() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/patchLight__21J3DColorBlockLightOffFv.s"
}
#pragma pop

/* 803194E8-80319534 313E28 004C+00 1/0 0/0 0/0 .text            patch__20J3DColorBlockLightOnFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOn::patch() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/patch__20J3DColorBlockLightOnFv.s"
}
#pragma pop

/* 80319534-803196E0 313E74 01AC+00 1/0 0/0 0/0 .text patchMatColor__20J3DColorBlockLightOnFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOn::patchMatColor() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/patchMatColor__20J3DColorBlockLightOnFv.s"
}
#pragma pop

/* 803196E0-80319B4C 314020 046C+00 1/0 0/0 0/0 .text patchLight__20J3DColorBlockLightOnFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOn::patchLight() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/patchLight__20J3DColorBlockLightOnFv.s"
}
#pragma pop

/* 80319B4C-80319BB4 31448C 0068+00 2/0 0/0 0/0 .text            diff__21J3DColorBlockLightOffFUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOff::diff(u32 param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diff__21J3DColorBlockLightOffFUl.s"
}
#pragma pop

/* 80319BB4-80319D30 3144F4 017C+00 2/0 0/0 0/0 .text diffMatColor__21J3DColorBlockLightOffFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOff::diffMatColor() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diffMatColor__21J3DColorBlockLightOffFv.s"
}
#pragma pop

/* 80319D30-8031A13C 314670 040C+00 2/0 0/0 0/0 .text diffColorChan__21J3DColorBlockLightOffFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOff::diffColorChan() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diffColorChan__21J3DColorBlockLightOffFv.s"
}
#pragma pop

/* 8031A13C-8031A1DC 314A7C 00A0+00 1/0 0/0 0/0 .text            diff__20J3DColorBlockLightOnFUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOn::diff(u32 param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diff__20J3DColorBlockLightOnFUl.s"
}
#pragma pop

/* 8031A1DC-8031A358 314B1C 017C+00 1/0 0/0 0/0 .text diffAmbColor__20J3DColorBlockLightOnFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOn::diffAmbColor() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diffAmbColor__20J3DColorBlockLightOnFv.s"
}
#pragma pop

/* 8031A358-8031A4D4 314C98 017C+00 1/0 0/0 0/0 .text diffMatColor__20J3DColorBlockLightOnFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOn::diffMatColor() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diffMatColor__20J3DColorBlockLightOnFv.s"
}
#pragma pop

/* 8031A4D4-8031A8E0 314E14 040C+00 1/0 0/0 0/0 .text diffColorChan__20J3DColorBlockLightOnFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOn::diffColorChan() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diffColorChan__20J3DColorBlockLightOnFv.s"
}
#pragma pop

/* 8031A8E0-8031A948 315220 0068+00 1/0 0/0 0/0 .text diffLightObj__20J3DColorBlockLightOnFUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOn::diffLightObj(u32 param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diffLightObj__20J3DColorBlockLightOnFUl.s"
}
#pragma pop

/* 8031A948-8031A9E8 315288 00A0+00 1/0 0/0 0/0 .text            load__15J3DTexGenBlock4Fv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexGenBlock4::load() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/load__15J3DTexGenBlock4Fv.s"
}
#pragma pop

/* 8031A9E8-8031AA88 315328 00A0+00 1/0 0/0 0/0 .text            load__19J3DTexGenBlockBasicFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexGenBlockBasic::load() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/load__19J3DTexGenBlockBasicFv.s"
}
#pragma pop

/* 8031AA88-8031AB18 3153C8 0090+00 1/0 0/0 0/0 .text            patch__21J3DTexGenBlockPatchedFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexGenBlockPatched::patch() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/patch__21J3DTexGenBlockPatchedFv.s"
}
#pragma pop

/* 8031AB18-8031ABC0 315458 00A8+00 1/0 0/0 0/0 .text            patch__15J3DTexGenBlock4Fv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexGenBlock4::patch() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/patch__15J3DTexGenBlock4Fv.s"
}
#pragma pop

/* 8031ABC0-8031AC68 315500 00A8+00 1/0 0/0 0/0 .text            patch__19J3DTexGenBlockBasicFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexGenBlockBasic::patch() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/patch__19J3DTexGenBlockBasicFv.s"
}
#pragma pop

/* 8031AC68-8031ACD0 3155A8 0068+00 3/0 0/0 0/0 .text            diff__21J3DTexGenBlockPatchedFUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexGenBlockPatched::diff(u32 param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diff__21J3DTexGenBlockPatchedFUl.s"
}
#pragma pop

/* 8031ACD0-8031AD30 315610 0060+00 3/0 0/0 0/0 .text diffTexMtx__21J3DTexGenBlockPatchedFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexGenBlockPatched::diffTexMtx() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diffTexMtx__21J3DTexGenBlockPatchedFv.s"
}
#pragma pop

/* 8031AD30-8031AD64 315670 0034+00 3/0 0/0 0/0 .text diffTexGen__21J3DTexGenBlockPatchedFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexGenBlockPatched::diffTexGen() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diffTexGen__21J3DTexGenBlockPatchedFv.s"
}
#pragma pop

/* 8031AD64-8031AFA4 3156A4 0240+00 1/0 0/0 0/0 .text            load__12J3DTevBlock1Fv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock1::load() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/load__12J3DTevBlock1Fv.s"
}
#pragma pop

/* 8031AFA4-8031B4C0 3158E4 051C+00 1/0 0/0 0/0 .text            load__12J3DTevBlock2Fv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::load() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/load__12J3DTevBlock2Fv.s"
}
#pragma pop

/* 8031B4C0-8031BA04 315E00 0544+00 1/0 0/0 0/0 .text            load__12J3DTevBlock4Fv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::load() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/load__12J3DTevBlock4Fv.s"
}
#pragma pop

/* 8031BA04-8031BF4C 316344 0548+00 1/0 0/0 0/0 .text            load__13J3DTevBlock16Fv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::load() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/load__13J3DTevBlock16Fv.s"
}
#pragma pop

/* 8031BF4C-8031BFE0 31688C 0094+00 1/0 0/0 0/0 .text            patchTexNo__18J3DTevBlockPatchedFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlockPatched::patchTexNo() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/patchTexNo__18J3DTevBlockPatchedFv.s"
}
#pragma pop

/* 8031BFE0-8031C0AC 316920 00CC+00 1/0 0/0 0/0 .text            patchTevReg__18J3DTevBlockPatchedFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlockPatched::patchTevReg() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/patchTevReg__18J3DTevBlockPatchedFv.s"
}
#pragma pop

/* 8031C0AC-8031C228 3169EC 017C+00 1/0 0/0 0/0 .text
 * patchTexNoAndTexCoordScale__18J3DTevBlockPatchedFv           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlockPatched::patchTexNoAndTexCoordScale() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/patchTexNoAndTexCoordScale__18J3DTevBlockPatchedFv.s"
}
#pragma pop

/* 8031C228-8031C274 316B68 004C+00 1/0 0/0 0/0 .text            patch__18J3DTevBlockPatchedFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlockPatched::patch() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/patch__18J3DTevBlockPatchedFv.s"
}
#pragma pop

/* 8031C274-8031C2E4 316BB4 0070+00 1/0 0/0 0/0 .text            patchTexNo__12J3DTevBlock1Fv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock1::patchTexNo() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/patchTexNo__12J3DTevBlock1Fv.s"
}
#pragma pop

/* 8031C2E4-8031C2E8 316C24 0004+00 1/0 0/0 0/0 .text            patchTevReg__12J3DTevBlock1Fv */
void J3DTevBlock1::patchTevReg() {
    /* empty function */
}

/* 8031C2E8-8031C3CC 316C28 00E4+00 1/0 0/0 0/0 .text patchTexNoAndTexCoordScale__12J3DTevBlock1Fv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock1::patchTexNoAndTexCoordScale() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/patchTexNoAndTexCoordScale__12J3DTevBlock1Fv.s"
}
#pragma pop

/* 8031C3CC-8031C3F8 316D0C 002C+00 1/0 0/0 0/0 .text            patch__12J3DTevBlock1Fv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock1::patch() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/patch__12J3DTevBlock1Fv.s"
}
#pragma pop

/* 8031C3F8-8031C48C 316D38 0094+00 1/0 0/0 0/0 .text            patchTexNo__12J3DTevBlock2Fv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::patchTexNo() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/patchTexNo__12J3DTevBlock2Fv.s"
}
#pragma pop

/* 8031C48C-8031C558 316DCC 00CC+00 1/0 0/0 0/0 .text            patchTevReg__12J3DTevBlock2Fv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::patchTevReg() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/patchTevReg__12J3DTevBlock2Fv.s"
}
#pragma pop

/* 8031C558-8031C6A8 316E98 0150+00 1/0 0/0 0/0 .text patchTexNoAndTexCoordScale__12J3DTevBlock2Fv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::patchTexNoAndTexCoordScale() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/patchTexNoAndTexCoordScale__12J3DTevBlock2Fv.s"
}
#pragma pop

/* 8031C6A8-8031C6F4 316FE8 004C+00 1/0 0/0 0/0 .text            patch__12J3DTevBlock2Fv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::patch() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/patch__12J3DTevBlock2Fv.s"
}
#pragma pop

/* 8031C6F4-8031C788 317034 0094+00 1/0 0/0 0/0 .text            patchTexNo__12J3DTevBlock4Fv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::patchTexNo() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/patchTexNo__12J3DTevBlock4Fv.s"
}
#pragma pop

/* 8031C788-8031C854 3170C8 00CC+00 1/0 0/0 0/0 .text            patchTevReg__12J3DTevBlock4Fv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::patchTevReg() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/patchTevReg__12J3DTevBlock4Fv.s"
}
#pragma pop

/* 8031C854-8031C9D0 317194 017C+00 1/0 0/0 0/0 .text patchTexNoAndTexCoordScale__12J3DTevBlock4Fv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::patchTexNoAndTexCoordScale() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/patchTexNoAndTexCoordScale__12J3DTevBlock4Fv.s"
}
#pragma pop

/* 8031C9D0-8031CA1C 317310 004C+00 1/0 0/0 0/0 .text            patch__12J3DTevBlock4Fv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::patch() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/patch__12J3DTevBlock4Fv.s"
}
#pragma pop

/* 8031CA1C-8031CAB0 31735C 0094+00 1/0 0/0 0/0 .text            patchTexNo__13J3DTevBlock16Fv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::patchTexNo() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/patchTexNo__13J3DTevBlock16Fv.s"
}
#pragma pop

/* 8031CAB0-8031CB7C 3173F0 00CC+00 1/0 0/0 0/0 .text            patchTevReg__13J3DTevBlock16Fv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::patchTevReg() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/patchTevReg__13J3DTevBlock16Fv.s"
}
#pragma pop

/* 8031CB7C-8031CCF8 3174BC 017C+00 1/0 0/0 0/0 .text
 * patchTexNoAndTexCoordScale__13J3DTevBlock16Fv                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::patchTexNoAndTexCoordScale() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/patchTexNoAndTexCoordScale__13J3DTevBlock16Fv.s"
}
#pragma pop

/* 8031CCF8-8031CD44 317638 004C+00 1/0 0/0 0/0 .text            patch__13J3DTevBlock16Fv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::patch() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/patch__13J3DTevBlock16Fv.s"
}
#pragma pop

/* 8031CD44-8031CE00 317684 00BC+00 6/0 1/0 0/0 .text            diff__11J3DTevBlockFUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock::diff(u32 param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diff__11J3DTevBlockFUl.s"
}
#pragma pop

/* 8031CE00-8031CE64 317740 0064+00 1/0 0/0 0/0 .text            diffTexNo__18J3DTevBlockPatchedFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlockPatched::diffTexNo() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diffTexNo__18J3DTevBlockPatchedFv.s"
}
#pragma pop

/* 8031CE64-8031CF78 3177A4 0114+00 1/0 0/0 0/0 .text diffTevStage__18J3DTevBlockPatchedFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlockPatched::diffTevStage() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diffTevStage__18J3DTevBlockPatchedFv.s"
}
#pragma pop

/* 8031CF78-8031D028 3178B8 00B0+00 1/0 0/0 0/0 .text diffTevStageIndirect__18J3DTevBlockPatchedFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlockPatched::diffTevStageIndirect() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diffTevStageIndirect__18J3DTevBlockPatchedFv.s"
}
#pragma pop

/* 8031D028-8031D0C4 317968 009C+00 1/0 0/0 0/0 .text            diffTevReg__18J3DTevBlockPatchedFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlockPatched::diffTevReg() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diffTevReg__18J3DTevBlockPatchedFv.s"
}
#pragma pop

/* 8031D0C4-8031D1BC 317A04 00F8+00 1/0 0/0 0/0 .text diffTexCoordScale__18J3DTevBlockPatchedFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlockPatched::diffTexCoordScale() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diffTexCoordScale__18J3DTevBlockPatchedFv.s"
}
#pragma pop

/* 8031D1BC-8031D1F4 317AFC 0038+00 1/0 0/0 0/0 .text            diffTexNo__12J3DTevBlock1Fv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock1::diffTexNo() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diffTexNo__12J3DTevBlock1Fv.s"
}
#pragma pop

/* 8031D1F4-8031D1F8 317B34 0004+00 1/0 0/0 0/0 .text            diffTevReg__12J3DTevBlock1Fv */
void J3DTevBlock1::diffTevReg() {
    /* empty function */
}

/* 8031D1F8-8031D2E8 317B38 00F0+00 1/0 0/0 0/0 .text            diffTevStage__12J3DTevBlock1Fv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock1::diffTevStage() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diffTevStage__12J3DTevBlock1Fv.s"
}
#pragma pop

/* 8031D2E8-8031D368 317C28 0080+00 1/0 0/0 0/0 .text diffTevStageIndirect__12J3DTevBlock1Fv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock1::diffTevStageIndirect() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diffTevStageIndirect__12J3DTevBlock1Fv.s"
}
#pragma pop

/* 8031D368-8031D3D0 317CA8 0068+00 1/0 0/0 0/0 .text            diffTexCoordScale__12J3DTevBlock1Fv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock1::diffTexCoordScale() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diffTexCoordScale__12J3DTevBlock1Fv.s"
}
#pragma pop

/* 8031D3D0-8031D434 317D10 0064+00 1/0 0/0 0/0 .text            diffTexNo__12J3DTevBlock2Fv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::diffTexNo() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diffTexNo__12J3DTevBlock2Fv.s"
}
#pragma pop

/* 8031D434-8031D4D0 317D74 009C+00 1/0 0/0 0/0 .text            diffTevReg__12J3DTevBlock2Fv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::diffTevReg() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diffTevReg__12J3DTevBlock2Fv.s"
}
#pragma pop

/* 8031D4D0-8031D5E4 317E10 0114+00 1/0 0/0 0/0 .text            diffTevStage__12J3DTevBlock2Fv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::diffTevStage() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diffTevStage__12J3DTevBlock2Fv.s"
}
#pragma pop

/* 8031D5E4-8031D694 317F24 00B0+00 1/0 0/0 0/0 .text diffTevStageIndirect__12J3DTevBlock2Fv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::diffTevStageIndirect() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diffTevStageIndirect__12J3DTevBlock2Fv.s"
}
#pragma pop

/* 8031D694-8031D758 317FD4 00C4+00 1/0 0/0 0/0 .text            diffTexCoordScale__12J3DTevBlock2Fv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::diffTexCoordScale() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diffTexCoordScale__12J3DTevBlock2Fv.s"
}
#pragma pop

/* 8031D758-8031D7BC 318098 0064+00 1/0 0/0 0/0 .text            diffTexNo__12J3DTevBlock4Fv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::diffTexNo() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diffTexNo__12J3DTevBlock4Fv.s"
}
#pragma pop

/* 8031D7BC-8031D858 3180FC 009C+00 1/0 0/0 0/0 .text            diffTevReg__12J3DTevBlock4Fv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::diffTevReg() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diffTevReg__12J3DTevBlock4Fv.s"
}
#pragma pop

/* 8031D858-8031D96C 318198 0114+00 1/0 0/0 0/0 .text            diffTevStage__12J3DTevBlock4Fv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::diffTevStage() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diffTevStage__12J3DTevBlock4Fv.s"
}
#pragma pop

/* 8031D96C-8031DA1C 3182AC 00B0+00 1/0 0/0 0/0 .text diffTevStageIndirect__12J3DTevBlock4Fv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::diffTevStageIndirect() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diffTevStageIndirect__12J3DTevBlock4Fv.s"
}
#pragma pop

/* 8031DA1C-8031DB14 31835C 00F8+00 1/0 0/0 0/0 .text            diffTexCoordScale__12J3DTevBlock4Fv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::diffTexCoordScale() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diffTexCoordScale__12J3DTevBlock4Fv.s"
}
#pragma pop

/* 8031DB14-8031DB78 318454 0064+00 1/0 0/0 0/0 .text            diffTexNo__13J3DTevBlock16Fv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::diffTexNo() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diffTexNo__13J3DTevBlock16Fv.s"
}
#pragma pop

/* 8031DB78-8031DC14 3184B8 009C+00 1/0 0/0 0/0 .text            diffTevReg__13J3DTevBlock16Fv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::diffTevReg() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diffTevReg__13J3DTevBlock16Fv.s"
}
#pragma pop

/* 8031DC14-8031DD28 318554 0114+00 1/0 0/0 0/0 .text            diffTevStage__13J3DTevBlock16Fv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::diffTevStage() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diffTevStage__13J3DTevBlock16Fv.s"
}
#pragma pop

/* 8031DD28-8031DDD8 318668 00B0+00 1/0 0/0 0/0 .text diffTevStageIndirect__13J3DTevBlock16Fv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::diffTevStageIndirect() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diffTevStageIndirect__13J3DTevBlock16Fv.s"
}
#pragma pop

/* 8031DDD8-8031DED0 318718 00F8+00 1/0 0/0 0/0 .text diffTexCoordScale__13J3DTevBlock16Fv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::diffTexCoordScale() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diffTexCoordScale__13J3DTevBlock16Fv.s"
}
#pragma pop

/* 8031DED0-8031DFB4 318810 00E4+00 1/0 0/0 0/0 .text            ptrToIndex__13J3DTevBlock16Fv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::ptrToIndex() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/ptrToIndex__13J3DTevBlock16Fv.s"
}
#pragma pop

/* 8031DFB4-8031E098 3188F4 00E4+00 1/0 0/0 0/0 .text            ptrToIndex__18J3DTevBlockPatchedFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlockPatched::ptrToIndex() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/ptrToIndex__18J3DTevBlockPatchedFv.s"
}
#pragma pop

/* 8031E098-8031E12C 3189D8 0094+00 5/5 1/1 0/0 .text indexToPtr_private__11J3DTevBlockFUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock::indexToPtr_private(u32 param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/indexToPtr_private__11J3DTevBlockFUl.s"
}
#pragma pop

/* 8031E12C-8031E328 318A6C 01FC+00 1/0 0/0 0/0 .text            load__15J3DIndBlockFullFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DIndBlockFull::load() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/load__15J3DIndBlockFullFv.s"
}
#pragma pop

/* 8031E328-8031E408 318C68 00E0+00 1/0 0/0 0/0 .text            diff__15J3DIndBlockFullFUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DIndBlockFull::diff(u32 param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diff__15J3DIndBlockFullFUl.s"
}
#pragma pop

/* 8031E408-8031E6C8 318D48 02C0+00 1/0 0/0 0/0 .text            load__13J3DPEBlockOpaFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockOpa::load() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/load__13J3DPEBlockOpaFv.s"
}
#pragma pop

/* 8031E6C8-8031E98C 319008 02C4+00 1/0 0/0 0/0 .text            load__17J3DPEBlockTexEdgeFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockTexEdge::load() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/load__17J3DPEBlockTexEdgeFv.s"
}
#pragma pop

/* 8031E98C-8031EC50 3192CC 02C4+00 1/0 0/0 0/0 .text            load__13J3DPEBlockXluFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockXlu::load() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/load__13J3DPEBlockXluFv.s"
}
#pragma pop

/* 8031EC50-8031F0D8 319590 0488+00 1/0 0/0 0/0 .text            load__16J3DPEBlockFogOffFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFogOff::load() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/load__16J3DPEBlockFogOffFv.s"
}
#pragma pop

/* 8031F0D8-8031F3C0 319A18 02E8+00 1/0 0/0 0/0 .text            diffBlend__16J3DPEBlockFogOffFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFogOff::diffBlend() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diffBlend__16J3DPEBlockFogOffFv.s"
}
#pragma pop

/* 8031F3C0-8031F890 319D00 04D0+00 1/0 0/0 0/0 .text            load__14J3DPEBlockFullFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFull::load() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/load__14J3DPEBlockFullFv.s"
}
#pragma pop

/* 8031F890-8031F940 31A1D0 00B0+00 1/0 0/0 0/0 .text            patch__14J3DPEBlockFullFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFull::patch() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/patch__14J3DPEBlockFullFv.s"
}
#pragma pop

/* 8031F940-8031F9B8 31A280 0078+00 1/0 0/0 0/0 .text            diffFog__14J3DPEBlockFullFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFull::diffFog() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diffFog__14J3DPEBlockFullFv.s"
}
#pragma pop

/* 8031F9B8-8031FCA0 31A2F8 02E8+00 1/0 0/0 0/0 .text            diffBlend__14J3DPEBlockFullFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFull::diffBlend() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diffBlend__14J3DPEBlockFullFv.s"
}
#pragma pop

/* 8031FCA0-8031FD08 31A5E0 0068+00 1/0 0/0 0/0 .text            diff__14J3DPEBlockFullFUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFull::diff(u32 param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diff__14J3DPEBlockFullFUl.s"
}
#pragma pop

/* 8031FD08-8031FDE4 31A648 00DC+00 1/0 0/0 0/0 .text
 * reset__21J3DColorBlockLightOffFP13J3DColorBlock              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOff::reset(J3DColorBlock* param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/reset__21J3DColorBlockLightOffFP13J3DColorBlock.s"
}
#pragma pop

/* 8031FDE4-8031FF34 31A724 0150+00 1/0 0/0 0/0 .text
 * reset__22J3DColorBlockAmbientOnFP13J3DColorBlock             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockAmbientOn::reset(J3DColorBlock* param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/reset__22J3DColorBlockAmbientOnFP13J3DColorBlock.s"
}
#pragma pop

/* 8031FF34-80320084 31A874 0150+00 1/0 0/0 0/0 .text
 * reset__20J3DColorBlockLightOnFP13J3DColorBlock               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOn::reset(J3DColorBlock* param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/reset__20J3DColorBlockLightOnFP13J3DColorBlock.s"
}
#pragma pop

/* ############################################################################################## */
/* 803A1EA8-803A1EA8 02E508 0000+00 0/0 0/0 0/0 .rodata          @stringBase0 */
#pragma push
#pragma force_active on
SECTION_DEAD static char const* const stringBase_803A1EA8 = "Error : TexMtx[%d] is Null.\n";
/* @stringBase0 padding */
SECTION_DEAD static char const* const pad_803A1EC5 = "\0\0";
#pragma pop

/* 80320084-803201A0 31A9C4 011C+00 1/0 0/0 0/0 .text
 * reset__21J3DTexGenBlockPatchedFP14J3DTexGenBlock             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexGenBlockPatched::reset(J3DTexGenBlock* param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/reset__21J3DTexGenBlockPatchedFP14J3DTexGenBlock.s"
}
#pragma pop

/* 803201A0-803202DC 31AAE0 013C+00 1/0 0/0 0/0 .text reset__15J3DTexGenBlock4FP14J3DTexGenBlock
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexGenBlock4::reset(J3DTexGenBlock* param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/reset__15J3DTexGenBlock4FP14J3DTexGenBlock.s"
}
#pragma pop

/* 803202DC-80320418 31AC1C 013C+00 1/0 0/0 0/0 .text
 * reset__19J3DTexGenBlockBasicFP14J3DTexGenBlock               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexGenBlockBasic::reset(J3DTexGenBlock* param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/reset__19J3DTexGenBlockBasicFP14J3DTexGenBlock.s"
}
#pragma pop

/* 80320418-803205D4 31AD58 01BC+00 1/0 0/0 0/0 .text reset__18J3DTevBlockPatchedFP11J3DTevBlock
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlockPatched::reset(J3DTevBlock* param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/reset__18J3DTevBlockPatchedFP11J3DTevBlock.s"
}
#pragma pop

/* 803205D4-803206AC 31AF14 00D8+00 1/0 0/0 0/0 .text reset__12J3DTevBlock1FP11J3DTevBlock */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock1::reset(J3DTevBlock* param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/reset__12J3DTevBlock1FP11J3DTevBlock.s"
}
#pragma pop

/* 803206AC-8032098C 31AFEC 02E0+00 1/0 0/0 0/0 .text reset__12J3DTevBlock2FP11J3DTevBlock */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::reset(J3DTevBlock* param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/reset__12J3DTevBlock2FP11J3DTevBlock.s"
}
#pragma pop

/* 8032098C-80320E24 31B2CC 0498+00 1/0 0/0 0/0 .text reset__12J3DTevBlock4FP11J3DTevBlock */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::reset(J3DTevBlock* param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/reset__12J3DTevBlock4FP11J3DTevBlock.s"
}
#pragma pop

/* 80320E24-803210B0 31B764 028C+00 1/0 0/0 0/0 .text reset__13J3DTevBlock16FP11J3DTevBlock */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::reset(J3DTevBlock* param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/reset__13J3DTevBlock16FP11J3DTevBlock.s"
}
#pragma pop

/* 803210B0-803211B4 31B9F0 0104+00 1/0 0/0 0/0 .text reset__15J3DIndBlockFullFP11J3DIndBlock */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DIndBlockFull::reset(J3DIndBlock* param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/reset__15J3DIndBlockFullFP11J3DIndBlock.s"
}
#pragma pop

/* 803211B4-8032129C 31BAF4 00E8+00 1/0 0/0 0/0 .text reset__16J3DPEBlockFogOffFP10J3DPEBlock */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFogOff::reset(J3DPEBlock* param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/reset__16J3DPEBlockFogOffFP10J3DPEBlock.s"
}
#pragma pop

/* 8032129C-803213C0 31BBDC 0124+00 1/0 0/0 0/0 .text reset__14J3DPEBlockFullFP10J3DPEBlock */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFull::reset(J3DPEBlock* param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/reset__14J3DPEBlockFullFP10J3DPEBlock.s"
}
#pragma pop

/* ############################################################################################## */
/* 803CDF30-803CDF60 -00001 0030+00 1/1 0/0 0/0 .data            @5062 */
SECTION_DATA static void* lit_5062[12] = {
    (void*)(((char*)calc__21J3DTexGenBlockPatchedFPA4_Cf) + 0x188),
    (void*)(((char*)calc__21J3DTexGenBlockPatchedFPA4_Cf) + 0x74),
    (void*)(((char*)calc__21J3DTexGenBlockPatchedFPA4_Cf) + 0xC8),
    (void*)(((char*)calc__21J3DTexGenBlockPatchedFPA4_Cf) + 0xF8),
    (void*)(((char*)calc__21J3DTexGenBlockPatchedFPA4_Cf) + 0x188),
    (void*)(((char*)calc__21J3DTexGenBlockPatchedFPA4_Cf) + 0x13C),
    (void*)(((char*)calc__21J3DTexGenBlockPatchedFPA4_Cf) + 0x74),
    (void*)(((char*)calc__21J3DTexGenBlockPatchedFPA4_Cf) + 0x74),
    (void*)(((char*)calc__21J3DTexGenBlockPatchedFPA4_Cf) + 0xC8),
    (void*)(((char*)calc__21J3DTexGenBlockPatchedFPA4_Cf) + 0xF8),
    (void*)(((char*)calc__21J3DTexGenBlockPatchedFPA4_Cf) + 0x13C),
    (void*)(((char*)calc__21J3DTexGenBlockPatchedFPA4_Cf) + 0x13C),
};

/* 804563AC-804563B0 0049AC 0004+00 3/3 0/0 0/0 .sdata2          @5060 */
SECTION_SDATA2 static u8 lit_5060[4] = {
    0x00,
    0x00,
    0x00,
    0x00,
};

/* 803213C0-80321584 31BD00 01C4+00 4/0 0/0 0/0 .text calc__21J3DTexGenBlockPatchedFPA4_Cf */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexGenBlockPatched::calc(f32 const (*param_0)[4]) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/calc__21J3DTexGenBlockPatchedFPA4_Cf.s"
}
#pragma pop

/* ############################################################################################## */
/* 803CDF60-803CDF90 -00001 0030+00 1/1 0/0 0/0 .data            @5110 */
SECTION_DATA static void* lit_5110[12] = {
    (void*)(((char*)calcWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf) + 0x118),
    (void*)(((char*)calcWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf) + 0x74),
    (void*)(((char*)calcWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf) + 0x88),
    (void*)(((char*)calcWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf) + 0xB8),
    (void*)(((char*)calcWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf) + 0x118),
    (void*)(((char*)calcWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf) + 0xCC),
    (void*)(((char*)calcWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf) + 0x74),
    (void*)(((char*)calcWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf) + 0x74),
    (void*)(((char*)calcWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf) + 0x88),
    (void*)(((char*)calcWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf) + 0xB8),
    (void*)(((char*)calcWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf) + 0xCC),
    (void*)(((char*)calcWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf) + 0xCC),
};

/* 80321584-803216D8 31BEC4 0154+00 4/0 0/0 0/0 .text
 * calcWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexGenBlockPatched::calcWithoutViewMtx(f32 const (*param_0)[4]) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/calcWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf.s"
}
#pragma pop

/* ############################################################################################## */
/* 803CDF90-803CDFC0 -00001 0030+00 1/1 0/0 0/0 .data            @5150 */
SECTION_DATA static void* lit_5150[12] = {
    (void*)(((char*)calcPostTexMtx__21J3DTexGenBlockPatchedFPA4_Cf) + 0x100),
    (void*)(((char*)calcPostTexMtx__21J3DTexGenBlockPatchedFPA4_Cf) + 0x68),
    (void*)(((char*)calcPostTexMtx__21J3DTexGenBlockPatchedFPA4_Cf) + 0x84),
    (void*)(((char*)calcPostTexMtx__21J3DTexGenBlockPatchedFPA4_Cf) + 0xAC),
    (void*)(((char*)calcPostTexMtx__21J3DTexGenBlockPatchedFPA4_Cf) + 0x100),
    (void*)(((char*)calcPostTexMtx__21J3DTexGenBlockPatchedFPA4_Cf) + 0xC8),
    (void*)(((char*)calcPostTexMtx__21J3DTexGenBlockPatchedFPA4_Cf) + 0x68),
    (void*)(((char*)calcPostTexMtx__21J3DTexGenBlockPatchedFPA4_Cf) + 0x68),
    (void*)(((char*)calcPostTexMtx__21J3DTexGenBlockPatchedFPA4_Cf) + 0x84),
    (void*)(((char*)calcPostTexMtx__21J3DTexGenBlockPatchedFPA4_Cf) + 0xAC),
    (void*)(((char*)calcPostTexMtx__21J3DTexGenBlockPatchedFPA4_Cf) + 0xC8),
    (void*)(((char*)calcPostTexMtx__21J3DTexGenBlockPatchedFPA4_Cf) + 0xC8),
};

/* 803216D8-8032181C 31C018 0144+00 4/0 0/0 0/0 .text
 * calcPostTexMtx__21J3DTexGenBlockPatchedFPA4_Cf               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexGenBlockPatched::calcPostTexMtx(f32 const (*param_0)[4]) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/calcPostTexMtx__21J3DTexGenBlockPatchedFPA4_Cf.s"
}
#pragma pop

/* ############################################################################################## */
/* 803CDFC0-803CDFF0 -00001 0030+00 1/1 0/0 0/0 .data            @5187 */
SECTION_DATA static void* lit_5187[12] = {
    (void*)(((char*)calcPostTexMtxWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf) + 0xD8),
    (void*)(((char*)calcPostTexMtxWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf) + 0x68),
    (void*)(((char*)calcPostTexMtxWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf) + 0x84),
    (void*)(((char*)calcPostTexMtxWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf) + 0xA0),
    (void*)(((char*)calcPostTexMtxWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf) + 0xD8),
    (void*)(((char*)calcPostTexMtxWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf) + 0xBC),
    (void*)(((char*)calcPostTexMtxWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf) + 0x68),
    (void*)(((char*)calcPostTexMtxWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf) + 0x68),
    (void*)(((char*)calcPostTexMtxWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf) + 0x84),
    (void*)(((char*)calcPostTexMtxWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf) + 0xA0),
    (void*)(((char*)calcPostTexMtxWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf) + 0xBC),
    (void*)(((char*)calcPostTexMtxWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf) + 0xBC),
};

/* 8032181C-80321938 31C15C 011C+00 4/0 0/0 0/0 .text
 * calcPostTexMtxWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexGenBlockPatched::calcPostTexMtxWithoutViewMtx(f32 const (*param_0)[4]) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/calcPostTexMtxWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf.s"
}
#pragma pop

/* 80321938-8032193C 31C278 0004+00 1/0 1/0 0/0 .text            diffTevReg__11J3DTevBlockFv */
void J3DTevBlock::diffTevReg() {
    /* empty function */
}

/* 8032193C-80321940 31C27C 0004+00 1/0 1/0 0/0 .text diffTevStageIndirect__11J3DTevBlockFv */
void J3DTevBlock::diffTevStageIndirect() {
    /* empty function */
}

/* 80321940-80321944 31C280 0004+00 1/0 1/0 0/0 .text            diffTevStage__11J3DTevBlockFv */
void J3DTevBlock::diffTevStage() {
    /* empty function */
}

/* 80321944-80321948 31C284 0004+00 1/0 1/0 0/0 .text            diffTexCoordScale__11J3DTevBlockFv
 */
void J3DTevBlock::diffTexCoordScale() {
    /* empty function */
}

/* 80321948-8032194C 31C288 0004+00 1/0 1/0 0/0 .text            diffTexNo__11J3DTevBlockFv */
void J3DTevBlock::diffTexNo() {
    /* empty function */
}

/* 8032194C-80321958 31C28C 000C+00 1/0 0/0 0/0 .text            getType__14J3DPEBlockFullFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFull::getType() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getType__14J3DPEBlockFullFv.s"
}
#pragma pop

/* 80321958-8032197C 31C298 0024+00 1/0 0/0 0/0 .text            setFog__14J3DPEBlockFullFP6J3DFog
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFull::setFog(J3DFog* param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setFog__14J3DPEBlockFullFP6J3DFog.s"
}
#pragma pop

/* 8032197C-803219A0 31C2BC 0024+00 1/0 0/0 0/0 .text            setFog__14J3DPEBlockFullF6J3DFog */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFull::setFog(J3DFog param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setFog__14J3DPEBlockFullF6J3DFog.s"
}
#pragma pop

/* 803219A0-803219A8 31C2E0 0008+00 1/0 0/0 0/0 .text            getFog__14J3DPEBlockFullFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFull::getFog() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getFog__14J3DPEBlockFullFv.s"
}
#pragma pop

/* 803219A8-803219C4 31C2E8 001C+00 1/0 0/0 0/0 .text
 * setAlphaComp__14J3DPEBlockFullFRC12J3DAlphaComp              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFull::setAlphaComp(J3DAlphaComp const& param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setAlphaComp__14J3DPEBlockFullFRC12J3DAlphaComp.s"
}
#pragma pop

/* 803219C4-803219E0 31C304 001C+00 1/0 0/0 0/0 .text
 * setAlphaComp__14J3DPEBlockFullFPC12J3DAlphaComp              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFull::setAlphaComp(J3DAlphaComp const* param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setAlphaComp__14J3DPEBlockFullFPC12J3DAlphaComp.s"
}
#pragma pop

/* 803219E0-803219E8 31C320 0008+00 1/0 0/0 0/0 .text            getAlphaComp__14J3DPEBlockFullFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFull::getAlphaComp() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getAlphaComp__14J3DPEBlockFullFv.s"
}
#pragma pop

/* 803219E8-803219F4 31C328 000C+00 1/0 0/0 0/0 .text setBlend__14J3DPEBlockFullFRC8J3DBlend */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFull::setBlend(J3DBlend const& param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setBlend__14J3DPEBlockFullFRC8J3DBlend.s"
}
#pragma pop

/* 803219F4-80321A00 31C334 000C+00 1/0 0/0 0/0 .text setBlend__14J3DPEBlockFullFPC8J3DBlend */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFull::setBlend(J3DBlend const* param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setBlend__14J3DPEBlockFullFPC8J3DBlend.s"
}
#pragma pop

/* 80321A00-80321A08 31C340 0008+00 1/0 0/0 0/0 .text            getBlend__14J3DPEBlockFullFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFull::getBlend() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getBlend__14J3DPEBlockFullFv.s"
}
#pragma pop

/* 80321A08-80321A14 31C348 000C+00 1/0 0/0 0/0 .text setZMode__14J3DPEBlockFullF8J3DZMode */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFull::setZMode(J3DZMode param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setZMode__14J3DPEBlockFullF8J3DZMode.s"
}
#pragma pop

/* 80321A14-80321A20 31C354 000C+00 1/0 0/0 0/0 .text setZMode__14J3DPEBlockFullFPC8J3DZMode */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFull::setZMode(J3DZMode const* param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setZMode__14J3DPEBlockFullFPC8J3DZMode.s"
}
#pragma pop

/* 80321A20-80321A28 31C360 0008+00 1/0 0/0 0/0 .text            getZMode__14J3DPEBlockFullFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFull::getZMode() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getZMode__14J3DPEBlockFullFv.s"
}
#pragma pop

/* 80321A28-80321A30 -00001 0008+00 0/0 0/0 0/0 .text            setZCompLoc__14J3DPEBlockFullFUc */
void J3DPEBlockFull::setZCompLoc(u8 param_0) {
    *(u8*)(((u8*)this) + 58) /* this->field_0x3a */ = (u8)(param_0);
}

/* 80321A30-80321A3C 31C370 000C+00 1/0 0/0 0/0 .text            setZCompLoc__14J3DPEBlockFullFPCUc
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFull::setZCompLoc(u8 const* param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setZCompLoc__14J3DPEBlockFullFPCUc.s"
}
#pragma pop

/* 80321A3C-80321A44 31C37C 0008+00 1/0 0/0 0/0 .text            getZCompLoc__14J3DPEBlockFullCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFull::getZCompLoc() const {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getZCompLoc__14J3DPEBlockFullCFv.s"
}
#pragma pop

/* 80321A44-80321A4C -00001 0008+00 0/0 0/0 0/0 .text            setDither__14J3DPEBlockFullFUc */
void J3DPEBlockFull::setDither(u8 param_0) {
    *(u8*)(((u8*)this) + 59) /* this->field_0x3b */ = (u8)(param_0);
}

/* 80321A4C-80321A58 31C38C 000C+00 1/0 0/0 0/0 .text            setDither__14J3DPEBlockFullFPCUc */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFull::setDither(u8 const* param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setDither__14J3DPEBlockFullFPCUc.s"
}
#pragma pop

/* 80321A58-80321A60 31C398 0008+00 1/0 0/0 0/0 .text            getDither__14J3DPEBlockFullCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFull::getDither() const {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getDither__14J3DPEBlockFullCFv.s"
}
#pragma pop

/* 80321A60-80321A68 31C3A0 0008+00 1/0 0/0 0/0 .text            getFogOffset__14J3DPEBlockFullCFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFull::getFogOffset() const {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getFogOffset__14J3DPEBlockFullCFv.s"
}
#pragma pop

/* 80321A68-80321A70 -00001 0008+00 0/0 0/0 0/0 .text            setFogOffset__14J3DPEBlockFullFUl
 */
void J3DPEBlockFull::setFogOffset(u32 param_0) {
    *(u32*)(((u8*)this) + 60) /* this->field_0x3c */ = (u32)(param_0);
}

/* ############################################################################################## */
/* 803CDFF0-803CE06C 02B110 007C+00 1/1 1/1 0/0 .data            __vt__14J3DPEBlockFull */
SECTION_DATA extern void* __vt__14J3DPEBlockFull[31] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)reset__14J3DPEBlockFullFP10J3DPEBlock,
    (void*)load__14J3DPEBlockFullFv,
    (void*)patch__14J3DPEBlockFullFv,
    (void*)diff__14J3DPEBlockFullFUl,
    (void*)diffFog__14J3DPEBlockFullFv,
    (void*)diffBlend__14J3DPEBlockFullFv,
    (void*)countDLSize__14J3DPEBlockFullFv,
    (void*)getType__14J3DPEBlockFullFv,
    (void*)setFog__14J3DPEBlockFullF6J3DFog,
    (void*)setFog__14J3DPEBlockFullFP6J3DFog,
    (void*)getFog__14J3DPEBlockFullFv,
    (void*)setAlphaComp__14J3DPEBlockFullFPC12J3DAlphaComp,
    (void*)setAlphaComp__14J3DPEBlockFullFRC12J3DAlphaComp,
    (void*)getAlphaComp__14J3DPEBlockFullFv,
    (void*)setBlend__14J3DPEBlockFullFPC8J3DBlend,
    (void*)setBlend__14J3DPEBlockFullFRC8J3DBlend,
    (void*)getBlend__14J3DPEBlockFullFv,
    (void*)setZMode__14J3DPEBlockFullFPC8J3DZMode,
    (void*)setZMode__14J3DPEBlockFullF8J3DZMode,
    (void*)getZMode__14J3DPEBlockFullFv,
    (void*)setZCompLoc__14J3DPEBlockFullFPCUc,
    (void*)setZCompLoc__14J3DPEBlockFullFUc,
    (void*)getZCompLoc__14J3DPEBlockFullCFv,
    (void*)setDither__14J3DPEBlockFullFPCUc,
    (void*)setDither__14J3DPEBlockFullFUc,
    (void*)getDither__14J3DPEBlockFullCFv,
    (void*)getFogOffset__14J3DPEBlockFullCFv,
    (void*)setFogOffset__14J3DPEBlockFullFUl,
    (void*)__dt__14J3DPEBlockFullFv,
};

/* 80321A70-80321ACC 31C3B0 005C+00 1/0 0/0 0/0 .text            __dt__14J3DPEBlockFullFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DPEBlockFull::~J3DPEBlockFull() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/__dt__14J3DPEBlockFullFv.s"
}
#pragma pop

/* 80321ACC-80321B00 31C40C 0034+00 1/0 0/0 0/0 .text            diff__16J3DPEBlockFogOffFUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFogOff::diff(u32 param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diff__16J3DPEBlockFogOffFUl.s"
}
#pragma pop

/* 80321B00-80321B0C 31C440 000C+00 1/0 0/0 0/0 .text            getType__16J3DPEBlockFogOffFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFogOff::getType() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getType__16J3DPEBlockFogOffFv.s"
}
#pragma pop

/* 80321B0C-80321B28 31C44C 001C+00 1/0 0/0 0/0 .text
 * setAlphaComp__16J3DPEBlockFogOffFRC12J3DAlphaComp            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFogOff::setAlphaComp(J3DAlphaComp const& param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setAlphaComp__16J3DPEBlockFogOffFRC12J3DAlphaComp.s"
}
#pragma pop

/* 80321B28-80321B44 31C468 001C+00 1/0 0/0 0/0 .text
 * setAlphaComp__16J3DPEBlockFogOffFPC12J3DAlphaComp            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFogOff::setAlphaComp(J3DAlphaComp const* param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setAlphaComp__16J3DPEBlockFogOffFPC12J3DAlphaComp.s"
}
#pragma pop

/* 80321B44-80321B4C 31C484 0008+00 1/0 0/0 0/0 .text            getAlphaComp__16J3DPEBlockFogOffFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFogOff::getAlphaComp() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getAlphaComp__16J3DPEBlockFogOffFv.s"
}
#pragma pop

/* 80321B4C-80321B58 31C48C 000C+00 1/0 0/0 0/0 .text setBlend__16J3DPEBlockFogOffFRC8J3DBlend */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFogOff::setBlend(J3DBlend const& param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setBlend__16J3DPEBlockFogOffFRC8J3DBlend.s"
}
#pragma pop

/* 80321B58-80321B64 31C498 000C+00 1/0 0/0 0/0 .text setBlend__16J3DPEBlockFogOffFPC8J3DBlend */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFogOff::setBlend(J3DBlend const* param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setBlend__16J3DPEBlockFogOffFPC8J3DBlend.s"
}
#pragma pop

/* 80321B64-80321B6C 31C4A4 0008+00 1/0 0/0 0/0 .text            getBlend__16J3DPEBlockFogOffFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFogOff::getBlend() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getBlend__16J3DPEBlockFogOffFv.s"
}
#pragma pop

/* 80321B6C-80321B78 31C4AC 000C+00 1/0 0/0 0/0 .text setZMode__16J3DPEBlockFogOffF8J3DZMode */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFogOff::setZMode(J3DZMode param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setZMode__16J3DPEBlockFogOffF8J3DZMode.s"
}
#pragma pop

/* 80321B78-80321B84 31C4B8 000C+00 1/0 0/0 0/0 .text setZMode__16J3DPEBlockFogOffFPC8J3DZMode */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFogOff::setZMode(J3DZMode const* param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setZMode__16J3DPEBlockFogOffFPC8J3DZMode.s"
}
#pragma pop

/* 80321B84-80321B8C 31C4C4 0008+00 1/0 0/0 0/0 .text            getZMode__16J3DPEBlockFogOffFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFogOff::getZMode() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getZMode__16J3DPEBlockFogOffFv.s"
}
#pragma pop

/* 80321B8C-80321B94 -00001 0008+00 0/0 0/0 0/0 .text            setZCompLoc__16J3DPEBlockFogOffFUc
 */
void J3DPEBlockFogOff::setZCompLoc(u8 param_0) {
    *(u8*)(((u8*)this) + 14) /* this->field_0xe */ = (u8)(param_0);
}

/* 80321B94-80321BA0 31C4D4 000C+00 1/0 0/0 0/0 .text setZCompLoc__16J3DPEBlockFogOffFPCUc */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFogOff::setZCompLoc(u8 const* param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setZCompLoc__16J3DPEBlockFogOffFPCUc.s"
}
#pragma pop

/* 80321BA0-80321BA8 31C4E0 0008+00 1/0 0/0 0/0 .text            getZCompLoc__16J3DPEBlockFogOffCFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFogOff::getZCompLoc() const {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getZCompLoc__16J3DPEBlockFogOffCFv.s"
}
#pragma pop

/* 80321BA8-80321BB0 -00001 0008+00 0/0 0/0 0/0 .text            setDither__16J3DPEBlockFogOffFUc */
void J3DPEBlockFogOff::setDither(u8 param_0) {
    *(u8*)(((u8*)this) + 15) /* this->field_0xf */ = (u8)(param_0);
}

/* 80321BB0-80321BBC 31C4F0 000C+00 1/0 0/0 0/0 .text            setDither__16J3DPEBlockFogOffFPCUc
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFogOff::setDither(u8 const* param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setDither__16J3DPEBlockFogOffFPCUc.s"
}
#pragma pop

/* 80321BBC-80321BC4 31C4FC 0008+00 1/0 0/0 0/0 .text            getDither__16J3DPEBlockFogOffCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFogOff::getDither() const {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getDither__16J3DPEBlockFogOffCFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 803CE06C-803CE0E8 02B18C 007C+00 1/1 1/1 0/0 .data            __vt__16J3DPEBlockFogOff */
SECTION_DATA extern void* __vt__16J3DPEBlockFogOff[31] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)reset__16J3DPEBlockFogOffFP10J3DPEBlock,
    (void*)load__16J3DPEBlockFogOffFv,
    (void*)patch__10J3DPEBlockFv,
    (void*)diff__16J3DPEBlockFogOffFUl,
    (void*)diffFog__10J3DPEBlockFv,
    (void*)diffBlend__16J3DPEBlockFogOffFv,
    (void*)countDLSize__16J3DPEBlockFogOffFv,
    (void*)getType__16J3DPEBlockFogOffFv,
    (void*)setFog__10J3DPEBlockF6J3DFog,
    (void*)setFog__10J3DPEBlockFP6J3DFog,
    (void*)getFog__10J3DPEBlockFv,
    (void*)setAlphaComp__16J3DPEBlockFogOffFPC12J3DAlphaComp,
    (void*)setAlphaComp__16J3DPEBlockFogOffFRC12J3DAlphaComp,
    (void*)getAlphaComp__16J3DPEBlockFogOffFv,
    (void*)setBlend__16J3DPEBlockFogOffFPC8J3DBlend,
    (void*)setBlend__16J3DPEBlockFogOffFRC8J3DBlend,
    (void*)getBlend__16J3DPEBlockFogOffFv,
    (void*)setZMode__16J3DPEBlockFogOffFPC8J3DZMode,
    (void*)setZMode__16J3DPEBlockFogOffF8J3DZMode,
    (void*)getZMode__16J3DPEBlockFogOffFv,
    (void*)setZCompLoc__16J3DPEBlockFogOffFPCUc,
    (void*)setZCompLoc__16J3DPEBlockFogOffFUc,
    (void*)getZCompLoc__16J3DPEBlockFogOffCFv,
    (void*)setDither__16J3DPEBlockFogOffFPCUc,
    (void*)setDither__16J3DPEBlockFogOffFUc,
    (void*)getDither__16J3DPEBlockFogOffCFv,
    (void*)getFogOffset__10J3DPEBlockCFv,
    (void*)setFogOffset__10J3DPEBlockFUl,
    (void*)__dt__16J3DPEBlockFogOffFv,
};

/* 80321BC4-80321C20 31C504 005C+00 1/0 0/0 0/0 .text            __dt__16J3DPEBlockFogOffFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DPEBlockFogOff::~J3DPEBlockFogOff() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/__dt__16J3DPEBlockFogOffFv.s"
}
#pragma pop

/* 80321C20-80321C44 31C560 0024+00 1/0 0/0 0/0 .text            indexToPtr__13J3DTevBlock16Fv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::indexToPtr() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/indexToPtr__13J3DTevBlock16Fv.s"
}
#pragma pop

/* 80321C44-80321C50 31C584 000C+00 1/0 0/0 0/0 .text            getType__13J3DTevBlock16Fv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::getType() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getType__13J3DTevBlock16Fv.s"
}
#pragma pop

/* 80321C50-80321C60 31C590 0010+00 1/0 0/0 0/0 .text            setTexNo__13J3DTevBlock16FUlUs */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::setTexNo(u32 param_0, u16 param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTexNo__13J3DTevBlock16FUlUs.s"
}
#pragma pop

/* 80321C60-80321C74 31C5A0 0014+00 1/0 0/0 0/0 .text            setTexNo__13J3DTevBlock16FUlPCUs */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::setTexNo(u32 param_0, u16 const* param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTexNo__13J3DTevBlock16FUlPCUs.s"
}
#pragma pop

/* 80321C74-80321C84 31C5B4 0010+00 1/0 0/0 0/0 .text            getTexNo__13J3DTevBlock16CFUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::getTexNo(u32 param_0) const {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTexNo__13J3DTevBlock16CFUl.s"
}
#pragma pop

/* 80321C84-80321C98 31C5C4 0014+00 1/0 0/0 0/0 .text setTevOrder__13J3DTevBlock16FUl11J3DTevOrder
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::setTevOrder(u32 param_0, J3DTevOrder param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevOrder__13J3DTevBlock16FUl11J3DTevOrder.s"
}
#pragma pop

/* 80321C98-80321CAC 31C5D8 0014+00 1/0 0/0 0/0 .text
 * setTevOrder__13J3DTevBlock16FUlPC11J3DTevOrder               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::setTevOrder(u32 param_0, J3DTevOrder const* param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevOrder__13J3DTevBlock16FUlPC11J3DTevOrder.s"
}
#pragma pop

/* 80321CAC-80321CC0 31C5EC 0014+00 1/0 0/0 0/0 .text            getTevOrder__13J3DTevBlock16FUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::getTevOrder(u32 param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTevOrder__13J3DTevBlock16FUl.s"
}
#pragma pop

/* 80321CC0-80321CEC 31C600 002C+00 1/0 0/0 0/0 .text
 * setTevColor__13J3DTevBlock16FUl13J3DGXColorS10               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::setTevColor(u32 param_0, J3DGXColorS10 param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevColor__13J3DTevBlock16FUl13J3DGXColorS10.s"
}
#pragma pop

/* 80321CEC-80321D18 31C62C 002C+00 1/0 0/0 0/0 .text
 * setTevColor__13J3DTevBlock16FUlPC13J3DGXColorS10             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::setTevColor(u32 param_0, J3DGXColorS10 const* param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevColor__13J3DTevBlock16FUlPC13J3DGXColorS10.s"
}
#pragma pop

/* 80321D18-80321D2C 31C658 0014+00 1/0 0/0 0/0 .text            getTevColor__13J3DTevBlock16FUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::getTevColor(u32 param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTevColor__13J3DTevBlock16FUl.s"
}
#pragma pop

/* 80321D2C-80321D58 31C66C 002C+00 1/0 0/0 0/0 .text setTevKColor__13J3DTevBlock16FUl10J3DGXColor
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::setTevKColor(u32 param_0, J3DGXColor param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevKColor__13J3DTevBlock16FUl10J3DGXColor.s"
}
#pragma pop

/* 80321D58-80321D84 31C698 002C+00 1/0 0/0 0/0 .text
 * setTevKColor__13J3DTevBlock16FUlPC10J3DGXColor               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::setTevKColor(u32 param_0, J3DGXColor const* param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevKColor__13J3DTevBlock16FUlPC10J3DGXColor.s"
}
#pragma pop

/* 80321D84-80321D98 31C6C4 0014+00 1/0 0/0 0/0 .text            getTevKColor__13J3DTevBlock16FUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::getTevKColor(u32 param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTevKColor__13J3DTevBlock16FUl.s"
}
#pragma pop

/* 80321D98-80321DA4 31C6D8 000C+00 1/0 0/0 0/0 .text setTevKColorSel__13J3DTevBlock16FUlUc */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::setTevKColorSel(u32 param_0, u8 param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevKColorSel__13J3DTevBlock16FUlUc.s"
}
#pragma pop

/* 80321DA4-80321DB4 31C6E4 0010+00 1/0 0/0 0/0 .text setTevKColorSel__13J3DTevBlock16FUlPCUc */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::setTevKColorSel(u32 param_0, u8 const* param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevKColorSel__13J3DTevBlock16FUlPCUc.s"
}
#pragma pop

/* 80321DB4-80321DC0 31C6F4 000C+00 1/0 0/0 0/0 .text            getTevKColorSel__13J3DTevBlock16FUl
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::getTevKColorSel(u32 param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTevKColorSel__13J3DTevBlock16FUl.s"
}
#pragma pop

/* 80321DC0-80321DCC 31C700 000C+00 1/0 0/0 0/0 .text setTevKAlphaSel__13J3DTevBlock16FUlUc */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::setTevKAlphaSel(u32 param_0, u8 param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevKAlphaSel__13J3DTevBlock16FUlUc.s"
}
#pragma pop

/* 80321DCC-80321DDC 31C70C 0010+00 1/0 0/0 0/0 .text setTevKAlphaSel__13J3DTevBlock16FUlPCUc */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::setTevKAlphaSel(u32 param_0, u8 const* param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevKAlphaSel__13J3DTevBlock16FUlPCUc.s"
}
#pragma pop

/* 80321DDC-80321DE8 31C71C 000C+00 1/0 0/0 0/0 .text            getTevKAlphaSel__13J3DTevBlock16FUl
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::getTevKAlphaSel(u32 param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTevKAlphaSel__13J3DTevBlock16FUl.s"
}
#pragma pop

/* 80321DE8-80321DF0 -00001 0008+00 0/0 0/0 0/0 .text            setTevStageNum__13J3DTevBlock16FUc
 */
void J3DTevBlock16::setTevStageNum(u8 param_0) {
    *(u8*)(((u8*)this) + 88) /* this->field_0x58 */ = (u8)(param_0);
}

/* 80321DF0-80321DFC 31C730 000C+00 1/0 0/0 0/0 .text setTevStageNum__13J3DTevBlock16FPCUc */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::setTevStageNum(u8 const* param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevStageNum__13J3DTevBlock16FPCUc.s"
}
#pragma pop

/* 80321DFC-80321E04 31C73C 0008+00 1/0 0/0 0/0 .text            getTevStageNum__13J3DTevBlock16CFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::getTevStageNum() const {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTevStageNum__13J3DTevBlock16CFv.s"
}
#pragma pop

/* 80321E04-80321E40 31C744 003C+00 1/0 0/0 0/0 .text setTevStage__13J3DTevBlock16FUl11J3DTevStage
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::setTevStage(u32 param_0, J3DTevStage param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevStage__13J3DTevBlock16FUl11J3DTevStage.s"
}
#pragma pop

/* 80321E40-80321E7C 31C780 003C+00 1/0 0/0 0/0 .text
 * setTevStage__13J3DTevBlock16FUlPC11J3DTevStage               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::setTevStage(u32 param_0, J3DTevStage const* param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevStage__13J3DTevBlock16FUlPC11J3DTevStage.s"
}
#pragma pop

/* 80321E7C-80321E90 31C7BC 0014+00 1/0 0/0 0/0 .text            getTevStage__13J3DTevBlock16FUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::getTevStage(u32 param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTevStage__13J3DTevBlock16FUl.s"
}
#pragma pop

/* 80321E90-80321EC8 31C7D0 0038+00 1/0 0/0 0/0 .text
 * setTevSwapModeInfo__13J3DTevBlock16FUl18J3DTevSwapModeInfo   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::setTevSwapModeInfo(u32 param_0, J3DTevSwapModeInfo param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevSwapModeInfo__13J3DTevBlock16FUl18J3DTevSwapModeInfo.s"
}
#pragma pop

/* 80321EC8-80321F00 31C808 0038+00 1/0 0/0 0/0 .text
 * setTevSwapModeInfo__13J3DTevBlock16FUlPC18J3DTevSwapModeInfo */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::setTevSwapModeInfo(u32 param_0, J3DTevSwapModeInfo const* param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevSwapModeInfo__13J3DTevBlock16FUlPC18J3DTevSwapModeInfo.s"
}
#pragma pop

/* 80321F00-80321F10 31C840 0010+00 1/0 0/0 0/0 .text
 * setTevSwapModeTable__13J3DTevBlock16FUl19J3DTevSwapModeTable */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::setTevSwapModeTable(u32 param_0, J3DTevSwapModeTable param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevSwapModeTable__13J3DTevBlock16FUl19J3DTevSwapModeTable.s"
}
#pragma pop

/* 80321F10-80321F20 31C850 0010+00 1/0 0/0 0/0 .text
 * setTevSwapModeTable__13J3DTevBlock16FUlPC19J3DTevSwapModeTable */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::setTevSwapModeTable(u32 param_0, J3DTevSwapModeTable const* param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevSwapModeTable__13J3DTevBlock16FUlPC19J3DTevSwapModeTable.s"
}
#pragma pop

/* 80321F20-80321F30 31C860 0010+00 1/0 0/0 0/0 .text getTevSwapModeTable__13J3DTevBlock16FUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::getTevSwapModeTable(u32 param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTevSwapModeTable__13J3DTevBlock16FUl.s"
}
#pragma pop

/* 80321F30-80321F44 31C870 0014+00 1/0 0/0 0/0 .text
 * setIndTevStage__13J3DTevBlock16FUl14J3DIndTevStage           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::setIndTevStage(u32 param_0, J3DIndTevStage param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setIndTevStage__13J3DTevBlock16FUl14J3DIndTevStage.s"
}
#pragma pop

/* 80321F44-80321F58 31C884 0014+00 1/0 0/0 0/0 .text
 * setIndTevStage__13J3DTevBlock16FUlPC14J3DIndTevStage         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::setIndTevStage(u32 param_0, J3DIndTevStage const* param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setIndTevStage__13J3DTevBlock16FUlPC14J3DIndTevStage.s"
}
#pragma pop

/* 80321F58-80321F6C 31C898 0014+00 1/0 0/0 0/0 .text            getIndTevStage__13J3DTevBlock16FUl
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::getIndTevStage(u32 param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getIndTevStage__13J3DTevBlock16FUl.s"
}
#pragma pop

/* 80321F6C-80321F74 31C8AC 0008+00 1/0 0/0 0/0 .text            getTexNoOffset__13J3DTevBlock16CFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::getTexNoOffset() const {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTexNoOffset__13J3DTevBlock16CFv.s"
}
#pragma pop

/* 80321F74-80321F7C 31C8B4 0008+00 1/0 0/0 0/0 .text            getTevRegOffset__13J3DTevBlock16CFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::getTevRegOffset() const {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTevRegOffset__13J3DTevBlock16CFv.s"
}
#pragma pop

/* 80321F7C-80321F84 -00001 0008+00 0/0 0/0 0/0 .text            setTevRegOffset__13J3DTevBlock16FUl
 */
void J3DTevBlock16::setTevRegOffset(u32 param_0) {
    *(u32*)(((u8*)this) + 368) /* this->field_0x170 */ = (u32)(param_0);
}

/* ############################################################################################## */
/* 803CE0E8-803CE1C4 02B208 00DC+00 1/1 1/1 0/0 .data            __vt__13J3DTevBlock16 */
SECTION_DATA extern void* __vt__13J3DTevBlock16[55] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)reset__13J3DTevBlock16FP11J3DTevBlock,
    (void*)load__13J3DTevBlock16Fv,
    (void*)diff__11J3DTevBlockFUl,
    (void*)diffTexNo__13J3DTevBlock16Fv,
    (void*)diffTevReg__13J3DTevBlock16Fv,
    (void*)diffTexCoordScale__13J3DTevBlock16Fv,
    (void*)diffTevStage__13J3DTevBlock16Fv,
    (void*)diffTevStageIndirect__13J3DTevBlock16Fv,
    (void*)patch__13J3DTevBlock16Fv,
    (void*)patchTexNo__13J3DTevBlock16Fv,
    (void*)patchTevReg__13J3DTevBlock16Fv,
    (void*)patchTexNoAndTexCoordScale__13J3DTevBlock16Fv,
    (void*)ptrToIndex__13J3DTevBlock16Fv,
    (void*)indexToPtr__13J3DTevBlock16Fv,
    (void*)getType__13J3DTevBlock16Fv,
    (void*)countDLSize__13J3DTevBlock16Fv,
    (void*)setTexNo__13J3DTevBlock16FUlPCUs,
    (void*)setTexNo__13J3DTevBlock16FUlUs,
    (void*)getTexNo__13J3DTevBlock16CFUl,
    (void*)setTevOrder__13J3DTevBlock16FUlPC11J3DTevOrder,
    (void*)setTevOrder__13J3DTevBlock16FUl11J3DTevOrder,
    (void*)getTevOrder__13J3DTevBlock16FUl,
    (void*)setTevColor__13J3DTevBlock16FUlPC13J3DGXColorS10,
    (void*)setTevColor__13J3DTevBlock16FUl13J3DGXColorS10,
    (void*)getTevColor__13J3DTevBlock16FUl,
    (void*)setTevKColor__13J3DTevBlock16FUlPC10J3DGXColor,
    (void*)setTevKColor__13J3DTevBlock16FUl10J3DGXColor,
    (void*)getTevKColor__13J3DTevBlock16FUl,
    (void*)setTevKColorSel__13J3DTevBlock16FUlPCUc,
    (void*)setTevKColorSel__13J3DTevBlock16FUlUc,
    (void*)getTevKColorSel__13J3DTevBlock16FUl,
    (void*)setTevKAlphaSel__13J3DTevBlock16FUlPCUc,
    (void*)setTevKAlphaSel__13J3DTevBlock16FUlUc,
    (void*)getTevKAlphaSel__13J3DTevBlock16FUl,
    (void*)setTevStageNum__13J3DTevBlock16FPCUc,
    (void*)setTevStageNum__13J3DTevBlock16FUc,
    (void*)getTevStageNum__13J3DTevBlock16CFv,
    (void*)setTevStage__13J3DTevBlock16FUlPC11J3DTevStage,
    (void*)setTevStage__13J3DTevBlock16FUl11J3DTevStage,
    (void*)getTevStage__13J3DTevBlock16FUl,
    (void*)setTevSwapModeInfo__13J3DTevBlock16FUlPC18J3DTevSwapModeInfo,
    (void*)setTevSwapModeInfo__13J3DTevBlock16FUl18J3DTevSwapModeInfo,
    (void*)setTevSwapModeTable__13J3DTevBlock16FUlPC19J3DTevSwapModeTable,
    (void*)setTevSwapModeTable__13J3DTevBlock16FUl19J3DTevSwapModeTable,
    (void*)getTevSwapModeTable__13J3DTevBlock16FUl,
    (void*)setIndTevStage__13J3DTevBlock16FUlPC14J3DIndTevStage,
    (void*)setIndTevStage__13J3DTevBlock16FUl14J3DIndTevStage,
    (void*)getIndTevStage__13J3DTevBlock16FUl,
    (void*)getTexNoOffset__13J3DTevBlock16CFv,
    (void*)getTevRegOffset__13J3DTevBlock16CFv,
    (void*)setTexNoOffset__11J3DTevBlockFUl,
    (void*)setTevRegOffset__13J3DTevBlock16FUl,
    (void*)__dt__13J3DTevBlock16Fv,
};

/* 803CE1C4-803CE2A0 02B2E4 00DC+00 1/1 1/1 0/0 .data            __vt__12J3DTevBlock4 */
SECTION_DATA extern void* __vt__12J3DTevBlock4[55] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)reset__12J3DTevBlock4FP11J3DTevBlock,
    (void*)load__12J3DTevBlock4Fv,
    (void*)diff__11J3DTevBlockFUl,
    (void*)diffTexNo__12J3DTevBlock4Fv,
    (void*)diffTevReg__12J3DTevBlock4Fv,
    (void*)diffTexCoordScale__12J3DTevBlock4Fv,
    (void*)diffTevStage__12J3DTevBlock4Fv,
    (void*)diffTevStageIndirect__12J3DTevBlock4Fv,
    (void*)patch__12J3DTevBlock4Fv,
    (void*)patchTexNo__12J3DTevBlock4Fv,
    (void*)patchTevReg__12J3DTevBlock4Fv,
    (void*)patchTexNoAndTexCoordScale__12J3DTevBlock4Fv,
    (void*)ptrToIndex__12J3DTevBlock4Fv,
    (void*)indexToPtr__12J3DTevBlock4Fv,
    (void*)getType__12J3DTevBlock4Fv,
    (void*)countDLSize__12J3DTevBlock4Fv,
    (void*)setTexNo__12J3DTevBlock4FUlPCUs,
    (void*)setTexNo__12J3DTevBlock4FUlUs,
    (void*)getTexNo__12J3DTevBlock4CFUl,
    (void*)setTevOrder__12J3DTevBlock4FUlPC11J3DTevOrder,
    (void*)setTevOrder__12J3DTevBlock4FUl11J3DTevOrder,
    (void*)getTevOrder__12J3DTevBlock4FUl,
    (void*)setTevColor__12J3DTevBlock4FUlPC13J3DGXColorS10,
    (void*)setTevColor__12J3DTevBlock4FUl13J3DGXColorS10,
    (void*)getTevColor__12J3DTevBlock4FUl,
    (void*)setTevKColor__12J3DTevBlock4FUlPC10J3DGXColor,
    (void*)setTevKColor__12J3DTevBlock4FUl10J3DGXColor,
    (void*)getTevKColor__12J3DTevBlock4FUl,
    (void*)setTevKColorSel__12J3DTevBlock4FUlPCUc,
    (void*)setTevKColorSel__12J3DTevBlock4FUlUc,
    (void*)getTevKColorSel__12J3DTevBlock4FUl,
    (void*)setTevKAlphaSel__12J3DTevBlock4FUlPCUc,
    (void*)setTevKAlphaSel__12J3DTevBlock4FUlUc,
    (void*)getTevKAlphaSel__12J3DTevBlock4FUl,
    (void*)setTevStageNum__12J3DTevBlock4FPCUc,
    (void*)setTevStageNum__12J3DTevBlock4FUc,
    (void*)getTevStageNum__12J3DTevBlock4CFv,
    (void*)setTevStage__12J3DTevBlock4FUlPC11J3DTevStage,
    (void*)setTevStage__12J3DTevBlock4FUl11J3DTevStage,
    (void*)getTevStage__12J3DTevBlock4FUl,
    (void*)setTevSwapModeInfo__12J3DTevBlock4FUlPC18J3DTevSwapModeInfo,
    (void*)setTevSwapModeInfo__12J3DTevBlock4FUl18J3DTevSwapModeInfo,
    (void*)setTevSwapModeTable__12J3DTevBlock4FUlPC19J3DTevSwapModeTable,
    (void*)setTevSwapModeTable__12J3DTevBlock4FUl19J3DTevSwapModeTable,
    (void*)getTevSwapModeTable__12J3DTevBlock4FUl,
    (void*)setIndTevStage__12J3DTevBlock4FUlPC14J3DIndTevStage,
    (void*)setIndTevStage__12J3DTevBlock4FUl14J3DIndTevStage,
    (void*)getIndTevStage__12J3DTevBlock4FUl,
    (void*)getTexNoOffset__12J3DTevBlock4CFv,
    (void*)getTevRegOffset__12J3DTevBlock4CFv,
    (void*)setTexNoOffset__11J3DTevBlockFUl,
    (void*)setTevRegOffset__12J3DTevBlock4FUl,
    (void*)__dt__12J3DTevBlock4Fv,
};

/* 803CE2A0-803CE37C 02B3C0 00DC+00 1/1 1/1 0/0 .data            __vt__12J3DTevBlock2 */
SECTION_DATA extern void* __vt__12J3DTevBlock2[55] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)reset__12J3DTevBlock2FP11J3DTevBlock,
    (void*)load__12J3DTevBlock2Fv,
    (void*)diff__11J3DTevBlockFUl,
    (void*)diffTexNo__12J3DTevBlock2Fv,
    (void*)diffTevReg__12J3DTevBlock2Fv,
    (void*)diffTexCoordScale__12J3DTevBlock2Fv,
    (void*)diffTevStage__12J3DTevBlock2Fv,
    (void*)diffTevStageIndirect__12J3DTevBlock2Fv,
    (void*)patch__12J3DTevBlock2Fv,
    (void*)patchTexNo__12J3DTevBlock2Fv,
    (void*)patchTevReg__12J3DTevBlock2Fv,
    (void*)patchTexNoAndTexCoordScale__12J3DTevBlock2Fv,
    (void*)ptrToIndex__12J3DTevBlock2Fv,
    (void*)indexToPtr__12J3DTevBlock2Fv,
    (void*)getType__12J3DTevBlock2Fv,
    (void*)countDLSize__12J3DTevBlock2Fv,
    (void*)setTexNo__12J3DTevBlock2FUlPCUs,
    (void*)setTexNo__12J3DTevBlock2FUlUs,
    (void*)getTexNo__12J3DTevBlock2CFUl,
    (void*)setTevOrder__12J3DTevBlock2FUlPC11J3DTevOrder,
    (void*)setTevOrder__12J3DTevBlock2FUl11J3DTevOrder,
    (void*)getTevOrder__12J3DTevBlock2FUl,
    (void*)setTevColor__12J3DTevBlock2FUlPC13J3DGXColorS10,
    (void*)setTevColor__12J3DTevBlock2FUl13J3DGXColorS10,
    (void*)getTevColor__12J3DTevBlock2FUl,
    (void*)setTevKColor__12J3DTevBlock2FUlPC10J3DGXColor,
    (void*)setTevKColor__12J3DTevBlock2FUl10J3DGXColor,
    (void*)getTevKColor__12J3DTevBlock2FUl,
    (void*)setTevKColorSel__12J3DTevBlock2FUlPCUc,
    (void*)setTevKColorSel__12J3DTevBlock2FUlUc,
    (void*)getTevKColorSel__12J3DTevBlock2FUl,
    (void*)setTevKAlphaSel__12J3DTevBlock2FUlPCUc,
    (void*)setTevKAlphaSel__12J3DTevBlock2FUlUc,
    (void*)getTevKAlphaSel__12J3DTevBlock2FUl,
    (void*)setTevStageNum__12J3DTevBlock2FPCUc,
    (void*)setTevStageNum__12J3DTevBlock2FUc,
    (void*)getTevStageNum__12J3DTevBlock2CFv,
    (void*)setTevStage__12J3DTevBlock2FUlPC11J3DTevStage,
    (void*)setTevStage__12J3DTevBlock2FUl11J3DTevStage,
    (void*)getTevStage__12J3DTevBlock2FUl,
    (void*)setTevSwapModeInfo__12J3DTevBlock2FUlPC18J3DTevSwapModeInfo,
    (void*)setTevSwapModeInfo__12J3DTevBlock2FUl18J3DTevSwapModeInfo,
    (void*)setTevSwapModeTable__12J3DTevBlock2FUlPC19J3DTevSwapModeTable,
    (void*)setTevSwapModeTable__12J3DTevBlock2FUl19J3DTevSwapModeTable,
    (void*)getTevSwapModeTable__12J3DTevBlock2FUl,
    (void*)setIndTevStage__12J3DTevBlock2FUlPC14J3DIndTevStage,
    (void*)setIndTevStage__12J3DTevBlock2FUl14J3DIndTevStage,
    (void*)getIndTevStage__12J3DTevBlock2FUl,
    (void*)getTexNoOffset__12J3DTevBlock2CFv,
    (void*)getTevRegOffset__12J3DTevBlock2CFv,
    (void*)setTexNoOffset__11J3DTevBlockFUl,
    (void*)setTevRegOffset__12J3DTevBlock2FUl,
    (void*)__dt__12J3DTevBlock2Fv,
};

/* 803CE37C-803CE458 02B49C 00DC+00 1/1 1/1 0/0 .data            __vt__12J3DTevBlock1 */
SECTION_DATA extern void* __vt__12J3DTevBlock1[55] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)reset__12J3DTevBlock1FP11J3DTevBlock,
    (void*)load__12J3DTevBlock1Fv,
    (void*)diff__11J3DTevBlockFUl,
    (void*)diffTexNo__12J3DTevBlock1Fv,
    (void*)diffTevReg__12J3DTevBlock1Fv,
    (void*)diffTexCoordScale__12J3DTevBlock1Fv,
    (void*)diffTevStage__12J3DTevBlock1Fv,
    (void*)diffTevStageIndirect__12J3DTevBlock1Fv,
    (void*)patch__12J3DTevBlock1Fv,
    (void*)patchTexNo__12J3DTevBlock1Fv,
    (void*)patchTevReg__12J3DTevBlock1Fv,
    (void*)patchTexNoAndTexCoordScale__12J3DTevBlock1Fv,
    (void*)ptrToIndex__12J3DTevBlock1Fv,
    (void*)indexToPtr__12J3DTevBlock1Fv,
    (void*)getType__12J3DTevBlock1Fv,
    (void*)countDLSize__12J3DTevBlock1Fv,
    (void*)setTexNo__12J3DTevBlock1FUlPCUs,
    (void*)setTexNo__12J3DTevBlock1FUlUs,
    (void*)getTexNo__12J3DTevBlock1CFUl,
    (void*)setTevOrder__12J3DTevBlock1FUlPC11J3DTevOrder,
    (void*)setTevOrder__12J3DTevBlock1FUl11J3DTevOrder,
    (void*)getTevOrder__12J3DTevBlock1FUl,
    (void*)setTevColor__11J3DTevBlockFUlPC13J3DGXColorS10,
    (void*)setTevColor__11J3DTevBlockFUl13J3DGXColorS10,
    (void*)getTevColor__11J3DTevBlockFUl,
    (void*)setTevKColor__11J3DTevBlockFUlPC10J3DGXColor,
    (void*)setTevKColor__11J3DTevBlockFUl10J3DGXColor,
    (void*)getTevKColor__11J3DTevBlockFUl,
    (void*)setTevKColorSel__11J3DTevBlockFUlPCUc,
    (void*)setTevKColorSel__11J3DTevBlockFUlUc,
    (void*)getTevKColorSel__11J3DTevBlockFUl,
    (void*)setTevKAlphaSel__11J3DTevBlockFUlPCUc,
    (void*)setTevKAlphaSel__11J3DTevBlockFUlUc,
    (void*)getTevKAlphaSel__11J3DTevBlockFUl,
    (void*)setTevStageNum__12J3DTevBlock1FPCUc,
    (void*)setTevStageNum__12J3DTevBlock1FUc,
    (void*)getTevStageNum__12J3DTevBlock1CFv,
    (void*)setTevStage__12J3DTevBlock1FUlPC11J3DTevStage,
    (void*)setTevStage__12J3DTevBlock1FUl11J3DTevStage,
    (void*)getTevStage__12J3DTevBlock1FUl,
    (void*)setTevSwapModeInfo__11J3DTevBlockFUlPC18J3DTevSwapModeInfo,
    (void*)setTevSwapModeInfo__11J3DTevBlockFUl18J3DTevSwapModeInfo,
    (void*)setTevSwapModeTable__11J3DTevBlockFUlPC19J3DTevSwapModeTable,
    (void*)setTevSwapModeTable__11J3DTevBlockFUl19J3DTevSwapModeTable,
    (void*)getTevSwapModeTable__11J3DTevBlockFUl,
    (void*)setIndTevStage__12J3DTevBlock1FUlPC14J3DIndTevStage,
    (void*)setIndTevStage__12J3DTevBlock1FUl14J3DIndTevStage,
    (void*)getIndTevStage__12J3DTevBlock1FUl,
    (void*)getTexNoOffset__12J3DTevBlock1CFv,
    (void*)getTevRegOffset__11J3DTevBlockCFv,
    (void*)setTexNoOffset__11J3DTevBlockFUl,
    (void*)setTevRegOffset__11J3DTevBlockFUl,
    (void*)__dt__12J3DTevBlock1Fv,
};

/* 803CE458-803CE534 02B578 00DC+00 1/1 1/1 0/0 .data            __vt__18J3DTevBlockPatched */
SECTION_DATA extern void* __vt__18J3DTevBlockPatched[55] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)reset__18J3DTevBlockPatchedFP11J3DTevBlock,
    (void*)load__18J3DTevBlockPatchedFv,
    (void*)diff__11J3DTevBlockFUl,
    (void*)diffTexNo__18J3DTevBlockPatchedFv,
    (void*)diffTevReg__18J3DTevBlockPatchedFv,
    (void*)diffTexCoordScale__18J3DTevBlockPatchedFv,
    (void*)diffTevStage__18J3DTevBlockPatchedFv,
    (void*)diffTevStageIndirect__18J3DTevBlockPatchedFv,
    (void*)patch__18J3DTevBlockPatchedFv,
    (void*)patchTexNo__18J3DTevBlockPatchedFv,
    (void*)patchTevReg__18J3DTevBlockPatchedFv,
    (void*)patchTexNoAndTexCoordScale__18J3DTevBlockPatchedFv,
    (void*)ptrToIndex__18J3DTevBlockPatchedFv,
    (void*)indexToPtr__18J3DTevBlockPatchedFv,
    (void*)getType__18J3DTevBlockPatchedFv,
    (void*)countDLSize__18J3DTevBlockPatchedFv,
    (void*)setTexNo__18J3DTevBlockPatchedFUlPCUs,
    (void*)setTexNo__18J3DTevBlockPatchedFUlUs,
    (void*)getTexNo__18J3DTevBlockPatchedCFUl,
    (void*)setTevOrder__18J3DTevBlockPatchedFUlPC11J3DTevOrder,
    (void*)setTevOrder__18J3DTevBlockPatchedFUl11J3DTevOrder,
    (void*)getTevOrder__18J3DTevBlockPatchedFUl,
    (void*)setTevColor__18J3DTevBlockPatchedFUlPC13J3DGXColorS10,
    (void*)setTevColor__18J3DTevBlockPatchedFUl13J3DGXColorS10,
    (void*)getTevColor__18J3DTevBlockPatchedFUl,
    (void*)setTevKColor__18J3DTevBlockPatchedFUlPC10J3DGXColor,
    (void*)setTevKColor__18J3DTevBlockPatchedFUl10J3DGXColor,
    (void*)getTevKColor__18J3DTevBlockPatchedFUl,
    (void*)setTevKColorSel__18J3DTevBlockPatchedFUlPCUc,
    (void*)setTevKColorSel__18J3DTevBlockPatchedFUlUc,
    (void*)getTevKColorSel__18J3DTevBlockPatchedFUl,
    (void*)setTevKAlphaSel__11J3DTevBlockFUlPCUc,
    (void*)setTevKAlphaSel__11J3DTevBlockFUlUc,
    (void*)getTevKAlphaSel__11J3DTevBlockFUl,
    (void*)setTevStageNum__18J3DTevBlockPatchedFPCUc,
    (void*)setTevStageNum__18J3DTevBlockPatchedFUc,
    (void*)getTevStageNum__18J3DTevBlockPatchedCFv,
    (void*)setTevStage__18J3DTevBlockPatchedFUlPC11J3DTevStage,
    (void*)setTevStage__18J3DTevBlockPatchedFUl11J3DTevStage,
    (void*)getTevStage__18J3DTevBlockPatchedFUl,
    (void*)setTevSwapModeInfo__11J3DTevBlockFUlPC18J3DTevSwapModeInfo,
    (void*)setTevSwapModeInfo__11J3DTevBlockFUl18J3DTevSwapModeInfo,
    (void*)setTevSwapModeTable__11J3DTevBlockFUlPC19J3DTevSwapModeTable,
    (void*)setTevSwapModeTable__11J3DTevBlockFUl19J3DTevSwapModeTable,
    (void*)getTevSwapModeTable__11J3DTevBlockFUl,
    (void*)setIndTevStage__18J3DTevBlockPatchedFUlPC14J3DIndTevStage,
    (void*)setIndTevStage__18J3DTevBlockPatchedFUl14J3DIndTevStage,
    (void*)getIndTevStage__18J3DTevBlockPatchedFUl,
    (void*)getTexNoOffset__18J3DTevBlockPatchedCFv,
    (void*)getTevRegOffset__18J3DTevBlockPatchedCFv,
    (void*)setTexNoOffset__11J3DTevBlockFUl,
    (void*)setTevRegOffset__18J3DTevBlockPatchedFUl,
    (void*)__dt__18J3DTevBlockPatchedFv,
};

/* 803CE534-803CE5A0 02B654 006C+00 1/1 1/1 0/0 .data            __vt__19J3DTexGenBlockBasic */
SECTION_DATA extern void* __vt__19J3DTexGenBlockBasic[27] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)reset__19J3DTexGenBlockBasicFP14J3DTexGenBlock,
    (void*)calc__21J3DTexGenBlockPatchedFPA4_Cf,
    (void*)calcWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf,
    (void*)calcPostTexMtx__21J3DTexGenBlockPatchedFPA4_Cf,
    (void*)calcPostTexMtxWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf,
    (void*)load__19J3DTexGenBlockBasicFv,
    (void*)patch__19J3DTexGenBlockBasicFv,
    (void*)diff__21J3DTexGenBlockPatchedFUl,
    (void*)diffTexMtx__21J3DTexGenBlockPatchedFv,
    (void*)diffTexGen__21J3DTexGenBlockPatchedFv,
    (void*)countDLSize__19J3DTexGenBlockBasicFv,
    (void*)getType__19J3DTexGenBlockBasicFv,
    (void*)setTexGenNum__21J3DTexGenBlockPatchedFPCUl,
    (void*)setTexGenNum__21J3DTexGenBlockPatchedFUl,
    (void*)getTexGenNum__21J3DTexGenBlockPatchedCFv,
    (void*)setTexCoord__21J3DTexGenBlockPatchedFUlPC11J3DTexCoord,
    (void*)getTexCoord__21J3DTexGenBlockPatchedFUl,
    (void*)setTexMtx__21J3DTexGenBlockPatchedFUlP9J3DTexMtx,
    (void*)getTexMtx__21J3DTexGenBlockPatchedFUl,
    (void*)setNBTScale__19J3DTexGenBlockBasicFPC11J3DNBTScale,
    (void*)setNBTScale__19J3DTexGenBlockBasicF11J3DNBTScale,
    (void*)getNBTScale__19J3DTexGenBlockBasicFv,
    (void*)getTexMtxOffset__21J3DTexGenBlockPatchedCFv,
    (void*)setTexMtxOffset__21J3DTexGenBlockPatchedFUl,
    (void*)__dt__19J3DTexGenBlockBasicFv,
};

/* 803CE5A0-803CE60C 02B6C0 006C+00 1/1 1/1 0/0 .data            __vt__15J3DTexGenBlock4 */
SECTION_DATA extern void* __vt__15J3DTexGenBlock4[27] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)reset__15J3DTexGenBlock4FP14J3DTexGenBlock,
    (void*)calc__21J3DTexGenBlockPatchedFPA4_Cf,
    (void*)calcWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf,
    (void*)calcPostTexMtx__21J3DTexGenBlockPatchedFPA4_Cf,
    (void*)calcPostTexMtxWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf,
    (void*)load__15J3DTexGenBlock4Fv,
    (void*)patch__15J3DTexGenBlock4Fv,
    (void*)diff__21J3DTexGenBlockPatchedFUl,
    (void*)diffTexMtx__21J3DTexGenBlockPatchedFv,
    (void*)diffTexGen__21J3DTexGenBlockPatchedFv,
    (void*)countDLSize__15J3DTexGenBlock4Fv,
    (void*)getType__15J3DTexGenBlock4Fv,
    (void*)setTexGenNum__21J3DTexGenBlockPatchedFPCUl,
    (void*)setTexGenNum__21J3DTexGenBlockPatchedFUl,
    (void*)getTexGenNum__21J3DTexGenBlockPatchedCFv,
    (void*)setTexCoord__21J3DTexGenBlockPatchedFUlPC11J3DTexCoord,
    (void*)getTexCoord__21J3DTexGenBlockPatchedFUl,
    (void*)setTexMtx__21J3DTexGenBlockPatchedFUlP9J3DTexMtx,
    (void*)getTexMtx__21J3DTexGenBlockPatchedFUl,
    (void*)setNBTScale__15J3DTexGenBlock4FPC11J3DNBTScale,
    (void*)setNBTScale__15J3DTexGenBlock4F11J3DNBTScale,
    (void*)getNBTScale__15J3DTexGenBlock4Fv,
    (void*)getTexMtxOffset__21J3DTexGenBlockPatchedCFv,
    (void*)setTexMtxOffset__21J3DTexGenBlockPatchedFUl,
    (void*)__dt__15J3DTexGenBlock4Fv,
};

/* 803CE60C-803CE678 02B72C 006C+00 2/2 3/3 0/0 .data            __vt__21J3DTexGenBlockPatched */
SECTION_DATA extern void* __vt__21J3DTexGenBlockPatched[27] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)reset__21J3DTexGenBlockPatchedFP14J3DTexGenBlock,
    (void*)calc__21J3DTexGenBlockPatchedFPA4_Cf,
    (void*)calcWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf,
    (void*)calcPostTexMtx__21J3DTexGenBlockPatchedFPA4_Cf,
    (void*)calcPostTexMtxWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf,
    (void*)load__21J3DTexGenBlockPatchedFv,
    (void*)patch__21J3DTexGenBlockPatchedFv,
    (void*)diff__21J3DTexGenBlockPatchedFUl,
    (void*)diffTexMtx__21J3DTexGenBlockPatchedFv,
    (void*)diffTexGen__21J3DTexGenBlockPatchedFv,
    (void*)countDLSize__21J3DTexGenBlockPatchedFv,
    (void*)getType__21J3DTexGenBlockPatchedFv,
    (void*)setTexGenNum__21J3DTexGenBlockPatchedFPCUl,
    (void*)setTexGenNum__21J3DTexGenBlockPatchedFUl,
    (void*)getTexGenNum__21J3DTexGenBlockPatchedCFv,
    (void*)setTexCoord__21J3DTexGenBlockPatchedFUlPC11J3DTexCoord,
    (void*)getTexCoord__21J3DTexGenBlockPatchedFUl,
    (void*)setTexMtx__21J3DTexGenBlockPatchedFUlP9J3DTexMtx,
    (void*)getTexMtx__21J3DTexGenBlockPatchedFUl,
    (void*)setNBTScale__14J3DTexGenBlockFPC11J3DNBTScale,
    (void*)setNBTScale__14J3DTexGenBlockF11J3DNBTScale,
    (void*)getNBTScale__14J3DTexGenBlockFv,
    (void*)getTexMtxOffset__21J3DTexGenBlockPatchedCFv,
    (void*)setTexMtxOffset__21J3DTexGenBlockPatchedFUl,
    (void*)__dt__21J3DTexGenBlockPatchedFv,
};

/* 803CE678-803CE708 02B798 0090+00 1/1 1/1 0/0 .data            __vt__20J3DColorBlockLightOn */
SECTION_DATA extern void* __vt__20J3DColorBlockLightOn[36] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)load__20J3DColorBlockLightOnFv,
    (void*)reset__20J3DColorBlockLightOnFP13J3DColorBlock,
    (void*)patch__20J3DColorBlockLightOnFv,
    (void*)patchMatColor__20J3DColorBlockLightOnFv,
    (void*)patchLight__20J3DColorBlockLightOnFv,
    (void*)diff__20J3DColorBlockLightOnFUl,
    (void*)diffAmbColor__20J3DColorBlockLightOnFv,
    (void*)diffMatColor__20J3DColorBlockLightOnFv,
    (void*)diffColorChan__20J3DColorBlockLightOnFv,
    (void*)diffLightObj__20J3DColorBlockLightOnFUl,
    (void*)countDLSize__20J3DColorBlockLightOnFv,
    (void*)getType__20J3DColorBlockLightOnFv,
    (void*)setMatColor__20J3DColorBlockLightOnFUlPC10J3DGXColor,
    (void*)setMatColor__20J3DColorBlockLightOnFUl10J3DGXColor,
    (void*)getMatColor__20J3DColorBlockLightOnFUl,
    (void*)setAmbColor__20J3DColorBlockLightOnFUlPC10J3DGXColor,
    (void*)setAmbColor__20J3DColorBlockLightOnFUl10J3DGXColor,
    (void*)getAmbColor__20J3DColorBlockLightOnFUl,
    (void*)setColorChanNum__20J3DColorBlockLightOnFUc,
    (void*)setColorChanNum__20J3DColorBlockLightOnFPCUc,
    (void*)getColorChanNum__20J3DColorBlockLightOnCFv,
    (void*)setColorChan__20J3DColorBlockLightOnFUlRC12J3DColorChan,
    (void*)setColorChan__20J3DColorBlockLightOnFUlPC12J3DColorChan,
    (void*)getColorChan__20J3DColorBlockLightOnFUl,
    (void*)setLight__20J3DColorBlockLightOnFUlP11J3DLightObj,
    (void*)getLight__20J3DColorBlockLightOnFUl,
    (void*)setCullMode__20J3DColorBlockLightOnFPCUc,
    (void*)setCullMode__20J3DColorBlockLightOnFUc,
    (void*)getCullMode__20J3DColorBlockLightOnCFv,
    (void*)getMatColorOffset__20J3DColorBlockLightOnCFv,
    (void*)getColorChanOffset__20J3DColorBlockLightOnCFv,
    (void*)setMatColorOffset__20J3DColorBlockLightOnFUl,
    (void*)setColorChanOffset__20J3DColorBlockLightOnFUl,
    (void*)__dt__20J3DColorBlockLightOnFv,
};

/* 803CE708-803CE798 02B828 0090+00 1/1 1/1 0/0 .data            __vt__22J3DColorBlockAmbientOn */
SECTION_DATA extern void* __vt__22J3DColorBlockAmbientOn[36] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)load__22J3DColorBlockAmbientOnFv,
    (void*)reset__22J3DColorBlockAmbientOnFP13J3DColorBlock,
    (void*)patch__21J3DColorBlockLightOffFv,
    (void*)patchMatColor__21J3DColorBlockLightOffFv,
    (void*)patchLight__21J3DColorBlockLightOffFv,
    (void*)diff__21J3DColorBlockLightOffFUl,
    (void*)diffAmbColor__13J3DColorBlockFv,
    (void*)diffMatColor__21J3DColorBlockLightOffFv,
    (void*)diffColorChan__21J3DColorBlockLightOffFv,
    (void*)diffLightObj__13J3DColorBlockFUl,
    (void*)countDLSize__22J3DColorBlockAmbientOnFv,
    (void*)getType__22J3DColorBlockAmbientOnFv,
    (void*)setMatColor__21J3DColorBlockLightOffFUlPC10J3DGXColor,
    (void*)setMatColor__21J3DColorBlockLightOffFUl10J3DGXColor,
    (void*)getMatColor__21J3DColorBlockLightOffFUl,
    (void*)setAmbColor__22J3DColorBlockAmbientOnFUlPC10J3DGXColor,
    (void*)setAmbColor__22J3DColorBlockAmbientOnFUl10J3DGXColor,
    (void*)getAmbColor__22J3DColorBlockAmbientOnFUl,
    (void*)setColorChanNum__21J3DColorBlockLightOffFUc,
    (void*)setColorChanNum__21J3DColorBlockLightOffFPCUc,
    (void*)getColorChanNum__21J3DColorBlockLightOffCFv,
    (void*)setColorChan__21J3DColorBlockLightOffFUlRC12J3DColorChan,
    (void*)setColorChan__21J3DColorBlockLightOffFUlPC12J3DColorChan,
    (void*)getColorChan__21J3DColorBlockLightOffFUl,
    (void*)setLight__13J3DColorBlockFUlP11J3DLightObj,
    (void*)getLight__13J3DColorBlockFUl,
    (void*)setCullMode__21J3DColorBlockLightOffFPCUc,
    (void*)setCullMode__21J3DColorBlockLightOffFUc,
    (void*)getCullMode__21J3DColorBlockLightOffCFv,
    (void*)getMatColorOffset__21J3DColorBlockLightOffCFv,
    (void*)getColorChanOffset__21J3DColorBlockLightOffCFv,
    (void*)setMatColorOffset__21J3DColorBlockLightOffFUl,
    (void*)setColorChanOffset__21J3DColorBlockLightOffFUl,
    (void*)__dt__22J3DColorBlockAmbientOnFv,
};

/* 803CE798-803CE814 02B8B8 007C+00 1/1 1/1 0/0 .data            __vt__13J3DPEBlockXlu */
SECTION_DATA extern void* __vt__13J3DPEBlockXlu[31] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)reset__10J3DPEBlockFP10J3DPEBlock,
    (void*)load__13J3DPEBlockXluFv,
    (void*)patch__10J3DPEBlockFv,
    (void*)diff__10J3DPEBlockFUl,
    (void*)diffFog__10J3DPEBlockFv,
    (void*)diffBlend__10J3DPEBlockFv,
    (void*)countDLSize__13J3DPEBlockXluFv,
    (void*)getType__13J3DPEBlockXluFv,
    (void*)setFog__10J3DPEBlockF6J3DFog,
    (void*)setFog__10J3DPEBlockFP6J3DFog,
    (void*)getFog__10J3DPEBlockFv,
    (void*)setAlphaComp__10J3DPEBlockFPC12J3DAlphaComp,
    (void*)setAlphaComp__10J3DPEBlockFRC12J3DAlphaComp,
    (void*)getAlphaComp__10J3DPEBlockFv,
    (void*)setBlend__10J3DPEBlockFPC8J3DBlend,
    (void*)setBlend__10J3DPEBlockFRC8J3DBlend,
    (void*)getBlend__10J3DPEBlockFv,
    (void*)setZMode__10J3DPEBlockFPC8J3DZMode,
    (void*)setZMode__10J3DPEBlockF8J3DZMode,
    (void*)getZMode__10J3DPEBlockFv,
    (void*)setZCompLoc__10J3DPEBlockFPCUc,
    (void*)setZCompLoc__10J3DPEBlockFUc,
    (void*)getZCompLoc__10J3DPEBlockCFv,
    (void*)setDither__10J3DPEBlockFPCUc,
    (void*)setDither__10J3DPEBlockFUc,
    (void*)getDither__10J3DPEBlockCFv,
    (void*)getFogOffset__10J3DPEBlockCFv,
    (void*)setFogOffset__10J3DPEBlockFUl,
    (void*)__dt__13J3DPEBlockXluFv,
};

/* 803CE814-803CE890 02B934 007C+00 1/1 1/1 0/0 .data            __vt__17J3DPEBlockTexEdge */
SECTION_DATA extern void* __vt__17J3DPEBlockTexEdge[31] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)reset__10J3DPEBlockFP10J3DPEBlock,
    (void*)load__17J3DPEBlockTexEdgeFv,
    (void*)patch__10J3DPEBlockFv,
    (void*)diff__10J3DPEBlockFUl,
    (void*)diffFog__10J3DPEBlockFv,
    (void*)diffBlend__10J3DPEBlockFv,
    (void*)countDLSize__17J3DPEBlockTexEdgeFv,
    (void*)getType__17J3DPEBlockTexEdgeFv,
    (void*)setFog__10J3DPEBlockF6J3DFog,
    (void*)setFog__10J3DPEBlockFP6J3DFog,
    (void*)getFog__10J3DPEBlockFv,
    (void*)setAlphaComp__10J3DPEBlockFPC12J3DAlphaComp,
    (void*)setAlphaComp__10J3DPEBlockFRC12J3DAlphaComp,
    (void*)getAlphaComp__10J3DPEBlockFv,
    (void*)setBlend__10J3DPEBlockFPC8J3DBlend,
    (void*)setBlend__10J3DPEBlockFRC8J3DBlend,
    (void*)getBlend__10J3DPEBlockFv,
    (void*)setZMode__10J3DPEBlockFPC8J3DZMode,
    (void*)setZMode__10J3DPEBlockF8J3DZMode,
    (void*)getZMode__10J3DPEBlockFv,
    (void*)setZCompLoc__10J3DPEBlockFPCUc,
    (void*)setZCompLoc__10J3DPEBlockFUc,
    (void*)getZCompLoc__10J3DPEBlockCFv,
    (void*)setDither__10J3DPEBlockFPCUc,
    (void*)setDither__10J3DPEBlockFUc,
    (void*)getDither__10J3DPEBlockCFv,
    (void*)getFogOffset__10J3DPEBlockCFv,
    (void*)setFogOffset__10J3DPEBlockFUl,
    (void*)__dt__17J3DPEBlockTexEdgeFv,
};

/* 803CE890-803CE90C 02B9B0 007C+00 1/1 1/1 0/0 .data            __vt__13J3DPEBlockOpa */
SECTION_DATA extern void* __vt__13J3DPEBlockOpa[31] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)reset__10J3DPEBlockFP10J3DPEBlock,
    (void*)load__13J3DPEBlockOpaFv,
    (void*)patch__10J3DPEBlockFv,
    (void*)diff__10J3DPEBlockFUl,
    (void*)diffFog__10J3DPEBlockFv,
    (void*)diffBlend__10J3DPEBlockFv,
    (void*)countDLSize__13J3DPEBlockOpaFv,
    (void*)getType__13J3DPEBlockOpaFv,
    (void*)setFog__10J3DPEBlockF6J3DFog,
    (void*)setFog__10J3DPEBlockFP6J3DFog,
    (void*)getFog__10J3DPEBlockFv,
    (void*)setAlphaComp__10J3DPEBlockFPC12J3DAlphaComp,
    (void*)setAlphaComp__10J3DPEBlockFRC12J3DAlphaComp,
    (void*)getAlphaComp__10J3DPEBlockFv,
    (void*)setBlend__10J3DPEBlockFPC8J3DBlend,
    (void*)setBlend__10J3DPEBlockFRC8J3DBlend,
    (void*)getBlend__10J3DPEBlockFv,
    (void*)setZMode__10J3DPEBlockFPC8J3DZMode,
    (void*)setZMode__10J3DPEBlockF8J3DZMode,
    (void*)getZMode__10J3DPEBlockFv,
    (void*)setZCompLoc__10J3DPEBlockFPCUc,
    (void*)setZCompLoc__10J3DPEBlockFUc,
    (void*)getZCompLoc__10J3DPEBlockCFv,
    (void*)setDither__10J3DPEBlockFPCUc,
    (void*)setDither__10J3DPEBlockFUc,
    (void*)getDither__10J3DPEBlockCFv,
    (void*)getFogOffset__10J3DPEBlockCFv,
    (void*)setFogOffset__10J3DPEBlockFUl,
    (void*)__dt__13J3DPEBlockOpaFv,
};

/* 803CE90C-803CE958 02BA2C 004C+00 1/1 1/1 0/0 .data            __vt__15J3DIndBlockFull */
SECTION_DATA extern void* __vt__15J3DIndBlockFull[19] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)reset__15J3DIndBlockFullFP11J3DIndBlock,
    (void*)diff__15J3DIndBlockFullFUl,
    (void*)load__15J3DIndBlockFullFv,
    (void*)countDLSize__15J3DIndBlockFullFv,
    (void*)getType__15J3DIndBlockFullFv,
    (void*)setIndTexStageNum__15J3DIndBlockFullFUc,
    (void*)getIndTexStageNum__15J3DIndBlockFullCFv,
    (void*)setIndTexOrder__15J3DIndBlockFullFUl14J3DIndTexOrder,
    (void*)setIndTexOrder__15J3DIndBlockFullFUlPC14J3DIndTexOrder,
    (void*)getIndTexOrder__15J3DIndBlockFullFUl,
    (void*)setIndTexMtx__15J3DIndBlockFullFUlPC12J3DIndTexMtx,
    (void*)setIndTexMtx__15J3DIndBlockFullFUl12J3DIndTexMtx,
    (void*)getIndTexMtx__15J3DIndBlockFullFUl,
    (void*)setIndTexCoordScale__15J3DIndBlockFullFUlPC19J3DIndTexCoordScale,
    (void*)setIndTexCoordScale__15J3DIndBlockFullFUl19J3DIndTexCoordScale,
    (void*)getIndTexCoordScale__15J3DIndBlockFullFUl,
    (void*)__dt__15J3DIndBlockFullFv,
};

/* 803CE958-803CEA34 02BA78 00DC+00 5/5 5/5 0/0 .data            __vt__11J3DTevBlock */
SECTION_DATA extern void* __vt__11J3DTevBlock[55] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)reset__11J3DTevBlockFP11J3DTevBlock,
    (void*)load__11J3DTevBlockFv,
    (void*)diff__11J3DTevBlockFUl,
    (void*)diffTexNo__11J3DTevBlockFv,
    (void*)diffTevReg__11J3DTevBlockFv,
    (void*)diffTexCoordScale__11J3DTevBlockFv,
    (void*)diffTevStage__11J3DTevBlockFv,
    (void*)diffTevStageIndirect__11J3DTevBlockFv,
    (void*)patch__11J3DTevBlockFv,
    (void*)patchTexNo__11J3DTevBlockFv,
    (void*)patchTevReg__11J3DTevBlockFv,
    (void*)patchTexNoAndTexCoordScale__11J3DTevBlockFv,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
    (void*)countDLSize__11J3DTevBlockFv,
    (void*)setTexNo__11J3DTevBlockFUlPCUs,
    (void*)setTexNo__11J3DTevBlockFUlUs,
    (void*)getTexNo__11J3DTevBlockCFUl,
    (void*)setTevOrder__11J3DTevBlockFUlPC11J3DTevOrder,
    (void*)setTevOrder__11J3DTevBlockFUl11J3DTevOrder,
    (void*)getTevOrder__11J3DTevBlockFUl,
    (void*)setTevColor__11J3DTevBlockFUlPC13J3DGXColorS10,
    (void*)setTevColor__11J3DTevBlockFUl13J3DGXColorS10,
    (void*)getTevColor__11J3DTevBlockFUl,
    (void*)setTevKColor__11J3DTevBlockFUlPC10J3DGXColor,
    (void*)setTevKColor__11J3DTevBlockFUl10J3DGXColor,
    (void*)getTevKColor__11J3DTevBlockFUl,
    (void*)setTevKColorSel__11J3DTevBlockFUlPCUc,
    (void*)setTevKColorSel__11J3DTevBlockFUlUc,
    (void*)getTevKColorSel__11J3DTevBlockFUl,
    (void*)setTevKAlphaSel__11J3DTevBlockFUlPCUc,
    (void*)setTevKAlphaSel__11J3DTevBlockFUlUc,
    (void*)getTevKAlphaSel__11J3DTevBlockFUl,
    (void*)setTevStageNum__11J3DTevBlockFPCUc,
    (void*)setTevStageNum__11J3DTevBlockFUc,
    (void*)getTevStageNum__11J3DTevBlockCFv,
    (void*)setTevStage__11J3DTevBlockFUlPC11J3DTevStage,
    (void*)setTevStage__11J3DTevBlockFUl11J3DTevStage,
    (void*)getTevStage__11J3DTevBlockFUl,
    (void*)setTevSwapModeInfo__11J3DTevBlockFUlPC18J3DTevSwapModeInfo,
    (void*)setTevSwapModeInfo__11J3DTevBlockFUl18J3DTevSwapModeInfo,
    (void*)setTevSwapModeTable__11J3DTevBlockFUlPC19J3DTevSwapModeTable,
    (void*)setTevSwapModeTable__11J3DTevBlockFUl19J3DTevSwapModeTable,
    (void*)getTevSwapModeTable__11J3DTevBlockFUl,
    (void*)setIndTevStage__11J3DTevBlockFUlPC14J3DIndTevStage,
    (void*)setIndTevStage__11J3DTevBlockFUl14J3DIndTevStage,
    (void*)getIndTevStage__11J3DTevBlockFUl,
    (void*)getTexNoOffset__11J3DTevBlockCFv,
    (void*)getTevRegOffset__11J3DTevBlockCFv,
    (void*)setTexNoOffset__11J3DTevBlockFUl,
    (void*)setTevRegOffset__11J3DTevBlockFUl,
    (void*)__dt__11J3DTevBlockFv,
};

/* 80321F84-80321FE0 31C8C4 005C+00 1/0 0/0 0/0 .text            __dt__13J3DTevBlock16Fv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DTevBlock16::~J3DTevBlock16() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/__dt__13J3DTevBlock16Fv.s"
}
#pragma pop

/* 80321FE0-80321FE8 -00001 0008+00 0/0 0/0 0/0 .text            setTexNoOffset__11J3DTevBlockFUl */
void J3DTevBlock::setTexNoOffset(u32 param_0) {
    *(u32*)(((u8*)this) + 4) /* this->field_0x4 */ = (u32)(param_0);
}

/* 80321FE8-80321FEC 31C928 0004+00 1/0 0/0 0/0 .text            ptrToIndex__12J3DTevBlock4Fv */
void J3DTevBlock4::ptrToIndex() {
    /* empty function */
}

/* 80321FEC-80322010 31C92C 0024+00 1/0 0/0 0/0 .text            indexToPtr__12J3DTevBlock4Fv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::indexToPtr() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/indexToPtr__12J3DTevBlock4Fv.s"
}
#pragma pop

/* 80322010-8032201C 31C950 000C+00 1/0 0/0 0/0 .text            getType__12J3DTevBlock4Fv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::getType() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getType__12J3DTevBlock4Fv.s"
}
#pragma pop

/* 8032201C-8032202C 31C95C 0010+00 1/0 0/0 0/0 .text            setTexNo__12J3DTevBlock4FUlUs */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::setTexNo(u32 param_0, u16 param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTexNo__12J3DTevBlock4FUlUs.s"
}
#pragma pop

/* 8032202C-80322040 31C96C 0014+00 1/0 0/0 0/0 .text            setTexNo__12J3DTevBlock4FUlPCUs */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::setTexNo(u32 param_0, u16 const* param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTexNo__12J3DTevBlock4FUlPCUs.s"
}
#pragma pop

/* 80322040-80322050 31C980 0010+00 1/0 0/0 0/0 .text            getTexNo__12J3DTevBlock4CFUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::getTexNo(u32 param_0) const {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTexNo__12J3DTevBlock4CFUl.s"
}
#pragma pop

/* 80322050-80322064 31C990 0014+00 1/0 0/0 0/0 .text setTevOrder__12J3DTevBlock4FUl11J3DTevOrder
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::setTevOrder(u32 param_0, J3DTevOrder param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevOrder__12J3DTevBlock4FUl11J3DTevOrder.s"
}
#pragma pop

/* 80322064-80322078 31C9A4 0014+00 1/0 0/0 0/0 .text
 * setTevOrder__12J3DTevBlock4FUlPC11J3DTevOrder                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::setTevOrder(u32 param_0, J3DTevOrder const* param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevOrder__12J3DTevBlock4FUlPC11J3DTevOrder.s"
}
#pragma pop

/* 80322078-8032208C 31C9B8 0014+00 1/0 0/0 0/0 .text            getTevOrder__12J3DTevBlock4FUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::getTevOrder(u32 param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTevOrder__12J3DTevBlock4FUl.s"
}
#pragma pop

/* 8032208C-803220B8 31C9CC 002C+00 1/0 0/0 0/0 .text
 * setTevColor__12J3DTevBlock4FUl13J3DGXColorS10                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::setTevColor(u32 param_0, J3DGXColorS10 param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevColor__12J3DTevBlock4FUl13J3DGXColorS10.s"
}
#pragma pop

/* 803220B8-803220E4 31C9F8 002C+00 1/0 0/0 0/0 .text
 * setTevColor__12J3DTevBlock4FUlPC13J3DGXColorS10              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::setTevColor(u32 param_0, J3DGXColorS10 const* param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevColor__12J3DTevBlock4FUlPC13J3DGXColorS10.s"
}
#pragma pop

/* 803220E4-803220F8 31CA24 0014+00 1/0 0/0 0/0 .text            getTevColor__12J3DTevBlock4FUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::getTevColor(u32 param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTevColor__12J3DTevBlock4FUl.s"
}
#pragma pop

/* 803220F8-80322124 31CA38 002C+00 1/0 0/0 0/0 .text setTevKColor__12J3DTevBlock4FUl10J3DGXColor
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::setTevKColor(u32 param_0, J3DGXColor param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevKColor__12J3DTevBlock4FUl10J3DGXColor.s"
}
#pragma pop

/* 80322124-80322150 31CA64 002C+00 1/0 0/0 0/0 .text
 * setTevKColor__12J3DTevBlock4FUlPC10J3DGXColor                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::setTevKColor(u32 param_0, J3DGXColor const* param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevKColor__12J3DTevBlock4FUlPC10J3DGXColor.s"
}
#pragma pop

/* 80322150-80322164 31CA90 0014+00 1/0 0/0 0/0 .text            getTevKColor__12J3DTevBlock4FUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::getTevKColor(u32 param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTevKColor__12J3DTevBlock4FUl.s"
}
#pragma pop

/* 80322164-80322170 31CAA4 000C+00 1/0 0/0 0/0 .text setTevKColorSel__12J3DTevBlock4FUlUc */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::setTevKColorSel(u32 param_0, u8 param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevKColorSel__12J3DTevBlock4FUlUc.s"
}
#pragma pop

/* 80322170-80322180 31CAB0 0010+00 1/0 0/0 0/0 .text setTevKColorSel__12J3DTevBlock4FUlPCUc */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::setTevKColorSel(u32 param_0, u8 const* param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevKColorSel__12J3DTevBlock4FUlPCUc.s"
}
#pragma pop

/* 80322180-8032218C 31CAC0 000C+00 1/0 0/0 0/0 .text            getTevKColorSel__12J3DTevBlock4FUl
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::getTevKColorSel(u32 param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTevKColorSel__12J3DTevBlock4FUl.s"
}
#pragma pop

/* 8032218C-80322198 31CACC 000C+00 1/0 0/0 0/0 .text setTevKAlphaSel__12J3DTevBlock4FUlUc */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::setTevKAlphaSel(u32 param_0, u8 param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevKAlphaSel__12J3DTevBlock4FUlUc.s"
}
#pragma pop

/* 80322198-803221A8 31CAD8 0010+00 1/0 0/0 0/0 .text setTevKAlphaSel__12J3DTevBlock4FUlPCUc */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::setTevKAlphaSel(u32 param_0, u8 const* param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevKAlphaSel__12J3DTevBlock4FUlPCUc.s"
}
#pragma pop

/* 803221A8-803221B4 31CAE8 000C+00 1/0 0/0 0/0 .text            getTevKAlphaSel__12J3DTevBlock4FUl
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::getTevKAlphaSel(u32 param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTevKAlphaSel__12J3DTevBlock4FUl.s"
}
#pragma pop

/* 803221B4-803221BC -00001 0008+00 0/0 0/0 0/0 .text            setTevStageNum__12J3DTevBlock4FUc
 */
void J3DTevBlock4::setTevStageNum(u8 param_0) {
    *(u8*)(((u8*)this) + 32) /* this->field_0x20 */ = (u8)(param_0);
}

/* 803221BC-803221C8 31CAFC 000C+00 1/0 0/0 0/0 .text            setTevStageNum__12J3DTevBlock4FPCUc
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::setTevStageNum(u8 const* param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevStageNum__12J3DTevBlock4FPCUc.s"
}
#pragma pop

/* 803221C8-803221D0 31CB08 0008+00 1/0 0/0 0/0 .text            getTevStageNum__12J3DTevBlock4CFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::getTevStageNum() const {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTevStageNum__12J3DTevBlock4CFv.s"
}
#pragma pop

/* 803221D0-8032220C 31CB10 003C+00 1/0 0/0 0/0 .text setTevStage__12J3DTevBlock4FUl11J3DTevStage
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::setTevStage(u32 param_0, J3DTevStage param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevStage__12J3DTevBlock4FUl11J3DTevStage.s"
}
#pragma pop

/* 8032220C-80322248 31CB4C 003C+00 1/0 0/0 0/0 .text
 * setTevStage__12J3DTevBlock4FUlPC11J3DTevStage                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::setTevStage(u32 param_0, J3DTevStage const* param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevStage__12J3DTevBlock4FUlPC11J3DTevStage.s"
}
#pragma pop

/* 80322248-8032225C 31CB88 0014+00 1/0 0/0 0/0 .text            getTevStage__12J3DTevBlock4FUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::getTevStage(u32 param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTevStage__12J3DTevBlock4FUl.s"
}
#pragma pop

/* 8032225C-80322294 31CB9C 0038+00 1/0 0/0 0/0 .text
 * setTevSwapModeInfo__12J3DTevBlock4FUl18J3DTevSwapModeInfo    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::setTevSwapModeInfo(u32 param_0, J3DTevSwapModeInfo param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevSwapModeInfo__12J3DTevBlock4FUl18J3DTevSwapModeInfo.s"
}
#pragma pop

/* 80322294-803222CC 31CBD4 0038+00 1/0 0/0 0/0 .text
 * setTevSwapModeInfo__12J3DTevBlock4FUlPC18J3DTevSwapModeInfo  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::setTevSwapModeInfo(u32 param_0, J3DTevSwapModeInfo const* param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevSwapModeInfo__12J3DTevBlock4FUlPC18J3DTevSwapModeInfo.s"
}
#pragma pop

/* 803222CC-803222DC 31CC0C 0010+00 1/0 0/0 0/0 .text
 * setTevSwapModeTable__12J3DTevBlock4FUl19J3DTevSwapModeTable  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::setTevSwapModeTable(u32 param_0, J3DTevSwapModeTable param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevSwapModeTable__12J3DTevBlock4FUl19J3DTevSwapModeTable.s"
}
#pragma pop

/* 803222DC-803222EC 31CC1C 0010+00 1/0 0/0 0/0 .text
 * setTevSwapModeTable__12J3DTevBlock4FUlPC19J3DTevSwapModeTable */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::setTevSwapModeTable(u32 param_0, J3DTevSwapModeTable const* param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevSwapModeTable__12J3DTevBlock4FUlPC19J3DTevSwapModeTable.s"
}
#pragma pop

/* 803222EC-803222FC 31CC2C 0010+00 1/0 0/0 0/0 .text getTevSwapModeTable__12J3DTevBlock4FUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::getTevSwapModeTable(u32 param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTevSwapModeTable__12J3DTevBlock4FUl.s"
}
#pragma pop

/* 803222FC-80322310 31CC3C 0014+00 1/0 0/0 0/0 .text
 * setIndTevStage__12J3DTevBlock4FUl14J3DIndTevStage            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::setIndTevStage(u32 param_0, J3DIndTevStage param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setIndTevStage__12J3DTevBlock4FUl14J3DIndTevStage.s"
}
#pragma pop

/* 80322310-80322324 31CC50 0014+00 1/0 0/0 0/0 .text
 * setIndTevStage__12J3DTevBlock4FUlPC14J3DIndTevStage          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::setIndTevStage(u32 param_0, J3DIndTevStage const* param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setIndTevStage__12J3DTevBlock4FUlPC14J3DIndTevStage.s"
}
#pragma pop

/* 80322324-80322338 31CC64 0014+00 1/0 0/0 0/0 .text            getIndTevStage__12J3DTevBlock4FUl
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::getIndTevStage(u32 param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getIndTevStage__12J3DTevBlock4FUl.s"
}
#pragma pop

/* 80322338-80322340 31CC78 0008+00 1/0 0/0 0/0 .text            getTexNoOffset__12J3DTevBlock4CFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::getTexNoOffset() const {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTexNoOffset__12J3DTevBlock4CFv.s"
}
#pragma pop

/* 80322340-80322348 31CC80 0008+00 1/0 0/0 0/0 .text            getTevRegOffset__12J3DTevBlock4CFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::getTevRegOffset() const {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTevRegOffset__12J3DTevBlock4CFv.s"
}
#pragma pop

/* 80322348-80322350 -00001 0008+00 0/0 0/0 0/0 .text            setTevRegOffset__12J3DTevBlock4FUl
 */
void J3DTevBlock4::setTevRegOffset(u32 param_0) {
    *(u32*)(((u8*)this) + 144) /* this->field_0x90 */ = (u32)(param_0);
}

/* 80322350-803223AC 31CC90 005C+00 1/0 0/0 0/0 .text            __dt__12J3DTevBlock4Fv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DTevBlock4::~J3DTevBlock4() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/__dt__12J3DTevBlock4Fv.s"
}
#pragma pop

/* 803223AC-803223B0 31CCEC 0004+00 1/0 0/0 0/0 .text            ptrToIndex__12J3DTevBlock2Fv */
void J3DTevBlock2::ptrToIndex() {
    /* empty function */
}

/* 803223B0-803223D4 31CCF0 0024+00 1/0 0/0 0/0 .text            indexToPtr__12J3DTevBlock2Fv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::indexToPtr() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/indexToPtr__12J3DTevBlock2Fv.s"
}
#pragma pop

/* 803223D4-803223E0 31CD14 000C+00 1/0 0/0 0/0 .text            getType__12J3DTevBlock2Fv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::getType() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getType__12J3DTevBlock2Fv.s"
}
#pragma pop

/* 803223E0-803223F0 31CD20 0010+00 1/0 0/0 0/0 .text            setTexNo__12J3DTevBlock2FUlUs */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::setTexNo(u32 param_0, u16 param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTexNo__12J3DTevBlock2FUlUs.s"
}
#pragma pop

/* 803223F0-80322404 31CD30 0014+00 1/0 0/0 0/0 .text            setTexNo__12J3DTevBlock2FUlPCUs */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::setTexNo(u32 param_0, u16 const* param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTexNo__12J3DTevBlock2FUlPCUs.s"
}
#pragma pop

/* 80322404-80322414 31CD44 0010+00 1/0 0/0 0/0 .text            getTexNo__12J3DTevBlock2CFUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::getTexNo(u32 param_0) const {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTexNo__12J3DTevBlock2CFUl.s"
}
#pragma pop

/* 80322414-80322428 31CD54 0014+00 1/0 0/0 0/0 .text setTevOrder__12J3DTevBlock2FUl11J3DTevOrder
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::setTevOrder(u32 param_0, J3DTevOrder param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevOrder__12J3DTevBlock2FUl11J3DTevOrder.s"
}
#pragma pop

/* 80322428-8032243C 31CD68 0014+00 1/0 0/0 0/0 .text
 * setTevOrder__12J3DTevBlock2FUlPC11J3DTevOrder                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::setTevOrder(u32 param_0, J3DTevOrder const* param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevOrder__12J3DTevBlock2FUlPC11J3DTevOrder.s"
}
#pragma pop

/* 8032243C-80322450 31CD7C 0014+00 1/0 0/0 0/0 .text            getTevOrder__12J3DTevBlock2FUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::getTevOrder(u32 param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTevOrder__12J3DTevBlock2FUl.s"
}
#pragma pop

/* 80322450-8032247C 31CD90 002C+00 1/0 0/0 0/0 .text
 * setTevColor__12J3DTevBlock2FUl13J3DGXColorS10                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::setTevColor(u32 param_0, J3DGXColorS10 param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevColor__12J3DTevBlock2FUl13J3DGXColorS10.s"
}
#pragma pop

/* 8032247C-803224A8 31CDBC 002C+00 1/0 0/0 0/0 .text
 * setTevColor__12J3DTevBlock2FUlPC13J3DGXColorS10              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::setTevColor(u32 param_0, J3DGXColorS10 const* param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevColor__12J3DTevBlock2FUlPC13J3DGXColorS10.s"
}
#pragma pop

/* 803224A8-803224BC 31CDE8 0014+00 1/0 0/0 0/0 .text            getTevColor__12J3DTevBlock2FUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::getTevColor(u32 param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTevColor__12J3DTevBlock2FUl.s"
}
#pragma pop

/* 803224BC-803224E8 31CDFC 002C+00 1/0 0/0 0/0 .text setTevKColor__12J3DTevBlock2FUl10J3DGXColor
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::setTevKColor(u32 param_0, J3DGXColor param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevKColor__12J3DTevBlock2FUl10J3DGXColor.s"
}
#pragma pop

/* 803224E8-80322514 31CE28 002C+00 1/0 0/0 0/0 .text
 * setTevKColor__12J3DTevBlock2FUlPC10J3DGXColor                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::setTevKColor(u32 param_0, J3DGXColor const* param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevKColor__12J3DTevBlock2FUlPC10J3DGXColor.s"
}
#pragma pop

/* 80322514-80322528 31CE54 0014+00 1/0 0/0 0/0 .text            getTevKColor__12J3DTevBlock2FUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::getTevKColor(u32 param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTevKColor__12J3DTevBlock2FUl.s"
}
#pragma pop

/* 80322528-80322534 31CE68 000C+00 1/0 0/0 0/0 .text setTevKColorSel__12J3DTevBlock2FUlUc */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::setTevKColorSel(u32 param_0, u8 param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevKColorSel__12J3DTevBlock2FUlUc.s"
}
#pragma pop

/* 80322534-80322544 31CE74 0010+00 1/0 0/0 0/0 .text setTevKColorSel__12J3DTevBlock2FUlPCUc */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::setTevKColorSel(u32 param_0, u8 const* param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevKColorSel__12J3DTevBlock2FUlPCUc.s"
}
#pragma pop

/* 80322544-80322550 31CE84 000C+00 1/0 0/0 0/0 .text            getTevKColorSel__12J3DTevBlock2FUl
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::getTevKColorSel(u32 param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTevKColorSel__12J3DTevBlock2FUl.s"
}
#pragma pop

/* 80322550-8032255C 31CE90 000C+00 1/0 0/0 0/0 .text setTevKAlphaSel__12J3DTevBlock2FUlUc */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::setTevKAlphaSel(u32 param_0, u8 param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevKAlphaSel__12J3DTevBlock2FUlUc.s"
}
#pragma pop

/* 8032255C-8032256C 31CE9C 0010+00 1/0 0/0 0/0 .text setTevKAlphaSel__12J3DTevBlock2FUlPCUc */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::setTevKAlphaSel(u32 param_0, u8 const* param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevKAlphaSel__12J3DTevBlock2FUlPCUc.s"
}
#pragma pop

/* 8032256C-80322578 31CEAC 000C+00 1/0 0/0 0/0 .text            getTevKAlphaSel__12J3DTevBlock2FUl
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::getTevKAlphaSel(u32 param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTevKAlphaSel__12J3DTevBlock2FUl.s"
}
#pragma pop

/* 80322578-80322580 -00001 0008+00 0/0 0/0 0/0 .text            setTevStageNum__12J3DTevBlock2FUc
 */
void J3DTevBlock2::setTevStageNum(u8 param_0) {
    *(u8*)(((u8*)this) + 52) /* this->field_0x34 */ = (u8)(param_0);
}

/* 80322580-8032258C 31CEC0 000C+00 1/0 0/0 0/0 .text            setTevStageNum__12J3DTevBlock2FPCUc
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::setTevStageNum(u8 const* param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevStageNum__12J3DTevBlock2FPCUc.s"
}
#pragma pop

/* 8032258C-80322594 31CECC 0008+00 1/0 0/0 0/0 .text            getTevStageNum__12J3DTevBlock2CFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::getTevStageNum() const {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTevStageNum__12J3DTevBlock2CFv.s"
}
#pragma pop

/* 80322594-803225D0 31CED4 003C+00 1/0 0/0 0/0 .text setTevStage__12J3DTevBlock2FUl11J3DTevStage
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::setTevStage(u32 param_0, J3DTevStage param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevStage__12J3DTevBlock2FUl11J3DTevStage.s"
}
#pragma pop

/* 803225D0-8032260C 31CF10 003C+00 1/0 0/0 0/0 .text
 * setTevStage__12J3DTevBlock2FUlPC11J3DTevStage                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::setTevStage(u32 param_0, J3DTevStage const* param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevStage__12J3DTevBlock2FUlPC11J3DTevStage.s"
}
#pragma pop

/* 8032260C-80322620 31CF4C 0014+00 1/0 0/0 0/0 .text            getTevStage__12J3DTevBlock2FUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::getTevStage(u32 param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTevStage__12J3DTevBlock2FUl.s"
}
#pragma pop

/* 80322620-80322658 31CF60 0038+00 1/0 0/0 0/0 .text
 * setTevSwapModeInfo__12J3DTevBlock2FUl18J3DTevSwapModeInfo    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::setTevSwapModeInfo(u32 param_0, J3DTevSwapModeInfo param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevSwapModeInfo__12J3DTevBlock2FUl18J3DTevSwapModeInfo.s"
}
#pragma pop

/* 80322658-80322690 31CF98 0038+00 1/0 0/0 0/0 .text
 * setTevSwapModeInfo__12J3DTevBlock2FUlPC18J3DTevSwapModeInfo  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::setTevSwapModeInfo(u32 param_0, J3DTevSwapModeInfo const* param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevSwapModeInfo__12J3DTevBlock2FUlPC18J3DTevSwapModeInfo.s"
}
#pragma pop

/* 80322690-803226A0 31CFD0 0010+00 1/0 0/0 0/0 .text
 * setTevSwapModeTable__12J3DTevBlock2FUl19J3DTevSwapModeTable  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::setTevSwapModeTable(u32 param_0, J3DTevSwapModeTable param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevSwapModeTable__12J3DTevBlock2FUl19J3DTevSwapModeTable.s"
}
#pragma pop

/* 803226A0-803226B0 31CFE0 0010+00 1/0 0/0 0/0 .text
 * setTevSwapModeTable__12J3DTevBlock2FUlPC19J3DTevSwapModeTable */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::setTevSwapModeTable(u32 param_0, J3DTevSwapModeTable const* param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevSwapModeTable__12J3DTevBlock2FUlPC19J3DTevSwapModeTable.s"
}
#pragma pop

/* 803226B0-803226C0 31CFF0 0010+00 1/0 0/0 0/0 .text getTevSwapModeTable__12J3DTevBlock2FUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::getTevSwapModeTable(u32 param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTevSwapModeTable__12J3DTevBlock2FUl.s"
}
#pragma pop

/* 803226C0-803226D4 31D000 0014+00 1/0 0/0 0/0 .text
 * setIndTevStage__12J3DTevBlock2FUl14J3DIndTevStage            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::setIndTevStage(u32 param_0, J3DIndTevStage param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setIndTevStage__12J3DTevBlock2FUl14J3DIndTevStage.s"
}
#pragma pop

/* 803226D4-803226E8 31D014 0014+00 1/0 0/0 0/0 .text
 * setIndTevStage__12J3DTevBlock2FUlPC14J3DIndTevStage          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::setIndTevStage(u32 param_0, J3DIndTevStage const* param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setIndTevStage__12J3DTevBlock2FUlPC14J3DIndTevStage.s"
}
#pragma pop

/* 803226E8-803226FC 31D028 0014+00 1/0 0/0 0/0 .text            getIndTevStage__12J3DTevBlock2FUl
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::getIndTevStage(u32 param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getIndTevStage__12J3DTevBlock2FUl.s"
}
#pragma pop

/* 803226FC-80322704 31D03C 0008+00 1/0 0/0 0/0 .text            getTexNoOffset__12J3DTevBlock2CFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::getTexNoOffset() const {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTexNoOffset__12J3DTevBlock2CFv.s"
}
#pragma pop

/* 80322704-8032270C 31D044 0008+00 1/0 0/0 0/0 .text            getTevRegOffset__12J3DTevBlock2CFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::getTevRegOffset() const {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTevRegOffset__12J3DTevBlock2CFv.s"
}
#pragma pop

/* 8032270C-80322714 -00001 0008+00 0/0 0/0 0/0 .text            setTevRegOffset__12J3DTevBlock2FUl
 */
void J3DTevBlock2::setTevRegOffset(u32 param_0) {
    *(u32*)(((u8*)this) + 104) /* this->field_0x68 */ = (u32)(param_0);
}

/* 80322714-80322770 31D054 005C+00 1/0 0/0 0/0 .text            __dt__12J3DTevBlock2Fv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DTevBlock2::~J3DTevBlock2() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/__dt__12J3DTevBlock2Fv.s"
}
#pragma pop

/* 80322770-80322774 31D0B0 0004+00 1/0 0/0 0/0 .text            ptrToIndex__12J3DTevBlock1Fv */
void J3DTevBlock1::ptrToIndex() {
    /* empty function */
}

/* 80322774-80322798 31D0B4 0024+00 1/0 0/0 0/0 .text            indexToPtr__12J3DTevBlock1Fv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock1::indexToPtr() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/indexToPtr__12J3DTevBlock1Fv.s"
}
#pragma pop

/* 80322798-803227A4 31D0D8 000C+00 1/0 0/0 0/0 .text            getType__12J3DTevBlock1Fv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock1::getType() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getType__12J3DTevBlock1Fv.s"
}
#pragma pop

/* 803227A4-803227B4 31D0E4 0010+00 1/0 0/0 0/0 .text            setTexNo__12J3DTevBlock1FUlUs */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock1::setTexNo(u32 param_0, u16 param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTexNo__12J3DTevBlock1FUlUs.s"
}
#pragma pop

/* 803227B4-803227C8 31D0F4 0014+00 1/0 0/0 0/0 .text            setTexNo__12J3DTevBlock1FUlPCUs */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock1::setTexNo(u32 param_0, u16 const* param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTexNo__12J3DTevBlock1FUlPCUs.s"
}
#pragma pop

/* 803227C8-803227D8 31D108 0010+00 1/0 0/0 0/0 .text            getTexNo__12J3DTevBlock1CFUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock1::getTexNo(u32 param_0) const {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTexNo__12J3DTevBlock1CFUl.s"
}
#pragma pop

/* 803227D8-803227EC 31D118 0014+00 1/0 0/0 0/0 .text setTevOrder__12J3DTevBlock1FUl11J3DTevOrder
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock1::setTevOrder(u32 param_0, J3DTevOrder param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevOrder__12J3DTevBlock1FUl11J3DTevOrder.s"
}
#pragma pop

/* 803227EC-80322800 31D12C 0014+00 1/0 0/0 0/0 .text
 * setTevOrder__12J3DTevBlock1FUlPC11J3DTevOrder                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock1::setTevOrder(u32 param_0, J3DTevOrder const* param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevOrder__12J3DTevBlock1FUlPC11J3DTevOrder.s"
}
#pragma pop

/* 80322800-80322814 31D140 0014+00 1/0 0/0 0/0 .text            getTevOrder__12J3DTevBlock1FUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock1::getTevOrder(u32 param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTevOrder__12J3DTevBlock1FUl.s"
}
#pragma pop

/* 80322814-80322818 31D154 0004+00 1/0 0/0 0/0 .text            setTevStageNum__12J3DTevBlock1FUc
 */
void J3DTevBlock1::setTevStageNum(u8 param_0) {
    /* empty function */
}

/* 80322818-8032281C 31D158 0004+00 1/0 0/0 0/0 .text            setTevStageNum__12J3DTevBlock1FPCUc
 */
void J3DTevBlock1::setTevStageNum(u8 const* param_0) {
    /* empty function */
}

/* 8032281C-80322824 31D15C 0008+00 1/0 0/0 0/0 .text            getTevStageNum__12J3DTevBlock1CFv
 */
bool J3DTevBlock1::getTevStageNum() const {
    return true;
}

/* 80322824-80322860 31D164 003C+00 1/0 0/0 0/0 .text setTevStage__12J3DTevBlock1FUl11J3DTevStage
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock1::setTevStage(u32 param_0, J3DTevStage param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevStage__12J3DTevBlock1FUl11J3DTevStage.s"
}
#pragma pop

/* 80322860-8032289C 31D1A0 003C+00 1/0 0/0 0/0 .text
 * setTevStage__12J3DTevBlock1FUlPC11J3DTevStage                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock1::setTevStage(u32 param_0, J3DTevStage const* param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevStage__12J3DTevBlock1FUlPC11J3DTevStage.s"
}
#pragma pop

/* 8032289C-803228B0 31D1DC 0014+00 1/0 0/0 0/0 .text            getTevStage__12J3DTevBlock1FUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock1::getTevStage(u32 param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTevStage__12J3DTevBlock1FUl.s"
}
#pragma pop

/* 803228B0-803228C4 31D1F0 0014+00 1/0 0/0 0/0 .text
 * setIndTevStage__12J3DTevBlock1FUl14J3DIndTevStage            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock1::setIndTevStage(u32 param_0, J3DIndTevStage param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setIndTevStage__12J3DTevBlock1FUl14J3DIndTevStage.s"
}
#pragma pop

/* 803228C4-803228D8 31D204 0014+00 1/0 0/0 0/0 .text
 * setIndTevStage__12J3DTevBlock1FUlPC14J3DIndTevStage          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock1::setIndTevStage(u32 param_0, J3DIndTevStage const* param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setIndTevStage__12J3DTevBlock1FUlPC14J3DIndTevStage.s"
}
#pragma pop

/* 803228D8-803228EC 31D218 0014+00 1/0 0/0 0/0 .text            getIndTevStage__12J3DTevBlock1FUl
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock1::getIndTevStage(u32 param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getIndTevStage__12J3DTevBlock1FUl.s"
}
#pragma pop

/* 803228EC-803228F4 31D22C 0008+00 1/0 0/0 0/0 .text            getTexNoOffset__12J3DTevBlock1CFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock1::getTexNoOffset() const {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTexNoOffset__12J3DTevBlock1CFv.s"
}
#pragma pop

/* 803228F4-80322950 31D234 005C+00 1/0 0/0 0/0 .text            __dt__12J3DTevBlock1Fv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DTevBlock1::~J3DTevBlock1() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/__dt__12J3DTevBlock1Fv.s"
}
#pragma pop

/* 80322950-80322954 31D290 0004+00 2/0 1/0 0/0 .text setTevKColorSel__11J3DTevBlockFUlPCUc */
void J3DTevBlock::setTevKColorSel(u32 param_0, u8 const* param_1) {
    /* empty function */
}

/* 80322954-80322958 31D294 0004+00 3/0 1/0 0/0 .text setTevKAlphaSel__11J3DTevBlockFUlPCUc */
void J3DTevBlock::setTevKAlphaSel(u32 param_0, u8 const* param_1) {
    /* empty function */
}

/* 80322958-8032295C 31D298 0004+00 3/0 1/0 0/0 .text
 * setTevSwapModeInfo__11J3DTevBlockFUl18J3DTevSwapModeInfo     */
void J3DTevBlock::setTevSwapModeInfo(u32 param_0, J3DTevSwapModeInfo param_1) {
    /* empty function */
}

/* 8032295C-80322960 31D29C 0004+00 3/0 1/0 0/0 .text
 * setTevSwapModeInfo__11J3DTevBlockFUlPC18J3DTevSwapModeInfo   */
void J3DTevBlock::setTevSwapModeInfo(u32 param_0, J3DTevSwapModeInfo const* param_1) {
    /* empty function */
}

/* 80322960-80322964 31D2A0 0004+00 3/0 1/0 0/0 .text
 * setTevSwapModeTable__11J3DTevBlockFUlPC19J3DTevSwapModeTable */
void J3DTevBlock::setTevSwapModeTable(u32 param_0, J3DTevSwapModeTable const* param_1) {
    /* empty function */
}

/* 80322964-8032296C 31D2A4 0008+00 2/0 1/0 0/0 .text            getTevRegOffset__11J3DTevBlockCFv
 */
bool J3DTevBlock::getTevRegOffset() const {
    return false;
}

/* 8032296C-80322970 31D2AC 0004+00 2/0 1/0 0/0 .text            setTevRegOffset__11J3DTevBlockFUl
 */
void J3DTevBlock::setTevRegOffset(u32 param_0) {
    /* empty function */
}

/* 80322970-80322974 31D2B0 0004+00 1/0 0/0 0/0 .text            load__18J3DTevBlockPatchedFv */
void J3DTevBlockPatched::load() {
    /* empty function */
}

/* 80322974-80322998 31D2B4 0024+00 1/0 0/0 0/0 .text            indexToPtr__18J3DTevBlockPatchedFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlockPatched::indexToPtr() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/indexToPtr__18J3DTevBlockPatchedFv.s"
}
#pragma pop

/* 80322998-803229A4 31D2D8 000C+00 1/0 0/0 0/0 .text            getType__18J3DTevBlockPatchedFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlockPatched::getType() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getType__18J3DTevBlockPatchedFv.s"
}
#pragma pop

/* 803229A4-803229AC -00001 0008+00 0/0 0/0 0/0 .text setTevStageNum__18J3DTevBlockPatchedFUc */
void J3DTevBlockPatched::setTevStageNum(u8 param_0) {
    *(u8*)(((u8*)this) + 208) /* this->field_0xd0 */ = (u8)(param_0);
}

/* 803229AC-803229B8 31D2EC 000C+00 1/0 0/0 0/0 .text setTevStageNum__18J3DTevBlockPatchedFPCUc */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlockPatched::setTevStageNum(u8 const* param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevStageNum__18J3DTevBlockPatchedFPCUc.s"
}
#pragma pop

/* 803229B8-803229C0 31D2F8 0008+00 1/0 0/0 0/0 .text getTevStageNum__18J3DTevBlockPatchedCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlockPatched::getTevStageNum() const {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTevStageNum__18J3DTevBlockPatchedCFv.s"
}
#pragma pop

/* 803229C0-803229D0 31D300 0010+00 1/0 0/0 0/0 .text            setTexNo__18J3DTevBlockPatchedFUlUs
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlockPatched::setTexNo(u32 param_0, u16 param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTexNo__18J3DTevBlockPatchedFUlUs.s"
}
#pragma pop

/* 803229D0-803229E4 31D310 0014+00 1/0 0/0 0/0 .text setTexNo__18J3DTevBlockPatchedFUlPCUs */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlockPatched::setTexNo(u32 param_0, u16 const* param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTexNo__18J3DTevBlockPatchedFUlPCUs.s"
}
#pragma pop

/* 803229E4-803229F4 31D324 0010+00 1/0 0/0 0/0 .text            getTexNo__18J3DTevBlockPatchedCFUl
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlockPatched::getTexNo(u32 param_0) const {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTexNo__18J3DTevBlockPatchedCFUl.s"
}
#pragma pop

/* 803229F4-80322A08 31D334 0014+00 1/0 0/0 0/0 .text
 * setTevOrder__18J3DTevBlockPatchedFUl11J3DTevOrder            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlockPatched::setTevOrder(u32 param_0, J3DTevOrder param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevOrder__18J3DTevBlockPatchedFUl11J3DTevOrder.s"
}
#pragma pop

/* 80322A08-80322A1C 31D348 0014+00 1/0 0/0 0/0 .text
 * setTevOrder__18J3DTevBlockPatchedFUlPC11J3DTevOrder          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlockPatched::setTevOrder(u32 param_0, J3DTevOrder const* param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevOrder__18J3DTevBlockPatchedFUlPC11J3DTevOrder.s"
}
#pragma pop

/* 80322A1C-80322A30 31D35C 0014+00 1/0 0/0 0/0 .text getTevOrder__18J3DTevBlockPatchedFUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlockPatched::getTevOrder(u32 param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTevOrder__18J3DTevBlockPatchedFUl.s"
}
#pragma pop

/* 80322A30-80322A6C 31D370 003C+00 1/0 0/0 0/0 .text
 * setTevStage__18J3DTevBlockPatchedFUl11J3DTevStage            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlockPatched::setTevStage(u32 param_0, J3DTevStage param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevStage__18J3DTevBlockPatchedFUl11J3DTevStage.s"
}
#pragma pop

/* 80322A6C-80322AA8 31D3AC 003C+00 1/0 0/0 0/0 .text
 * setTevStage__18J3DTevBlockPatchedFUlPC11J3DTevStage          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlockPatched::setTevStage(u32 param_0, J3DTevStage const* param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevStage__18J3DTevBlockPatchedFUlPC11J3DTevStage.s"
}
#pragma pop

/* 80322AA8-80322ABC 31D3E8 0014+00 1/0 0/0 0/0 .text getTevStage__18J3DTevBlockPatchedFUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlockPatched::getTevStage(u32 param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTevStage__18J3DTevBlockPatchedFUl.s"
}
#pragma pop

/* 80322ABC-80322AD0 31D3FC 0014+00 1/0 0/0 0/0 .text
 * setIndTevStage__18J3DTevBlockPatchedFUl14J3DIndTevStage      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlockPatched::setIndTevStage(u32 param_0, J3DIndTevStage param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setIndTevStage__18J3DTevBlockPatchedFUl14J3DIndTevStage.s"
}
#pragma pop

/* 80322AD0-80322AE4 31D410 0014+00 1/0 0/0 0/0 .text
 * setIndTevStage__18J3DTevBlockPatchedFUlPC14J3DIndTevStage    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlockPatched::setIndTevStage(u32 param_0, J3DIndTevStage const* param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setIndTevStage__18J3DTevBlockPatchedFUlPC14J3DIndTevStage.s"
}
#pragma pop

/* 80322AE4-80322AF8 31D424 0014+00 1/0 0/0 0/0 .text getIndTevStage__18J3DTevBlockPatchedFUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlockPatched::getIndTevStage(u32 param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getIndTevStage__18J3DTevBlockPatchedFUl.s"
}
#pragma pop

/* 80322AF8-80322B24 31D438 002C+00 1/0 0/0 0/0 .text
 * setTevColor__18J3DTevBlockPatchedFUl13J3DGXColorS10          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlockPatched::setTevColor(u32 param_0, J3DGXColorS10 param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevColor__18J3DTevBlockPatchedFUl13J3DGXColorS10.s"
}
#pragma pop

/* 80322B24-80322B50 31D464 002C+00 1/0 0/0 0/0 .text
 * setTevColor__18J3DTevBlockPatchedFUlPC13J3DGXColorS10        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlockPatched::setTevColor(u32 param_0, J3DGXColorS10 const* param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevColor__18J3DTevBlockPatchedFUlPC13J3DGXColorS10.s"
}
#pragma pop

/* 80322B50-80322B64 31D490 0014+00 1/0 0/0 0/0 .text getTevColor__18J3DTevBlockPatchedFUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlockPatched::getTevColor(u32 param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTevColor__18J3DTevBlockPatchedFUl.s"
}
#pragma pop

/* 80322B64-80322B90 31D4A4 002C+00 1/0 0/0 0/0 .text
 * setTevKColor__18J3DTevBlockPatchedFUl10J3DGXColor            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlockPatched::setTevKColor(u32 param_0, J3DGXColor param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevKColor__18J3DTevBlockPatchedFUl10J3DGXColor.s"
}
#pragma pop

/* 80322B90-80322BBC 31D4D0 002C+00 1/0 0/0 0/0 .text
 * setTevKColor__18J3DTevBlockPatchedFUlPC10J3DGXColor          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlockPatched::setTevKColor(u32 param_0, J3DGXColor const* param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevKColor__18J3DTevBlockPatchedFUlPC10J3DGXColor.s"
}
#pragma pop

/* 80322BBC-80322BD0 31D4FC 0014+00 1/0 0/0 0/0 .text getTevKColor__18J3DTevBlockPatchedFUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlockPatched::getTevKColor(u32 param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTevKColor__18J3DTevBlockPatchedFUl.s"
}
#pragma pop

/* 80322BD0-80322BDC 31D510 000C+00 1/0 0/0 0/0 .text setTevKColorSel__18J3DTevBlockPatchedFUlUc
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlockPatched::setTevKColorSel(u32 param_0, u8 param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevKColorSel__18J3DTevBlockPatchedFUlUc.s"
}
#pragma pop

/* 80322BDC-80322BEC 31D51C 0010+00 1/0 0/0 0/0 .text setTevKColorSel__18J3DTevBlockPatchedFUlPCUc
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlockPatched::setTevKColorSel(u32 param_0, u8 const* param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevKColorSel__18J3DTevBlockPatchedFUlPCUc.s"
}
#pragma pop

/* 80322BEC-80322BF8 31D52C 000C+00 1/0 0/0 0/0 .text getTevKColorSel__18J3DTevBlockPatchedFUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlockPatched::getTevKColorSel(u32 param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTevKColorSel__18J3DTevBlockPatchedFUl.s"
}
#pragma pop

/* 80322BF8-80322C00 31D538 0008+00 1/0 0/0 0/0 .text getTexNoOffset__18J3DTevBlockPatchedCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlockPatched::getTexNoOffset() const {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTexNoOffset__18J3DTevBlockPatchedCFv.s"
}
#pragma pop

/* 80322C00-80322C08 31D540 0008+00 1/0 0/0 0/0 .text getTevRegOffset__18J3DTevBlockPatchedCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlockPatched::getTevRegOffset() const {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTevRegOffset__18J3DTevBlockPatchedCFv.s"
}
#pragma pop

/* 80322C08-80322C10 -00001 0008+00 0/0 0/0 0/0 .text setTevRegOffset__18J3DTevBlockPatchedFUl */
void J3DTevBlockPatched::setTevRegOffset(u32 param_0) {
    *(u32*)(((u8*)this) + 212) /* this->field_0xd4 */ = (u32)(param_0);
}

/* 80322C10-80322C6C 31D550 005C+00 1/0 0/0 0/0 .text            __dt__18J3DTevBlockPatchedFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DTevBlockPatched::~J3DTevBlockPatched() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/__dt__18J3DTevBlockPatchedFv.s"
}
#pragma pop

/* 80322C6C-80322C78 31D5AC 000C+00 1/0 0/0 0/0 .text            getType__19J3DTexGenBlockBasicFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexGenBlockBasic::getType() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getType__19J3DTexGenBlockBasicFv.s"
}
#pragma pop

/* 80322C78-80322C9C 31D5B8 0024+00 1/0 0/0 0/0 .text
 * setNBTScale__19J3DTexGenBlockBasicF11J3DNBTScale             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexGenBlockBasic::setNBTScale(J3DNBTScale param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setNBTScale__19J3DTexGenBlockBasicF11J3DNBTScale.s"
}
#pragma pop

/* 80322C9C-80322CC0 31D5DC 0024+00 1/0 0/0 0/0 .text
 * setNBTScale__19J3DTexGenBlockBasicFPC11J3DNBTScale           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexGenBlockBasic::setNBTScale(J3DNBTScale const* param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setNBTScale__19J3DTexGenBlockBasicFPC11J3DNBTScale.s"
}
#pragma pop

/* 80322CC0-80322CC8 31D600 0008+00 1/0 0/0 0/0 .text getNBTScale__19J3DTexGenBlockBasicFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexGenBlockBasic::getNBTScale() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getNBTScale__19J3DTexGenBlockBasicFv.s"
}
#pragma pop

/* 80322CC8-80322D34 31D608 006C+00 1/0 0/0 0/0 .text            __dt__19J3DTexGenBlockBasicFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DTexGenBlockBasic::~J3DTexGenBlockBasic() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/__dt__19J3DTexGenBlockBasicFv.s"
}
#pragma pop

/* 80322D34-80322D3C -00001 0008+00 0/0 0/0 0/0 .text setTexGenNum__21J3DTexGenBlockPatchedFUl */
void J3DTexGenBlockPatched::setTexGenNum(u32 param_0) {
    *(u32*)(((u8*)this) + 4) /* this->field_0x4 */ = (u32)(param_0);
}

/* 80322D3C-80322D48 31D67C 000C+00 3/0 0/0 0/0 .text setTexGenNum__21J3DTexGenBlockPatchedFPCUl
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexGenBlockPatched::setTexGenNum(u32 const* param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTexGenNum__21J3DTexGenBlockPatchedFPCUl.s"
}
#pragma pop

/* 80322D48-80322D50 31D688 0008+00 3/0 0/0 0/0 .text getTexGenNum__21J3DTexGenBlockPatchedCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexGenBlockPatched::getTexGenNum() const {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTexGenNum__21J3DTexGenBlockPatchedCFv.s"
}
#pragma pop

/* 80322D50-80322D64 31D690 0014+00 3/0 0/0 0/0 .text
 * setTexCoord__21J3DTexGenBlockPatchedFUlPC11J3DTexCoord       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexGenBlockPatched::setTexCoord(u32 param_0, J3DTexCoord const* param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTexCoord__21J3DTexGenBlockPatchedFUlPC11J3DTexCoord.s"
}
#pragma pop

/* 80322D64-80322D78 31D6A4 0014+00 3/0 0/0 0/0 .text getTexCoord__21J3DTexGenBlockPatchedFUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexGenBlockPatched::getTexCoord(u32 param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTexCoord__21J3DTexGenBlockPatchedFUl.s"
}
#pragma pop

/* 80322D78-80322D88 31D6B8 0010+00 3/0 0/0 0/0 .text
 * setTexMtx__21J3DTexGenBlockPatchedFUlP9J3DTexMtx             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexGenBlockPatched::setTexMtx(u32 param_0, J3DTexMtx* param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTexMtx__21J3DTexGenBlockPatchedFUlP9J3DTexMtx.s"
}
#pragma pop

/* 80322D88-80322D98 31D6C8 0010+00 3/0 0/0 0/0 .text getTexMtx__21J3DTexGenBlockPatchedFUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexGenBlockPatched::getTexMtx(u32 param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTexMtx__21J3DTexGenBlockPatchedFUl.s"
}
#pragma pop

/* 80322D98-80322DA0 31D6D8 0008+00 3/0 0/0 0/0 .text getTexMtxOffset__21J3DTexGenBlockPatchedCFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexGenBlockPatched::getTexMtxOffset() const {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTexMtxOffset__21J3DTexGenBlockPatchedCFv.s"
}
#pragma pop

/* 80322DA0-80322DA8 -00001 0008+00 0/0 0/0 0/0 .text setTexMtxOffset__21J3DTexGenBlockPatchedFUl
 */
void J3DTexGenBlockPatched::setTexMtxOffset(u32 param_0) {
    *(u32*)(((u8*)this) + 88) /* this->field_0x58 */ = (u32)(param_0);
}

/* 80322DA8-80322DB4 31D6E8 000C+00 1/0 0/0 0/0 .text            getType__15J3DTexGenBlock4Fv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexGenBlock4::getType() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getType__15J3DTexGenBlock4Fv.s"
}
#pragma pop

/* 80322DB4-80322DD8 31D6F4 0024+00 1/0 0/0 0/0 .text setNBTScale__15J3DTexGenBlock4F11J3DNBTScale
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexGenBlock4::setNBTScale(J3DNBTScale param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setNBTScale__15J3DTexGenBlock4F11J3DNBTScale.s"
}
#pragma pop

/* 80322DD8-80322DFC 31D718 0024+00 1/0 0/0 0/0 .text
 * setNBTScale__15J3DTexGenBlock4FPC11J3DNBTScale               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexGenBlock4::setNBTScale(J3DNBTScale const* param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setNBTScale__15J3DTexGenBlock4FPC11J3DNBTScale.s"
}
#pragma pop

/* 80322DFC-80322E04 31D73C 0008+00 1/0 0/0 0/0 .text            getNBTScale__15J3DTexGenBlock4Fv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexGenBlock4::getNBTScale() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getNBTScale__15J3DTexGenBlock4Fv.s"
}
#pragma pop

/* 80322E04-80322E70 31D744 006C+00 1/0 0/0 0/0 .text            __dt__15J3DTexGenBlock4Fv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DTexGenBlock4::~J3DTexGenBlock4() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/__dt__15J3DTexGenBlock4Fv.s"
}
#pragma pop

/* 80322E70-80322E74 31D7B0 0004+00 1/0 0/0 0/0 .text            load__21J3DTexGenBlockPatchedFv */
void J3DTexGenBlockPatched::load() {
    /* empty function */
}

/* 80322E74-80322E80 31D7B4 000C+00 1/0 0/0 0/0 .text            getType__21J3DTexGenBlockPatchedFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexGenBlockPatched::getType() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getType__21J3DTexGenBlockPatchedFv.s"
}
#pragma pop

/* 80322E80-80322E8C 31D7C0 000C+00 1/0 0/0 0/0 .text            getType__20J3DColorBlockLightOnFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOn::getType() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getType__20J3DColorBlockLightOnFv.s"
}
#pragma pop

/* 80322E8C-80322EB8 31D7CC 002C+00 1/0 0/0 0/0 .text
 * setMatColor__20J3DColorBlockLightOnFUl10J3DGXColor           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOn::setMatColor(u32 param_0, J3DGXColor param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setMatColor__20J3DColorBlockLightOnFUl10J3DGXColor.s"
}
#pragma pop

/* 80322EB8-80322EE4 31D7F8 002C+00 1/0 0/0 0/0 .text
 * setMatColor__20J3DColorBlockLightOnFUlPC10J3DGXColor         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOn::setMatColor(u32 param_0, J3DGXColor const* param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setMatColor__20J3DColorBlockLightOnFUlPC10J3DGXColor.s"
}
#pragma pop

/* 80322EE4-80322EF8 31D824 0014+00 1/0 0/0 0/0 .text getMatColor__20J3DColorBlockLightOnFUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOn::getMatColor(u32 param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getMatColor__20J3DColorBlockLightOnFUl.s"
}
#pragma pop

/* 80322EF8-80322F24 31D838 002C+00 1/0 0/0 0/0 .text
 * setAmbColor__20J3DColorBlockLightOnFUl10J3DGXColor           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOn::setAmbColor(u32 param_0, J3DGXColor param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setAmbColor__20J3DColorBlockLightOnFUl10J3DGXColor.s"
}
#pragma pop

/* 80322F24-80322F50 31D864 002C+00 1/0 0/0 0/0 .text
 * setAmbColor__20J3DColorBlockLightOnFUlPC10J3DGXColor         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOn::setAmbColor(u32 param_0, J3DGXColor const* param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setAmbColor__20J3DColorBlockLightOnFUlPC10J3DGXColor.s"
}
#pragma pop

/* 80322F50-80322F64 31D890 0014+00 1/0 0/0 0/0 .text getAmbColor__20J3DColorBlockLightOnFUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOn::getAmbColor(u32 param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getAmbColor__20J3DColorBlockLightOnFUl.s"
}
#pragma pop

/* 80322F64-80322F70 31D8A4 000C+00 1/0 0/0 0/0 .text setColorChanNum__20J3DColorBlockLightOnFPCUc
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOn::setColorChanNum(u8 const* param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setColorChanNum__20J3DColorBlockLightOnFPCUc.s"
}
#pragma pop

/* 80322F70-80322F78 -00001 0008+00 0/0 0/0 0/0 .text setColorChanNum__20J3DColorBlockLightOnFUc
 */
void J3DColorBlockLightOn::setColorChanNum(u8 param_0) {
    *(u8*)(((u8*)this) + 20) /* this->field_0x14 */ = (u8)(param_0);
}

/* 80322F78-80322F80 31D8B8 0008+00 1/0 0/0 0/0 .text getColorChanNum__20J3DColorBlockLightOnCFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOn::getColorChanNum() const {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getColorChanNum__20J3DColorBlockLightOnCFv.s"
}
#pragma pop

/* 80322F80-80322F94 31D8C0 0014+00 1/0 0/0 0/0 .text
 * setColorChan__20J3DColorBlockLightOnFUlPC12J3DColorChan      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOn::setColorChan(u32 param_0, J3DColorChan const* param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setColorChan__20J3DColorBlockLightOnFUlPC12J3DColorChan.s"
}
#pragma pop

/* 80322F94-80322FA8 31D8D4 0014+00 1/0 0/0 0/0 .text
 * setColorChan__20J3DColorBlockLightOnFUlRC12J3DColorChan      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOn::setColorChan(u32 param_0, J3DColorChan const& param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setColorChan__20J3DColorBlockLightOnFUlRC12J3DColorChan.s"
}
#pragma pop

/* 80322FA8-80322FBC 31D8E8 0014+00 1/0 0/0 0/0 .text getColorChan__20J3DColorBlockLightOnFUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOn::getColorChan(u32 param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getColorChan__20J3DColorBlockLightOnFUl.s"
}
#pragma pop

/* 80322FBC-80322FCC 31D8FC 0010+00 1/0 0/0 0/0 .text
 * setLight__20J3DColorBlockLightOnFUlP11J3DLightObj            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOn::setLight(u32 param_0, J3DLightObj* param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setLight__20J3DColorBlockLightOnFUlP11J3DLightObj.s"
}
#pragma pop

/* 80322FCC-80322FDC 31D90C 0010+00 1/0 0/0 0/0 .text            getLight__20J3DColorBlockLightOnFUl
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOn::getLight(u32 param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getLight__20J3DColorBlockLightOnFUl.s"
}
#pragma pop

/* 80322FDC-80322FE4 -00001 0008+00 0/0 0/0 0/0 .text setCullMode__20J3DColorBlockLightOnFUc */
void J3DColorBlockLightOn::setCullMode(u8 param_0) {
    *(u8*)(((u8*)this) + 64) /* this->field_0x40 */ = (u8)(param_0);
}

/* 80322FE4-80322FF0 31D924 000C+00 1/0 0/0 0/0 .text setCullMode__20J3DColorBlockLightOnFPCUc */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOn::setCullMode(u8 const* param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setCullMode__20J3DColorBlockLightOnFPCUc.s"
}
#pragma pop

/* 80322FF0-80322FF8 31D930 0008+00 1/0 0/0 0/0 .text getCullMode__20J3DColorBlockLightOnCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOn::getCullMode() const {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getCullMode__20J3DColorBlockLightOnCFv.s"
}
#pragma pop

/* 80322FF8-80323000 31D938 0008+00 1/0 0/0 0/0 .text getMatColorOffset__20J3DColorBlockLightOnCFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOn::getMatColorOffset() const {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getMatColorOffset__20J3DColorBlockLightOnCFv.s"
}
#pragma pop

/* 80323000-80323008 31D940 0008+00 1/0 0/0 0/0 .text
 * getColorChanOffset__20J3DColorBlockLightOnCFv                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOn::getColorChanOffset() const {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getColorChanOffset__20J3DColorBlockLightOnCFv.s"
}
#pragma pop

/* 80323008-80323010 -00001 0008+00 0/0 0/0 0/0 .text setMatColorOffset__20J3DColorBlockLightOnFUl
 */
void J3DColorBlockLightOn::setMatColorOffset(u32 param_0) {
    *(u32*)(((u8*)this) + 68) /* this->field_0x44 */ = (u32)(param_0);
}

/* 80323010-80323018 -00001 0008+00 0/0 0/0 0/0 .text
 * setColorChanOffset__20J3DColorBlockLightOnFUl                */
void J3DColorBlockLightOn::setColorChanOffset(u32 param_0) {
    *(u32*)(((u8*)this) + 72) /* this->field_0x48 */ = (u32)(param_0);
}

/* 80323018-80323074 31D958 005C+00 1/0 0/0 0/0 .text            __dt__20J3DColorBlockLightOnFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DColorBlockLightOn::~J3DColorBlockLightOn() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/__dt__20J3DColorBlockLightOnFv.s"
}
#pragma pop

/* 80323074-80323080 31D9B4 000C+00 1/0 0/0 0/0 .text            getType__22J3DColorBlockAmbientOnFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockAmbientOn::getType() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getType__22J3DColorBlockAmbientOnFv.s"
}
#pragma pop

/* 80323080-803230AC 31D9C0 002C+00 1/0 0/0 0/0 .text
 * setAmbColor__22J3DColorBlockAmbientOnFUl10J3DGXColor         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockAmbientOn::setAmbColor(u32 param_0, J3DGXColor param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setAmbColor__22J3DColorBlockAmbientOnFUl10J3DGXColor.s"
}
#pragma pop

/* 803230AC-803230D8 31D9EC 002C+00 1/0 0/0 0/0 .text
 * setAmbColor__22J3DColorBlockAmbientOnFUlPC10J3DGXColor       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockAmbientOn::setAmbColor(u32 param_0, J3DGXColor const* param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setAmbColor__22J3DColorBlockAmbientOnFUlPC10J3DGXColor.s"
}
#pragma pop

/* 803230D8-803230EC 31DA18 0014+00 1/0 0/0 0/0 .text getAmbColor__22J3DColorBlockAmbientOnFUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockAmbientOn::getAmbColor(u32 param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getAmbColor__22J3DColorBlockAmbientOnFUl.s"
}
#pragma pop

/* ############################################################################################## */
/* 803CEA34-803CEAC8 02BB54 0090+04 1/1 2/2 0/0 .data            __vt__21J3DColorBlockLightOff */
SECTION_DATA extern void* __vt__21J3DColorBlockLightOff[36 + 1 /* padding */] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)load__21J3DColorBlockLightOffFv,
    (void*)reset__21J3DColorBlockLightOffFP13J3DColorBlock,
    (void*)patch__21J3DColorBlockLightOffFv,
    (void*)patchMatColor__21J3DColorBlockLightOffFv,
    (void*)patchLight__21J3DColorBlockLightOffFv,
    (void*)diff__21J3DColorBlockLightOffFUl,
    (void*)diffAmbColor__13J3DColorBlockFv,
    (void*)diffMatColor__21J3DColorBlockLightOffFv,
    (void*)diffColorChan__21J3DColorBlockLightOffFv,
    (void*)diffLightObj__13J3DColorBlockFUl,
    (void*)countDLSize__21J3DColorBlockLightOffFv,
    (void*)getType__21J3DColorBlockLightOffFv,
    (void*)setMatColor__21J3DColorBlockLightOffFUlPC10J3DGXColor,
    (void*)setMatColor__21J3DColorBlockLightOffFUl10J3DGXColor,
    (void*)getMatColor__21J3DColorBlockLightOffFUl,
    (void*)setAmbColor__13J3DColorBlockFUlPC10J3DGXColor,
    (void*)setAmbColor__13J3DColorBlockFUl10J3DGXColor,
    (void*)getAmbColor__13J3DColorBlockFUl,
    (void*)setColorChanNum__21J3DColorBlockLightOffFUc,
    (void*)setColorChanNum__21J3DColorBlockLightOffFPCUc,
    (void*)getColorChanNum__21J3DColorBlockLightOffCFv,
    (void*)setColorChan__21J3DColorBlockLightOffFUlRC12J3DColorChan,
    (void*)setColorChan__21J3DColorBlockLightOffFUlPC12J3DColorChan,
    (void*)getColorChan__21J3DColorBlockLightOffFUl,
    (void*)setLight__13J3DColorBlockFUlP11J3DLightObj,
    (void*)getLight__13J3DColorBlockFUl,
    (void*)setCullMode__21J3DColorBlockLightOffFPCUc,
    (void*)setCullMode__21J3DColorBlockLightOffFUc,
    (void*)getCullMode__21J3DColorBlockLightOffCFv,
    (void*)getMatColorOffset__21J3DColorBlockLightOffCFv,
    (void*)getColorChanOffset__21J3DColorBlockLightOffCFv,
    (void*)setMatColorOffset__21J3DColorBlockLightOffFUl,
    (void*)setColorChanOffset__21J3DColorBlockLightOffFUl,
    (void*)__dt__21J3DColorBlockLightOffFv,
    /* padding */
    NULL,
};

/* 803230EC-80323158 31DA2C 006C+00 1/0 0/0 0/0 .text            __dt__22J3DColorBlockAmbientOnFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DColorBlockAmbientOn::~J3DColorBlockAmbientOn() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/__dt__22J3DColorBlockAmbientOnFv.s"
}
#pragma pop

/* 80323158-80323184 31DA98 002C+00 2/0 0/0 0/0 .text
 * setMatColor__21J3DColorBlockLightOffFUl10J3DGXColor          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOff::setMatColor(u32 param_0, J3DGXColor param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setMatColor__21J3DColorBlockLightOffFUl10J3DGXColor.s"
}
#pragma pop

/* 80323184-803231B0 31DAC4 002C+00 2/0 0/0 0/0 .text
 * setMatColor__21J3DColorBlockLightOffFUlPC10J3DGXColor        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOff::setMatColor(u32 param_0, J3DGXColor const* param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setMatColor__21J3DColorBlockLightOffFUlPC10J3DGXColor.s"
}
#pragma pop

/* 803231B0-803231C4 31DAF0 0014+00 2/0 0/0 0/0 .text getMatColor__21J3DColorBlockLightOffFUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOff::getMatColor(u32 param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getMatColor__21J3DColorBlockLightOffFUl.s"
}
#pragma pop

/* 803231C4-803231D0 31DB04 000C+00 2/0 0/0 0/0 .text
 * setColorChanNum__21J3DColorBlockLightOffFPCUc                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOff::setColorChanNum(u8 const* param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setColorChanNum__21J3DColorBlockLightOffFPCUc.s"
}
#pragma pop

/* 803231D0-803231D8 -00001 0008+00 0/0 0/0 0/0 .text setColorChanNum__21J3DColorBlockLightOffFUc
 */
void J3DColorBlockLightOff::setColorChanNum(u8 param_0) {
    *(u8*)(((u8*)this) + 12) /* this->field_0xc */ = (u8)(param_0);
}

/* 803231D8-803231E0 31DB18 0008+00 2/0 0/0 0/0 .text getColorChanNum__21J3DColorBlockLightOffCFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOff::getColorChanNum() const {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getColorChanNum__21J3DColorBlockLightOffCFv.s"
}
#pragma pop

/* 803231E0-803231F4 31DB20 0014+00 2/0 0/0 0/0 .text
 * setColorChan__21J3DColorBlockLightOffFUlPC12J3DColorChan     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOff::setColorChan(u32 param_0, J3DColorChan const* param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setColorChan__21J3DColorBlockLightOffFUlPC12J3DColorChan.s"
}
#pragma pop

/* 803231F4-80323208 31DB34 0014+00 2/0 0/0 0/0 .text
 * setColorChan__21J3DColorBlockLightOffFUlRC12J3DColorChan     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOff::setColorChan(u32 param_0, J3DColorChan const& param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setColorChan__21J3DColorBlockLightOffFUlRC12J3DColorChan.s"
}
#pragma pop

/* 80323208-8032321C 31DB48 0014+00 2/0 0/0 0/0 .text getColorChan__21J3DColorBlockLightOffFUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOff::getColorChan(u32 param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getColorChan__21J3DColorBlockLightOffFUl.s"
}
#pragma pop

/* 8032321C-80323224 -00001 0008+00 0/0 0/0 0/0 .text setCullMode__21J3DColorBlockLightOffFUc */
void J3DColorBlockLightOff::setCullMode(u8 param_0) {
    *(u8*)(((u8*)this) + 22) /* this->field_0x16 */ = (u8)(param_0);
}

/* 80323224-80323230 31DB64 000C+00 2/0 0/0 0/0 .text setCullMode__21J3DColorBlockLightOffFPCUc */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOff::setCullMode(u8 const* param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setCullMode__21J3DColorBlockLightOffFPCUc.s"
}
#pragma pop

/* 80323230-80323238 31DB70 0008+00 2/0 0/0 0/0 .text getCullMode__21J3DColorBlockLightOffCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOff::getCullMode() const {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getCullMode__21J3DColorBlockLightOffCFv.s"
}
#pragma pop

/* 80323238-80323240 31DB78 0008+00 2/0 0/0 0/0 .text
 * getMatColorOffset__21J3DColorBlockLightOffCFv                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOff::getMatColorOffset() const {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getMatColorOffset__21J3DColorBlockLightOffCFv.s"
}
#pragma pop

/* 80323240-80323248 31DB80 0008+00 2/0 0/0 0/0 .text
 * getColorChanOffset__21J3DColorBlockLightOffCFv               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOff::getColorChanOffset() const {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getColorChanOffset__21J3DColorBlockLightOffCFv.s"
}
#pragma pop

/* 80323248-80323250 -00001 0008+00 0/0 0/0 0/0 .text
 * setMatColorOffset__21J3DColorBlockLightOffFUl                */
void J3DColorBlockLightOff::setMatColorOffset(u32 param_0) {
    *(u32*)(((u8*)this) + 24) /* this->field_0x18 */ = (u32)(param_0);
}

/* 80323250-80323258 -00001 0008+00 0/0 0/0 0/0 .text
 * setColorChanOffset__21J3DColorBlockLightOffFUl               */
void J3DColorBlockLightOff::setColorChanOffset(u32 param_0) {
    *(u32*)(((u8*)this) + 28) /* this->field_0x1c */ = (u32)(param_0);
}

/* 80323258-80323264 31DB98 000C+00 1/0 0/0 0/0 .text            getType__13J3DPEBlockXluFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockXlu::getType() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getType__13J3DPEBlockXluFv.s"
}
#pragma pop

/* 80323264-803232C0 31DBA4 005C+00 1/0 0/0 0/0 .text            __dt__13J3DPEBlockXluFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DPEBlockXlu::~J3DPEBlockXlu() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/__dt__13J3DPEBlockXluFv.s"
}
#pragma pop

/* 803232C0-803232CC 31DC00 000C+00 1/0 0/0 0/0 .text            getType__17J3DPEBlockTexEdgeFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockTexEdge::getType() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getType__17J3DPEBlockTexEdgeFv.s"
}
#pragma pop

/* 803232CC-80323328 31DC0C 005C+00 1/0 0/0 0/0 .text            __dt__17J3DPEBlockTexEdgeFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DPEBlockTexEdge::~J3DPEBlockTexEdge() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/__dt__17J3DPEBlockTexEdgeFv.s"
}
#pragma pop

/* 80323328-80323334 31DC68 000C+00 1/0 0/0 0/0 .text            getType__13J3DPEBlockOpaFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockOpa::getType() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getType__13J3DPEBlockOpaFv.s"
}
#pragma pop

/* 80323334-80323390 31DC74 005C+00 1/0 0/0 0/0 .text            __dt__13J3DPEBlockOpaFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DPEBlockOpa::~J3DPEBlockOpa() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/__dt__13J3DPEBlockOpaFv.s"
}
#pragma pop

/* 80323390-8032339C 31DCD0 000C+00 1/0 0/0 0/0 .text            getType__15J3DIndBlockFullFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DIndBlockFull::getType() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getType__15J3DIndBlockFullFv.s"
}
#pragma pop

/* 8032339C-803233A4 -00001 0008+00 0/0 0/0 0/0 .text setIndTexStageNum__15J3DIndBlockFullFUc */
void J3DIndBlockFull::setIndTexStageNum(u8 param_0) {
    *(u8*)(((u8*)this) + 4) /* this->field_0x4 */ = (u8)(param_0);
}

/* 803233A4-803233AC 31DCE4 0008+00 1/0 0/0 0/0 .text getIndTexStageNum__15J3DIndBlockFullCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DIndBlockFull::getIndTexStageNum() const {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getIndTexStageNum__15J3DIndBlockFullCFv.s"
}
#pragma pop

/* 803233AC-803233C0 31DCEC 0014+00 1/0 0/0 0/0 .text
 * setIndTexOrder__15J3DIndBlockFullFUl14J3DIndTexOrder         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DIndBlockFull::setIndTexOrder(u32 param_0, J3DIndTexOrder param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setIndTexOrder__15J3DIndBlockFullFUl14J3DIndTexOrder.s"
}
#pragma pop

/* 803233C0-803233D4 31DD00 0014+00 1/0 0/0 0/0 .text
 * setIndTexOrder__15J3DIndBlockFullFUlPC14J3DIndTexOrder       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DIndBlockFull::setIndTexOrder(u32 param_0, J3DIndTexOrder const* param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setIndTexOrder__15J3DIndBlockFullFUlPC14J3DIndTexOrder.s"
}
#pragma pop

/* 803233D4-803233E8 31DD14 0014+00 1/0 0/0 0/0 .text getIndTexOrder__15J3DIndBlockFullFUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DIndBlockFull::getIndTexOrder(u32 param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getIndTexOrder__15J3DIndBlockFullFUl.s"
}
#pragma pop

/* 803233E8-8032341C 31DD28 0034+00 1/0 0/0 0/0 .text
 * setIndTexMtx__15J3DIndBlockFullFUl12J3DIndTexMtx             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DIndBlockFull::setIndTexMtx(u32 param_0, J3DIndTexMtx param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setIndTexMtx__15J3DIndBlockFullFUl12J3DIndTexMtx.s"
}
#pragma pop

/* 8032341C-80323450 31DD5C 0034+00 1/0 0/0 0/0 .text
 * setIndTexMtx__15J3DIndBlockFullFUlPC12J3DIndTexMtx           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DIndBlockFull::setIndTexMtx(u32 param_0, J3DIndTexMtx const* param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setIndTexMtx__15J3DIndBlockFullFUlPC12J3DIndTexMtx.s"
}
#pragma pop

/* 80323450-80323464 31DD90 0014+00 1/0 0/0 0/0 .text            getIndTexMtx__15J3DIndBlockFullFUl
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DIndBlockFull::getIndTexMtx(u32 param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getIndTexMtx__15J3DIndBlockFullFUl.s"
}
#pragma pop

/* 80323464-80323478 31DDA4 0014+00 1/0 0/0 0/0 .text
 * setIndTexCoordScale__15J3DIndBlockFullFUl19J3DIndTexCoordScale */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DIndBlockFull::setIndTexCoordScale(u32 param_0, J3DIndTexCoordScale param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setIndTexCoordScale__15J3DIndBlockFullFUl19J3DIndTexCoordScale.s"
}
#pragma pop

/* 80323478-8032348C 31DDB8 0014+00 1/0 0/0 0/0 .text
 * setIndTexCoordScale__15J3DIndBlockFullFUlPC19J3DIndTexCoordScale */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DIndBlockFull::setIndTexCoordScale(u32 param_0, J3DIndTexCoordScale const* param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setIndTexCoordScale__15J3DIndBlockFullFUlPC19J3DIndTexCoordScale.s"
}
#pragma pop

/* 8032348C-803234A0 31DDCC 0014+00 1/0 0/0 0/0 .text getIndTexCoordScale__15J3DIndBlockFullFUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DIndBlockFull::getIndTexCoordScale(u32 param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getIndTexCoordScale__15J3DIndBlockFullFUl.s"
}
#pragma pop

/* 803234A0-8032353C 31DDE0 009C+00 1/0 0/0 0/0 .text            __dt__15J3DIndBlockFullFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DIndBlockFull::~J3DIndBlockFull() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/__dt__15J3DIndBlockFullFv.s"
}
#pragma pop

/* 8032353C-80323540 31DE7C 0004+00 1/0 1/0 0/0 .text            patchTexNo__11J3DTevBlockFv */
void J3DTevBlock::patchTexNo() {
    /* empty function */
}

/* 80323540-80323544 31DE80 0004+00 1/0 1/0 0/0 .text            patchTevReg__11J3DTevBlockFv */
void J3DTevBlock::patchTevReg() {
    /* empty function */
}

/* 80323544-80323548 31DE84 0004+00 1/0 1/0 0/0 .text            setTexNo__11J3DTevBlockFUlPCUs */
void J3DTevBlock::setTexNo(u32 param_0, u16 const* param_1) {
    /* empty function */
}

/* 80323548-8032354C 31DE88 0004+00 1/0 1/0 0/0 .text setTevOrder__11J3DTevBlockFUlPC11J3DTevOrder
 */
void J3DTevBlock::setTevOrder(u32 param_0, J3DTevOrder const* param_1) {
    /* empty function */
}

/* 8032354C-80323550 31DE8C 0004+00 1/0 1/0 0/0 .text            setTevStageNum__11J3DTevBlockFPCUc
 */
void J3DTevBlock::setTevStageNum(u8 const* param_0) {
    /* empty function */
}

/* 80323550-80323554 31DE90 0004+00 1/0 1/0 0/0 .text setTevStage__11J3DTevBlockFUlPC11J3DTevStage
 */
void J3DTevBlock::setTevStage(u32 param_0, J3DTevStage const* param_1) {
    /* empty function */
}

/* 80323554-80323558 31DE94 0004+00 1/0 1/0 0/0 .text
 * setIndTevStage__11J3DTevBlockFUlPC14J3DIndTevStage           */
void J3DTevBlock::setIndTevStage(u32 param_0, J3DIndTevStage const* param_1) {
    /* empty function */
}

/* 80323558-80323560 31DE98 0008+00 1/0 1/0 0/0 .text            getTexNoOffset__11J3DTevBlockCFv */
bool J3DTevBlock::getTexNoOffset() const {
    return false;
}

/* 80323560-8032356C 31DEA0 000C+00 1/0 0/0 0/0 .text            getType__21J3DColorBlockLightOffFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOff::getType() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getType__21J3DColorBlockLightOffFv.s"
}
#pragma pop

/* 8032356C-80323590 31DEAC 0024+00 0/0 1/0 0/0 .text            __sinit_J3DMatBlock_cpp */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __sinit_J3DMatBlock_cpp() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/__sinit_J3DMatBlock_cpp.s"
}
#pragma pop

#pragma push
#pragma force_active on
REGISTER_CTORS(0x8032356C, __sinit_J3DMatBlock_cpp);
#pragma pop

/* 803A1EA8-803A1EA8 02E508 0000+00 0/0 0/0 0/0 .rodata          @stringBase0 */
