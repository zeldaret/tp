//
// Generated By: dol2asm
// Translation Unit: J3DMaterial
//

#include "JSystem/J3DGraphBase/J3DMaterial.h"
#include "JSystem/J3DGraphBase/J3DGD.h"
#include "dol2asm.h"

//
// Forward References:
//

extern "C" void createColorBlock__11J3DMaterialFUl();
extern "C" void createTexGenBlock__11J3DMaterialFUl();
extern "C" void createTevBlock__11J3DMaterialFi();
extern "C" void createIndBlock__11J3DMaterialFi();
extern "C" void createPEBlock__11J3DMaterialFUlUl();
extern "C" void calcSizeColorBlock__11J3DMaterialFUl();
extern "C" void calcSizeTexGenBlock__11J3DMaterialFUl();
extern "C" void calcSizeTevBlock__11J3DMaterialFi();
extern "C" void calcSizeIndBlock__11J3DMaterialFi();
extern "C" void calcSizePEBlock__11J3DMaterialFUlUl();
extern "C" void initialize__11J3DMaterialFv();
extern "C" void countDLSize__11J3DMaterialFv();
extern "C" void makeDisplayList_private__11J3DMaterialFP17J3DDisplayListObj();
extern "C" void makeDisplayList__11J3DMaterialFv();
extern "C" void makeSharedDisplayList__11J3DMaterialFv();
extern "C" void load__11J3DMaterialFv();
extern "C" void loadSharedDL__11J3DMaterialFv();
extern "C" void patch__11J3DMaterialFv();
extern "C" void diff__11J3DMaterialFUl();
extern "C" void calc__11J3DMaterialFPA4_Cf();
extern "C" void calcDiffTexMtx__11J3DMaterialFPA4_Cf();
extern "C" void setCurrentMtx__11J3DMaterialFv();
extern "C" void calcCurrentMtx__11J3DMaterialFv();
extern "C" void copy__11J3DMaterialFP11J3DMaterial();
extern "C" void reset__11J3DMaterialFv();
extern "C" void change__11J3DMaterialFv();
extern "C" void newSharedDisplayList__11J3DMaterialFUl();
extern "C" void newSingleSharedDisplayList__11J3DMaterialFUl();
extern "C" void initialize__18J3DPatchedMaterialFv();
extern "C" void makeDisplayList__18J3DPatchedMaterialFv();
extern "C" void makeSharedDisplayList__18J3DPatchedMaterialFv();
extern "C" void load__18J3DPatchedMaterialFv();
extern "C" void loadSharedDL__18J3DPatchedMaterialFv();
extern "C" void reset__18J3DPatchedMaterialFv();
extern "C" void change__18J3DPatchedMaterialFv();
extern "C" void initialize__17J3DLockedMaterialFv();
extern "C" void makeDisplayList__17J3DLockedMaterialFv();
extern "C" void makeSharedDisplayList__17J3DLockedMaterialFv();
extern "C" void load__17J3DLockedMaterialFv();
extern "C" void loadSharedDL__17J3DLockedMaterialFv();
extern "C" void patch__17J3DLockedMaterialFv();
extern "C" void diff__17J3DLockedMaterialFUl();
extern "C" void calc__17J3DLockedMaterialFPA4_Cf();
extern "C" void reset__17J3DLockedMaterialFv();
extern "C" void change__17J3DLockedMaterialFv();
extern "C" void __dt__21J3DColorBlockLightOffFv();
extern "C" void __dt__13J3DColorBlockFv();
extern "C" void __dt__21J3DTexGenBlockPatchedFv();
extern "C" void __dt__14J3DTexGenBlockFv();
extern "C" void __dt__11J3DTevBlockFv();
extern "C" void __dt__11J3DIndBlockFv();
extern "C" void __dt__10J3DPEBlockFv();
extern "C" bool countDLSize__14J3DTexGenBlockFv();
extern "C" bool countDLSize__13J3DColorBlockFv();
extern "C" bool countDLSize__11J3DTevBlockFv();
extern "C" bool countDLSize__11J3DIndBlockFv();
extern "C" bool countDLSize__10J3DPEBlockFv();
extern "C" void load__13J3DColorBlockFv();
extern "C" s32 getCullMode__13J3DColorBlockCFv();
extern "C" void load__11J3DTevBlockFv();
extern "C" J3DNBTScale* getNBTScale__14J3DTexGenBlockFv();
extern "C" void patch__13J3DColorBlockFv();
extern "C" void diff__13J3DColorBlockFUl();
extern "C" void diff__10J3DPEBlockFUl();
extern "C" void reset__10J3DPEBlockFP10J3DPEBlock();
extern "C" void reset__11J3DIndBlockFP11J3DIndBlock();
extern "C" void reset__11J3DTevBlockFP11J3DTevBlock(J3DTevBlock* param_0);
extern "C" void reset__14J3DTexGenBlockFP14J3DTexGenBlock();
extern "C" void reset__13J3DColorBlockFP13J3DColorBlock();
extern "C" void diffFog__10J3DPEBlockFv();
extern "C" void diffBlend__10J3DPEBlockFv();
extern "C" void setFog__10J3DPEBlockFP6J3DFog();
extern "C" void setFog__10J3DPEBlockF6J3DFog();
extern "C" void setAlphaComp__10J3DPEBlockFPC12J3DAlphaComp();
extern "C" void setBlend__10J3DPEBlockFPC8J3DBlend();
extern "C" void setZMode__10J3DPEBlockFPC8J3DZMode();
extern "C" void setZCompLoc__10J3DPEBlockFPCUc();
extern "C" void setDither__10J3DPEBlockFUc();
extern "C" void setDither__10J3DPEBlockFPCUc();
extern "C" bool getDither__10J3DPEBlockCFv();
extern "C" bool getFogOffset__10J3DPEBlockCFv();
extern "C" void setFogOffset__10J3DPEBlockFUl();
extern "C" void diff__15J3DIndBlockNullFUl();
extern "C" void load__15J3DIndBlockNullFv();
extern "C" void reset__15J3DIndBlockNullFP11J3DIndBlock();
extern "C" void getType__15J3DIndBlockNullFv();
extern "C" void __dt__15J3DIndBlockNullFv();
extern "C" void setIndTexOrder__11J3DIndBlockFUlPC14J3DIndTexOrder();
extern "C" void setIndTexOrder__11J3DIndBlockFUl14J3DIndTexOrder();
extern "C" void setIndTexMtx__11J3DIndBlockFUlPC12J3DIndTexMtx();
extern "C" void setIndTexCoordScale__11J3DIndBlockFUlPC19J3DIndTexCoordScale();
extern "C" void setTexGenNum__14J3DTexGenBlockFPCUl();
extern "C" void setNBTScale__14J3DTexGenBlockF11J3DNBTScale();
extern "C" void setNBTScale__14J3DTexGenBlockFPC11J3DNBTScale();
extern "C" bool getTexMtxOffset__14J3DTexGenBlockCFv();
extern "C" void setTexMtxOffset__14J3DTexGenBlockFUl();
extern "C" void patchMatColor__13J3DColorBlockFv();
extern "C" void diffAmbColor__13J3DColorBlockFv();
extern "C" void diffMatColor__13J3DColorBlockFv();
extern "C" void diffColorChan__13J3DColorBlockFv();
extern "C" void diffLightObj__13J3DColorBlockFUl();
extern "C" void setMatColor__13J3DColorBlockFUlPC10J3DGXColor();
extern "C" void setColorChanNum__13J3DColorBlockFPCUc();
extern "C" void setColorChan__13J3DColorBlockFUlPC12J3DColorChan();
extern "C" bool getLight__13J3DColorBlockFUl();
extern "C" void setCullMode__13J3DColorBlockFUc();
extern "C" void setCullMode__13J3DColorBlockFPCUc();
extern "C" bool getMatColorOffset__13J3DColorBlockCFv();
extern "C" bool getColorChanOffset__13J3DColorBlockCFv();
extern "C" void setMatColorOffset__13J3DColorBlockFUl();
extern "C" void setColorChanOffset__13J3DColorBlockFUl();

//
// External References:
//

extern "C" void patch__10J3DPEBlockFv();
extern "C" void patchLight__13J3DColorBlockFv();
extern "C" bool getZCompLoc__10J3DPEBlockCFv();
extern "C" bool getZMode__10J3DPEBlockFv();
extern "C" bool getBlend__10J3DPEBlockFv();
extern "C" bool getAlphaComp__10J3DPEBlockFv();
extern "C" bool getFog__10J3DPEBlockFv();
extern "C" bool getIndTexCoordScale__11J3DIndBlockFUl();
extern "C" bool getIndTexMtx__11J3DIndBlockFUl();
extern "C" bool getIndTexOrder__11J3DIndBlockFUl();
extern "C" bool getIndTexStageNum__11J3DIndBlockCFv();
extern "C" bool getTexMtx__14J3DTexGenBlockFUl();
extern "C" bool getTexCoord__14J3DTexGenBlockFUl();
extern "C" bool getTexGenNum__14J3DTexGenBlockCFv();
extern "C" bool getAmbColor__13J3DColorBlockFUl();
extern "C" bool getColorChan__13J3DColorBlockFUl();
extern "C" bool getMatColor__13J3DColorBlockFUl();
extern "C" bool getColorChanNum__13J3DColorBlockCFv();
extern "C" void setZCompLoc__10J3DPEBlockFUc();
extern "C" void setZMode__10J3DPEBlockF8J3DZMode();
extern "C" void setBlend__10J3DPEBlockFRC8J3DBlend();
extern "C" void setAlphaComp__10J3DPEBlockFRC12J3DAlphaComp();
extern "C" void setIndTexCoordScale__11J3DIndBlockFUl19J3DIndTexCoordScale();
extern "C" void __dt__19J3DIndTexCoordScaleFv();
extern "C" void setIndTexMtx__11J3DIndBlockFUl12J3DIndTexMtx();
extern "C" void __dt__12J3DIndTexMtxFv();
extern "C" void setIndTexStageNum__11J3DIndBlockFUc();
extern "C" void setTexCoord__14J3DTexGenBlockFUlPC11J3DTexCoord();
extern "C" void setTexGenNum__14J3DTexGenBlockFUl();
extern "C" void setAmbColor__13J3DColorBlockFUl10J3DGXColor();
extern "C" void setColorChan__13J3DColorBlockFUlRC12J3DColorChan();
extern "C" void setMatColor__13J3DColorBlockFUl10J3DGXColor();
extern "C" void setColorChanNum__13J3DColorBlockFUc();
extern "C" void __ct__19J3DIndTexCoordScaleFv();
extern "C" void __ct__12J3DIndTexMtxFv();
extern "C" void __ct__14J3DIndTexOrderFv();
extern "C" void __ct__19J3DTevSwapModeTableFv();
extern "C" void __ct__11J3DTevOrderFv();
extern "C" void __ct__14J3DIndTevStageFv();
extern "C" void __ct__11J3DTevStageFv();
extern "C" void __ct__13J3DGXColorS10Fv();
extern "C" void __ct__11J3DTexCoordFv();
extern "C" void __ct__12J3DColorChanFv();
extern "C" void __ct__10J3DGXColorFv();
extern "C" void setTexMtx__14J3DTexGenBlockFUlP9J3DTexMtx();
extern "C" void setLight__13J3DColorBlockFUlP11J3DLightObj();
extern "C" void setAmbColor__13J3DColorBlockFUlPC10J3DGXColor();
extern "C" void* __nw__FUl();
extern "C" void __dl__FPv();
extern "C" void J3DGDSetGenMode__FUcUcUcUc11_GXCullMode();
extern "C" void J3DGDSetGenMode_3Param__FUcUcUc();
extern "C" void newDisplayList__17J3DDisplayListObjFUl();
extern "C" void newSingleDisplayList__17J3DDisplayListObjFUl();
extern "C" void callDL__17J3DDisplayListObjCFv();
extern "C" void beginDL__17J3DDisplayListObjFv();
extern "C" void endDL__17J3DDisplayListObjFv();
extern "C" void beginPatch__17J3DDisplayListObjFv();
extern "C" void endPatch__17J3DDisplayListObjFv();
extern "C" void beginDiff__12J3DMatPacketFv();
extern "C" void endDiff__12J3DMatPacketFv();
extern "C" void initialize__21J3DColorBlockLightOffFv();
extern "C" void initialize__22J3DColorBlockAmbientOnFv();
extern "C" void initialize__20J3DColorBlockLightOnFv();
extern "C" void initialize__21J3DTexGenBlockPatchedFv();
extern "C" void initialize__15J3DTexGenBlock4Fv();
extern "C" void initialize__19J3DTexGenBlockBasicFv();
extern "C" void initialize__12J3DTevBlock1Fv();
extern "C" void initialize__12J3DTevBlock2Fv();
extern "C" void initialize__12J3DTevBlock4Fv();
extern "C" void initialize__13J3DTevBlock16Fv();
extern "C" void initialize__15J3DIndBlockFullFv();
extern "C" void initialize__16J3DPEBlockFogOffFv();
extern "C" void initialize__14J3DPEBlockFullFv();
extern "C" void loadNBTScale__FR11J3DNBTScale();
extern "C" void __as__10J3DFogInfoFRC10J3DFogInfo();
extern "C" void __construct_array();
extern "C" void _savegpr_24();
extern "C" void _savegpr_26();
extern "C" void _savegpr_27();
extern "C" void _savegpr_29();
extern "C" void _restgpr_24();
extern "C" void _restgpr_26();
extern "C" void _restgpr_27();
extern "C" void _restgpr_29();
extern "C" extern void* __vt__14J3DPEBlockFull[31];
extern "C" extern void* __vt__16J3DPEBlockFogOff[31];
extern "C" extern void* __vt__13J3DTevBlock16[55];
extern "C" extern void* __vt__12J3DTevBlock4[55];
extern "C" extern void* __vt__12J3DTevBlock2[55];
extern "C" extern void* __vt__12J3DTevBlock1[55];
extern "C" extern void* __vt__19J3DTexGenBlockBasic[27];
extern "C" extern void* __vt__15J3DTexGenBlock4[27];
extern "C" extern void* __vt__21J3DTexGenBlockPatched[27];
extern "C" extern void* __vt__20J3DColorBlockLightOn[36];
extern "C" extern void* __vt__22J3DColorBlockAmbientOn[36];
extern "C" extern void* __vt__13J3DPEBlockXlu[31];
extern "C" extern void* __vt__17J3DPEBlockTexEdge[31];
extern "C" extern void* __vt__13J3DPEBlockOpa[31];
extern "C" extern void* __vt__15J3DIndBlockFull[19];
extern "C" extern void* __vt__11J3DTevBlock[55];
extern "C" extern void* __vt__21J3DColorBlockLightOff[36 + 1 /* padding */];

//
// Declarations:
//

/* ############################################################################################## */
/* 803CDC90-803CDCC0 02ADB0 0030+00 0/0 1/1 0/0 .data            __vt__17J3DLockedMaterial */
SECTION_DATA extern void* __vt__17J3DLockedMaterial[12] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)calc__17J3DLockedMaterialFPA4_Cf,
    (void*)calcDiffTexMtx__11J3DMaterialFPA4_Cf,
    (void*)makeDisplayList__17J3DLockedMaterialFv,
    (void*)makeSharedDisplayList__17J3DLockedMaterialFv,
    (void*)load__17J3DLockedMaterialFv,
    (void*)loadSharedDL__17J3DLockedMaterialFv,
    (void*)patch__17J3DLockedMaterialFv,
    (void*)diff__17J3DLockedMaterialFUl,
    (void*)reset__17J3DLockedMaterialFv,
    (void*)change__17J3DLockedMaterialFv,
};

/* 803CDCC0-803CDCF0 02ADE0 0030+00 0/0 1/1 0/0 .data            __vt__18J3DPatchedMaterial */
SECTION_DATA extern void* __vt__18J3DPatchedMaterial[12] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)calc__11J3DMaterialFPA4_Cf,
    (void*)calcDiffTexMtx__11J3DMaterialFPA4_Cf,
    (void*)makeDisplayList__18J3DPatchedMaterialFv,
    (void*)makeSharedDisplayList__18J3DPatchedMaterialFv,
    (void*)load__18J3DPatchedMaterialFv,
    (void*)loadSharedDL__18J3DPatchedMaterialFv,
    (void*)patch__11J3DMaterialFv,
    (void*)diff__11J3DMaterialFUl,
    (void*)reset__18J3DPatchedMaterialFv,
    (void*)change__18J3DPatchedMaterialFv,
};

/* 803CDCF0-803CDD20 02AE10 0030+00 0/0 6/6 0/0 .data            __vt__11J3DMaterial */
SECTION_DATA extern void* __vt__11J3DMaterial[12] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)calc__11J3DMaterialFPA4_Cf,
    (void*)calcDiffTexMtx__11J3DMaterialFPA4_Cf,
    (void*)makeDisplayList__11J3DMaterialFv,
    (void*)makeSharedDisplayList__11J3DMaterialFv,
    (void*)load__11J3DMaterialFv,
    (void*)loadSharedDL__11J3DMaterialFv,
    (void*)patch__11J3DMaterialFv,
    (void*)diff__11J3DMaterialFUl,
    (void*)reset__11J3DMaterialFv,
    (void*)change__11J3DMaterialFv,
};

/* 803CDD20-803CDD9C 02AE40 007C+00 2/2 7/7 0/0 .data            __vt__10J3DPEBlock */
SECTION_DATA extern void* __vt__10J3DPEBlock[31] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)reset__10J3DPEBlockFP10J3DPEBlock,
    (void*)NULL,
    (void*)patch__10J3DPEBlockFv,
    (void*)diff__10J3DPEBlockFUl,
    (void*)diffFog__10J3DPEBlockFv,
    (void*)diffBlend__10J3DPEBlockFv,
    (void*)countDLSize__10J3DPEBlockFv,
    (void*)NULL,
    (void*)setFog__10J3DPEBlockF6J3DFog,
    (void*)setFog__10J3DPEBlockFP6J3DFog,
    (void*)getFog__10J3DPEBlockFv,
    (void*)setAlphaComp__10J3DPEBlockFPC12J3DAlphaComp,
    (void*)setAlphaComp__10J3DPEBlockFRC12J3DAlphaComp,
    (void*)getAlphaComp__10J3DPEBlockFv,
    (void*)setBlend__10J3DPEBlockFPC8J3DBlend,
    (void*)setBlend__10J3DPEBlockFRC8J3DBlend,
    (void*)getBlend__10J3DPEBlockFv,
    (void*)setZMode__10J3DPEBlockFPC8J3DZMode,
    (void*)setZMode__10J3DPEBlockF8J3DZMode,
    (void*)getZMode__10J3DPEBlockFv,
    (void*)setZCompLoc__10J3DPEBlockFPCUc,
    (void*)setZCompLoc__10J3DPEBlockFUc,
    (void*)getZCompLoc__10J3DPEBlockCFv,
    (void*)setDither__10J3DPEBlockFPCUc,
    (void*)setDither__10J3DPEBlockFUc,
    (void*)getDither__10J3DPEBlockCFv,
    (void*)getFogOffset__10J3DPEBlockCFv,
    (void*)setFogOffset__10J3DPEBlockFUl,
    (void*)__dt__10J3DPEBlockFv,
};

/* 803CDD9C-803CDDE8 02AEBC 004C+00 2/2 1/1 0/0 .data            __vt__15J3DIndBlockNull */
SECTION_DATA extern void* __vt__15J3DIndBlockNull[19] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)reset__15J3DIndBlockNullFP11J3DIndBlock,
    (void*)diff__15J3DIndBlockNullFUl,
    (void*)load__15J3DIndBlockNullFv,
    (void*)countDLSize__11J3DIndBlockFv,
    (void*)getType__15J3DIndBlockNullFv,
    (void*)setIndTexStageNum__11J3DIndBlockFUc,
    (void*)getIndTexStageNum__11J3DIndBlockCFv,
    (void*)setIndTexOrder__11J3DIndBlockFUl14J3DIndTexOrder,
    (void*)setIndTexOrder__11J3DIndBlockFUlPC14J3DIndTexOrder,
    (void*)getIndTexOrder__11J3DIndBlockFUl,
    (void*)setIndTexMtx__11J3DIndBlockFUlPC12J3DIndTexMtx,
    (void*)setIndTexMtx__11J3DIndBlockFUl12J3DIndTexMtx,
    (void*)getIndTexMtx__11J3DIndBlockFUl,
    (void*)setIndTexCoordScale__11J3DIndBlockFUlPC19J3DIndTexCoordScale,
    (void*)setIndTexCoordScale__11J3DIndBlockFUl19J3DIndTexCoordScale,
    (void*)getIndTexCoordScale__11J3DIndBlockFUl,
    (void*)__dt__15J3DIndBlockNullFv,
};

/* 803CDDE8-803CDE34 02AF08 004C+00 3/3 2/2 0/0 .data            __vt__11J3DIndBlock */
SECTION_DATA extern void* __vt__11J3DIndBlock[19] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)reset__11J3DIndBlockFP11J3DIndBlock,
    (void*)NULL,
    (void*)NULL,
    (void*)countDLSize__11J3DIndBlockFv,
    (void*)NULL,
    (void*)setIndTexStageNum__11J3DIndBlockFUc,
    (void*)getIndTexStageNum__11J3DIndBlockCFv,
    (void*)setIndTexOrder__11J3DIndBlockFUl14J3DIndTexOrder,
    (void*)setIndTexOrder__11J3DIndBlockFUlPC14J3DIndTexOrder,
    (void*)getIndTexOrder__11J3DIndBlockFUl,
    (void*)setIndTexMtx__11J3DIndBlockFUlPC12J3DIndTexMtx,
    (void*)setIndTexMtx__11J3DIndBlockFUl12J3DIndTexMtx,
    (void*)getIndTexMtx__11J3DIndBlockFUl,
    (void*)setIndTexCoordScale__11J3DIndBlockFUlPC19J3DIndTexCoordScale,
    (void*)setIndTexCoordScale__11J3DIndBlockFUl19J3DIndTexCoordScale,
    (void*)getIndTexCoordScale__11J3DIndBlockFUl,
    (void*)__dt__11J3DIndBlockFv,
};

/* 803CDE34-803CDEA0 02AF54 006C+00 3/3 5/5 0/0 .data            __vt__14J3DTexGenBlock */
SECTION_DATA extern void* __vt__14J3DTexGenBlock[27] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)reset__14J3DTexGenBlockFP14J3DTexGenBlock,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
    (void*)countDLSize__14J3DTexGenBlockFv,
    (void*)NULL,
    (void*)setTexGenNum__14J3DTexGenBlockFPCUl,
    (void*)setTexGenNum__14J3DTexGenBlockFUl,
    (void*)getTexGenNum__14J3DTexGenBlockCFv,
    (void*)setTexCoord__14J3DTexGenBlockFUlPC11J3DTexCoord,
    (void*)getTexCoord__14J3DTexGenBlockFUl,
    (void*)setTexMtx__14J3DTexGenBlockFUlP9J3DTexMtx,
    (void*)getTexMtx__14J3DTexGenBlockFUl,
    (void*)setNBTScale__14J3DTexGenBlockFPC11J3DNBTScale,
    (void*)setNBTScale__14J3DTexGenBlockF11J3DNBTScale,
    (void*)getNBTScale__14J3DTexGenBlockFv,
    (void*)getTexMtxOffset__14J3DTexGenBlockCFv,
    (void*)setTexMtxOffset__14J3DTexGenBlockFUl,
    (void*)__dt__14J3DTexGenBlockFv,
};

/* 803CDEA0-803CDF30 02AFC0 0090+00 3/3 4/4 0/0 .data            __vt__13J3DColorBlock */
SECTION_DATA extern void* __vt__13J3DColorBlock[36] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)load__13J3DColorBlockFv,
    (void*)reset__13J3DColorBlockFP13J3DColorBlock,
    (void*)patch__13J3DColorBlockFv,
    (void*)patchMatColor__13J3DColorBlockFv,
    (void*)patchLight__13J3DColorBlockFv,
    (void*)diff__13J3DColorBlockFUl,
    (void*)diffAmbColor__13J3DColorBlockFv,
    (void*)diffMatColor__13J3DColorBlockFv,
    (void*)diffColorChan__13J3DColorBlockFv,
    (void*)diffLightObj__13J3DColorBlockFUl,
    (void*)countDLSize__13J3DColorBlockFv,
    (void*)NULL,
    (void*)setMatColor__13J3DColorBlockFUlPC10J3DGXColor,
    (void*)setMatColor__13J3DColorBlockFUl10J3DGXColor,
    (void*)getMatColor__13J3DColorBlockFUl,
    (void*)setAmbColor__13J3DColorBlockFUlPC10J3DGXColor,
    (void*)setAmbColor__13J3DColorBlockFUl10J3DGXColor,
    (void*)getAmbColor__13J3DColorBlockFUl,
    (void*)setColorChanNum__13J3DColorBlockFUc,
    (void*)setColorChanNum__13J3DColorBlockFPCUc,
    (void*)getColorChanNum__13J3DColorBlockCFv,
    (void*)setColorChan__13J3DColorBlockFUlRC12J3DColorChan,
    (void*)setColorChan__13J3DColorBlockFUlPC12J3DColorChan,
    (void*)getColorChan__13J3DColorBlockFUl,
    (void*)setLight__13J3DColorBlockFUlP11J3DLightObj,
    (void*)getLight__13J3DColorBlockFUl,
    (void*)setCullMode__13J3DColorBlockFPCUc,
    (void*)setCullMode__13J3DColorBlockFUc,
    (void*)getCullMode__13J3DColorBlockCFv,
    (void*)getMatColorOffset__13J3DColorBlockCFv,
    (void*)getColorChanOffset__13J3DColorBlockCFv,
    (void*)setMatColorOffset__13J3DColorBlockFUl,
    (void*)setColorChanOffset__13J3DColorBlockFUl,
    (void*)__dt__13J3DColorBlockFv,
};

/* 803157A0-803159A0 3100E0 0200+00 0/0 3/3 0/0 .text            createColorBlock__11J3DMaterialFUl
 */
J3DColorBlock* J3DMaterial::createColorBlock(u32 param_0) {
    J3DColorBlock* rv = NULL;
    switch (param_0) {
        case 0:
            rv = new J3DColorBlockLightOff();
            break;
        case 0x40000000:
            rv = new J3DColorBlockLightOn();
            break;
        case 0x80000000:
            rv = new J3DColorBlockAmbientOn();
            break;
    }

    return rv;
}

/* 803159A0-80315B04 3102E0 0164+00 0/0 2/2 0/0 .text            createTexGenBlock__11J3DMaterialFUl
 */
J3DTexGenBlock* J3DMaterial::createTexGenBlock(u32 param_0) {
    switch (param_0) {
        case 0x8000000:
            return new J3DTexGenBlock4();
        case 0:
        default:
            return new J3DTexGenBlockBasic();
    }
}

/* 80315B04-80315E78 310444 0374+00 0/0 2/2 0/0 .text            createTevBlock__11J3DMaterialFi */
J3DTevBlock* J3DMaterial::createTevBlock(int param_0) {
    J3DTevBlock* rv = NULL;
    if (param_0 <= 1) {
        rv = new J3DTevBlock1();
    } else if (param_0 == 2) {
        rv = new J3DTevBlock2();
    } else if (param_0 <= 4) {
        rv = new J3DTevBlock4();
    } else if (param_0 <= 16) {
        rv = new J3DTevBlock16();
    }
    return rv;
}

/* 80315E78-80315F60 3107B8 00E8+00 0/0 3/3 0/0 .text            createIndBlock__11J3DMaterialFi */
J3DIndBlock* J3DMaterial::createIndBlock(int param_0) {
    if (param_0 != 0) {
        return new J3DIndBlockFull();
    }

    return new J3DIndBlockNull();
}

/* 80315F60-80316100 3108A0 01A0+00 0/0 3/3 0/0 .text            createPEBlock__11J3DMaterialFUlUl
 */
// rv is in r5 for some reason
#ifdef NONMATCHING
J3DPEBlock* J3DMaterial::createPEBlock(u32 param_0, u32 param_1) {
    J3DPEBlock* rv = NULL;
    if (param_0 == 0) {
        if (param_1 & 1) {
            return new J3DPEBlockOpa();
        } else if (param_1 & 2) {
            return new J3DPEBlockTexEdge();
        } else if (param_1 & 4) {
            return new J3DPEBlockXlu();
        }
    }

    if (param_0 == 0x10000000) {
        rv = new J3DPEBlockFull();
    } else if (param_0 == 0x20000000) {
        rv = new J3DPEBlockFogOff();
    }
    return rv;
}
#else
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DPEBlock* J3DMaterial::createPEBlock(u32 param_0, u32 param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/createPEBlock__11J3DMaterialFUlUl.s"
}
#pragma pop
#endif

/* 80316100-80316150 310A40 0050+00 0/0 2/2 0/0 .text calcSizeColorBlock__11J3DMaterialFUl */
u32 J3DMaterial::calcSizeColorBlock(u32 param_0) {
    u32 rv = 0;
    switch (param_0) {
        case 0:
            rv = sizeof(J3DColorBlockLightOff);
            break;
        case 0x40000000:
            rv = sizeof(J3DColorBlockLightOn);
            break;
        case 0x80000000:
            rv = sizeof(J3DColorBlockAmbientOn);
            break;
    }

    return rv;
}

/* 80316150-8031617C 310A90 002C+00 0/0 1/1 0/0 .text calcSizeTexGenBlock__11J3DMaterialFUl */
u32 J3DMaterial::calcSizeTexGenBlock(u32 param_0) {
    switch (param_0) {
        case 0x8000000:
            return sizeof(J3DTexGenBlock4);
        case 0:
        default:
            return sizeof(J3DTexGenBlockBasic);
    }
}

/* 8031617C-803161C4 310ABC 0048+00 0/0 1/1 0/0 .text            calcSizeTevBlock__11J3DMaterialFi
 */
u32 J3DMaterial::calcSizeTevBlock(int param_0) {
    u32 rv = 0;
    if (param_0 <= 1) {
        rv = sizeof(J3DTevBlock1);
    } else if (param_0 == 2) {
        rv = sizeof(J3DTevBlock2);
    } else if (param_0 <= 4) {
        rv = sizeof(J3DTevBlock4);
    } else if (param_0 <= 16) {
        rv = sizeof(J3DTevBlock16);
    }
    return rv;
}

/* 803161C4-803161D8 310B04 0014+00 0/0 2/2 0/0 .text            calcSizeIndBlock__11J3DMaterialFi
 */
u32 J3DMaterial::calcSizeIndBlock(int param_0) {
    if (param_0 != 0) {
        return sizeof(J3DIndBlockFull);
    }

    return sizeof(J3DIndBlockNull);
}

/* 803161D8-80316240 310B18 0068+00 0/0 2/2 0/0 .text            calcSizePEBlock__11J3DMaterialFUlUl
 */
u32 J3DMaterial::calcSizePEBlock(u32 param_0, u32 param_1) {
    u32 rv = 0;
    if (param_0 == 0) {
        if (param_1 & 1) {
            rv = sizeof(J3DPEBlockOpa);
        } else if (param_1 & 2) {
            rv = sizeof(J3DPEBlockTexEdge);
        } else if (param_1 & 4) {
            rv = sizeof(J3DPEBlockXlu);
        }
    }
    else if (param_0 == 0x10000000) {
        rv = sizeof(J3DPEBlockFull);
    } else if (param_0 == 0x20000000) {
        rv = sizeof(J3DPEBlockFogOff);
    }
    return rv;
}

/* 80316240-80316290 310B80 0050+00 2/2 5/5 0/0 .text            initialize__11J3DMaterialFv */
void J3DMaterial::initialize() {
    mShape = NULL;
    mNext = NULL;
    mJoint = NULL;
    mMaterialMode = 1;
    mIndex = -1;
    mInvalid = 0;
    mDiffFlag = 0;
    mColorBlock = NULL;
    mTexGenBlock = NULL;
    mTevBlock = NULL;
    mIndBlock = NULL;
    mPEBlock = NULL;
    mpOrigMaterial = NULL;
    mMaterialAnm = NULL;
    mSharedDLObj = NULL;
}

/* 80316290-80316344 310BD0 00B4+00 0/0 2/2 0/0 .text            countDLSize__11J3DMaterialFv */
u32 J3DMaterial::countDLSize() {
    return (mColorBlock->countDLSize() + mTexGenBlock->countDLSize() + mTevBlock->countDLSize() +
        mIndBlock->countDLSize() + mPEBlock->countDLSize() + 31) & ~0x1f;
}

/* 80316344-80316620 310C84 02DC+00 2/2 0/0 0/0 .text
 * makeDisplayList_private__11J3DMaterialFP17J3DDisplayListObj  */
void J3DMaterial::makeDisplayList_private(J3DDisplayListObj* param_0) {
    param_0->beginDL();
    mTevBlock->load();
    mIndBlock->load();
    mPEBlock->load();
    J3DGDSetGenMode(mTexGenBlock->getTexGenNum(), mColorBlock->getColorChanNum(), mTevBlock->getTevStageNum(), mIndBlock->getIndTexStageNum(), (GXCullMode)(u8)mColorBlock->getCullMode());
    mTexGenBlock->load();
    mColorBlock->load();
    J3DGDSetNumChans(mColorBlock->getColorChanNum());
    J3DGDSetNumTexGens(mTexGenBlock->getTexGenNum());
    param_0->endDL();
}

/* 80316620-80316668 310F60 0048+00 1/0 0/0 0/0 .text            makeDisplayList__11J3DMaterialFv */
void J3DMaterial::makeDisplayList() {
    if (!j3dSys.getMatPacket()->isLocked()) {
        j3dSys.getMatPacket()->mDiffFlag = mDiffFlag;
        makeDisplayList_private(j3dSys.getMatPacket()->getDisplayListObj());
    }
}

/* 80316668-8031668C 310FA8 0024+00 1/0 0/0 0/0 .text makeSharedDisplayList__11J3DMaterialFv */
void J3DMaterial::makeSharedDisplayList() {
    makeDisplayList_private(mSharedDLObj);
}

/* 8031668C-803166DC 310FCC 0050+00 1/0 0/0 0/0 .text            load__11J3DMaterialFv */
void J3DMaterial::load() {
    j3dSys.setMaterialMode(mMaterialMode);
    if (!j3dSys.checkFlag(2)) {
        loadNBTScale(*mTexGenBlock->getNBTScale());
    }
}

/* 803166DC-80316740 31101C 0064+00 1/0 0/0 0/0 .text            loadSharedDL__11J3DMaterialFv */
void J3DMaterial::loadSharedDL() {
    j3dSys.setMaterialMode(mMaterialMode);
    if (!j3dSys.checkFlag(2)) {
        mSharedDLObj->callDL();
        loadNBTScale(*mTexGenBlock->getNBTScale());
    }
}

/* 80316740-803167D8 311080 0098+00 2/0 0/0 0/0 .text            patch__11J3DMaterialFv */
void J3DMaterial::patch() {
    j3dSys.getMatPacket()->mDiffFlag = mDiffFlag;
    j3dSys.getMatPacket()->beginPatch();
    mTevBlock->patch();
    mColorBlock->patch();
    mTexGenBlock->patch();
    j3dSys.getMatPacket()->endPatch();
}

/* 803167D8-803169DC 311118 0204+00 2/0 0/0 0/0 .text            diff__11J3DMaterialFUl */
void J3DMaterial::diff(u32 param_0) {
    if (j3dSys.getMatPacket()->isEnabled_Diff()) {
        j3dSys.getMatPacket()->beginDiff();
        mTevBlock->diff(param_0);
        mIndBlock->diff(param_0);
        mPEBlock->diff(param_0);
        if (param_0 & 0x2000000) {
            J3DGDSetGenMode_3Param(mTexGenBlock->getTexGenNum(), mTevBlock->getTevStageNum(), mIndBlock->getIndTexStageNum());
            J3DGDSetNumTexGens(mTexGenBlock->getTexGenNum());
        }
        mTexGenBlock->diff(param_0);
        mColorBlock->diff(param_0);
        j3dSys.getMatPacket()->endDiff();
    }
}

/* 803169DC-80316A54 31131C 0078+00 2/0 0/0 0/0 .text            calc__11J3DMaterialFPA4_Cf */
// Matches but changes order of TU vtables (?!)
#ifdef NONMATCHING
void J3DMaterial::calc(f32 const (*param_0)[4]) {
    if (j3dSys.checkFlag(0x40000000)) {
        mTexGenBlock->calcPostTexMtx(param_0);
    } else {
        mTexGenBlock->calc(param_0);
    }

    calcCurrentMtx();
    setCurrentMtx();
}
#else
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void calc__11J3DMaterialFPA4_Cf() {
    // asm void J3DMaterial::calc(f32 const (*param_0)[4]) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/calc__11J3DMaterialFPA4_Cf.s"
}
#pragma pop
#endif

/* 80316A54-80316AB0 311394 005C+00 3/0 0/0 0/0 .text calcDiffTexMtx__11J3DMaterialFPA4_Cf */
void J3DMaterial::calcDiffTexMtx(f32 const (*param_0)[4]) {
    if (j3dSys.checkFlag(0x40000000)) {
        mTexGenBlock->calcPostTexMtxWithoutViewMtx(param_0);
    } else {
        mTexGenBlock->calcWithoutViewMtx(param_0);
    }
}

/* 80316AB0-80316AC8 3113F0 0018+00 1/1 1/1 0/0 .text            setCurrentMtx__11J3DMaterialFv */
void J3DMaterial::setCurrentMtx() {
    mShape->setCurrentMtx(mCurrentMtx);
}

/* 80316AC8-80316D68 311408 02A0+00 1/1 0/0 0/0 .text            calcCurrentMtx__11J3DMaterialFv */
// Issues with setCurrentTexMtx
#ifdef NONMATCHING
void J3DMaterial::calcCurrentMtx() {
    if (!j3dSys.checkFlag(0x40000000)) {
        mCurrentMtx.setCurrentTexMtx(
            mTexGenBlock->getTexCoord(0)->getTexGenMtx(),
            mTexGenBlock->getTexCoord(1)->getTexGenMtx(),
            mTexGenBlock->getTexCoord(2)->getTexGenMtx(),
            mTexGenBlock->getTexCoord(3)->getTexGenMtx(),
            mTexGenBlock->getTexCoord(4)->getTexGenMtx(),
            mTexGenBlock->getTexCoord(5)->getTexGenMtx(),
            mTexGenBlock->getTexCoord(6)->getTexGenMtx(),
            mTexGenBlock->getTexCoord(7)->getTexGenMtx()
        );
    } else {
        mCurrentMtx.setCurrentTexMtx(
            mTexGenBlock->getTexCoord(0)->getTexMtxReg(),
            mTexGenBlock->getTexCoord(1)->getTexMtxReg(),
            mTexGenBlock->getTexCoord(2)->getTexMtxReg(),
            mTexGenBlock->getTexCoord(3)->getTexMtxReg(),
            mTexGenBlock->getTexCoord(4)->getTexMtxReg(),
            mTexGenBlock->getTexCoord(5)->getTexMtxReg(),
            mTexGenBlock->getTexCoord(6)->getTexMtxReg(),
            mTexGenBlock->getTexCoord(7)->getTexMtxReg()
        );
    }
}
#else
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterial::calcCurrentMtx() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/calcCurrentMtx__11J3DMaterialFv.s"
}
#pragma pop
#endif

/* 80316D68-80316E14 3116A8 00AC+00 1/1 0/0 0/0 .text            copy__11J3DMaterialFP11J3DMaterial
 */
void J3DMaterial::copy(J3DMaterial* param_0) {
    mColorBlock->reset(param_0->mColorBlock);
    mTexGenBlock->reset(param_0->mTexGenBlock);
    mTevBlock->reset(param_0->mTevBlock);
    mIndBlock->reset(param_0->mIndBlock);
    mPEBlock->reset(param_0->mPEBlock);
}

/* 80316E14-80316E70 311754 005C+00 1/0 0/0 0/0 .text            reset__11J3DMaterialFv */
void J3DMaterial::reset() {
    if ((~mDiffFlag & 0x80000000) == 0) {
        mDiffFlag &= ~0x80000000;
        mMaterialMode = mpOrigMaterial->mMaterialMode;
        mInvalid = mpOrigMaterial->mInvalid;
        mMaterialAnm = NULL;
        copy(mpOrigMaterial);
    }
}

/* 80316E70-80316E90 3117B0 0020+00 1/0 0/0 0/0 .text            change__11J3DMaterialFv */
void J3DMaterial::change() {
    if ((mDiffFlag & 0xc0000000) == 0) {
        mDiffFlag |= 0x80000000;
        mMaterialAnm = NULL;
    }
}

/* 80316E90-80316F24 3117D0 0094+00 0/0 2/2 0/0 .text newSharedDisplayList__11J3DMaterialFUl */
s32 J3DMaterial::newSharedDisplayList(u32 param_0) {
    if (mSharedDLObj == NULL) {
        mSharedDLObj = new J3DDisplayListObj();
        if (mSharedDLObj == NULL) {
            return 4;
        }
        s32 res = mSharedDLObj->newDisplayList(param_0);
        switch (res) {
        case kJ3DError_Success:
            break;
        default:
            return res;
        }
    }
    return 0;
}

/* 80316F24-80316FB8 311864 0094+00 0/0 2/2 0/0 .text newSingleSharedDisplayList__11J3DMaterialFUl
 */
s32 J3DMaterial::newSingleSharedDisplayList(u32 param_0) {
    if (mSharedDLObj == NULL) {
        mSharedDLObj = new J3DDisplayListObj();
        if (mSharedDLObj == NULL) {
            return 4;
        }
        s32 res = mSharedDLObj->newSingleDisplayList(param_0);
        switch (res) {
        case kJ3DError_Success:
            break;
        default:
            return res;
        }
    }
    return 0;
}

/* 80316FB8-80316FD8 3118F8 0020+00 0/0 1/1 0/0 .text            initialize__18J3DPatchedMaterialFv
 */
void J3DPatchedMaterial::initialize() {
    J3DMaterial::initialize();
}

/* 80316FD8-80316FDC 311918 0004+00 1/0 0/0 0/0 .text makeDisplayList__18J3DPatchedMaterialFv */
extern "C" asm void makeDisplayList__18J3DPatchedMaterialFv() {
//void J3DPatchedMaterial::makeDisplayList() {
    /* empty function */
}

/* 80316FDC-80316FE0 31191C 0004+00 1/0 0/0 0/0 .text
 * makeSharedDisplayList__18J3DPatchedMaterialFv                */
void J3DPatchedMaterial::makeSharedDisplayList() {
    /* empty function */
}

/* 80316FE0-80316FFC 311920 001C+00 1/0 0/0 0/0 .text            load__18J3DPatchedMaterialFv */
void J3DPatchedMaterial::load() {
    j3dSys.setMaterialMode(mMaterialMode);
    if (j3dSys.checkFlag(2)) {
        return;
    }
}

/* 80316FFC-8031703C 31193C 0040+00 1/0 0/0 0/0 .text loadSharedDL__18J3DPatchedMaterialFv */
void J3DPatchedMaterial::loadSharedDL() {
    j3dSys.setMaterialMode(mMaterialMode);
    if (!j3dSys.checkFlag(0x02))
        mSharedDLObj->callDL();
}

/* 8031703C-80317040 31197C 0004+00 1/0 0/0 0/0 .text            reset__18J3DPatchedMaterialFv */
void J3DPatchedMaterial::reset() {
    /* empty function */
}

/* 80317040-80317044 311980 0004+00 1/0 0/0 0/0 .text            change__18J3DPatchedMaterialFv */
void J3DPatchedMaterial::change() {
    /* empty function */
}

/* 80317044-80317064 311984 0020+00 0/0 1/1 0/0 .text            initialize__17J3DLockedMaterialFv
 */
void J3DLockedMaterial::initialize() {
    J3DMaterial::initialize();
}

/* 80317064-80317068 3119A4 0004+00 1/0 0/0 0/0 .text makeDisplayList__17J3DLockedMaterialFv */
void J3DLockedMaterial::makeDisplayList() {
    /* empty function */
}

/* 80317068-8031706C 3119A8 0004+00 1/0 0/0 0/0 .text makeSharedDisplayList__17J3DLockedMaterialFv
 */
void J3DLockedMaterial::makeSharedDisplayList() {
    /* empty function */
}

/* 8031706C-80317088 3119AC 001C+00 1/0 0/0 0/0 .text            load__17J3DLockedMaterialFv */
void J3DLockedMaterial::load() {
    j3dSys.setMaterialMode(mMaterialMode);
    if (j3dSys.checkFlag(2)) {
        return;
    }
}

/* 80317088-803170C8 3119C8 0040+00 1/0 0/0 0/0 .text            loadSharedDL__17J3DLockedMaterialFv
 */
void J3DLockedMaterial::loadSharedDL() {
    j3dSys.setMaterialMode(mMaterialMode);
    if (!j3dSys.checkFlag(0x02))
        mSharedDLObj->callDL();
}

/* 803170C8-803170CC 311A08 0004+00 1/0 0/0 0/0 .text            patch__17J3DLockedMaterialFv */
void J3DLockedMaterial::patch() {
    /* empty function */
}

/* 803170CC-803170D0 311A0C 0004+00 1/0 0/0 0/0 .text            diff__17J3DLockedMaterialFUl */
void J3DLockedMaterial::diff(u32 param_0) {
    /* empty function */
}

/* 803170D0-803170D4 311A10 0004+00 1/0 0/0 0/0 .text            calc__17J3DLockedMaterialFPA4_Cf */
extern "C" asm void calc__17J3DLockedMaterialFPA4_Cf() {
    /* empty function */
}

/* 803170D4-803170D8 311A14 0004+00 1/0 0/0 0/0 .text            reset__17J3DLockedMaterialFv */
void J3DLockedMaterial::reset() {
    /* empty function */
}

/* 803170D8-803170DC 311A18 0004+00 1/0 0/0 0/0 .text            change__17J3DLockedMaterialFv */
void J3DLockedMaterial::change() {
    /* empty function */
}

/* 803170DC-80317138 311A1C 005C+00 0/0 1/0 0/0 .text            __dt__21J3DColorBlockLightOffFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DColorBlockLightOff::~J3DColorBlockLightOff() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/__dt__21J3DColorBlockLightOffFv.s"
}
#pragma pop

/* 80317138-80317180 311A78 0048+00 1/0 0/0 0/0 .text            __dt__13J3DColorBlockFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DColorBlock::~J3DColorBlock() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/__dt__13J3DColorBlockFv.s"
}
#pragma pop

/* 80317180-803171DC 311AC0 005C+00 0/0 1/0 0/0 .text            __dt__21J3DTexGenBlockPatchedFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DTexGenBlockPatched::~J3DTexGenBlockPatched() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/__dt__21J3DTexGenBlockPatchedFv.s"
}
#pragma pop

/* 803171DC-80317224 311B1C 0048+00 1/0 0/0 0/0 .text            __dt__14J3DTexGenBlockFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DTexGenBlock::~J3DTexGenBlock() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/__dt__14J3DTexGenBlockFv.s"
}
#pragma pop

/* 80317224-8031726C 311B64 0048+00 0/0 1/0 0/0 .text            __dt__11J3DTevBlockFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DTevBlock::~J3DTevBlock() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/__dt__11J3DTevBlockFv.s"
}
#pragma pop

/* 8031726C-803172B4 311BAC 0048+00 1/0 0/0 0/0 .text            __dt__11J3DIndBlockFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DIndBlock::~J3DIndBlock() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/__dt__11J3DIndBlockFv.s"
}
#pragma pop

/* 803172B4-803172FC 311BF4 0048+00 1/0 0/0 0/0 .text            __dt__10J3DPEBlockFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DPEBlock::~J3DPEBlock() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/__dt__10J3DPEBlockFv.s"
}
#pragma pop

/* 803172FC-80317304 311C3C 0008+00 1/0 1/0 0/0 .text            countDLSize__14J3DTexGenBlockFv */
s32 J3DTexGenBlock::countDLSize() {
    return false;
}

/* 80317304-8031730C 311C44 0008+00 1/0 1/0 0/0 .text            countDLSize__13J3DColorBlockFv */
s32 J3DColorBlock::countDLSize() {
    return false;
}

/* 8031730C-80317314 311C4C 0008+00 0/0 2/0 0/0 .text            countDLSize__11J3DTevBlockFv */
s32 J3DTevBlock::countDLSize() {
    return false;
}

/* 80317314-8031731C 311C54 0008+00 2/0 0/0 0/0 .text            countDLSize__11J3DIndBlockFv */
s32 J3DIndBlock::countDLSize() {
    return false;
}

/* 8031731C-80317324 311C5C 0008+00 1/0 1/0 0/0 .text            countDLSize__10J3DPEBlockFv */
s32 J3DPEBlock::countDLSize() {
    return false;
}

/* 80317324-80317328 311C64 0004+00 1/0 1/0 0/0 .text            load__13J3DColorBlockFv */
extern "C" void load__13J3DColorBlockFv() {
    /* empty function */
}

/* 80317328-80317330 311C68 0008+00 1/0 1/0 0/0 .text            getCullMode__13J3DColorBlockCFv */
s32 J3DColorBlock::getCullMode() const {
    return 2;
}

/* 80317330-80317334 311C70 0004+00 0/0 2/0 0/0 .text            load__11J3DTevBlockFv */
void J3DTevBlock::load() {
    /* empty function */
}

/* 80317334-8031733C 311C74 0008+00 1/0 2/0 0/0 .text            getNBTScale__14J3DTexGenBlockFv */
J3DNBTScale* J3DTexGenBlock::getNBTScale() {
    return NULL;
}

/* 8031733C-80317340 311C7C 0004+00 1/0 1/0 0/0 .text            patch__13J3DColorBlockFv */
void J3DColorBlock::patch() {
    /* empty function */
}

/* 80317340-80317344 311C80 0004+00 1/0 1/0 0/0 .text            diff__13J3DColorBlockFUl */
void J3DColorBlock::diff(u32 param_0) {
    /* empty function */
}

/* 80317344-80317348 311C84 0004+00 1/0 4/0 0/0 .text            diff__10J3DPEBlockFUl */
void J3DPEBlock::diff(u32 param_0) {
    /* empty function */
}

/* 80317348-8031734C 311C88 0004+00 1/0 4/0 0/0 .text            reset__10J3DPEBlockFP10J3DPEBlock
 */
extern "C" void reset__10J3DPEBlockFP10J3DPEBlock() {
    /* empty function */
}

/* 8031734C-80317350 311C8C 0004+00 1/0 0/0 0/0 .text            reset__11J3DIndBlockFP11J3DIndBlock
 */
extern "C" void reset__11J3DIndBlockFP11J3DIndBlock() {
    /* empty function */
}

/* 80317350-80317354 311C90 0004+00 0/0 1/0 0/0 .text            reset__11J3DTevBlockFP11J3DTevBlock
 */
extern "C" void reset__11J3DTevBlockFP11J3DTevBlock(J3DTevBlock* param_0) {
    /* empty function */
}

/* 80317354-80317358 311C94 0004+00 1/0 1/0 0/0 .text reset__14J3DTexGenBlockFP14J3DTexGenBlock */
extern "C" void reset__14J3DTexGenBlockFP14J3DTexGenBlock() {
    /* empty function */
}

/* 80317358-8031735C 311C98 0004+00 1/0 1/0 0/0 .text reset__13J3DColorBlockFP13J3DColorBlock */
void J3DColorBlock::reset(J3DColorBlock* param_0) {
    /* empty function */
}

/* 8031735C-80317360 311C9C 0004+00 1/0 5/0 0/0 .text            diffFog__10J3DPEBlockFv */
void J3DPEBlock::diffFog() {
    /* empty function */
}

/* 80317360-80317364 311CA0 0004+00 1/0 4/0 0/0 .text            diffBlend__10J3DPEBlockFv */
void J3DPEBlock::diffBlend() {
    /* empty function */
}

/* 80317364-80317368 311CA4 0004+00 1/0 5/0 0/0 .text            setFog__10J3DPEBlockFP6J3DFog */
void J3DPEBlock::setFog(J3DFog* param_0) {
    /* empty function */
}

/* 80317368-8031736C 311CA8 0004+00 1/0 5/0 0/0 .text            setFog__10J3DPEBlockF6J3DFog */
void J3DPEBlock::setFog(J3DFog param_0) {
    /* empty function */
}

/* 8031736C-80317370 311CAC 0004+00 1/0 4/0 0/0 .text setAlphaComp__10J3DPEBlockFPC12J3DAlphaComp
 */
void J3DPEBlock::setAlphaComp(J3DAlphaComp const* param_0) {
    /* empty function */
}

/* 80317370-80317374 311CB0 0004+00 1/0 4/0 0/0 .text            setBlend__10J3DPEBlockFPC8J3DBlend
 */
void J3DPEBlock::setBlend(J3DBlend const* param_0) {
    /* empty function */
}

/* 80317374-80317378 311CB4 0004+00 1/0 4/0 0/0 .text            setZMode__10J3DPEBlockFPC8J3DZMode
 */
void J3DPEBlock::setZMode(J3DZMode const* param_0) {
    /* empty function */
}

/* 80317378-8031737C 311CB8 0004+00 1/0 4/0 0/0 .text            setZCompLoc__10J3DPEBlockFPCUc */
void J3DPEBlock::setZCompLoc(u8 const* param_0) {
    /* empty function */
}

/* 8031737C-80317380 311CBC 0004+00 1/0 4/0 0/0 .text            setDither__10J3DPEBlockFUc */
void J3DPEBlock::setDither(u8 param_0) {
    /* empty function */
}

/* 80317380-80317384 311CC0 0004+00 1/0 4/0 0/0 .text            setDither__10J3DPEBlockFPCUc */
void J3DPEBlock::setDither(u8 const* param_0) {
    /* empty function */
}

/* 80317384-8031738C 311CC4 0008+00 1/0 4/0 0/0 .text            getDither__10J3DPEBlockCFv */
bool J3DPEBlock::getDither() const {
    return false;
}

/* 8031738C-80317394 311CCC 0008+00 1/0 5/0 0/0 .text            getFogOffset__10J3DPEBlockCFv */
bool J3DPEBlock::getFogOffset() const {
    return false;
}

/* 80317394-80317398 311CD4 0004+00 1/0 5/0 0/0 .text            setFogOffset__10J3DPEBlockFUl */
void J3DPEBlock::setFogOffset(u32 param_0) {
    /* empty function */
}

/* 80317398-8031739C 311CD8 0004+00 1/0 0/0 0/0 .text            diff__15J3DIndBlockNullFUl */
void J3DIndBlockNull::diff(u32 param_0) {
    /* empty function */
}

/* 8031739C-803173A0 311CDC 0004+00 1/0 0/0 0/0 .text            load__15J3DIndBlockNullFv */
void J3DIndBlockNull::load() {
    /* empty function */
}

/* 803173A0-803173A4 311CE0 0004+00 1/0 0/0 0/0 .text reset__15J3DIndBlockNullFP11J3DIndBlock */
extern "C" asm void reset__15J3DIndBlockNullFP11J3DIndBlock() {
    /* empty function */
}

/* 803173A4-803173B0 311CE4 000C+00 1/0 0/0 0/0 .text            getType__15J3DIndBlockNullFv */
u32 J3DIndBlockNull::getType() {
    return 'IBLN';
}

/* 803173B0-8031740C 311CF0 005C+00 1/0 0/0 0/0 .text            __dt__15J3DIndBlockNullFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DIndBlockNull::~J3DIndBlockNull() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/__dt__15J3DIndBlockNullFv.s"
}
#pragma pop

/* 8031740C-80317410 311D4C 0004+00 2/0 0/0 0/0 .text
 * setIndTexOrder__11J3DIndBlockFUlPC14J3DIndTexOrder           */
void J3DIndBlock::setIndTexOrder(u32 param_0, J3DIndTexOrder const* param_1) {
    /* empty function */
}

/* 80317410-80317414 311D50 0004+00 2/0 0/0 0/0 .text
 * setIndTexOrder__11J3DIndBlockFUl14J3DIndTexOrder             */
void J3DIndBlock::setIndTexOrder(u32 param_0, J3DIndTexOrder param_1) {
    /* empty function */
}

/* 80317414-80317418 311D54 0004+00 2/0 0/0 0/0 .text
 * setIndTexMtx__11J3DIndBlockFUlPC12J3DIndTexMtx               */
void J3DIndBlock::setIndTexMtx(u32 param_0, J3DIndTexMtx const* param_1) {
    /* empty function */
}

/* 80317418-8031741C 311D58 0004+00 2/0 0/0 0/0 .text
 * setIndTexCoordScale__11J3DIndBlockFUlPC19J3DIndTexCoordScale */
void J3DIndBlock::setIndTexCoordScale(u32 param_0, J3DIndTexCoordScale const* param_1) {
    /* empty function */
}

/* 8031741C-80317420 311D5C 0004+00 1/0 1/0 0/0 .text            setTexGenNum__14J3DTexGenBlockFPCUl
 */
void J3DTexGenBlock::setTexGenNum(u32 const* param_0) {
    /* empty function */
}

/* 80317420-80317424 311D60 0004+00 1/0 2/0 0/0 .text setNBTScale__14J3DTexGenBlockF11J3DNBTScale
 */
void J3DTexGenBlock::setNBTScale(J3DNBTScale param_0) {
    /* empty function */
}

/* 80317424-80317428 311D64 0004+00 1/0 2/0 0/0 .text
 * setNBTScale__14J3DTexGenBlockFPC11J3DNBTScale                */
void J3DTexGenBlock::setNBTScale(J3DNBTScale const* param_0) {
    /* empty function */
}

/* 80317428-80317430 311D68 0008+00 1/0 1/0 0/0 .text getTexMtxOffset__14J3DTexGenBlockCFv */
bool J3DTexGenBlock::getTexMtxOffset() const {
    return false;
}

/* 80317430-80317434 311D70 0004+00 1/0 1/0 0/0 .text setTexMtxOffset__14J3DTexGenBlockFUl */
void J3DTexGenBlock::setTexMtxOffset(u32 param_0) {
    /* empty function */
}

/* 80317434-80317438 311D74 0004+00 1/0 1/0 0/0 .text            patchMatColor__13J3DColorBlockFv */
void J3DColorBlock::patchMatColor() {
    /* empty function */
}

/* 80317438-8031743C 311D78 0004+00 1/0 3/0 0/0 .text            diffAmbColor__13J3DColorBlockFv */
void J3DColorBlock::diffAmbColor() {
    /* empty function */
}

/* 8031743C-80317440 311D7C 0004+00 1/0 1/0 0/0 .text            diffMatColor__13J3DColorBlockFv */
void J3DColorBlock::diffMatColor() {
    /* empty function */
}

/* 80317440-80317444 311D80 0004+00 1/0 1/0 0/0 .text            diffColorChan__13J3DColorBlockFv */
void J3DColorBlock::diffColorChan() {
    /* empty function */
}

/* 80317444-80317448 311D84 0004+00 1/0 3/0 0/0 .text            diffLightObj__13J3DColorBlockFUl */
void J3DColorBlock::diffLightObj(u32 param_0) {
    /* empty function */
}

/* 80317448-8031744C 311D88 0004+00 1/0 1/0 0/0 .text
 * setMatColor__13J3DColorBlockFUlPC10J3DGXColor                */
void J3DColorBlock::setMatColor(u32 param_0, J3DGXColor const* param_1) {
    /* empty function */
}

/* 8031744C-80317450 311D8C 0004+00 1/0 1/0 0/0 .text setColorChanNum__13J3DColorBlockFPCUc */
void J3DColorBlock::setColorChanNum(u8 const* param_0) {
    /* empty function */
}

/* 80317450-80317454 311D90 0004+00 1/0 1/0 0/0 .text
 * setColorChan__13J3DColorBlockFUlPC12J3DColorChan             */
void J3DColorBlock::setColorChan(u32 param_0, J3DColorChan const* param_1) {
    /* empty function */
}

/* 80317454-8031745C 311D94 0008+00 1/0 3/0 0/0 .text            getLight__13J3DColorBlockFUl */
bool J3DColorBlock::getLight(u32 param_0) {
    return false;
}

/* 8031745C-80317460 311D9C 0004+00 1/0 1/0 0/0 .text            setCullMode__13J3DColorBlockFUc */
void J3DColorBlock::setCullMode(u8 param_0) {
    /* empty function */
}

/* 80317460-80317464 311DA0 0004+00 1/0 1/0 0/0 .text            setCullMode__13J3DColorBlockFPCUc
 */
void J3DColorBlock::setCullMode(u8 const* param_0) {
    /* empty function */
}

/* 80317464-8031746C 311DA4 0008+00 1/0 1/0 0/0 .text getMatColorOffset__13J3DColorBlockCFv */
bool J3DColorBlock::getMatColorOffset() const {
    return false;
}

/* 8031746C-80317474 311DAC 0008+00 1/0 1/0 0/0 .text getColorChanOffset__13J3DColorBlockCFv */
bool J3DColorBlock::getColorChanOffset() const {
    return false;
}

/* 80317474-80317478 311DB4 0004+00 1/0 1/0 0/0 .text setMatColorOffset__13J3DColorBlockFUl */
void J3DColorBlock::setMatColorOffset(u32 param_0) {
    /* empty function */
}

/* 80317478-8031747C 311DB8 0004+00 1/0 1/0 0/0 .text setColorChanOffset__13J3DColorBlockFUl */
void J3DColorBlock::setColorChanOffset(u32 param_0) {
    /* empty function */
}
