//
// Generated By: dol2asm
// Translation Unit: J3DMaterialFactory
//

#include "JSystem/J3DGraphLoader/J3DMaterialFactory.h"
#include "dol2asm.h"

//
// Types:
//

struct J3DZMode {};

struct J3DTexMtxInfo {
    /* 80325718 */ void operator=(J3DTexMtxInfo const&);
};

struct J3DTexMtx {};

struct J3DTexGenBlockPatched {
    /* 80317644 */ void initialize();
};

struct J3DTexGenBlockNull {
    /* 80332AA0 */ void calc(f32 const (*)[4]);
    /* 80332AA4 */ void calcWithoutViewMtx(f32 const (*)[4]);
    /* 80332AA8 */ void calcPostTexMtx(f32 const (*)[4]);
    /* 80332AAC */ void calcPostTexMtxWithoutViewMtx(f32 const (*)[4]);
    /* 80332AB0 */ void load();
    /* 80332AB4 */ void patch();
    /* 80332AB8 */ void diff(u32);
    /* 80332ABC */ void diffTexMtx();
    /* 80332AC0 */ void diffTexGen();
    /* 80332AC4 */ void getType();
    /* 80332AD0 */ ~J3DTexGenBlockNull();
};

struct J3DNBTScale {};

struct J3DTexCoord {
    /* 8000E464 */ J3DTexCoord();
};

struct J3DTexGenBlock {
    /* 8000DFD8 */ bool getTexMtx(u32);
    /* 8000DFE0 */ bool getTexCoord(u32);
    /* 8000DFE8 */ bool getTexGenNum() const;
    /* 8000E0CC */ void setTexCoord(u32, J3DTexCoord const*);
    /* 8031741C */ void setTexGenNum(u32 const*);
    /* 8000E0D0 */ void setTexGenNum(u32);
    /* 8003AB2C */ void setTexMtx(u32, J3DTexMtx*);
    /* 803172FC */ bool countDLSize();
    /* 80317334 */ bool getNBTScale();
    /* 80317354 */ void reset(J3DTexGenBlock*);
    /* 80317420 */ void setNBTScale(J3DNBTScale);
    /* 80317424 */ void setNBTScale(J3DNBTScale const*);
    /* 80317428 */ bool getTexMtxOffset() const;
    /* 80317430 */ void setTexMtxOffset(u32);
};

struct J3DTevSwapModeTable {};

struct J3DTevSwapModeInfo {};

struct J3DTevStageInfo {};

struct J3DTevStage {
    /* 8000E230 */ J3DTevStage();
    /* 8003AACC */ J3DTevStage(J3DTevStageInfo const&);
};

struct J3DTevOrder {
    /* 8000E140 */ J3DTevOrder();
};

struct J3DTevBlockPatched {
    /* 803176E0 */ void initialize();
};

struct J3DGXColorS10 {
    /* 8000E460 */ J3DGXColorS10();
};

struct J3DIndTevStage {
    /* 8000E14C */ J3DIndTevStage();
};

struct J3DGXColor {
    /* 8000E538 */ J3DGXColor();
};

struct J3DTevBlock {
    /* 8000DBC8 */ void patchTexNoAndTexCoordScale();
    /* 8000DBD4 */ void patch();
    /* 8000DF84 */ bool getIndTevStage(u32);
    /* 8000DF8C */ bool getTevStage(u32);
    /* 8000DF94 */ void getTexNo(u32) const;
    /* 8000DFA0 */ bool getTevSwapModeTable(u32);
    /* 8000DFA8 */ bool getTevKAlphaSel(u32);
    /* 8000DFB0 */ bool getTevKColorSel(u32);
    /* 8000DFB8 */ bool getTevOrder(u32);
    /* 8000DFC0 */ bool getTevKColor(u32);
    /* 8000DFC8 */ bool getTevColor(u32);
    /* 8000DFD0 */ bool getTevStageNum() const;
    /* 8000E0A4 */ void setIndTevStage(u32, J3DIndTevStage);
    /* 80323554 */ void setIndTevStage(u32, J3DIndTevStage const*);
    /* 8000E0A8 */ void setTevStage(u32, J3DTevStage);
    /* 80323550 */ void setTevStage(u32, J3DTevStage const*);
    /* 8000E0AC */ void setTexNo(u32, u16);
    /* 80323544 */ void setTexNo(u32, u16 const*);
    /* 8000E0B0 */ void setTevSwapModeTable(u32, J3DTevSwapModeTable);
    /* 80322960 */ void setTevSwapModeTable(u32, J3DTevSwapModeTable const*);
    /* 8000E0B4 */ void setTevKAlphaSel(u32, u8);
    /* 80322954 */ void setTevKAlphaSel(u32, u8 const*);
    /* 8000E0B8 */ void setTevKColorSel(u32, u8);
    /* 80322950 */ void setTevKColorSel(u32, u8 const*);
    /* 8000E0BC */ void setTevOrder(u32, J3DTevOrder);
    /* 80323548 */ void setTevOrder(u32, J3DTevOrder const*);
    /* 800732AC */ void setTevKColor(u32, J3DGXColor const*);
    /* 8000E0C0 */ void setTevKColor(u32, J3DGXColor);
    /* 80110E80 */ void setTevColor(u32, J3DGXColorS10 const*);
    /* 8000E0C4 */ void setTevColor(u32, J3DGXColorS10);
    /* 8000E0C8 */ void setTevStageNum(u8);
    /* 8032354C */ void setTevStageNum(u8 const*);
    /* 8031730C */ bool countDLSize();
    /* 80317330 */ void load();
    /* 8031CD44 */ void diff(u32);
    /* 8031E098 */ void indexToPtr_private(u32);
    /* 80321938 */ void diffTevReg();
    /* 8032193C */ void diffTevStageIndirect();
    /* 80321940 */ void diffTevStage();
    /* 80321944 */ void diffTexCoordScale();
    /* 80321948 */ void diffTexNo();
    /* 80322958 */ void setTevSwapModeInfo(u32, J3DTevSwapModeInfo);
    /* 8032295C */ void setTevSwapModeInfo(u32, J3DTevSwapModeInfo const*);
    /* 80322964 */ bool getTevRegOffset() const;
    /* 8032296C */ void setTevRegOffset(u32);
    /* 8032353C */ void patchTexNo();
    /* 80323540 */ void patchTevReg();
    /* 80323558 */ bool getTexNoOffset() const;
};

struct J3DTevBlockNull {
    /* 803176D4 */ void initialize();
    /* 80332A0C */ void reset(J3DTevBlock*);
    /* 80332A10 */ void ptrToIndex();
    /* 80332A14 */ void indexToPtr();
    /* 80332A38 */ void getType();
    /* 80332A44 */ ~J3DTevBlockNull();
};

struct J3DPatchedMaterial {
    /* 80316FB8 */ void initialize();
};

struct J3DPEBlockNull {
    /* 803329A0 */ void load();
    /* 803329A4 */ void getType();
    /* 803329B0 */ ~J3DPEBlockNull();
};

struct J3DFog {};

struct J3DAlphaComp {};

struct J3DBlend {};

struct J3DPEBlock {
    /* 8000DBCC */ void patch();
    /* 8000DF3C */ bool getZCompLoc() const;
    /* 8000DF44 */ bool getZMode();
    /* 8000DF4C */ bool getBlend();
    /* 8000DF54 */ bool getAlphaComp();
    /* 8000DF5C */ bool getFog();
    /* 8000E010 */ void setZCompLoc(u8);
    /* 80317378 */ void setZCompLoc(u8 const*);
    /* 8000E014 */ void setZMode(J3DZMode);
    /* 80317374 */ void setZMode(J3DZMode const*);
    /* 8000E018 */ void setBlend(J3DBlend const&);
    /* 80317370 */ void setBlend(J3DBlend const*);
    /* 8000E01C */ void setAlphaComp(J3DAlphaComp const&);
    /* 8031736C */ void setAlphaComp(J3DAlphaComp const*);
    /* 8031731C */ bool countDLSize();
    /* 80317344 */ void diff(u32);
    /* 80317348 */ void reset(J3DPEBlock*);
    /* 8031735C */ void diffFog();
    /* 80317360 */ void diffBlend();
    /* 80317364 */ void setFog(J3DFog*);
    /* 80317368 */ void setFog(J3DFog);
    /* 80317380 */ void setDither(u8 const*);
    /* 8031737C */ void setDither(u8);
    /* 80317384 */ bool getDither() const;
    /* 8031738C */ bool getFogOffset() const;
    /* 80317394 */ void setFogOffset(u32);
};

struct J3DMaterial {
    /* 803157A0 */ void createColorBlock(u32);
    /* 803159A0 */ void createTexGenBlock(u32);
    /* 80315B04 */ void createTevBlock(int);
    /* 80315E78 */ void createIndBlock(int);
    /* 80315F60 */ void createPEBlock(u32, u32);
    /* 80316100 */ void calcSizeColorBlock(u32);
    /* 80316150 */ void calcSizeTexGenBlock(u32);
    /* 8031617C */ void calcSizeTevBlock(int);
    /* 803161C4 */ void calcSizeIndBlock(int);
    /* 803161D8 */ void calcSizePEBlock(u32, u32);
    /* 80316240 */ void initialize();
    /* 80332B94 */ ~J3DMaterial();
};

struct J3DMaterialBlock {};

struct J3DMaterialDLBlock {};

struct J3DMaterialFactory {
    struct MaterialType {};

    /* 80330234 */ J3DMaterialFactory(J3DMaterialDLBlock const&);
    /* 8032FFEC */ J3DMaterialFactory(J3DMaterialBlock const&);
    /* 803302BC */ void countUniqueMaterials();
    /* 80330304 */ void countTexGens(int) const;
    /* 8033033C */ void countStages(int) const;
    /* 803303C4 */ void create(J3DMaterial*, J3DMaterialFactory::MaterialType, int, u32) const;
    /* 80330440 */ void createNormalMaterial(J3DMaterial*, int, u32) const;
    /* 80330D84 */ void createPatchedMaterial(J3DMaterial*, int, u32) const;
    /* 8033168C */ void modifyPatchedCurrentMtx(J3DMaterial*, int) const;
    /* 803317D4 */ void createLockedMaterial(J3DMaterial*, int, u32) const;
    /* 80331A7C */ void calcSize(J3DMaterial*, J3DMaterialFactory::MaterialType, int, u32) const;
    /* 80331AFC */ void calcSizeNormalMaterial(J3DMaterial*, int, u32) const;
    /* 80331C30 */ void calcSizePatchedMaterial(J3DMaterial*, int, u32) const;
    /* 80331D00 */ void calcSizeLockedMaterial(J3DMaterial*, int, u32) const;
    /* 80331D18 */ void newMatColor(int, int) const;
    /* 80331D74 */ void newColorChanNum(int) const;
    /* 80331DAC */ void newColorChan(int, int) const;
    /* 80331F50 */ void newAmbColor(int, int) const;
    /* 80331FAC */ void newTexGenNum(int) const;
    /* 80331FE4 */ void newTexCoord(int, int) const;
    /* 80332044 */ void newTexMtx(int, int) const;
    /* 803320CC */ void newCullMode(int) const;
    /* 8033210C */ void newTexNo(int, int) const;
    /* 80332154 */ void newTevOrder(int, int) const;
    /* 803321A0 */ void newTevColor(int, int) const;
    /* 80332210 */ void newTevKColor(int, int) const;
    /* 8033226C */ void newTevStageNum(int) const;
    /* 803322A4 */ void newTevStage(int, int) const;
    /* 80332304 */ void newTevSwapModeTable(int, int) const;
    /* 803323A0 */ void newIndTexStageNum(int) const;
    /* 803323C8 */ void newIndTexOrder(int, int) const;
    /* 8033240C */ void newIndTexMtx(int, int) const;
    /* 803324B4 */ void newIndTevStage(int, int) const;
    /* 80332648 */ void newIndTexCoordScale(int, int) const;
    /* 8033268C */ void newFog(int) const;
    /* 80332768 */ void newAlphaComp(int) const;
    /* 803327E8 */ void newBlend(int) const;
    /* 8033282C */ void newZMode(int) const;
    /* 8033288C */ void newZCompLoc(int) const;
    /* 803328C4 */ void newDither(int) const;
    /* 803328FC */ void newNBTScale(int) const;
};

struct J3DLockedMaterial {
    /* 80317044 */ void initialize();
};

struct J3DLightObj {};

struct J3DIndTexMtxInfo {
    /* 803257DC */ void operator=(J3DIndTexMtxInfo const&);
};

struct J3DFogInfo {
    /* 80325800 */ void operator=(J3DFogInfo const&);
};

struct J3DDisplayListObj {
    /* 803125E4 */ void setSingleDisplayList(void*, u32);
};

struct J3DColorChan {};

struct J3DColorBlockNull {
    /* 80332B2C */ void getType();
    /* 80332B38 */ ~J3DColorBlockNull();
};

struct J3DColorBlock {
    /* 8000DBD0 */ void patchLight();
    /* 8000DFF0 */ bool getAmbColor(u32);
    /* 8000DFF8 */ bool getColorChan(u32);
    /* 8000E000 */ bool getMatColor(u32);
    /* 8000E008 */ u8 getColorChanNum() const;
    /* 801A4C0C */ void setAmbColor(u32, J3DGXColor const*);
    /* 8000E0D4 */ void setAmbColor(u32, J3DGXColor);
    /* 80317450 */ void setColorChan(u32, J3DColorChan const*);
    /* 8000E0D8 */ void setColorChan(u32, J3DColorChan const&);
    /* 80317448 */ void setMatColor(u32, J3DGXColor const*);
    /* 8000E0DC */ void setMatColor(u32, J3DGXColor);
    /* 8031744C */ void setColorChanNum(u8 const*);
    /* 8000E0E0 */ void setColorChanNum(u8);
    /* 801A4C08 */ void setLight(u32, J3DLightObj*);
    /* 80317304 */ bool countDLSize();
    /* 80317324 */ void load();
    /* 80317328 */ s32 getCullMode() const;
    /* 8031733C */ void patch();
    /* 80317340 */ void diff(u32);
    /* 80317358 */ void reset(J3DColorBlock*);
    /* 80317434 */ void patchMatColor();
    /* 80317438 */ void diffAmbColor();
    /* 8031743C */ void diffMatColor();
    /* 80317440 */ void diffColorChan();
    /* 80317444 */ void diffLightObj(u32);
    /* 80317454 */ bool getLight(u32);
    /* 8031745C */ void setCullMode(u8);
    /* 80317460 */ void setCullMode(u8 const*);
    /* 80317464 */ bool getMatColorOffset() const;
    /* 8031746C */ bool getColorChanOffset() const;
    /* 80317474 */ void setMatColorOffset(u32);
    /* 80317478 */ void setColorChanOffset(u32);
};

//
// Forward References:
//

extern "C" void __ct__18J3DMaterialFactoryFRC16J3DMaterialBlock();
extern "C" void __ct__18J3DMaterialFactoryFRC18J3DMaterialDLBlock();
extern "C" void countUniqueMaterials__18J3DMaterialFactoryFv();
extern "C" void countTexGens__18J3DMaterialFactoryCFi();
extern "C" void countStages__18J3DMaterialFactoryCFi();
extern "C" void
create__18J3DMaterialFactoryCFP11J3DMaterialQ218J3DMaterialFactory12MaterialTypeiUl();
extern "C" void createNormalMaterial__18J3DMaterialFactoryCFP11J3DMaterialiUl();
extern "C" void createPatchedMaterial__18J3DMaterialFactoryCFP11J3DMaterialiUl();
extern "C" void modifyPatchedCurrentMtx__18J3DMaterialFactoryCFP11J3DMateriali();
extern "C" void createLockedMaterial__18J3DMaterialFactoryCFP11J3DMaterialiUl();
extern "C" void
calcSize__18J3DMaterialFactoryCFP11J3DMaterialQ218J3DMaterialFactory12MaterialTypeiUl();
extern "C" void calcSizeNormalMaterial__18J3DMaterialFactoryCFP11J3DMaterialiUl();
extern "C" void calcSizePatchedMaterial__18J3DMaterialFactoryCFP11J3DMaterialiUl();
extern "C" void calcSizeLockedMaterial__18J3DMaterialFactoryCFP11J3DMaterialiUl();
extern "C" void newMatColor__18J3DMaterialFactoryCFii();
extern "C" void newColorChanNum__18J3DMaterialFactoryCFi();
extern "C" void newColorChan__18J3DMaterialFactoryCFii();
extern "C" void newAmbColor__18J3DMaterialFactoryCFii();
extern "C" void newTexGenNum__18J3DMaterialFactoryCFi();
extern "C" void newTexCoord__18J3DMaterialFactoryCFii();
extern "C" void newTexMtx__18J3DMaterialFactoryCFii();
extern "C" void newCullMode__18J3DMaterialFactoryCFi();
extern "C" void newTexNo__18J3DMaterialFactoryCFii();
extern "C" void newTevOrder__18J3DMaterialFactoryCFii();
extern "C" void newTevColor__18J3DMaterialFactoryCFii();
extern "C" void newTevKColor__18J3DMaterialFactoryCFii();
extern "C" void newTevStageNum__18J3DMaterialFactoryCFi();
extern "C" void newTevStage__18J3DMaterialFactoryCFii();
extern "C" void newTevSwapModeTable__18J3DMaterialFactoryCFii();
extern "C" void newIndTexStageNum__18J3DMaterialFactoryCFi();
extern "C" void newIndTexOrder__18J3DMaterialFactoryCFii();
extern "C" void newIndTexMtx__18J3DMaterialFactoryCFii();
extern "C" void newIndTevStage__18J3DMaterialFactoryCFii();
extern "C" void newIndTexCoordScale__18J3DMaterialFactoryCFii();
extern "C" void newFog__18J3DMaterialFactoryCFi();
extern "C" void newAlphaComp__18J3DMaterialFactoryCFi();
extern "C" void newBlend__18J3DMaterialFactoryCFi();
extern "C" void newZMode__18J3DMaterialFactoryCFi();
extern "C" void newZCompLoc__18J3DMaterialFactoryCFi();
extern "C" void newDither__18J3DMaterialFactoryCFi();
extern "C" void newNBTScale__18J3DMaterialFactoryCFi();
extern "C" void load__14J3DPEBlockNullFv();
extern "C" void getType__14J3DPEBlockNullFv();
extern "C" void __dt__14J3DPEBlockNullFv();
extern "C" void reset__15J3DTevBlockNullFP11J3DTevBlock();
extern "C" void ptrToIndex__15J3DTevBlockNullFv();
extern "C" void indexToPtr__15J3DTevBlockNullFv();
extern "C" void getType__15J3DTevBlockNullFv();
extern "C" void __dt__15J3DTevBlockNullFv();
extern "C" void calc__18J3DTexGenBlockNullFPA4_Cf();
extern "C" void calcWithoutViewMtx__18J3DTexGenBlockNullFPA4_Cf();
extern "C" void calcPostTexMtx__18J3DTexGenBlockNullFPA4_Cf();
extern "C" void calcPostTexMtxWithoutViewMtx__18J3DTexGenBlockNullFPA4_Cf();
extern "C" void load__18J3DTexGenBlockNullFv();
extern "C" void patch__18J3DTexGenBlockNullFv();
extern "C" void diff__18J3DTexGenBlockNullFUl();
extern "C" void diffTexMtx__18J3DTexGenBlockNullFv();
extern "C" void diffTexGen__18J3DTexGenBlockNullFv();
extern "C" void getType__18J3DTexGenBlockNullFv();
extern "C" void __dt__18J3DTexGenBlockNullFv();
extern "C" void getType__17J3DColorBlockNullFv();
extern "C" void __dt__17J3DColorBlockNullFv();
extern "C" void __dt__11J3DMaterialFv();
extern "C" void func_80332BDC(void* _this, void const*, void const*);
extern "C" void func_80332BF4(void* _this, void const*, void const*);
extern "C" void func_80332C0C(void* _this, void const*, void const*);
extern "C" void func_80332C24(void* _this, void const*, void const*);
extern "C" void func_80332C3C(void* _this, void const*, void const*);
extern "C" void func_80332C54(void* _this, void const*, void const*);
extern "C" void func_80332C6C(void* _this, void const*, void const*);
extern "C" void func_80332C84(void* _this, void const*, void const*);
extern "C" void func_80332C9C(void* _this, void const*, void const*);
extern "C" void func_80332CB4(void* _this, void const*, void const*);
extern "C" void func_80332CCC(void* _this, void const*, void const*);
extern "C" void func_80332CE4(void* _this, void const*, void const*);
extern "C" void func_80332CFC(void* _this, void const*, void const*);
extern "C" void func_80332D14(void* _this, void const*, void const*);
extern "C" void func_80332D2C(void* _this, void const*, void const*);
extern "C" void func_80332D44(void* _this, void const*, void const*);
extern "C" void func_80332D5C(void* _this, void const*, void const*);
extern "C" void func_80332D74(void* _this, void const*, void const*);
extern "C" void func_80332D8C(void* _this, void const*, void const*);

//
// External References:
//

extern "C" void patchTexNoAndTexCoordScale__11J3DTevBlockFv();
extern "C" void patch__10J3DPEBlockFv();
extern "C" void patchLight__13J3DColorBlockFv();
extern "C" void patch__11J3DTevBlockFv();
extern "C" bool getZCompLoc__10J3DPEBlockCFv();
extern "C" bool getZMode__10J3DPEBlockFv();
extern "C" bool getBlend__10J3DPEBlockFv();
extern "C" bool getAlphaComp__10J3DPEBlockFv();
extern "C" bool getFog__10J3DPEBlockFv();
extern "C" bool getIndTevStage__11J3DTevBlockFUl();
extern "C" bool getTevStage__11J3DTevBlockFUl();
extern "C" void getTexNo__11J3DTevBlockCFUl();
extern "C" bool getTevSwapModeTable__11J3DTevBlockFUl();
extern "C" bool getTevKAlphaSel__11J3DTevBlockFUl();
extern "C" bool getTevKColorSel__11J3DTevBlockFUl();
extern "C" bool getTevOrder__11J3DTevBlockFUl();
extern "C" bool getTevKColor__11J3DTevBlockFUl();
extern "C" bool getTevColor__11J3DTevBlockFUl();
extern "C" bool getTevStageNum__11J3DTevBlockCFv();
extern "C" bool getTexMtx__14J3DTexGenBlockFUl();
extern "C" bool getTexCoord__14J3DTexGenBlockFUl();
extern "C" bool getTexGenNum__14J3DTexGenBlockCFv();
extern "C" bool getAmbColor__13J3DColorBlockFUl();
extern "C" bool getColorChan__13J3DColorBlockFUl();
extern "C" bool getMatColor__13J3DColorBlockFUl();
extern "C" bool getColorChanNum__13J3DColorBlockCFv();
extern "C" void setZCompLoc__10J3DPEBlockFUc();
extern "C" void setZMode__10J3DPEBlockF8J3DZMode();
extern "C" void setBlend__10J3DPEBlockFRC8J3DBlend();
extern "C" void setAlphaComp__10J3DPEBlockFRC12J3DAlphaComp();
extern "C" void setIndTevStage__11J3DTevBlockFUl14J3DIndTevStage();
extern "C" void setTevStage__11J3DTevBlockFUl11J3DTevStage();
extern "C" void setTexNo__11J3DTevBlockFUlUs();
extern "C" void setTevSwapModeTable__11J3DTevBlockFUl19J3DTevSwapModeTable();
extern "C" void setTevKAlphaSel__11J3DTevBlockFUlUc();
extern "C" void setTevKColorSel__11J3DTevBlockFUlUc();
extern "C" void setTevOrder__11J3DTevBlockFUl11J3DTevOrder();
extern "C" void setTevKColor__11J3DTevBlockFUl10J3DGXColor();
extern "C" void setTevColor__11J3DTevBlockFUl13J3DGXColorS10();
extern "C" void setTevStageNum__11J3DTevBlockFUc();
extern "C" void setTexCoord__14J3DTexGenBlockFUlPC11J3DTexCoord();
extern "C" void setTexGenNum__14J3DTexGenBlockFUl();
extern "C" void setAmbColor__13J3DColorBlockFUl10J3DGXColor();
extern "C" void setColorChan__13J3DColorBlockFUlRC12J3DColorChan();
extern "C" void setMatColor__13J3DColorBlockFUl10J3DGXColor();
extern "C" void setColorChanNum__13J3DColorBlockFUc();
extern "C" void __ct__11J3DTevOrderFv();
extern "C" void __ct__14J3DIndTevStageFv();
extern "C" void __ct__11J3DTevStageFv();
extern "C" void __ct__13J3DGXColorS10Fv();
extern "C" void __ct__11J3DTexCoordFv();
extern "C" void __ct__10J3DGXColorFv();
extern "C" void __ct__11J3DTevStageFRC15J3DTevStageInfo();
extern "C" void setTexMtx__14J3DTexGenBlockFUlP9J3DTexMtx();
extern "C" void setTevKColor__11J3DTevBlockFUlPC10J3DGXColor();
extern "C" void setTevColor__11J3DTevBlockFUlPC13J3DGXColorS10();
extern "C" void setLight__13J3DColorBlockFUlP11J3DLightObj();
extern "C" void setAmbColor__13J3DColorBlockFUlPC10J3DGXColor();
extern "C" void* __nw__FUl();
extern "C" void __dl__FPv();
extern "C" void func_802F41E8(void* _this, void const*, void const*);
extern "C" void func_802F4260(void* _this, void const*, void const*);
extern "C" void func_802F4278(void* _this, void const*, void const*);
extern "C" void func_802F4290(void* _this, void const*, void const*);
extern "C" void func_802F42C0(void* _this, void const*, void const*);
extern "C" void setSingleDisplayList__17J3DDisplayListObjFPvUl();
extern "C" void createColorBlock__11J3DMaterialFUl();
extern "C" void createTexGenBlock__11J3DMaterialFUl();
extern "C" void createTevBlock__11J3DMaterialFi();
extern "C" void createIndBlock__11J3DMaterialFi();
extern "C" void createPEBlock__11J3DMaterialFUlUl();
extern "C" void calcSizeColorBlock__11J3DMaterialFUl();
extern "C" void calcSizeTexGenBlock__11J3DMaterialFUl();
extern "C" void calcSizeTevBlock__11J3DMaterialFi();
extern "C" void calcSizeIndBlock__11J3DMaterialFi();
extern "C" void calcSizePEBlock__11J3DMaterialFUlUl();
extern "C" void initialize__11J3DMaterialFv();
extern "C" void initialize__18J3DPatchedMaterialFv();
extern "C" void initialize__17J3DLockedMaterialFv();
extern "C" bool countDLSize__14J3DTexGenBlockFv();
extern "C" bool countDLSize__13J3DColorBlockFv();
extern "C" bool countDLSize__11J3DTevBlockFv();
extern "C" bool countDLSize__10J3DPEBlockFv();
extern "C" void load__13J3DColorBlockFv();
extern "C" s32 getCullMode__13J3DColorBlockCFv();
extern "C" void load__11J3DTevBlockFv();
extern "C" bool getNBTScale__14J3DTexGenBlockFv();
extern "C" void patch__13J3DColorBlockFv();
extern "C" void diff__13J3DColorBlockFUl();
extern "C" void diff__10J3DPEBlockFUl();
extern "C" void reset__10J3DPEBlockFP10J3DPEBlock();
extern "C" void reset__14J3DTexGenBlockFP14J3DTexGenBlock();
extern "C" void reset__13J3DColorBlockFP13J3DColorBlock();
extern "C" void diffFog__10J3DPEBlockFv();
extern "C" void diffBlend__10J3DPEBlockFv();
extern "C" void setFog__10J3DPEBlockFP6J3DFog();
extern "C" void setFog__10J3DPEBlockF6J3DFog();
extern "C" void setAlphaComp__10J3DPEBlockFPC12J3DAlphaComp();
extern "C" void setBlend__10J3DPEBlockFPC8J3DBlend();
extern "C" void setZMode__10J3DPEBlockFPC8J3DZMode();
extern "C" void setZCompLoc__10J3DPEBlockFPCUc();
extern "C" void setDither__10J3DPEBlockFUc();
extern "C" void setDither__10J3DPEBlockFPCUc();
extern "C" bool getDither__10J3DPEBlockCFv();
extern "C" bool getFogOffset__10J3DPEBlockCFv();
extern "C" void setFogOffset__10J3DPEBlockFUl();
extern "C" void setTexGenNum__14J3DTexGenBlockFPCUl();
extern "C" void setNBTScale__14J3DTexGenBlockF11J3DNBTScale();
extern "C" void setNBTScale__14J3DTexGenBlockFPC11J3DNBTScale();
extern "C" bool getTexMtxOffset__14J3DTexGenBlockCFv();
extern "C" void setTexMtxOffset__14J3DTexGenBlockFUl();
extern "C" void patchMatColor__13J3DColorBlockFv();
extern "C" void diffAmbColor__13J3DColorBlockFv();
extern "C" void diffMatColor__13J3DColorBlockFv();
extern "C" void diffColorChan__13J3DColorBlockFv();
extern "C" void diffLightObj__13J3DColorBlockFUl();
extern "C" void setMatColor__13J3DColorBlockFUlPC10J3DGXColor();
extern "C" void setColorChanNum__13J3DColorBlockFPCUc();
extern "C" void setColorChan__13J3DColorBlockFUlPC12J3DColorChan();
extern "C" bool getLight__13J3DColorBlockFUl();
extern "C" void setCullMode__13J3DColorBlockFUc();
extern "C" void setCullMode__13J3DColorBlockFPCUc();
extern "C" bool getMatColorOffset__13J3DColorBlockCFv();
extern "C" bool getColorChanOffset__13J3DColorBlockCFv();
extern "C" void setMatColorOffset__13J3DColorBlockFUl();
extern "C" void setColorChanOffset__13J3DColorBlockFUl();
extern "C" void initialize__21J3DTexGenBlockPatchedFv();
extern "C" void initialize__15J3DTevBlockNullFv();
extern "C" void initialize__18J3DTevBlockPatchedFv();
extern "C" void diff__11J3DTevBlockFUl();
extern "C" void indexToPtr_private__11J3DTevBlockFUl();
extern "C" void diffTevReg__11J3DTevBlockFv();
extern "C" void diffTevStageIndirect__11J3DTevBlockFv();
extern "C" void diffTevStage__11J3DTevBlockFv();
extern "C" void diffTexCoordScale__11J3DTevBlockFv();
extern "C" void diffTexNo__11J3DTevBlockFv();
extern "C" void setTexNoOffset__11J3DTevBlockFUl();
extern "C" void setTevKColorSel__11J3DTevBlockFUlPCUc();
extern "C" void setTevKAlphaSel__11J3DTevBlockFUlPCUc();
extern "C" void setTevSwapModeInfo__11J3DTevBlockFUl18J3DTevSwapModeInfo();
extern "C" void setTevSwapModeInfo__11J3DTevBlockFUlPC18J3DTevSwapModeInfo();
extern "C" void setTevSwapModeTable__11J3DTevBlockFUlPC19J3DTevSwapModeTable();
extern "C" bool getTevRegOffset__11J3DTevBlockCFv();
extern "C" void setTevRegOffset__11J3DTevBlockFUl();
extern "C" void patchTexNo__11J3DTevBlockFv();
extern "C" void patchTevReg__11J3DTevBlockFv();
extern "C" void setTexNo__11J3DTevBlockFUlPCUs();
extern "C" void setTevOrder__11J3DTevBlockFUlPC11J3DTevOrder();
extern "C" void setTevStageNum__11J3DTevBlockFPCUc();
extern "C" void setTevStage__11J3DTevBlockFUlPC11J3DTevStage();
extern "C" void setIndTevStage__11J3DTevBlockFUlPC14J3DIndTevStage();
extern "C" bool getTexNoOffset__11J3DTevBlockCFv();
extern "C" void __as__13J3DTexMtxInfoFRC13J3DTexMtxInfo();
extern "C" void __as__16J3DIndTexMtxInfoFRC16J3DIndTexMtxInfo();
extern "C" void __as__10J3DFogInfoFRC10J3DFogInfo();
extern "C" void __construct_array();
extern "C" void _savegpr_18();
extern "C" void _savegpr_19();
extern "C" void _savegpr_24();
extern "C" void _savegpr_26();
extern "C" void _savegpr_28();
extern "C" void _savegpr_29();
extern "C" void _restgpr_18();
extern "C" void _restgpr_19();
extern "C" void _restgpr_24();
extern "C" void _restgpr_26();
extern "C" void _restgpr_28();
extern "C" void _restgpr_29();
extern "C" extern u8 const j3dDefaultTexCoordInfo[32];
extern "C" extern u8 const j3dDefaultIndTexMtxInfo[28];
extern "C" extern u8 const j3dDefaultIndTevStageInfo[12];
extern "C" extern u8 const j3dDefaultFogInfo[44];
extern "C" extern u8 const j3dDefaultNBTScaleInfo[16];
extern "C" extern void* __vt__17J3DLockedMaterial[12];
extern "C" extern void* __vt__18J3DPatchedMaterial[12];
extern "C" extern void* __vt__11J3DMaterial[12];
extern "C" extern void* __vt__10J3DPEBlock[31];
extern "C" extern void* __vt__15J3DIndBlockNull[19];
extern "C" extern void* __vt__11J3DIndBlock[19];
extern "C" extern void* __vt__14J3DTexGenBlock[27];
extern "C" extern void* __vt__13J3DColorBlock[36];
extern "C" extern void* __vt__18J3DTevBlockPatched[55];
extern "C" extern void* __vt__21J3DTexGenBlockPatched[27];
extern "C" extern void* __vt__11J3DTevBlock[55];
extern "C" extern u32 j3dDefaultTevOrderInfoNull;
extern "C" extern u32 j3dDefaultIndTexOrderNull;
extern "C" extern u8 j3dDefaultIndTexCoordScaleInfo[4];
extern "C" extern u32 j3dDefaultTevSwapModeTable;
extern "C" extern u32 j3dDefaultBlendInfo;
extern "C" extern u8 j3dDefaultColorChanInfo[8];
extern "C" extern u16 j3dDefaultZModeID[1 + 1 /* padding */];

//
// Declarations:
//

/* 8032FFEC-80330234 32A92C 0248+00 0/0 7/7 0/0 .text
 * __ct__18J3DMaterialFactoryFRC16J3DMaterialBlock              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DMaterialFactory::J3DMaterialFactory(J3DMaterialBlock const& param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/__ct__18J3DMaterialFactoryFRC16J3DMaterialBlock.s"
}
#pragma pop

/* 80330234-803302BC 32AB74 0088+00 0/0 2/2 0/0 .text
 * __ct__18J3DMaterialFactoryFRC18J3DMaterialDLBlock            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DMaterialFactory::J3DMaterialFactory(J3DMaterialDLBlock const& param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/__ct__18J3DMaterialFactoryFRC18J3DMaterialDLBlock.s"
}
#pragma pop

/* 803302BC-80330304 32ABFC 0048+00 0/0 3/3 0/0 .text countUniqueMaterials__18J3DMaterialFactoryFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterialFactory::countUniqueMaterials() {
    nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/countUniqueMaterials__18J3DMaterialFactoryFv.s"
}
#pragma pop

/* 80330304-8033033C 32AC44 0038+00 4/4 0/0 0/0 .text countTexGens__18J3DMaterialFactoryCFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterialFactory::countTexGens(int param_0) const {
    nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/countTexGens__18J3DMaterialFactoryCFi.s"
}
#pragma pop

/* 8033033C-803303C4 32AC7C 0088+00 2/2 0/0 0/0 .text countStages__18J3DMaterialFactoryCFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterialFactory::countStages(int param_0) const {
    nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/countStages__18J3DMaterialFactoryCFi.s"
}
#pragma pop

/* 803303C4-80330440 32AD04 007C+00 0/0 4/4 0/0 .text
 * create__18J3DMaterialFactoryCFP11J3DMaterialQ218J3DMaterialFactory12MaterialTypeiUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterialFactory::create(J3DMaterial* param_0, J3DMaterialFactory::MaterialType param_1,
                                    int param_2, u32 param_3) const {
    nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/func_803303C4.s"
}
#pragma pop

/* 80330440-80330D84 32AD80 0944+00 1/1 0/0 0/0 .text
 * createNormalMaterial__18J3DMaterialFactoryCFP11J3DMaterialiUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterialFactory::createNormalMaterial(J3DMaterial* param_0, int param_1,
                                                  u32 param_2) const {
    nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/createNormalMaterial__18J3DMaterialFactoryCFP11J3DMaterialiUl.s"
}
#pragma pop

/* 80330D84-8033168C 32B6C4 0908+00 1/1 0/0 0/0 .text
 * createPatchedMaterial__18J3DMaterialFactoryCFP11J3DMaterialiUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterialFactory::createPatchedMaterial(J3DMaterial* param_0, int param_1,
                                                   u32 param_2) const {
    nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/createPatchedMaterial__18J3DMaterialFactoryCFP11J3DMaterialiUl.s"
}
#pragma pop

/* 8033168C-803317D4 32BFCC 0148+00 0/0 1/1 0/0 .text
 * modifyPatchedCurrentMtx__18J3DMaterialFactoryCFP11J3DMateriali */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterialFactory::modifyPatchedCurrentMtx(J3DMaterial* param_0, int param_1) const {
    nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/modifyPatchedCurrentMtx__18J3DMaterialFactoryCFP11J3DMateriali.s"
}
#pragma pop

/* ############################################################################################## */
/* 803CEE90-803CEF0C 02BFB0 007C+00 2/2 0/0 0/0 .data            __vt__14J3DPEBlockNull */
SECTION_DATA extern void* __vt__14J3DPEBlockNull[31] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)reset__10J3DPEBlockFP10J3DPEBlock,
    (void*)load__14J3DPEBlockNullFv,
    (void*)patch__10J3DPEBlockFv,
    (void*)diff__10J3DPEBlockFUl,
    (void*)diffFog__10J3DPEBlockFv,
    (void*)diffBlend__10J3DPEBlockFv,
    (void*)countDLSize__10J3DPEBlockFv,
    (void*)getType__14J3DPEBlockNullFv,
    (void*)setFog__10J3DPEBlockF6J3DFog,
    (void*)setFog__10J3DPEBlockFP6J3DFog,
    (void*)getFog__10J3DPEBlockFv,
    (void*)setAlphaComp__10J3DPEBlockFPC12J3DAlphaComp,
    (void*)setAlphaComp__10J3DPEBlockFRC12J3DAlphaComp,
    (void*)getAlphaComp__10J3DPEBlockFv,
    (void*)setBlend__10J3DPEBlockFPC8J3DBlend,
    (void*)setBlend__10J3DPEBlockFRC8J3DBlend,
    (void*)getBlend__10J3DPEBlockFv,
    (void*)setZMode__10J3DPEBlockFPC8J3DZMode,
    (void*)setZMode__10J3DPEBlockF8J3DZMode,
    (void*)getZMode__10J3DPEBlockFv,
    (void*)setZCompLoc__10J3DPEBlockFPCUc,
    (void*)setZCompLoc__10J3DPEBlockFUc,
    (void*)getZCompLoc__10J3DPEBlockCFv,
    (void*)setDither__10J3DPEBlockFPCUc,
    (void*)setDither__10J3DPEBlockFUc,
    (void*)getDither__10J3DPEBlockCFv,
    (void*)getFogOffset__10J3DPEBlockCFv,
    (void*)setFogOffset__10J3DPEBlockFUl,
    (void*)__dt__14J3DPEBlockNullFv,
};

/* 803CEF0C-803CEFE8 02C02C 00DC+00 2/2 0/0 0/0 .data            __vt__15J3DTevBlockNull */
SECTION_DATA extern void* __vt__15J3DTevBlockNull[55] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)reset__15J3DTevBlockNullFP11J3DTevBlock,
    (void*)load__11J3DTevBlockFv,
    (void*)diff__11J3DTevBlockFUl,
    (void*)diffTexNo__11J3DTevBlockFv,
    (void*)diffTevReg__11J3DTevBlockFv,
    (void*)diffTexCoordScale__11J3DTevBlockFv,
    (void*)diffTevStage__11J3DTevBlockFv,
    (void*)diffTevStageIndirect__11J3DTevBlockFv,
    (void*)patch__11J3DTevBlockFv,
    (void*)patchTexNo__11J3DTevBlockFv,
    (void*)patchTevReg__11J3DTevBlockFv,
    (void*)patchTexNoAndTexCoordScale__11J3DTevBlockFv,
    (void*)ptrToIndex__15J3DTevBlockNullFv,
    (void*)indexToPtr__15J3DTevBlockNullFv,
    (void*)getType__15J3DTevBlockNullFv,
    (void*)countDLSize__11J3DTevBlockFv,
    (void*)setTexNo__11J3DTevBlockFUlPCUs,
    (void*)setTexNo__11J3DTevBlockFUlUs,
    (void*)getTexNo__11J3DTevBlockCFUl,
    (void*)setTevOrder__11J3DTevBlockFUlPC11J3DTevOrder,
    (void*)setTevOrder__11J3DTevBlockFUl11J3DTevOrder,
    (void*)getTevOrder__11J3DTevBlockFUl,
    (void*)setTevColor__11J3DTevBlockFUlPC13J3DGXColorS10,
    (void*)setTevColor__11J3DTevBlockFUl13J3DGXColorS10,
    (void*)getTevColor__11J3DTevBlockFUl,
    (void*)setTevKColor__11J3DTevBlockFUlPC10J3DGXColor,
    (void*)setTevKColor__11J3DTevBlockFUl10J3DGXColor,
    (void*)getTevKColor__11J3DTevBlockFUl,
    (void*)setTevKColorSel__11J3DTevBlockFUlPCUc,
    (void*)setTevKColorSel__11J3DTevBlockFUlUc,
    (void*)getTevKColorSel__11J3DTevBlockFUl,
    (void*)setTevKAlphaSel__11J3DTevBlockFUlPCUc,
    (void*)setTevKAlphaSel__11J3DTevBlockFUlUc,
    (void*)getTevKAlphaSel__11J3DTevBlockFUl,
    (void*)setTevStageNum__11J3DTevBlockFPCUc,
    (void*)setTevStageNum__11J3DTevBlockFUc,
    (void*)getTevStageNum__11J3DTevBlockCFv,
    (void*)setTevStage__11J3DTevBlockFUlPC11J3DTevStage,
    (void*)setTevStage__11J3DTevBlockFUl11J3DTevStage,
    (void*)getTevStage__11J3DTevBlockFUl,
    (void*)setTevSwapModeInfo__11J3DTevBlockFUlPC18J3DTevSwapModeInfo,
    (void*)setTevSwapModeInfo__11J3DTevBlockFUl18J3DTevSwapModeInfo,
    (void*)setTevSwapModeTable__11J3DTevBlockFUlPC19J3DTevSwapModeTable,
    (void*)setTevSwapModeTable__11J3DTevBlockFUl19J3DTevSwapModeTable,
    (void*)getTevSwapModeTable__11J3DTevBlockFUl,
    (void*)setIndTevStage__11J3DTevBlockFUlPC14J3DIndTevStage,
    (void*)setIndTevStage__11J3DTevBlockFUl14J3DIndTevStage,
    (void*)getIndTevStage__11J3DTevBlockFUl,
    (void*)getTexNoOffset__11J3DTevBlockCFv,
    (void*)getTevRegOffset__11J3DTevBlockCFv,
    (void*)setTexNoOffset__11J3DTevBlockFUl,
    (void*)setTevRegOffset__11J3DTevBlockFUl,
    (void*)__dt__15J3DTevBlockNullFv,
};

/* 803CEFE8-803CF054 02C108 006C+00 2/2 0/0 0/0 .data            __vt__18J3DTexGenBlockNull */
SECTION_DATA extern void* __vt__18J3DTexGenBlockNull[27] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)reset__14J3DTexGenBlockFP14J3DTexGenBlock,
    (void*)calc__18J3DTexGenBlockNullFPA4_Cf,
    (void*)calcWithoutViewMtx__18J3DTexGenBlockNullFPA4_Cf,
    (void*)calcPostTexMtx__18J3DTexGenBlockNullFPA4_Cf,
    (void*)calcPostTexMtxWithoutViewMtx__18J3DTexGenBlockNullFPA4_Cf,
    (void*)load__18J3DTexGenBlockNullFv,
    (void*)patch__18J3DTexGenBlockNullFv,
    (void*)diff__18J3DTexGenBlockNullFUl,
    (void*)diffTexMtx__18J3DTexGenBlockNullFv,
    (void*)diffTexGen__18J3DTexGenBlockNullFv,
    (void*)countDLSize__14J3DTexGenBlockFv,
    (void*)getType__18J3DTexGenBlockNullFv,
    (void*)setTexGenNum__14J3DTexGenBlockFPCUl,
    (void*)setTexGenNum__14J3DTexGenBlockFUl,
    (void*)getTexGenNum__14J3DTexGenBlockCFv,
    (void*)setTexCoord__14J3DTexGenBlockFUlPC11J3DTexCoord,
    (void*)getTexCoord__14J3DTexGenBlockFUl,
    (void*)setTexMtx__14J3DTexGenBlockFUlP9J3DTexMtx,
    (void*)getTexMtx__14J3DTexGenBlockFUl,
    (void*)setNBTScale__14J3DTexGenBlockFPC11J3DNBTScale,
    (void*)setNBTScale__14J3DTexGenBlockF11J3DNBTScale,
    (void*)getNBTScale__14J3DTexGenBlockFv,
    (void*)getTexMtxOffset__14J3DTexGenBlockCFv,
    (void*)setTexMtxOffset__14J3DTexGenBlockFUl,
    (void*)__dt__18J3DTexGenBlockNullFv,
};

/* 803CF054-803CF0E8 02C174 0090+04 2/2 0/0 0/0 .data            __vt__17J3DColorBlockNull */
SECTION_DATA extern void* __vt__17J3DColorBlockNull[36 + 1 /* padding */] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)load__13J3DColorBlockFv,
    (void*)reset__13J3DColorBlockFP13J3DColorBlock,
    (void*)patch__13J3DColorBlockFv,
    (void*)patchMatColor__13J3DColorBlockFv,
    (void*)patchLight__13J3DColorBlockFv,
    (void*)diff__13J3DColorBlockFUl,
    (void*)diffAmbColor__13J3DColorBlockFv,
    (void*)diffMatColor__13J3DColorBlockFv,
    (void*)diffColorChan__13J3DColorBlockFv,
    (void*)diffLightObj__13J3DColorBlockFUl,
    (void*)countDLSize__13J3DColorBlockFv,
    (void*)getType__17J3DColorBlockNullFv,
    (void*)setMatColor__13J3DColorBlockFUlPC10J3DGXColor,
    (void*)setMatColor__13J3DColorBlockFUl10J3DGXColor,
    (void*)getMatColor__13J3DColorBlockFUl,
    (void*)setAmbColor__13J3DColorBlockFUlPC10J3DGXColor,
    (void*)setAmbColor__13J3DColorBlockFUl10J3DGXColor,
    (void*)getAmbColor__13J3DColorBlockFUl,
    (void*)setColorChanNum__13J3DColorBlockFUc,
    (void*)setColorChanNum__13J3DColorBlockFPCUc,
    (void*)getColorChanNum__13J3DColorBlockCFv,
    (void*)setColorChan__13J3DColorBlockFUlRC12J3DColorChan,
    (void*)setColorChan__13J3DColorBlockFUlPC12J3DColorChan,
    (void*)getColorChan__13J3DColorBlockFUl,
    (void*)setLight__13J3DColorBlockFUlP11J3DLightObj,
    (void*)getLight__13J3DColorBlockFUl,
    (void*)setCullMode__13J3DColorBlockFPCUc,
    (void*)setCullMode__13J3DColorBlockFUc,
    (void*)getCullMode__13J3DColorBlockCFv,
    (void*)getMatColorOffset__13J3DColorBlockCFv,
    (void*)getColorChanOffset__13J3DColorBlockCFv,
    (void*)setMatColorOffset__13J3DColorBlockFUl,
    (void*)setColorChanOffset__13J3DColorBlockFUl,
    (void*)__dt__17J3DColorBlockNullFv,
    /* padding */
    NULL,
};

/* 803317D4-80331A7C 32C114 02A8+00 2/2 0/0 0/0 .text
 * createLockedMaterial__18J3DMaterialFactoryCFP11J3DMaterialiUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterialFactory::createLockedMaterial(J3DMaterial* param_0, int param_1,
                                                  u32 param_2) const {
    nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/createLockedMaterial__18J3DMaterialFactoryCFP11J3DMaterialiUl.s"
}
#pragma pop

/* 80331A7C-80331AFC 32C3BC 0080+00 0/0 4/4 0/0 .text
 * calcSize__18J3DMaterialFactoryCFP11J3DMaterialQ218J3DMaterialFactory12MaterialTypeiUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterialFactory::calcSize(J3DMaterial* param_0,
                                      J3DMaterialFactory::MaterialType param_1, int param_2,
                                      u32 param_3) const {
    nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/func_80331A7C.s"
}
#pragma pop

/* 80331AFC-80331C30 32C43C 0134+00 1/1 0/0 0/0 .text
 * calcSizeNormalMaterial__18J3DMaterialFactoryCFP11J3DMaterialiUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterialFactory::calcSizeNormalMaterial(J3DMaterial* param_0, int param_1,
                                                    u32 param_2) const {
    nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/calcSizeNormalMaterial__18J3DMaterialFactoryCFP11J3DMaterialiUl.s"
}
#pragma pop

/* 80331C30-80331D00 32C570 00D0+00 1/1 0/0 0/0 .text
 * calcSizePatchedMaterial__18J3DMaterialFactoryCFP11J3DMaterialiUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterialFactory::calcSizePatchedMaterial(J3DMaterial* param_0, int param_1,
                                                     u32 param_2) const {
    nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/calcSizePatchedMaterial__18J3DMaterialFactoryCFP11J3DMaterialiUl.s"
}
#pragma pop

/* 80331D00-80331D18 32C640 0018+00 2/2 0/0 0/0 .text
 * calcSizeLockedMaterial__18J3DMaterialFactoryCFP11J3DMaterialiUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterialFactory::calcSizeLockedMaterial(J3DMaterial* param_0, int param_1,
                                                    u32 param_2) const {
    nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/calcSizeLockedMaterial__18J3DMaterialFactoryCFP11J3DMaterialiUl.s"
}
#pragma pop

/* ############################################################################################## */
/* 804564A8-804564AC 004AA8 0004+00 1/1 0/0 0/0 .sdata2          @1691 */
SECTION_SDATA2 static u32 lit_1691 = 0xFFFFFFFF;

/* 80331D18-80331D74 32C658 005C+00 2/2 0/0 0/0 .text newMatColor__18J3DMaterialFactoryCFii */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterialFactory::newMatColor(int param_0, int param_1) const {
    nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/newMatColor__18J3DMaterialFactoryCFii.s"
}
#pragma pop

/* 80331D74-80331DAC 32C6B4 0038+00 2/2 0/0 0/0 .text newColorChanNum__18J3DMaterialFactoryCFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterialFactory::newColorChanNum(int param_0) const {
    nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/newColorChanNum__18J3DMaterialFactoryCFi.s"
}
#pragma pop

/* 80331DAC-80331F50 32C6EC 01A4+00 2/2 0/0 0/0 .text newColorChan__18J3DMaterialFactoryCFii */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterialFactory::newColorChan(int param_0, int param_1) const {
    nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/newColorChan__18J3DMaterialFactoryCFii.s"
}
#pragma pop

/* ############################################################################################## */
/* 804564AC-804564B0 004AAC 0004+00 1/1 0/0 0/0 .sdata2          @1798 */
SECTION_SDATA2 static u32 lit_1798 = 0x32323232;

/* 80331F50-80331FAC 32C890 005C+00 1/1 0/0 0/0 .text newAmbColor__18J3DMaterialFactoryCFii */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterialFactory::newAmbColor(int param_0, int param_1) const {
    nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/newAmbColor__18J3DMaterialFactoryCFii.s"
}
#pragma pop

/* 80331FAC-80331FE4 32C8EC 0038+00 2/2 0/0 0/0 .text newTexGenNum__18J3DMaterialFactoryCFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterialFactory::newTexGenNum(int param_0) const {
    nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/newTexGenNum__18J3DMaterialFactoryCFi.s"
}
#pragma pop

/* 80331FE4-80332044 32C924 0060+00 3/3 0/0 0/0 .text newTexCoord__18J3DMaterialFactoryCFii */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterialFactory::newTexCoord(int param_0, int param_1) const {
    nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/newTexCoord__18J3DMaterialFactoryCFii.s"
}
#pragma pop

/* 80332044-803320CC 32C984 0088+00 2/2 0/0 0/0 .text            newTexMtx__18J3DMaterialFactoryCFii
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterialFactory::newTexMtx(int param_0, int param_1) const {
    nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/newTexMtx__18J3DMaterialFactoryCFii.s"
}
#pragma pop

/* 803320CC-8033210C 32CA0C 0040+00 2/2 0/0 0/0 .text newCullMode__18J3DMaterialFactoryCFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterialFactory::newCullMode(int param_0) const {
    nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/newCullMode__18J3DMaterialFactoryCFi.s"
}
#pragma pop

/* 8033210C-80332154 32CA4C 0048+00 2/2 0/0 0/0 .text            newTexNo__18J3DMaterialFactoryCFii
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterialFactory::newTexNo(int param_0, int param_1) const {
    nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/newTexNo__18J3DMaterialFactoryCFii.s"
}
#pragma pop

/* 80332154-803321A0 32CA94 004C+00 2/2 0/0 0/0 .text newTevOrder__18J3DMaterialFactoryCFii */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterialFactory::newTevOrder(int param_0, int param_1) const {
    nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/newTevOrder__18J3DMaterialFactoryCFii.s"
}
#pragma pop

/* ############################################################################################## */
/* 80456BB8-80456BBC 000058 0004+00 1/1 0/0 0/0 .sbss2           @1897 */
SECTION_SBSS2 static u8 lit_1897[4];

/* 80456BBC-80456BC0 00005C 0004+00 1/1 0/0 0/0 .sbss2           None */
SECTION_SBSS2 static u8 data_80456BBC[4];

/* 803321A0-80332210 32CAE0 0070+00 2/2 0/0 0/0 .text newTevColor__18J3DMaterialFactoryCFii */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterialFactory::newTevColor(int param_0, int param_1) const {
    nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/newTevColor__18J3DMaterialFactoryCFii.s"
}
#pragma pop

/* ############################################################################################## */
/* 804564B0-804564B8 004AB0 0004+04 1/1 0/0 0/0 .sdata2          @1915 */
SECTION_SDATA2 static u32 lit_1915[1 + 1 /* padding */] = {
    0xFFFFFFFF,
    /* padding */
    0x00000000,
};

/* 80332210-8033226C 32CB50 005C+00 2/2 0/0 0/0 .text newTevKColor__18J3DMaterialFactoryCFii */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterialFactory::newTevKColor(int param_0, int param_1) const {
    nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/newTevKColor__18J3DMaterialFactoryCFii.s"
}
#pragma pop

/* 8033226C-803322A4 32CBAC 0038+00 2/2 0/0 0/0 .text newTevStageNum__18J3DMaterialFactoryCFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterialFactory::newTevStageNum(int param_0) const {
    nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/newTevStageNum__18J3DMaterialFactoryCFi.s"
}
#pragma pop

/* 803322A4-80332304 32CBE4 0060+00 2/2 0/0 0/0 .text newTevStage__18J3DMaterialFactoryCFii */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterialFactory::newTevStage(int param_0, int param_1) const {
    nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/newTevStage__18J3DMaterialFactoryCFii.s"
}
#pragma pop

/* 80332304-803323A0 32CC44 009C+00 1/1 0/0 0/0 .text
 * newTevSwapModeTable__18J3DMaterialFactoryCFii                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterialFactory::newTevSwapModeTable(int param_0, int param_1) const {
    nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/newTevSwapModeTable__18J3DMaterialFactoryCFii.s"
}
#pragma pop

/* 803323A0-803323C8 32CCE0 0028+00 2/2 0/0 0/0 .text newIndTexStageNum__18J3DMaterialFactoryCFi
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterialFactory::newIndTexStageNum(int param_0) const {
    nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/newIndTexStageNum__18J3DMaterialFactoryCFi.s"
}
#pragma pop

/* 803323C8-8033240C 32CD08 0044+00 2/2 0/0 0/0 .text newIndTexOrder__18J3DMaterialFactoryCFii */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterialFactory::newIndTexOrder(int param_0, int param_1) const {
    nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/newIndTexOrder__18J3DMaterialFactoryCFii.s"
}
#pragma pop

/* 8033240C-803324B4 32CD4C 00A8+00 2/2 0/0 0/0 .text newIndTexMtx__18J3DMaterialFactoryCFii */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterialFactory::newIndTexMtx(int param_0, int param_1) const {
    nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/newIndTexMtx__18J3DMaterialFactoryCFii.s"
}
#pragma pop

/* 803324B4-80332648 32CDF4 0194+00 2/2 0/0 0/0 .text newIndTevStage__18J3DMaterialFactoryCFii */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterialFactory::newIndTevStage(int param_0, int param_1) const {
    nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/newIndTevStage__18J3DMaterialFactoryCFii.s"
}
#pragma pop

/* 80332648-8033268C 32CF88 0044+00 2/2 0/0 0/0 .text
 * newIndTexCoordScale__18J3DMaterialFactoryCFii                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterialFactory::newIndTexCoordScale(int param_0, int param_1) const {
    nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/newIndTexCoordScale__18J3DMaterialFactoryCFii.s"
}
#pragma pop

/* 8033268C-80332768 32CFCC 00DC+00 2/2 0/0 0/0 .text            newFog__18J3DMaterialFactoryCFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterialFactory::newFog(int param_0) const {
    nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/newFog__18J3DMaterialFactoryCFi.s"
}
#pragma pop

/* 80332768-803327E8 32D0A8 0080+00 2/2 0/0 0/0 .text newAlphaComp__18J3DMaterialFactoryCFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterialFactory::newAlphaComp(int param_0) const {
    nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/newAlphaComp__18J3DMaterialFactoryCFi.s"
}
#pragma pop

/* 803327E8-8033282C 32D128 0044+00 2/2 0/0 0/0 .text            newBlend__18J3DMaterialFactoryCFi
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterialFactory::newBlend(int param_0) const {
    nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/newBlend__18J3DMaterialFactoryCFi.s"
}
#pragma pop

/* 8033282C-8033288C 32D16C 0060+00 2/2 0/0 0/0 .text            newZMode__18J3DMaterialFactoryCFi
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterialFactory::newZMode(int param_0) const {
    nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/newZMode__18J3DMaterialFactoryCFi.s"
}
#pragma pop

/* 8033288C-803328C4 32D1CC 0038+00 2/2 0/0 0/0 .text newZCompLoc__18J3DMaterialFactoryCFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterialFactory::newZCompLoc(int param_0) const {
    nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/newZCompLoc__18J3DMaterialFactoryCFi.s"
}
#pragma pop

/* 803328C4-803328FC 32D204 0038+00 2/2 0/0 0/0 .text            newDither__18J3DMaterialFactoryCFi
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterialFactory::newDither(int param_0) const {
    nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/newDither__18J3DMaterialFactoryCFi.s"
}
#pragma pop

/* 803328FC-803329A0 32D23C 00A4+00 1/1 0/0 0/0 .text newNBTScale__18J3DMaterialFactoryCFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterialFactory::newNBTScale(int param_0) const {
    nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/newNBTScale__18J3DMaterialFactoryCFi.s"
}
#pragma pop

/* 803329A0-803329A4 32D2E0 0004+00 1/0 0/0 0/0 .text            load__14J3DPEBlockNullFv */
void J3DPEBlockNull::load() {
    /* empty function */
}

/* 803329A4-803329B0 32D2E4 000C+00 1/0 0/0 0/0 .text            getType__14J3DPEBlockNullFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockNull::getType() {
    nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/getType__14J3DPEBlockNullFv.s"
}
#pragma pop

/* 803329B0-80332A0C 32D2F0 005C+00 1/0 0/0 0/0 .text            __dt__14J3DPEBlockNullFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DPEBlockNull::~J3DPEBlockNull() {
    nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/__dt__14J3DPEBlockNullFv.s"
}
#pragma pop

/* 80332A0C-80332A10 32D34C 0004+00 1/0 0/0 0/0 .text reset__15J3DTevBlockNullFP11J3DTevBlock */
void J3DTevBlockNull::reset(J3DTevBlock* param_0) {
    /* empty function */
}

/* 80332A10-80332A14 32D350 0004+00 1/0 0/0 0/0 .text            ptrToIndex__15J3DTevBlockNullFv */
void J3DTevBlockNull::ptrToIndex() {
    /* empty function */
}

/* 80332A14-80332A38 32D354 0024+00 1/0 0/0 0/0 .text            indexToPtr__15J3DTevBlockNullFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlockNull::indexToPtr() {
    nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/indexToPtr__15J3DTevBlockNullFv.s"
}
#pragma pop

/* 80332A38-80332A44 32D378 000C+00 1/0 0/0 0/0 .text            getType__15J3DTevBlockNullFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlockNull::getType() {
    nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/getType__15J3DTevBlockNullFv.s"
}
#pragma pop

/* 80332A44-80332AA0 32D384 005C+00 1/0 0/0 0/0 .text            __dt__15J3DTevBlockNullFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DTevBlockNull::~J3DTevBlockNull() {
    nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/__dt__15J3DTevBlockNullFv.s"
}
#pragma pop

/* 80332AA0-80332AA4 32D3E0 0004+00 1/0 0/0 0/0 .text            calc__18J3DTexGenBlockNullFPA4_Cf
 */
void J3DTexGenBlockNull::calc(f32 const (*param_0)[4]) {
    /* empty function */
}

/* 80332AA4-80332AA8 32D3E4 0004+00 1/0 0/0 0/0 .text
 * calcWithoutViewMtx__18J3DTexGenBlockNullFPA4_Cf              */
void J3DTexGenBlockNull::calcWithoutViewMtx(f32 const (*param_0)[4]) {
    /* empty function */
}

/* 80332AA8-80332AAC 32D3E8 0004+00 1/0 0/0 0/0 .text calcPostTexMtx__18J3DTexGenBlockNullFPA4_Cf
 */
void J3DTexGenBlockNull::calcPostTexMtx(f32 const (*param_0)[4]) {
    /* empty function */
}

/* 80332AAC-80332AB0 32D3EC 0004+00 1/0 0/0 0/0 .text
 * calcPostTexMtxWithoutViewMtx__18J3DTexGenBlockNullFPA4_Cf    */
void J3DTexGenBlockNull::calcPostTexMtxWithoutViewMtx(f32 const (*param_0)[4]) {
    /* empty function */
}

/* 80332AB0-80332AB4 32D3F0 0004+00 1/0 0/0 0/0 .text            load__18J3DTexGenBlockNullFv */
void J3DTexGenBlockNull::load() {
    /* empty function */
}

/* 80332AB4-80332AB8 32D3F4 0004+00 1/0 0/0 0/0 .text            patch__18J3DTexGenBlockNullFv */
void J3DTexGenBlockNull::patch() {
    /* empty function */
}

/* 80332AB8-80332ABC 32D3F8 0004+00 1/0 0/0 0/0 .text            diff__18J3DTexGenBlockNullFUl */
void J3DTexGenBlockNull::diff(u32 param_0) {
    /* empty function */
}

/* 80332ABC-80332AC0 32D3FC 0004+00 1/0 0/0 0/0 .text            diffTexMtx__18J3DTexGenBlockNullFv
 */
void J3DTexGenBlockNull::diffTexMtx() {
    /* empty function */
}

/* 80332AC0-80332AC4 32D400 0004+00 1/0 0/0 0/0 .text            diffTexGen__18J3DTexGenBlockNullFv
 */
void J3DTexGenBlockNull::diffTexGen() {
    /* empty function */
}

/* 80332AC4-80332AD0 32D404 000C+00 1/0 0/0 0/0 .text            getType__18J3DTexGenBlockNullFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexGenBlockNull::getType() {
    nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/getType__18J3DTexGenBlockNullFv.s"
}
#pragma pop

/* 80332AD0-80332B2C 32D410 005C+00 1/0 0/0 0/0 .text            __dt__18J3DTexGenBlockNullFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DTexGenBlockNull::~J3DTexGenBlockNull() {
    nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/__dt__18J3DTexGenBlockNullFv.s"
}
#pragma pop

/* 80332B2C-80332B38 32D46C 000C+00 1/0 0/0 0/0 .text            getType__17J3DColorBlockNullFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockNull::getType() {
    nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/getType__17J3DColorBlockNullFv.s"
}
#pragma pop

/* 80332B38-80332B94 32D478 005C+00 1/0 0/0 0/0 .text            __dt__17J3DColorBlockNullFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DColorBlockNull::~J3DColorBlockNull() {
    nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/__dt__17J3DColorBlockNullFv.s"
}
#pragma pop

/* 80332B94-80332BDC 32D4D4 0048+00 0/0 2/2 0/0 .text            __dt__11J3DMaterialFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DMaterial::~J3DMaterial() {
    nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/__dt__11J3DMaterialFv.s"
}
#pragma pop

/* 80332BDC-80332BF4 32D51C 0018+00 1/1 0/0 0/0 .text
 * JSUConvertOffsetToPtr<17J3DCurrentMtxInfo>__FPCvPCv          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void func_80332BDC(void* _this, void const* param_0, void const* param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/func_80332BDC.s"
}
#pragma pop

/* 80332BF4-80332C0C 32D534 0018+00 1/1 0/0 0/0 .text
 * JSUConvertOffsetToPtr<15J3DPatchingInfo>__FPCvPCv            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void func_80332BF4(void* _this, void const* param_0, void const* param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/func_80332BF4.s"
}
#pragma pop

/* 80332C0C-80332C24 32D54C 0018+00 1/1 0/0 0/0 .text
 * JSUConvertOffsetToPtr<18J3DDisplayListInit>__FPCvPCv         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void func_80332C0C(void* _this, void const* param_0, void const* param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/func_80332C0C.s"
}
#pragma pop

/* 80332C24-80332C3C 32D564 0018+00 1/1 1/1 0/0 .text
 * JSUConvertOffsetToPtr<15J3DNBTScaleInfo>__FPCvPCv            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void func_80332C24(void* _this, void const* param_0, void const* param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/func_80332C24.s"
}
#pragma pop

/* 80332C3C-80332C54 32D57C 0018+00 1/1 1/1 0/0 .text
 * JSUConvertOffsetToPtr<12J3DZModeInfo>__FPCvPCv               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void func_80332C3C(void* _this, void const* param_0, void const* param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/func_80332C3C.s"
}
#pragma pop

/* 80332C54-80332C6C 32D594 0018+00 1/1 1/1 0/0 .text
 * JSUConvertOffsetToPtr<12J3DBlendInfo>__FPCvPCv               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void func_80332C54(void* _this, void const* param_0, void const* param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/func_80332C54.s"
}
#pragma pop

/* 80332C6C-80332C84 32D5AC 0018+00 1/1 1/1 0/0 .text
 * JSUConvertOffsetToPtr<16J3DAlphaCompInfo>__FPCvPCv           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void func_80332C6C(void* _this, void const* param_0, void const* param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/func_80332C6C.s"
}
#pragma pop

/* 80332C84-80332C9C 32D5C4 0018+00 1/1 1/1 0/0 .text JSUConvertOffsetToPtr<10J3DFogInfo>__FPCvPCv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void func_80332C84(void* _this, void const* param_0, void const* param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/func_80332C84.s"
}
#pragma pop

/* 80332C9C-80332CB4 32D5DC 0018+00 1/1 1/1 0/0 .text
 * JSUConvertOffsetToPtr<23J3DTevSwapModeTableInfo>__FPCvPCv    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void func_80332C9C(void* _this, void const* param_0, void const* param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/func_80332C9C.s"
}
#pragma pop

/* 80332CB4-80332CCC 32D5F4 0018+00 1/1 1/1 0/0 .text
 * JSUConvertOffsetToPtr<18J3DTevSwapModeInfo>__FPCvPCv         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void func_80332CB4(void* _this, void const* param_0, void const* param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/func_80332CB4.s"
}
#pragma pop

/* 80332CCC-80332CE4 32D60C 0018+00 1/1 1/1 0/0 .text
 * JSUConvertOffsetToPtr<15J3DTevStageInfo>__FPCvPCv            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void func_80332CCC(void* _this, void const* param_0, void const* param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/func_80332CCC.s"
}
#pragma pop

/* 80332CE4-80332CFC 32D624 0018+00 1/1 1/1 0/0 .text
 * JSUConvertOffsetToPtr<15J3DTevOrderInfo>__FPCvPCv            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void func_80332CE4(void* _this, void const* param_0, void const* param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/func_80332CE4.s"
}
#pragma pop

/* 80332CFC-80332D14 32D63C 0018+00 1/1 1/1 0/0 .text
 * JSUConvertOffsetToPtr<13J3DTexMtxInfo>__FPCvPCv              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void func_80332CFC(void* _this, void const* param_0, void const* param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/func_80332CFC.s"
}
#pragma pop

/* 80332D14-80332D2C 32D654 0018+00 1/1 1/1 0/0 .text
 * JSUConvertOffsetToPtr<16J3DTexCoord2Info>__FPCvPCv           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void func_80332D14(void* _this, void const* param_0, void const* param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/func_80332D14.s"
}
#pragma pop

/* 80332D2C-80332D44 32D66C 0018+00 1/1 1/1 0/0 .text
 * JSUConvertOffsetToPtr<15J3DTexCoordInfo>__FPCvPCv            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void func_80332D2C(void* _this, void const* param_0, void const* param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/func_80332D2C.s"
}
#pragma pop

/* 80332D44-80332D5C 32D684 0018+00 1/1 0/0 0/0 .text
 * JSUConvertOffsetToPtr<12J3DLightInfo>__FPCvPCv               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void func_80332D44(void* _this, void const* param_0, void const* param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/func_80332D44.s"
}
#pragma pop

/* 80332D5C-80332D74 32D69C 0018+00 1/1 1/1 0/0 .text
 * JSUConvertOffsetToPtr<16J3DColorChanInfo>__FPCvPCv           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void func_80332D5C(void* _this, void const* param_0, void const* param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/func_80332D5C.s"
}
#pragma pop

/* 80332D74-80332D8C 32D6B4 0018+00 1/1 0/0 0/0 .text
 * JSUConvertOffsetToPtr<14J3DIndInitData>__FPCvPCv             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void func_80332D74(void* _this, void const* param_0, void const* param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/func_80332D74.s"
}
#pragma pop

/* 80332D8C-80332DA4 32D6CC 0018+00 1/1 0/0 0/0 .text
 * JSUConvertOffsetToPtr<19J3DMaterialInitData>__FPCvPCv        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void func_80332D8C(void* _this, void const* param_0, void const* param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/func_80332D8C.s"
}
#pragma pop
