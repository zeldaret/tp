//
// Generated By: dol2asm
// Translation Unit: J2DOrthoGraph
//

#include "JSystem/J2DGraph/J2DOrthoGraph.h"
#include "dol2asm.h"
#include "dolphin/types.h"

//
// Forward References:
//

extern "C" void __ct__13J2DOrthoGraphFv();
extern "C" void __ct__13J2DOrthoGraphFffffff();
extern "C" void setPort__13J2DOrthoGraphFv();
extern "C" void func_802E980C();
extern "C" void setLookat__13J2DOrthoGraphFv();
extern "C" void func_802E987C();
extern "C" void J2DDrawLine__FffffQ28JUtility6TColori();
extern "C" void J2DFillBox__FffffQ28JUtility6TColor();
extern "C" void func_802E9B0C();
extern "C" void J2DDrawFrame__FffffQ28JUtility6TColorUc();
extern "C" void func_802E9BE8();
extern "C" bool getGrafType__13J2DOrthoGraphCFv();

//
// External References:
//

extern "C" void __dt__13J2DOrthoGraphFv();
extern "C" void __ct__14J2DGrafContextFffff();
extern "C" void setPort__14J2DGrafContextFv();
extern "C" void setup2D__14J2DGrafContextFv();
extern "C" void setScissor__14J2DGrafContextFv();
extern "C" void func_802E90E4();
extern "C" void
setColor__14J2DGrafContextFQ28JUtility6TColorQ28JUtility6TColorQ28JUtility6TColorQ28JUtility6TColor();
extern "C" void setLineWidth__14J2DGrafContextFUc();
extern "C" void func_802E9260();
extern "C" void func_802E9368();
extern "C" void func_802E9564();
extern "C" void place__14J2DGrafContextFffff();
extern "C" void _savegpr_29();
extern "C" void _restgpr_29();
extern "C" extern void* __vt__14J2DGrafContext[10];

//
// Declarations:
//

/* ############################################################################################## */
/* 803CC9E0-803CCA08 029B00 0028+00 5/5 9/9 0/0 .data            __vt__13J2DOrthoGraph */
SECTION_DATA extern void* __vt__13J2DOrthoGraph[10] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__13J2DOrthoGraphFv,
    (void*)func_802E90E4,
    (void*)place__14J2DGrafContextFffff,
    (void*)setPort__13J2DOrthoGraphFv,
    (void*)setup2D__14J2DGrafContextFv,
    (void*)setScissor__14J2DGrafContextFv,
    (void*)getGrafType__13J2DOrthoGraphCFv,
    (void*)setLookat__13J2DOrthoGraphFv,
};

/* 80456160-80456168 004760 0004+04 3/3 0/0 0/0 .sdata2          @522 */
SECTION_SDATA2 static f32 lit_522[1 + 1 /* padding */] = {
    0.0f,
    /* padding */
    0.0f,
};

/* 802E9670-802E96D0 2E3FB0 0060+00 3/3 1/1 0/0 .text            __ct__13J2DOrthoGraphFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J2DOrthoGraph::J2DOrthoGraph() {
    nofralloc
#include "asm/JSystem/J2DGraph/J2DOrthoGraph/__ct__13J2DOrthoGraphFv.s"
}
#pragma pop

/* 802E96D0-802E97B4 2E4010 00E4+00 0/0 7/7 0/0 .text            __ct__13J2DOrthoGraphFffffff */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J2DOrthoGraph::J2DOrthoGraph(f32 param_0, f32 param_1, f32 param_2, f32 param_3, f32 param_4,
                                 f32 param_5) {
    nofralloc
#include "asm/JSystem/J2DGraph/J2DOrthoGraph/__ct__13J2DOrthoGraphFffffff.s"
}
#pragma pop

/* 802E97B4-802E980C 2E40F4 0058+00 1/0 6/6 0/0 .text            setPort__13J2DOrthoGraphFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J2DOrthoGraph::setPort() {
    nofralloc
#include "asm/JSystem/J2DGraph/J2DOrthoGraph/setPort__13J2DOrthoGraphFv.s"
}
#pragma pop

/* 802E980C-802E9840 2E414C 0034+00 0/0 5/5 0/0 .text
 * setOrtho__13J2DOrthoGraphFRCQ29JGeometry8TBox2<f>ff          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J2DOrthoGraph::setOrtho(JGeometry::TBox2<f32> const& param_0, f32 param_1, f32 param_2) {
    nofralloc
#include "asm/JSystem/J2DGraph/J2DOrthoGraph/func_802E980C.s"
}
#pragma pop

/* 802E9840-802E987C 2E4180 003C+00 1/0 0/0 0/0 .text            setLookat__13J2DOrthoGraphFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J2DOrthoGraph::setLookat() {
    nofralloc
#include "asm/JSystem/J2DGraph/J2DOrthoGraph/setLookat__13J2DOrthoGraphFv.s"
}
#pragma pop

/* 802E987C-802E9998 2E41BC 011C+00 0/0 1/1 0/0 .text
 * scissorBounds__13J2DOrthoGraphFPQ29JGeometry8TBox2<f>PCQ29JGeometry8TBox2<f> */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J2DOrthoGraph::scissorBounds(JGeometry::TBox2<f32>* param_0,
                                      JGeometry::TBox2<f32> const* param_1) {
    nofralloc
#include "asm/JSystem/J2DGraph/J2DOrthoGraph/func_802E987C.s"
}
#pragma pop

/* 802E9998-802E9AC4 2E42D8 012C+00 0/0 6/6 0/0 .text J2DDrawLine__FffffQ28JUtility6TColori */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J2DDrawLine(f32 param_0, f32 param_1, f32 param_2, f32 param_3, JUtility::TColor param_4,
                     int param_5) {
    nofralloc
#include "asm/JSystem/J2DGraph/J2DOrthoGraph/J2DDrawLine__FffffQ28JUtility6TColori.s"
}
#pragma pop

/* 802E9AC4-802E9B0C 2E4404 0048+00 0/0 10/10 0/0 .text J2DFillBox__FffffQ28JUtility6TColor */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J2DFillBox(f32 param_0, f32 param_1, f32 param_2, f32 param_3, JUtility::TColor param_4) {
    nofralloc
#include "asm/JSystem/J2DGraph/J2DOrthoGraph/J2DFillBox__FffffQ28JUtility6TColor.s"
}
#pragma pop

/* 802E9B0C-802E9B9C 2E444C 0090+00 1/1 0/0 0/0 .text
 * J2DFillBox__FRCQ29JGeometry8TBox2<f>Q28JUtility6TColor       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J2DFillBox(JGeometry::TBox2<f32> const& param_0, JUtility::TColor param_1) {
    nofralloc
#include "asm/JSystem/J2DGraph/J2DOrthoGraph/func_802E9B0C.s"
}
#pragma pop

/* 802E9B9C-802E9BE8 2E44DC 004C+00 0/0 5/5 0/0 .text J2DDrawFrame__FffffQ28JUtility6TColorUc */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J2DDrawFrame(f32 param_0, f32 param_1, f32 param_2, f32 param_3, JUtility::TColor param_4,
                      u8 param_5) {
    nofralloc
#include "asm/JSystem/J2DGraph/J2DOrthoGraph/J2DDrawFrame__FffffQ28JUtility6TColorUc.s"
}
#pragma pop

/* 802E9BE8-802E9C88 2E4528 00A0+00 1/1 0/0 0/0 .text
 * J2DDrawFrame__FRCQ29JGeometry8TBox2<f>Q28JUtility6TColorUc   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J2DDrawFrame(JGeometry::TBox2<f32> const& param_0, JUtility::TColor param_1, u8 param_2) {
    nofralloc
#include "asm/JSystem/J2DGraph/J2DOrthoGraph/func_802E9BE8.s"
}
#pragma pop

/* 802E9C88-802E9C90 2E45C8 0008+00 1/0 0/0 0/0 .text            getGrafType__13J2DOrthoGraphCFv */
bool J2DOrthoGraph::getGrafType() const {
    return true;
}
