/* c_m3d_g_sph.cpp autogenerated by split.py v0.3 at 2021-01-01 14:53:31.074880 */

#include "SComponent/c_m3d_g_sph.h"

// SetC__8cM3dGSphFRC4cXyz
// cM3dGSph::SetC(const cXyz&)
asm void cM3dGSph::SetC(const cXyz&) {
    nofralloc
#include "SComponent/c_m3d_g_sph/asm/func_8026F648.s"
}

// Set__8cM3dGSphFRC4cXyzf
// cM3dGSph::Set(const cXyz&, float)
asm void cM3dGSph::Set(const cXyz&, float) {
    nofralloc
#include "SComponent/c_m3d_g_sph/asm/func_8026F664.s"
}

// Set__8cM3dGSphFRC9cM3dGSphS
// cM3dGSph::Set(const cM3dGSphS&)
asm void cM3dGSph::Set(const cM3dGSphS&) {
    nofralloc
#include "SComponent/c_m3d_g_sph/asm/func_8026F6A8.s"
}

// SetR__8cM3dGSphFf
// cM3dGSph::SetR(float)
asm void cM3dGSph::SetR(float) {
    nofralloc
#include "SComponent/c_m3d_g_sph/asm/func_8026F708.s"
}

// cross__8cM3dGSphCFPC8cM3dGSphP4cXyz
// cM3dGSph::cross(const cM3dGSph*, cXyz*) const
asm bool cM3dGSph::cross(const cM3dGSph*, cXyz*) const {
    nofralloc
#include "SComponent/c_m3d_g_sph/asm/func_8026F710.s"
}

// cross__8cM3dGSphCFPC8cM3dGCylP4cXyz
// cM3dGSph::cross(const cM3dGCyl*, cXyz*) const
asm bool cM3dGSph::cross(const cM3dGCyl*, cXyz*) const {
    nofralloc
#include "SComponent/c_m3d_g_sph/asm/func_8026F73C.s"
}

// GetMinMaxCube__8cM3dGSphCFR4cXyzR4cXyz
// cM3dGSph::GetMinMaxCube(cXyz&, cXyz&) const
asm void cM3dGSph::GetMinMaxCube(cXyz&, cXyz&) const {
    nofralloc
#include "SComponent/c_m3d_g_sph/asm/func_8026F76C.s"
}
