/* c_m3d_g_aab.cpp autogenerated by split.py v0.3 at 2021-01-01 14:25:53.398196 */

#include "SComponent/c_m3d_g_aab.h"

// Set__8cM3dGAabFPC4cXyzPC4cXyz
// cM3dGAab::Set(const cXyz*, const cXyz*)
asm void cM3dGAab::Set(const cXyz*, const cXyz*) {
    nofralloc
#include "SComponent/c_m3d_g_aab/asm/func_8026EC54.s"
}

// CrossY__8cM3dGAabCFPC4cXyz
// cM3dGAab::CrossY(const cXyz*) const
asm bool cM3dGAab::CrossY(const cXyz*) const {
    nofralloc
#include "SComponent/c_m3d_g_aab/asm/func_8026EC88.s"
}

// UnderPlaneYUnder__8cM3dGAabCFf
// cM3dGAab::UnderPlaneYUnder(float) const
asm bool cM3dGAab::UnderPlaneYUnder(float) const {
    nofralloc
#include "SComponent/c_m3d_g_aab/asm/func_8026ECD0.s"
}

// TopPlaneYUnder__8cM3dGAabCFf
// cM3dGAab::TopPlaneYUnder(float) const
asm bool cM3dGAab::TopPlaneYUnder(float) const {
    nofralloc
#include "SComponent/c_m3d_g_aab/asm/func_8026ECE4.s"
}

// ClearForMinMax__8cM3dGAabFv
// cM3dGAab::ClearForMinMax(void)
asm void cM3dGAab::ClearForMinMax(void) {
    nofralloc
#include "SComponent/c_m3d_g_aab/asm/func_8026ECF8.s"
}

// SetMinMax__8cM3dGAabFRC4cXyz
// cM3dGAab::SetMinMax(const cXyz&)
asm void cM3dGAab::SetMinMax(const cXyz&) {
    nofralloc
#include "SComponent/c_m3d_g_aab/asm/func_8026ED1C.s"
}

// SetMinMax__8cM3dGAabFRC8cM3dGAab
// cM3dGAab::SetMinMax(const cM3dGAab&)
asm void cM3dGAab::SetMinMax(const cM3dGAab&) {
    nofralloc
#include "SComponent/c_m3d_g_aab/asm/func_8026ED60.s"
}

// SetMin__8cM3dGAabFRC4cXyz
// cM3dGAab::SetMin(const cXyz&)
asm void cM3dGAab::SetMin(const cXyz&) {
    nofralloc
#include "SComponent/c_m3d_g_aab/asm/func_8026EDA4.s"
}

// SetMax__8cM3dGAabFRC4cXyz
// cM3dGAab::SetMax(const cXyz&)
asm void cM3dGAab::SetMax(const cXyz&) {
    nofralloc
#include "SComponent/c_m3d_g_aab/asm/func_8026EDE4.s"
}

// CalcCenter__8cM3dGAabCFP4cXyz
// cM3dGAab::CalcCenter(cXyz*) const
asm void cM3dGAab::CalcCenter(cXyz*) const {
    nofralloc
#include "SComponent/c_m3d_g_aab/asm/func_8026EE24.s"
}

// PlusR__8cM3dGAabFf
// cM3dGAab::PlusR(float)
asm void cM3dGAab::PlusR(float) {
    nofralloc
#include "SComponent/c_m3d_g_aab/asm/func_8026EE68.s"
}
