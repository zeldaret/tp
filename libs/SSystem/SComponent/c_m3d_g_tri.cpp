/* c_m3d_g_tri.cpp autogenerated by split.py v0.3 at 2021-01-01 14:55:53.593962 */

#include "SComponent/c_m3d_g_tri.h"

// cross__8cM3dGTriCFPC8cM3dGCylP3Vec
// cM3dGTri::cross(const cM3dGCyl*, Vec*) const
asm bool cM3dGTri::cross(const cM3dGCyl*, Vec*) const {
    nofralloc
#include "SComponent/c_m3d_g_tri/asm/func_8026F7B0.s"
}

// setPos__8cM3dGTriFPC3VecPC3VecPC3Vec
// cM3dGTri::setPos(const Vec*, const Vec*, const Vec*)
asm void cM3dGTri::setPos(const Vec*, const Vec*, const Vec*) {
    nofralloc
#include "SComponent/c_m3d_g_tri/asm/func_8026F7DC.s"
}

// setBg__8cM3dGTriFPC3VecPC3VecPC3VecPC8cM3dGPla
// cM3dGTri::setBg(const Vec*, const Vec*, const Vec*, const cM3dGPla*)
asm void cM3dGTri::setBg(const Vec*, const Vec*, const Vec*, const cM3dGPla*) {
    nofralloc
#include "SComponent/c_m3d_g_tri/asm/func_8026F85C.s"
}

// set__8cM3dGTriFPC3VecPC3VecPC3VecPC3Vec
// cM3dGTri::set(const Vec*, const Vec*, const Vec*, const Vec*)
asm void cM3dGTri::set(const Vec*, const Vec*, const Vec*, const Vec*) {
    nofralloc
#include "SComponent/c_m3d_g_tri/asm/func_8026F8C8.s"
}
