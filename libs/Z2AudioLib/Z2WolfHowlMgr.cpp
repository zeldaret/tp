//
// Generated By: dol2asm
// Translation Unit: Z2WolfHowlMgr
//

#include "Z2AudioLib/Z2WolfHowlMgr.h"
#include "dol2asm.h"
#include "dolphin/types.h"

//
// Types:
//

struct Z2SeqMgr {
    /* 802AF49C */ void subBgmStart(u32);
    /* 802B327C */ void stopWolfHowlSong();
};

struct Z2SeMgr {
    /* 802AB984 */ void seStart(JAISoundID, Vec const*, u32, s8, f32, f32, f32, f32, u8);
};

struct Z2CreatureLink {
    static u8 mLinkPtr[4 + 4 /* padding */];
};

struct Z2Calc {
    struct CurveSign {};

    /* 802A968C */ void linearTransform(f32, f32, f32, f32, f32, bool);
    /* 802A96F4 */ void getParamByExp(f32, f32, f32, f32, f32, f32, Z2Calc::CurveSign);
};

struct JAISoundParamsMove {
    /* 802A2DB4 */ void moveVolume(f32, u32);
    /* 802A2E0C */ void movePitch(f32, u32);
};

//
// Forward References:
//

extern "C" void __ct__13Z2WolfHowlMgrFv();
extern "C" void resetState__13Z2WolfHowlMgrFv();
extern "C" void calcVolumeMod__13Z2WolfHowlMgrFf();
extern "C" void getNowPitch__13Z2WolfHowlMgrFv();
extern "C" void getNowInputValue__13Z2WolfHowlMgrFv();
extern "C" void calcPitchMod__13Z2WolfHowlMgrFff();
extern "C" void startWolfHowlSound__13Z2WolfHowlMgrFffbf();
extern "C" void setCorrectData__13Z2WolfHowlMgrFScP14Z2WolfHowlData();
extern "C" void getCorrectLine__13Z2WolfHowlMgrFUc();
extern "C" void getCorrectLineNum__13Z2WolfHowlMgrFv();
extern "C" void checkLine__13Z2WolfHowlMgrFv();
extern "C" void getOnLineNum__13Z2WolfHowlMgrFv();
extern "C" void startWindStoneSound__13Z2WolfHowlMgrFScP3Vec();
extern "C" void startGuideMelody__13Z2WolfHowlMgrFb();
extern "C" void skipCorrectDemo__13Z2WolfHowlMgrFv();
extern "C" void __sinit_Z2WolfHowlMgr_cpp();

//
// External References:
//

extern "C" void stop__8JAISoundFUl();
extern "C" void stop__8JAISoundFv();
extern "C" void moveVolume__18JAISoundParamsMoveFfUl();
extern "C" void movePitch__18JAISoundParamsMoveFfUl();
extern "C" void func_802A2FEC();
extern "C" void linearTransform__6Z2CalcFfffffb();
extern "C" void getParamByExp__6Z2CalcFffffffQ26Z2Calc9CurveSign();
extern "C" void seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc();
extern "C" void subBgmStart__8Z2SeqMgrFUl();
extern "C" void stopWolfHowlSong__8Z2SeqMgrFv();
extern "C" void _savegpr_28();
extern "C" void _savegpr_29();
extern "C" void _restgpr_28();
extern "C" void _restgpr_29();
extern "C" extern u32 __float_nan;
extern "C" extern u8 data_80450B38[4];
extern "C" extern u8 data_80450B44[4];
extern "C" extern u8 data_80450B60[4];
extern "C" extern u8 data_80450B74[4];
extern "C" extern u8 data_80450B80[4];
extern "C" extern u8 data_80450B84[4];
extern "C" extern u8 data_80450B88[4];
extern "C" u8 mLinkPtr__14Z2CreatureLink[4 + 4 /* padding */];

//
// Declarations:
//

/* ############################################################################################## */
/* 804508A0-804508A8 000320 0008+00 1/0 0/0 0/0 .sdata           sHowlTobikusa */
extern "C" u8 sHowlTobikusa[8];

/* 803CBC50-803CBC5C 028D70 000C+00 1/0 0/0 0/0 .data            sHowlUmakusa */
SECTION_DATA static u8 sHowlUmakusa[12] = {
    0x01, 0x0F, 0x02, 0x0F, 0x03, 0x3C, 0x01, 0x0F, 0x02, 0x0F, 0x03, 0x3C,
};

/* 803CBC5C-803CBC68 028D7C 000C+00 1/0 0/0 0/0 .data            sHowlZeldaSong */
SECTION_DATA static u8 sHowlZeldaSong[12] = {
    0x02, 0x1E, 0x01, 0x0F, 0x03, 0x2D, 0x02, 0x1E, 0x01, 0x0F, 0x03, 0x2D,
};

/* 803CBC68-803CBC74 028D88 000C+00 1/0 0/0 0/0 .data            sHowlLightPrelude */
SECTION_DATA static u8 sHowlLightPrelude[12] = {
    0x01, 0x14, 0x03, 0x28, 0x01, 0x14, 0x03, 0x14, 0x02, 0x14, 0x01, 0x1E,
};

/* 803CBC74-803CBC80 028D94 000C+00 1/0 0/0 0/0 .data            sHowlSoulRequiem */
SECTION_DATA static u8 sHowlSoulRequiem[12] = {
    0x03, 0x1E, 0x02, 0x0F, 0x03, 0x0F, 0x01, 0x1E, 0x02, 0x1E, 0x03, 0x1E,
};

/* 803CBC80-803CBC8C 028DA0 000C+00 1/0 0/0 0/0 .data            sHealingSong */
SECTION_DATA static u8 sHealingSong[12] = {
    0x01, 0x1E, 0x02, 0x1E, 0x03, 0x1E, 0x01, 0x1E, 0x02, 0x1E, 0x03, 0x1E,
};

/* 803CBC8C-803CBC9C 028DAC 000E+02 1/0 0/0 0/0 .data            sNewSong1 */
SECTION_DATA static u8 sNewSong1[14 + 2 /* padding */] = {
    0x03,
    0x1E,
    0x02,
    0x1E,
    0x01,
    0x1E,
    0x03,
    0x28,
    0x02,
    0x14,
    0x03,
    0x1E,
    0x01,
    0x1E,
    /* padding */
    0x00,
    0x00,
};

/* 803CBC9C-803CBCAC 028DBC 0010+00 1/0 0/0 0/0 .data            sNewSong2 */
SECTION_DATA static u8 sNewSong2[16] = {
    0x01, 0x14, 0x02, 0x14, 0x03, 0x14, 0x02, 0x3C, 0x03, 0x14, 0x01, 0x14, 0x02, 0x14, 0x03, 0x1E,
};

/* 803CBCAC-803CBCC0 028DCC 0012+02 1/0 0/0 0/0 .data            sNewSong3 */
SECTION_DATA static u8 sNewSong3[18 + 2 /* padding */] = {
    0x02,
    0x1E,
    0x03,
    0x3C,
    0x02,
    0x28,
    0x01,
    0x14,
    0x03,
    0x3C,
    0x01,
    0x14,
    0x02,
    0x14,
    0x01,
    0x14,
    0x02,
    0x2D,
    /* padding */
    0x00,
    0x00,
};

/* 803CBCC0-803CBD08 -00001 0048+00 1/1 0/0 0/0 .data            sGuideData */
SECTION_DATA static void* sGuideData[18] = {
    (void*)0x04000000, (void*)&sHowlTobikusa,    (void*)0x06000000, (void*)&sHowlUmakusa,
    (void*)0x06000000, (void*)&sHowlZeldaSong,   (void*)0x06000000, (void*)&sHealingSong,
    (void*)0x06000000, (void*)&sHowlSoulRequiem, (void*)0x06000000, (void*)&sHowlLightPrelude,
    (void*)0x07000000, (void*)&sNewSong1,        (void*)0x08000000, (void*)&sNewSong2,
    (void*)0x09000000, (void*)&sNewSong3,
};

/* 80450880-80450884 000300 0004+00 2/2 0/0 0/0 .sdata           cPitchDown */
SECTION_SDATA static f32 cPitchDown = 0.8909000158309937f;

/* 80450884-80450888 000304 0004+00 4/4 0/0 0/0 .sdata           cPitchCenter */
SECTION_SDATA static f32 cPitchCenter = 1.0f;

/* 80450888-8045088C 000308 0004+00 2/2 0/0 0/0 .sdata           cPitchUp */
SECTION_SDATA static f32 cPitchUp = 1.1892000436782837f;

/* 8045088C-8045088E -00001 0002+00 1/1 0/0 0/0 .sdata           None */
SECTION_SDATA static u8 struct_8045088C[2] = {
    /* 8045088C 0001+00 data_8045088C None */
    0x07,
    /* 8045088D 0001+00 data_8045088D None */
    0x07,
};

/* 8045088E-80450890 00030E 0002+00 4/4 0/0 0/0 .sdata           None */
SECTION_SDATA static u16 data_8045088E = 0x1E00;

/* 80450890-80450894 000310 0004+00 1/1 0/0 0/0 .sdata           cR_FlatWidth */
SECTION_SDATA static f32 cR_FlatWidth = 0.9438700079917908f;

/* 80450894-80450898 -00001 0004+00 3/3 0/0 0/0 .sdata           None */
SECTION_SDATA static u8 struct_80450894[4] = {
    /* 80450894 0001+00 data_80450894 None */
    0x05,
    /* 80450895 0003+00 data_80450895 None */
    0x1E,
    0x00,
    0x00,
};

/* 80450898-8045089C 000318 0004+00 1/1 0/0 0/0 .sdata           sStickHigh */
SECTION_SDATA static f32 sStickHigh = 0.5f;

/* 8045089C-804508A0 00031C 0004+00 1/1 0/0 0/0 .sdata           sStickCenter */
SECTION_SDATA static f32 sStickCenter = 1.0f / 5.0f;

/* 804508A0-804508A8 000320 0008+00 1/0 0/0 0/0 .sdata           sHowlTobikusa */
SECTION_SDATA static u8 sHowlTobikusa[8] = {
    0x01, 0x1E, 0x03, 0x1E, 0x01, 0x1E, 0x03, 0x1E,
};

/* 80455E60-80455E64 004460 0004+00 8/8 0/0 0/0 .sdata2          @3485 */
SECTION_SDATA2 static u8 lit_3485[4] = {
    0x00,
    0x00,
    0x00,
    0x00,
};

/* 80455E64-80455E68 004464 0004+00 11/11 0/0 0/0 .sdata2          @3486 */
SECTION_SDATA2 static f32 lit_3486 = 1.0f;

/* 802CAAC0-802CAB8C 2C5400 00CC+00 0/0 1/1 0/0 .text            __ct__13Z2WolfHowlMgrFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm Z2WolfHowlMgr::Z2WolfHowlMgr() {
    nofralloc
#include "asm/Z2AudioLib/Z2WolfHowlMgr/__ct__13Z2WolfHowlMgrFv.s"
}
#pragma pop

/* 802CAB8C-802CABEC 2C54CC 0060+00 1/1 0/0 0/0 .text            resetState__13Z2WolfHowlMgrFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void Z2WolfHowlMgr::resetState() {
    nofralloc
#include "asm/Z2AudioLib/Z2WolfHowlMgr/resetState__13Z2WolfHowlMgrFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 80455E68-80455E6C 004468 0004+00 2/2 0/0 0/0 .sdata2          @3527 */
SECTION_SDATA2 static f32 lit_3527 = 30.0f;

/* 80455E6C-80455E70 00446C 0004+00 1/1 0/0 0/0 .sdata2          @3528 */
SECTION_SDATA2 static f32 lit_3528 = 2.0f;

/* 80455E70-80455E78 004470 0008+00 2/2 0/0 0/0 .sdata2          @3530 */
SECTION_SDATA2 static f64 lit_3530 = 4503599627370496.0 /* cast u32 to float */;

/* 802CABEC-802CACB0 2C552C 00C4+00 1/1 0/0 0/0 .text            calcVolumeMod__13Z2WolfHowlMgrFf */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void Z2WolfHowlMgr::calcVolumeMod(f32 param_0) {
    nofralloc
#include "asm/Z2AudioLib/Z2WolfHowlMgr/calcVolumeMod__13Z2WolfHowlMgrFf.s"
}
#pragma pop

/* 802CACB0-802CACCC 2C55F0 001C+00 1/1 0/0 0/0 .text            getNowPitch__13Z2WolfHowlMgrFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void Z2WolfHowlMgr::getNowPitch() {
    nofralloc
#include "asm/Z2AudioLib/Z2WolfHowlMgr/getNowPitch__13Z2WolfHowlMgrFv.s"
}
#pragma pop

/* 802CACCC-802CACD4 2C560C 0008+00 0/0 2/2 0/0 .text            getNowInputValue__13Z2WolfHowlMgrFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void Z2WolfHowlMgr::getNowInputValue() {
    nofralloc
#include "asm/Z2AudioLib/Z2WolfHowlMgr/getNowInputValue__13Z2WolfHowlMgrFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 80455E78-80455E7C 004478 0004+00 1/1 0/0 0/0 .sdata2          @3589 */
SECTION_SDATA2 static f32 lit_3589 = 97.0f / 100.0f;

/* 80455E7C-80455E80 00447C 0004+00 4/4 0/0 0/0 .sdata2          @3590 */
SECTION_SDATA2 static f32 lit_3590 = -1.0f;

/* 802CACD4-802CAED4 2C5614 0200+00 1/1 0/0 0/0 .text            calcPitchMod__13Z2WolfHowlMgrFff */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void Z2WolfHowlMgr::calcPitchMod(f32 param_0, f32 param_1) {
    nofralloc
#include "asm/Z2AudioLib/Z2WolfHowlMgr/calcPitchMod__13Z2WolfHowlMgrFff.s"
}
#pragma pop

/* 802CAED4-802CB100 2C5814 022C+00 0/0 1/1 0/0 .text startWolfHowlSound__13Z2WolfHowlMgrFffbf */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void Z2WolfHowlMgr::startWolfHowlSound(f32 param_0, f32 param_1, bool param_2, f32 param_3) {
    nofralloc
#include "asm/Z2AudioLib/Z2WolfHowlMgr/startWolfHowlSound__13Z2WolfHowlMgrFffbf.s"
}
#pragma pop

/* ############################################################################################## */
/* 80455E80-80455E84 004480 0004+00 1/1 0/0 0/0 .sdata2          @3711 */
SECTION_SDATA2 static f32 lit_3711 = 1.1224600076675415f;

/* 80455E84-80455E88 004484 0004+00 1/1 0/0 0/0 .sdata2          @3712 */
SECTION_SDATA2 static f32 lit_3712 = 1.0594600439071655f;

/* 80455E88-80455E8C 004488 0004+00 1/1 0/0 0/0 .sdata2          @3713 */
SECTION_SDATA2 static f32 lit_3713 = 0.7936859726905823f;

/* 80455E8C-80455E90 00448C 0004+00 1/1 0/0 0/0 .sdata2          @3714 */
SECTION_SDATA2 static f32 lit_3714 = 1.2599060535430908f;

/* 80455E90-80455E94 004490 0004+00 1/1 0/0 0/0 .sdata2          @3715 */
SECTION_SDATA2 static f32 lit_3715 = 0.9438700079917908f;

/* 80455E94-80455E98 004494 0004+00 1/1 0/0 0/0 .sdata2          @3716 */
SECTION_SDATA2 static f32 lit_3716 = 0.8408849835395813f;

/* 80455E98-80455E9C 004498 0004+00 1/1 0/0 0/0 .sdata2          @3717 */
SECTION_SDATA2 static f32 lit_3717 = 1.3348400592803955f;

/* 80455E9C-80455EA0 00449C 0004+00 1/1 0/0 0/0 .sdata2          @3718 */
SECTION_SDATA2 static f32 lit_3718 = 0.8909000158309937f;

/* 80455EA0-80455EA4 0044A0 0004+00 1/1 0/0 0/0 .sdata2          @3719 */
SECTION_SDATA2 static f32 lit_3719 = 0.7491499781608582f;

/* 80455EA4-80455EA8 0044A4 0004+00 1/1 0/0 0/0 .sdata2          @3720 */
SECTION_SDATA2 static f32 lit_3720 = 1.1892000436782837f;

/* 802CB100-802CB320 2C5A40 0220+00 0/0 1/1 0/0 .text
 * setCorrectData__13Z2WolfHowlMgrFScP14Z2WolfHowlData          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void Z2WolfHowlMgr::setCorrectData(s8 param_0, Z2WolfHowlData* param_1) {
    nofralloc
#include "asm/Z2AudioLib/Z2WolfHowlMgr/setCorrectData__13Z2WolfHowlMgrFScP14Z2WolfHowlData.s"
}
#pragma pop

/* 802CB320-802CB370 2C5C60 0050+00 3/3 2/2 0/0 .text            getCorrectLine__13Z2WolfHowlMgrFUc
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void Z2WolfHowlMgr::getCorrectLine(u8 param_0) {
    nofralloc
#include "asm/Z2AudioLib/Z2WolfHowlMgr/getCorrectLine__13Z2WolfHowlMgrFUc.s"
}
#pragma pop

/* 802CB370-802CB38C 2C5CB0 001C+00 2/2 1/1 0/0 .text getCorrectLineNum__13Z2WolfHowlMgrFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void Z2WolfHowlMgr::getCorrectLineNum() {
    nofralloc
#include "asm/Z2AudioLib/Z2WolfHowlMgr/getCorrectLineNum__13Z2WolfHowlMgrFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 804341F8-8043421C 060F18 0024+00 2/2 0/0 0/0 .bss             sCorrectPhrase */
static u8 sCorrectPhrase[36];

/* 8043421C-80434240 060F3C 0024+00 2/3 0/0 0/0 .bss             sWindStoneSound */
static u8 sWindStoneSound[36];

/* 80434240-80434268 060F60 0024+04 1/2 0/0 0/0 .bss             sCorrectDuo */
static u8 sCorrectDuo[36 + 4 /* padding */];

/* 802CB38C-802CB650 2C5CCC 02C4+00 1/1 0/0 0/0 .text            checkLine__13Z2WolfHowlMgrFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void Z2WolfHowlMgr::checkLine() {
    nofralloc
#include "asm/Z2AudioLib/Z2WolfHowlMgr/checkLine__13Z2WolfHowlMgrFv.s"
}
#pragma pop

/* 802CB650-802CB6EC 2C5F90 009C+00 1/1 1/1 0/0 .text            getOnLineNum__13Z2WolfHowlMgrFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void Z2WolfHowlMgr::getOnLineNum() {
    nofralloc
#include "asm/Z2AudioLib/Z2WolfHowlMgr/getOnLineNum__13Z2WolfHowlMgrFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 80455EA8-80455EB0 0044A8 0008+00 1/1 0/0 0/0 .sdata2          @4032 */
SECTION_SDATA2 static f64 lit_4032 = 0.5;

/* 80455EB0-80455EB8 0044B0 0008+00 1/1 0/0 0/0 .sdata2          @4033 */
SECTION_SDATA2 static f64 lit_4033 = 3.0;

/* 80455EB8-80455EC0 0044B8 0008+00 1/1 0/0 0/0 .sdata2          @4034 */
SECTION_SDATA2 static u8 lit_4034[8] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80455EC0-80455EC4 0044C0 0004+00 1/1 0/0 0/0 .sdata2          @4035 */
SECTION_SDATA2 static f32 lit_4035 = 2100.0f;

/* 80455EC4-80455EC8 0044C4 0004+00 1/1 0/0 0/0 .sdata2          @4036 */
SECTION_SDATA2 static f32 lit_4036 = 150.0f;

/* 80455EC8-80455ECC 0044C8 0004+00 1/1 0/0 0/0 .sdata2          @4037 */
SECTION_SDATA2 static f32 lit_4037 = 2000.0f;

/* 80455ECC-80455ED0 0044CC 0004+00 1/1 0/0 0/0 .sdata2          @4038 */
SECTION_SDATA2 static f32 lit_4038 = 9.0f / 20.0f;

/* 80455ED0-80455ED4 0044D0 0004+00 1/1 0/0 0/0 .sdata2          @4039 */
SECTION_SDATA2 static f32 lit_4039 = 1.0f / 20.0f;

/* 80455ED4-80455ED8 0044D4 0004+00 1/1 0/0 0/0 .sdata2          @4040 */
SECTION_SDATA2 static f32 lit_4040 = 2.0f / 5.0f;

/* 80455ED8-80455EE0 0044D8 0004+04 1/1 0/0 0/0 .sdata2          @4041 */
SECTION_SDATA2 static f32 lit_4041[1 + 1 /* padding */] = {
    1.0f / 25.0f,
    /* padding */
    0.0f,
};

/* 802CB6EC-802CBA88 2C602C 039C+00 0/0 0/0 2/2 .text startWindStoneSound__13Z2WolfHowlMgrFScP3Vec
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void Z2WolfHowlMgr::startWindStoneSound(s8 param_0, Vec* param_1) {
    nofralloc
#include "asm/Z2AudioLib/Z2WolfHowlMgr/startWindStoneSound__13Z2WolfHowlMgrFScP3Vec.s"
}
#pragma pop

/* 802CBA88-802CBB58 2C63C8 00D0+00 0/0 1/1 0/0 .text            startGuideMelody__13Z2WolfHowlMgrFb
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void Z2WolfHowlMgr::startGuideMelody(bool param_0) {
    nofralloc
#include "asm/Z2AudioLib/Z2WolfHowlMgr/startGuideMelody__13Z2WolfHowlMgrFb.s"
}
#pragma pop

/* 802CBB58-802CBB7C 2C6498 0024+00 0/0 1/1 0/0 .text            skipCorrectDemo__13Z2WolfHowlMgrFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void Z2WolfHowlMgr::skipCorrectDemo() {
    nofralloc
#include "asm/Z2AudioLib/Z2WolfHowlMgr/skipCorrectDemo__13Z2WolfHowlMgrFv.s"
}
#pragma pop

/* 802CBB7C-802CBC60 2C64BC 00E4+00 0/0 1/0 0/0 .text            __sinit_Z2WolfHowlMgr_cpp */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __sinit_Z2WolfHowlMgr_cpp() {
    nofralloc
#include "asm/Z2AudioLib/Z2WolfHowlMgr/__sinit_Z2WolfHowlMgr_cpp.s"
}
#pragma pop

#pragma push
#pragma force_active on
REGISTER_CTORS(0x802CBB7C, __sinit_Z2WolfHowlMgr_cpp);
#pragma pop
