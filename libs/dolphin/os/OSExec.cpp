//
// Generated By: dol2asm
// Translation Unit: OSExec
//

#include "dolphin/os/OSExec.h"
#include "dol2asm.h"
#include "dolphin/types.h"

//
// External References:
//

SECTION_INIT void memset();
SECTION_INIT void memcpy();
extern "C" void OSReport();
extern "C" void OSSetArenaLo();
extern "C" void OSAllocFromArenaLo();
extern "C" void ICInvalidateRange();
extern "C" void ICFlashInvalidate();
extern "C" void OSDisableInterrupts();
extern "C" void OSEnableInterrupts();
extern "C" void __OSMaskInterrupts();
extern "C" void __OSUnmaskInterrupts();
extern "C" void OSGetSaveRegion();
extern "C" void __OSDoHotReset();
extern "C" void DVDInit();
extern "C" void DVDReadAbsAsyncPrio();
extern "C" void DVDCancelStreamAsync();
extern "C" void DVDGetCommandBlockStatus();
extern "C" void DVDSetAutoInvalidation();
extern "C" void DVDResume();
extern "C" void DVDGetCurrentDiskID();
extern "C" void DVDCheckDisk();
extern "C" void __DVDPrepareResetAsync();
extern "C" void AISetStreamPlayState();
extern "C" void AISetStreamVolLeft();
extern "C" void AISetStreamVolRight();
extern "C" void sprintf();
extern "C" void strncmp();
extern "C" void strcpy();
extern "C" void strlen();
extern "C" extern u8 __OSIsGcam[4];

//
// Declarations:
//

/* 8033CA80-8033CC08 3373C0 0188+00 1/1 0/0 0/0 .text            PackArgs */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm s32 PackArgs(void* param_0, u32 param_1, void* param_2) {
    nofralloc
#include "asm/dolphin/os/OSExec/PackArgs.s"
}
#pragma pop

/* 8033CC08-8033CC44 337548 003C+00 1/1 0/0 0/0 .text            Run */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void Run(void) {
    nofralloc
#include "asm/dolphin/os/OSExec/Run.s"
}
#pragma pop

/* 8033CC44-8033CCB0 337584 006C+00 1/1 0/0 0/0 .text            ReadDisc */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void ReadDisc(void* param_0, s32 param_1, s32 param_2) {
    nofralloc
#include "asm/dolphin/os/OSExec/ReadDisc.s"
}
#pragma pop

/* ############################################################################################## */
/* 80451658-8045165C 000B58 0004+00 2/2 0/0 0/0 .sbss            Prepared */
static u8 Prepared[4];

/* 8033CCB0-8033CCBC 3375F0 000C+00 1/1 0/0 0/0 .text            Callback */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void Callback(void) {
    nofralloc
#include "asm/dolphin/os/OSExec/Callback.s"
}
#pragma pop

/* 8033CCBC-8033CCFC 3375FC 0040+00 0/0 1/1 0/0 .text            __OSGetExecParams */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __OSGetExecParams(void* param_0) {
    nofralloc
#include "asm/dolphin/os/OSExec/__OSGetExecParams.s"
}
#pragma pop

/* ############################################################################################## */
/* 8045165C-80451660 000B5C 0004+00 2/2 0/0 0/0 .sbss            apploaderPosition$69 */
static u8 apploaderPosition[4];

/* 8033CCFC-8033CDC0 33763C 00C4+00 1/1 0/0 0/0 .text            GetApploaderPosition */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void GetApploaderPosition(void) {
    nofralloc
#include "asm/dolphin/os/OSExec/GetApploaderPosition.s"
}
#pragma pop

/* ############################################################################################## */
/* 803CFC38-803CFC48 02CD58 000B+05 1/1 0/0 0/0 .data            @115 */
SECTION_DATA static u8 lit_115[11 + 5 /* padding */] = {
    0x32,
    0x30,
    0x30,
    0x34,
    0x2F,
    0x30,
    0x32,
    0x2F,
    0x30,
    0x31,
    0x00,
    /* padding */
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
};

/* 8033CDC0-8033D244 337700 0484+00 1/1 0/0 0/0 .text            __OSBootDolSimple */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __OSBootDolSimple(u32 param_0, u32 param_1, void* param_2, void* param_3, s32 param_4, u32 param_5, void* param_6) {
    nofralloc
#include "asm/dolphin/os/OSExec/__OSBootDolSimple.s"
}
#pragma pop

/* ############################################################################################## */
/* 804509A8-804509B0 000428 0003+05 1/1 0/0 0/0 .sdata           @213 */
SECTION_SDATA static u8 lit_213[3 + 5 /* padding */] = {
    0x25,
    0x64,
    0x00,
    /* padding */
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
};

/* 8033D244-8033D3E0 337B84 019C+00 0/0 1/1 0/0 .text            __OSBootDol */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __OSBootDol(s32 param_0, u32 param_1, s32 param_2) {
    nofralloc
#include "asm/dolphin/os/OSExec/__OSBootDol.s"
}
#pragma pop
