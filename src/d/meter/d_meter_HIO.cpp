//
// Generated By: dol2asm
// Translation Unit: d/meter/d_meter_HIO
//

#include "d/meter/d_meter_HIO.h"
#include "d/save/d_save.h"
#include "dol2asm.h"
#include "global.h"

//
// Forward References:
//

extern "C" void __ct__16dMeter_menuHIO_cFv();
extern "C" void __ct__23dMeter_drawCollectHIO_cFv();
extern "C" void __ct__22dMeter_drawOptionHIO_cFv();
extern "C" void __ct__22dMeter_drawLetterHIO_cFv();
extern "C" void __ct__23dMeter_drawFishingHIO_cFv();
extern "C" void __ct__22dMeter_drawInsectHIO_cFv();
extern "C" void __ct__27dMeter_drawCalibrationHIO_cFv();
extern "C" void __ct__21dMeter_drawSkillHIO_cFv();
extern "C" void __ct__25dMeter_drawEmpButtonHIO_cFv();
extern "C" void __ct__24dMeter_drawMiniGameHIO_cFv();
extern "C" void __ct__25dMeter_drawLightDropHIO_cFv();
extern "C" void __ct__16dMeter_drawHIO_cFv();
extern "C" void __ct__16dMeter_ringHIO_cFv();
extern "C" void __ct__19dMeter_mapIconHIO_cFv();
extern "C" void __ct__16dMeter_fmapHIO_cFv();
extern "C" void __dt__16dMeter_fmapHIO_cFv();
extern "C" void __ct__18dMeter_cursorHIO_cFv();
extern "C" void __dt__25dMeter_drawLightDropHIO_cFv();
extern "C" void __dt__25dMeter_drawEmpButtonHIO_cFv();
extern "C" void __dt__24dMeter_drawMiniGameHIO_cFv();
extern "C" void __dt__21dMeter_drawSkillHIO_cFv();
extern "C" void __dt__27dMeter_drawCalibrationHIO_cFv();
extern "C" void __dt__22dMeter_drawInsectHIO_cFv();
extern "C" void __dt__23dMeter_drawFishingHIO_cFv();
extern "C" void __dt__22dMeter_drawLetterHIO_cFv();
extern "C" void __dt__22dMeter_drawOptionHIO_cFv();
extern "C" void __dt__23dMeter_drawCollectHIO_cFv();
extern "C" void __dt__19dMeter_mapIconHIO_cFv();
extern "C" void __ct__Q216dMeter_fmapHIO_c13MapBlinkAnimeFv();
extern "C" void __dt__18dMeter_cursorHIO_cFv();
extern "C" void __dt__16dMeter_ringHIO_cFv();
extern "C" void __dt__16dMeter_drawHIO_cFv();
extern "C" void __dt__16dMeter_menuHIO_cFv();
extern "C" void __sinit_d_meter_HIO_cpp();

//
// External References:
//

extern "C" void __dt__4cXyzFv();
extern "C" void mDoExt_getGameHeap__Fv();
extern "C" void __ct__4cXyzFv();
extern "C" void __ct__Q28JUtility6TColorFv();
extern "C" void free__7JKRHeapFPv();
extern "C" void __dl__FPv();
extern "C" void __register_global_object();
extern "C" void __destroy_arr();
extern "C" void __construct_array();
extern "C" void _savegpr_18();
extern "C" void _savegpr_29();
extern "C" void _restgpr_18();
extern "C" void _restgpr_29();

//
// Declarations:
//

/* ############################################################################################## */
/* 803BF0E8-803BF0F4 01C208 000C+00 2/2 0/0 0/0 .data            __vt__18dMeter_cursorHIO_c */
SECTION_DATA extern void* __vt__18dMeter_cursorHIO_c[3] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__18dMeter_cursorHIO_cFv,
};

/* 803BF0F4-803BF100 01C214 000C+00 2/2 0/0 0/0 .data            __vt__16dMeter_fmapHIO_c */
SECTION_DATA extern void* __vt__16dMeter_fmapHIO_c[3] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__16dMeter_fmapHIO_cFv,
};

/* 803BF100-803BF10C 01C220 000C+00 3/3 0/0 0/0 .data            __vt__19dMeter_mapIconHIO_c */
SECTION_DATA extern void* __vt__19dMeter_mapIconHIO_c[3] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__19dMeter_mapIconHIO_cFv,
};

/* 803BF10C-803BF118 01C22C 000C+00 2/2 0/0 0/0 .data            __vt__16dMeter_ringHIO_c */
SECTION_DATA extern void* __vt__16dMeter_ringHIO_c[3] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__16dMeter_ringHIO_cFv,
};

/* 803BF118-803BF124 01C238 000C+00 2/2 0/0 0/0 .data            __vt__16dMeter_drawHIO_c */
SECTION_DATA extern void* __vt__16dMeter_drawHIO_c[3] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__16dMeter_drawHIO_cFv,
};

/* 803BF124-803BF130 01C244 000C+00 3/3 0/0 0/0 .data            __vt__25dMeter_drawLightDropHIO_c
 */
SECTION_DATA extern void* __vt__25dMeter_drawLightDropHIO_c[3] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__25dMeter_drawLightDropHIO_cFv,
};

/* 803BF130-803BF13C 01C250 000C+00 3/3 0/0 0/0 .data            __vt__24dMeter_drawMiniGameHIO_c */
SECTION_DATA extern void* __vt__24dMeter_drawMiniGameHIO_c[3] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__24dMeter_drawMiniGameHIO_cFv,
};

/* 803BF13C-803BF148 01C25C 000C+00 3/3 0/0 0/0 .data            __vt__25dMeter_drawEmpButtonHIO_c
 */
SECTION_DATA extern void* __vt__25dMeter_drawEmpButtonHIO_c[3] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__25dMeter_drawEmpButtonHIO_cFv,
};

/* 803BF148-803BF154 01C268 000C+00 3/3 0/0 0/0 .data            __vt__21dMeter_drawSkillHIO_c */
SECTION_DATA extern void* __vt__21dMeter_drawSkillHIO_c[3] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__21dMeter_drawSkillHIO_cFv,
};

/* 803BF154-803BF160 01C274 000C+00 3/3 0/0 0/0 .data            __vt__27dMeter_drawCalibrationHIO_c
 */
SECTION_DATA extern void* __vt__27dMeter_drawCalibrationHIO_c[3] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__27dMeter_drawCalibrationHIO_cFv,
};

/* 803BF160-803BF16C 01C280 000C+00 3/3 0/0 0/0 .data            __vt__22dMeter_drawInsectHIO_c */
SECTION_DATA extern void* __vt__22dMeter_drawInsectHIO_c[3] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__22dMeter_drawInsectHIO_cFv,
};

/* 803BF16C-803BF178 01C28C 000C+00 3/3 0/0 0/0 .data            __vt__23dMeter_drawFishingHIO_c */
SECTION_DATA extern void* __vt__23dMeter_drawFishingHIO_c[3] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__23dMeter_drawFishingHIO_cFv,
};

/* 803BF178-803BF184 01C298 000C+00 3/3 0/0 0/0 .data            __vt__22dMeter_drawLetterHIO_c */
SECTION_DATA extern void* __vt__22dMeter_drawLetterHIO_c[3] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__22dMeter_drawLetterHIO_cFv,
};

/* 803BF184-803BF190 01C2A4 000C+00 3/3 0/0 0/0 .data            __vt__22dMeter_drawOptionHIO_c */
SECTION_DATA extern void* __vt__22dMeter_drawOptionHIO_c[3] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__22dMeter_drawOptionHIO_cFv,
};

/* 803BF190-803BF19C 01C2B0 000C+00 3/3 0/0 0/0 .data            __vt__23dMeter_drawCollectHIO_c */
SECTION_DATA extern void* __vt__23dMeter_drawCollectHIO_c[3] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__23dMeter_drawCollectHIO_cFv,
};

/* 803BF19C-803BF1A8 01C2BC 000C+00 2/2 0/0 0/0 .data            __vt__16dMeter_menuHIO_c */
SECTION_DATA extern void* __vt__16dMeter_menuHIO_c[3] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__16dMeter_menuHIO_cFv,
};

/* 801FE330-801FE348 1F8C70 0018+00 1/1 0/0 0/0 .text            __ct__16dMeter_menuHIO_cFv */
dMeter_menuHIO_c::dMeter_menuHIO_c() {
    mGameover = 70;
}

/* 801FE348-801FE4EC 1F8C88 01A4+00 1/1 0/0 0/0 .text            __ct__23dMeter_drawCollectHIO_cFv
 */
dMeter_drawCollectHIO_c::dMeter_drawCollectHIO_c() {
    mUnselectItemScale = 1.0f;
    mSelectItemScale = 1.5f;
    mUnselectSaveOptionScale = 1.0f;
    mSelectSaveOptionScale = 1.1f;
    mBlueSmokePosX = -12.0f;
    mBlueSmokePosY = 1.3f;
    mBlueSmokeScale = 1.3f;
    mBlueSmokeAlpha = 0.8f;
    mMaskMirrorPos.set(0.0f, 0.0f, 0.0f);
    mMaskMirrorAngle.set(0, 0, 0);
    field_0x9a = false;
    mMaskMirrorScale = 0.0f;
    mMaskMirrorAnimSpeed = 1.0f;
    mHeartVesselPosX = -5.0f;
    mHeartVesselPosY = 4.0f;
    mHeartVesselScale = 0.9f;
    mHeartPiecePosX = 0.0f;
    mHeartPiecePosY = 0.0f;
    mHeartPieceScale = 1.0f;
    mButtonDebugON = false;
    mAButtonPosX = -22.3f;
    mAButtonPosY = 24.9f;
    mAButtonScale = 1.3f;
    mBButtonPosX = -22.3f;
    mBButtonPosY = 25.0f;
    mBButtonScale = 1.3f;
    mAButtonTextPosX = -24.9f;
    mAButtonTextPosY = 24.9f;
    mAButtonTextScale = 1.1f;
    mBButtonTextPosX = -27.5f;
    mBButtonTextPosY = 26.0f;
    mBButtonTextScale = 1.1f;
    mColorDebugON = false;
    mVesselBack[VESSEL_HEART].set(0, 0, 0, 0);
    mVesselFront[VESSEL_HEART].set(250, 250, 210, 220);
    mVesselBack[VESSEL_DECOR].set(200, 190, 100, 0);
    mVesselFront[VESSEL_DECOR].set(200, 190, 100, 175);
}

/* 801FE4EC-801FE5CC 1F8E2C 00E0+00 1/1 0/0 0/0 .text            __ct__22dMeter_drawOptionHIO_cFv */
dMeter_drawOptionHIO_c::dMeter_drawOptionHIO_c() {
    mSelectBarScale = 1.02f;
    mUnselectBarScale = 0.98f;
    mArrowSize = 0.3f;

    mSelectNameColor.set(255, 255, 255, 255);
    mSelectColor.set(255, 200, 0, 255);
    mUnselectColor.set(180, 180, 150, 255);

    mWindowPosX = 0.0f;
    mWindowPosY = 0.0f;
    mWindowScale = 1.0f;

    for (int i = 0; i < 4; i++) {
        mOptionTypeBGPosX[i] = 0.0f;
        mOptionTypeBGPosY[i] = 0.0f;
    }

    mOpenFrames = 10;
    mCloseFrames = 10;

    mDebug = false;
    mBackgroundAlpha = 150;
    mBackgroundPosY = 45.0f;

    mArrowOffsetX = 38.0f;
    mArrowOffsetX_4x3 = 4.0f;
}

/* 801FE5CC-801FE730 1F8F0C 0164+00 1/1 0/0 0/0 .text            __ct__22dMeter_drawLetterHIO_cFv */
dMeter_drawLetterHIO_c::dMeter_drawLetterHIO_c() {
    for (int i = 0; i < 2; i++) {
        mOpenFrame[i] = 10;
        mCloseFrame[i] = 10;
    }

    mLetterNum = 0;
    mDebugON = false;

    mUnselectPageIconAlpha = 255;

    mSelectBarScale = 1.02f;
    mUnselectBarScale = 0.98f;

    mWindowPosX = 0.0f;
    mWindowPosY = -20.0f;
    mWindowScale = 1.0f;

    mLetterWindowPosX = 0.0f;
    mLetterWindowPosY = 0.0f;
    mLetterWindowScale = 1.0f;
    mWindowBGAlpha = 150;

    mLetterLinePosX = 0.0f;
    mLetterLinePosY = 0.0f;
    mLetterLineAlpha = 130;

    mSelectPageIconBack.set(0, 0, 0, 0);
    mSelectPageIconFront.set(255, 255, 255, 255);
    mSelectBarBack.set(105, 95, 55, 255);
    mSelectBarFront.set(200, 180, 135, 255);
    mSelectTextBack.set(31, 24, 12, 0);
    mSelectTextFront.set(255, 255, 200, 255);
    mLetterTextBack.set(0, 0, 0, 0);
    mLetterTextFront.set(65, 55, 30, 255);
}

static f32 const fipaScale[6] = {0.98f, 1.0f, 1.0f, 1.0f, 0.95f, 1.1f};

static f32 const fipaPosX[6] = {1.3f, 6.6f, 0.0f, 3.96f, 4.0f, 27.5f};

static f32 const fipaPosY[6] = {-9.2f, -27.5f, -11.7f, -9.2f, -30.1f, -17.9f};

static f32 const finaScale[6] = {0.9f, 0.9f, 0.9f, 0.9f, 0.9f, 0.9f};

static f32 const finaPosX[6] = {-25.0f, -4.0f, 0.0f, 0.0f, 0.0f, -4.0f};

static f32 const finaPosY[6] = {-16.0f, -40.6, -24.0f, -11.7f, -37.9f, -13.0f};

static f32 const filiScale[6] = {0.65f, 0.65f, 0.65f, 0.65f, 0.65f, 0.65f};

static f32 const filiPosX[6] = {-28.0f, -8.0f, 9.2f, 9.2f, 9.2f, -8.0f};

static f32 const filiPosY[6] = {-6.6f, -14.0f, -14.4f, 24.9f, -11.7f, 24.9f};

static f32 const bboxScale[6] = {1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f};

static f32 const bboxPosX[6] = {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f};

static f32 const bboxPosY[6] = {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f};

static f32 const rboxScale[6] = {1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f};

static f32 const rboxPosX[6] = {1.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f};

static f32 const rboxPosY[6] = {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f};

static f32 const finfoScale[6] = {0.87f, 0.87f, 0.88f, 0.87f, 0.87f, 0.87f};

static f32 const finfoPosX[6] = {-17.0f, 0.0f, -14.0f, 0.0f, -12.0f, -32.8f};

static f32 const finfoPosY[6] = {6.6f, 0.0f, 0.0f, 0.0f, 1.3f, 0.0f};

static f32 const fishnScale[6] = {1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f};

static f32 const fishnPosX[6] = {4.0f, -20.0f, 1.3f, 6.6f, 1.3f, 9.2f};

static f32 const fishnPosY[6] = {-72.1f, 129.6f, 0.0f, 6.6f, 32.8f, 11.7f};

/* 801FE730-801FE8DC 1F9070 01AC+00 1/1 0/0 0/0 .text            __ct__23dMeter_drawFishingHIO_cFv
 */
dMeter_drawFishingHIO_c::dMeter_drawFishingHIO_c() {
    mOpenFrames = 10;
    mCloseFrames = 10;
    mDebug = false;

    for (int i = 0; i < 6; i++) {
        mFishNum[i] = 0;
        mFishSize[i] = 0;
        mFishIconScale[i] = fipaScale[i];
        mFishIconPosX[i] = fipaPosX[i];
        mFishIconPosY[i] = fipaPosY[i];
        mFishNameScale[i] = finaScale[i];
        mFishNamePosX[i] = finaPosX[i];
        mFishNamePosY[i] = finaPosY[i];
        mFishLineScale[i] = filiScale[i];
        mFishLinePosX[i] = filiPosX[i];
        mFishLinePosY[i] = filiPosY[i];
        mFishSizeScale[i] = bboxScale[i];
        mFishSizePosX[i] = rboxPosX[i];
        mFishSizePosY[i] = rboxPosY[i];
        mFishCountScale[i] = rboxScale[i];
        mFishCountPosX[i] = rboxPosX[i];
        mFishCountPosY[i] = rboxPosY[i];
        mFishCountSizeScale[i] = finfoScale[i];
        mFishCountSizePosX[i] = finfoPosX[i];
        mFishCountSizePosY[i] = finfoPosY[i];
        mFishInfoScale[i] = fishnScale[i];
        mFishInfoPosX[i] = fishnPosX[i];
        mFishInfoPosY[i] = fishnPosY[i];
    }
    mScale[0] = 0.83f;
    mPosX[0] = 5.0f;
    mPosY[0] = -22.2f;

    mScale[1] = 0.83f;
    mPosX[1] = -189.5f;
    mPosY[1] = -3.95f;
    mCaughtNumPosX_4x3 = -188.0f;
}

/* 801FE8DC-801FE954 1F921C 0078+00 1/1 0/0 0/0 .text            __ct__22dMeter_drawInsectHIO_cFv */
dMeter_drawInsectHIO_c::dMeter_drawInsectHIO_c() {
    mOpenFrame = 10;
    mCloseFrame = 10;

    mType = DEFAULT;
    mDebugON = false;

    mUnselectInsectScale = 1.0f;
    mSelectInsectScale = 1.5f;

    mDescWindowPosX = 0.0f;
    mDescWindowPosY = 77.0f;

    mGiveOptionPosX_4x3 = 0.0f;
    mGiveOptionPosY_4x3 = 43.0f;

    mConfirmOptionPosX_4x3 = 0.0f;
    mConfirmOptionPosY_4x3 = 119.0f;

    mGiveOptionPosX = 20.0f;
    mGiveOptionPosY = 43.0f;

    mConfirmOptionPosX = -34.0f;
    mConfirmOptionPosY = 119.0f;
}

/* 801FE954-801FE990 1F9294 003C+00 1/1 0/0 0/0 .text __ct__27dMeter_drawCalibrationHIO_cFv */
dMeter_drawCalibrationHIO_c::dMeter_drawCalibrationHIO_c() {
    mOpenFrames = 10;
    mCloseFrames = 10;
    mDebug = false;
    mFlashFrameNum = 30;
    mCircleScale = 1.0f;
    mCircleScale2 = 0.75f;
}

/* 801FE990-801FEAF0 1F92D0 0160+00 1/1 0/0 0/0 .text            __ct__21dMeter_drawSkillHIO_cFv */
dMeter_drawSkillHIO_c::dMeter_drawSkillHIO_c() {
    for (int i = 0; i < 2; i++) {
        mOpenFrame[i] = 10;
        mCloseFrame[i] = 10;
    }

    mDebug = false;
    field_0x58 = 0xFF;

    mSelectBarScale = 1.02f;
    mUnselectBarScale = 0.98f;

    mSkillDescPosX = 0.0f;
    mSkillDescPosY = 80.0f;
    mSkillDescScale = 0.95f;
    mWindowBGalpha = 150;

    mWindowLinePosX = 0.0f;
    mWindowLinePosY = 0.0f;
    mWindowLineAlpha = 130;

    mSelectScrollIconBlack.set(0, 0, 0, 0);
    mSelectScrollIconWhite.set(255, 255, 255, 255);
    mUnselectScrollIconBlack.set(0, 0, 0, 0);
    mUnselectScrollIconWhite.set(180, 180, 180, 100);
    mSelectBarBlack.set(105, 95, 55, 255);
    mSelectBarWhite.set(200, 180, 135, 255);
    mSelectTextBlack.set(31, 24, 12, 0);
    mSelectTextWhite.set(255, 255, 200, 255);

    mSkillTitlePosX = 0.0f;
    mSkillTitlePosY = 0.0f;
    mSkillTitleScale = 1.1f;
}

/* 801FEAF0-801FEFF0 1F9430 0500+00 1/1 0/0 0/0 .text            __ct__25dMeter_drawEmpButtonHIO_cFv
 */
dMeter_drawEmpButtonHIO_c::dMeter_drawEmpButtonHIO_c() {
    mHighlightScale = 2.5f;
    mHighlightFrontInner.set(255, 255, 255, 185);
    mHighlightFrontOuter.set(0, 155, 0, 0);
    mHighlightBackInner.set(255, 255, 255, 87);
    mHighlightBackOuter.set(0, 115, 0, 0);
    mHighlightAnimSpeed = 0.772705f;

    mHighlightFastScale = 3.0f;
    mHighlightFastFrontInner.set(255, 255, 255, 255);
    mHighlightFastFrontOuter.set(220, 220, 215, 0);
    mHighlightFastBackInner.set(255, 255, 190, 255);
    mHighlightFastBackOuter.set(200, 200, 210, 0);
    mHighlightFastAnimSpeed = 2.0f;

    mHighlightListenScale = 1.0f;
    mHighlightListenFrontInner.set(255, 255, 255, 185);
    mHighlightListenFrontOuter.set(0, 155, 0, 0);
    mHighlightListenBackInner.set(255, 255, 255, 87);
    mHighlightListenBackOuter.set(0, 115, 0, 0);
    mHighlightListenAnimSpeed = 0.3f;

    mHighlightRepeatHitScale = 2.5f;
    mHighlightRepeatHitFrontInner.set(255, 255, 255, 185);
    mHighlightRepeatHitFrontOuter.set(0, 155, 0, 0);
    mHighlightRepeatHitBackInner.set(255, 255, 255, 87);
    mHighlightRepeatHitBackOuter.set(0, 115, 0, 0);
    mHighlightRepeatHitAnimSpeed = 1.1f;
    mRepeatHitScale = 1.15f;
    mRepeatHitFrameNum = 4;

    for (int i = 0; i < 17; i++) {
        mDebugDisplayButton[0] = 0;
    }

    mDisplaySpace = 35.0f;
    mEmpButtonPosX = 0.0f;
    mEmpButtonPosY = 175.0f;
    mEmpButtonScale = 1.0f;

    mAButtonPosX = 0.0f;
    mAButtonPosY = 0.0f;
    mAButtonScale = 1.0f;

    mBButtonPosX = 0.0f;
    mBButtonPosY = 0.0f;
    mBButtonScale = 1.0f;

    mRButtonPosX = 0.0f;
    mRButtonPosY = 0.0f;
    mRButtonScale = 1.0f;

    mZButtonPosX = 0.0f;
    mZButtonPosY = 0.0f;
    mZButtonScale = 1.0f;

    m3DButtonPosX = 0.0f;
    m3DButtonPosY = 0.0f;
    m3DButtonScale = 1.0f;

    mCButtonPosX = 0.0f;
    mCButtonPosY = 0.0f;
    mCButtonScale = 1.0f;

    mSButtonPosX = 0.0f;
    mSButtonPosY = -392.0f;
    mSButtonScale = 0.9f;

    mXButtonPosX = 0.0f;
    mXButtonPosY = 0.0f;
    mXButtonScale = 1.0f;

    mYButtonPosX = 0.0f;
    mYButtonPosY = 0.0f;
    mYButtonScale = 1.0f;

    mNunchukPosX = 0.0f;
    mNunchukPosY = 0.0f;
    mNunchukScale = 1.0f;

    mWiimotePosX = 0.0f;
    mWiimotePosY = 0.0f;
    mWiimoteScale = 1.0f;

    mWiimoteLRPosX = 0.0f;
    mWiimoteLRPosY = 0.0f;
    mWiimoteLRScale = 1.0f;

    mWiimoteAPosX = 0.0f;
    mWiimoteAPosY = 0.0f;
    mWiimoteAScale = 1.0f;

    m3DBButtonPosX = 0.0f;
    m3DBButtonPosY = 0.0f;
    m3DBButtonScale = 1.0f;

    mNunchukWiimotePosX = 0.0f;
    mNunchukWiimotePosY = 0.0f;
    mNunchukWiimoteScale = 1.0f;

    mNunchukWiimoteRealPosX = 0.0f;
    mNunchukWiimoteRealPosY = 0.0f;
    mNunchukWiimoteRealScale = 1.0f;

    mNunchukRealPosX = 0.0f;
    mNunchukRealPosY = 0.0f;
    mNunchukRealScale = 1.0f;

    mNunchukAttackPosX = 0.0f;
    mNunchukAttackPosY = 0.0f;
    mNunchukAttackScale = 1.0f;

    mABButtonPosX = 0.0f;
    mABButtonPosY = 0.0f;
    mABButtonScale = 1.0f;

    mNunchukZButtonPosX = 0.0f;
    mNunchukZButtonPosY = 0.0f;
    mNunchukZButtonScale = 1.0f;

    mNunchukCButtonPosX = 0.0f;
    mNunchukCButtonPosY = 0.0f;
    mNunchukCButtonScale = 1.0f;

    mBottleIconPosX = 0.0f;
    mBottleIconPosY = 0.0f;
    mBottleIconScale = 1.0f;

    mViewChangePosX = -26.0f;
    mViewChangePosY = 67.0f;
    mViewChangeScale = 1.0f;

    mText2PosX = 2.0f;
    mText1PosX = 2.0f;
    mText2PosY = 3.0f;
    mText1PosY = 3.0f;
    mText2Scale = 1.0f;
    mText1Scale = 1.0f;

    mItemPosX = 12.0f;
    mItemPosY = 0.0f;
    mItemScale = 1.0f;

    mMidnaIconPosX = 0.0f;
    mMidnaIconPosY = 0.0f;
    mMidnaIconScale = 1.0f;

    mHawkeyeDebugON = false;
    mHawkeyePosX = 0.0f;
    mHawkeyePosY = 0.0f;
    for (int i = 0; i < 3; i++) {
        mHawkeyeTextPosY[i] = 0.0f;
    }
    mHawkeyeTextPosX = 0.0f;
    mHawkeyePlusPosX = 17.0f;
    mHawkeyeMinusPosX = -17.0f;

    mHawkeyeZoomDebugON = false;
    mHawkeyeZoomPosX = 0.0f;
    mHawkeyeZoomPosY = 25.0f;
    mHawkeyeZoomScale = 0.8f;
    mHawkeyeZoomScale_4x3 = 0.9f;
    // fake match, fix later
    for (int i = 0; i < 3; i++) {
        int* tmp = (int*)this + i;
        *(f32*)(tmp + 0x62) = 0.0f;
        *(f32*)(tmp + 0x6B) = 1.0f;
    }
    mHawkeyeTextIconPosY = -6.0f;
    mHawkeyeZoomTextPosY = -8.0f;
    mHawkeyeIconPosY = 0.0f;
    mHawkeyeTextIconPosY_4x3 = 12.0f;
    mHawkeyeTextPosY_4x3 = -8.0f;
    mHawkeyeIconPosY_4x3 = 0.0f;

    mPointerONBlack[0].set(200, 200, 200, 0);
    mPointerONWhite[0].set(255, 255, 0, 255);
    mPointerONBlack[1].set(255, 145, 100, 0);
    mPointerONWhite[1].set(255, 145, 100, 255);
    mPointerOFFBlack.set(0, 0, 0, 0);
    mPointerOFFWhite.set(0, 0, 0, 0);

    mPointerONScale = 1.1f;
    mPointerOFFScale = 0.9f;
    mPointerONAnimFrame = 30;
}

/* 801FEFF0-801FF31C 1F9930 032C+00 1/1 0/0 0/0 .text            __ct__24dMeter_drawMiniGameHIO_cFv
 */
dMeter_drawMiniGameHIO_c::dMeter_drawMiniGameHIO_c() {
    field_0x8 = 1.0f;
    field_0x14 = 0.0f;
    field_0x20 = 0.0f;
    field_0x2c = 1.0f;

    mGoatTimerSizeX = 1.2f;
    mGoatTimerSizeY = 0.9f;
    mGoatTimerPosX = 207.0f;
    mGoatTimerPosY = -43.0f;
    mGoatTimerAlpha = 0.5f;
    mGoatTimerSizeX_4x3 = 1.2f;
    mGoatTimerSizeY_4x3 = 0.9f;
    mGoatTimerPosX_4x3 = 207.0f;
    mGoatTimerPosY_4x3 = -43.0f;

    mGoatCounterSizeX = 1.1f;
    mGoatCounterSizeY = 0.9f;
    mGoatCounterPosX = 17.0f;
    mGoatCounterPosY = 317.0f;
    mGoatCounterAlpha = 0.7f;

    mGoatIconSizeX = 0.75f;
    mGoatIconSizeY = 0.75f;
    mGoatIconPosX = -275.0f;
    mGoatIconPosX_4x3 = -275.0f;
    mGoatIconPosY = 76.0f;
    mGoatIconAlpha = 0.9f;

    mRiverRideTargetCounterSizeY = 1.0f;
    mRiverRideTargetCounterPosX = -22.0f;
    mRiverRideIconPosX_4x3 = -30.0f;
    mRiverRideTargetCounterPosY = 0.0f;
    mRiverRideTargetCounterAlpha = 1.0f;

    field_0x3c = 1.4f;
    field_0x48 = 1.0f;
    field_0x54 = 198.0f;
    field_0x60 = 160.0f;
    field_0x6c = 0.5f;

    mRiverRideCounterSizeX = 1.1f;
    mRiverRideCounterSizeY = 0.95f;
    mRiverRideCounterPosX = 28.0f;
    mRiverRideCounterPosY = -18.0f;
    mRiverRideCounterAlpha = 0.7f;

    mRiverRideTargetIconSizeX = 0.9f;
    mRiverRideTargetIconSizeY = 0.9f;
    mRiverRideTargetIconPosX = 23.0f;
    mRiverRideTargetIconPosY = -16.0f;
    mRiverRideTargetIconAlpha = 0.9f;

    field_0x10 = 1.0f;
    field_0x1c = 0.0f;
    field_0x28 = 0.0f;
    field_0x34 = 1.0f;
    field_0x40 = 1.4f;
    field_0x4c = 1.0f;
    field_0x58 = 198.0f;
    field_0x64 = -30.0f;
    field_0x70 = 0.5f;

    mRiderGameCounterSizeX = 1.1f;
    mRiderGameCounterSizeY = 0.95f;
    mRiderGameCounterPosX = 267.0f;
    mRiderGameCounterPosY = 288.0f;
    mRiderGameCounterAlpha = 0.7f;

    mRiderGameIconSizeX = 0.75f;
    mRiderGameIconSizeY = 0.75f;
    mRiderGameIconPosX = -29.0f;
    mRiderGameIconPosX_4x3 = -26.0f;
    mRiderGameIconPosY = 50.0f;
    mRiderGameIconAlpha = 0.9f;

    mReadyGo = 60;
    field_0x15a = 10;

    mGetInTextSizeX = 1.0f;
    mGetInTextSizeY = 1.0f;
    mGetInTextPosX = 0.0f;
    mGetInTextPosY = 0.0f;
    mGetInTextAnimSpeed = 1.0f;
    mGetInTextWaitFrames = 10;
    mGetInTextAlphaFrames = 10;
    mGetInHighlightAppearFrames = 30;
    mGetInHighlightScale = 1.8f;
    mGetInHighlightFrontInner.set(255, 255, 167, 80);
    mGetInHighlightFrontOuter.set(220, 110, 30, 0);
    mGetInHighlightBackInner.set(255, 255, 190, 90);
    mGetInHighlightBackOuter.set(170, 110, 0, 0);
    mGetInHighlightAnimSpeed = 0.6f;
    mGetInTextLocation = 0;

    mStartHighlightAppearFrames = 30;
    mStartHighlightScale = 1.8f;
    mStartHighlightFrontInner.set(255, 255, 167, 80);
    mStartHighlightFrontOuter.set(220, 110, 30, 0);
    mStartHighlightBackInner.set(255, 255, 190, 90);
    mStartHighlightBackOuter.set(170, 110, 0, 0);
    mStartHighlightAnimSpeed = 0.6f;
    mStartHighlightDisplayFrames = 30;

    mReadyFightTextSizeX = 1.0f;
    mReadyFightTextSizeY = 1.0f;
    mReadyFightTextPosX = 0.0f;
    mReadyFightTextPosY = 0.0f;
    mReadyFightTextAnimSpeed = 1.0f;
    mReadyFightTextWaitFrames = 10;
    field_0x172 = 10;
    mReadyFightHighlightAppearFrames = 30;
    mReadyFightHighlightScale = 1.8f;
    mReadyFightHighlightFrontInner.set(255, 255, 167, 80);
    mReadyFightHighlightFrontOuter.set(220, 110, 30, 0);
    mReadyFightHighlightBackInner.set(255, 255, 190, 90);
    mReadyFightHighlightBackOuter.set(170, 110, 0, 0);
    mReadyFightHighlightAnimSpeed = 0.6f;
}

/* 801FF31C-801FF5B8 1F9C5C 029C+00 1/1 0/0 0/0 .text            __ct__25dMeter_drawLightDropHIO_cFv
 */
dMeter_drawLightDropHIO_c::dMeter_drawLightDropHIO_c() {
    mVesselScale = 0.76f;
    mVesselPosX = -18.0f;
    mVesselPosY = 11.0f;
    mVesselPosX_4x3 = -20.0f;
    mVesselPosY_4x3 = 6.6f;
    mVesselAlpha = 1.0f;

    mVesselTalkScale = 0.76f;
    mVesselTalkPosX = 20.0f;
    mVesselTalkPosY = -35.0f;
    mVesselTalkAlpha = 0.5f;

    mDropGetScale = 2.5f;
    mDropGetScaleAnimFrameNum = 20;
    mDropScale = 1.0f;
    mHighlightInterval = 1;
    field_0x54 = 0xFFF1;
    mVesselDecorAlpha = 0.5f;
    mDropAlpha = 1.0f;

    mDropOnColorBlack.set(30, 255, 255, 0);
    mDropOnColorWhite.set(255, 255, 255, 255);
    mDropOffColorBlack.set(0, 0, 0, 0);
    mDropOffColorWhite.set(255, 255, 255, 255);

    mHighlightLoopScale = 0.6f;
    mHighlightLoopFrontInner[0].set(255, 255, 255, 255);
    mHighlightLoopFrontOuter[0].set(0, 0, 0, 0);
    mHighlightLoopBackInner[0].set(255, 255, 255, 255);
    mHighlightLoopBackOuter[0].set(126, 238, 218, 0);
    mHighlightLoopAnimSpeed = 0.2f;

    mHighlightLoopBackScale = 0.7f;
    mHighlightLoopFrontInner[1].set(255, 255, 255, 255);
    mHighlightLoopFrontOuter[1].set(0, 0, 0, 0);
    mHighlightLoopBackInner[1].set(255, 255, 255, 255);
    mHighlightLoopBackOuter[1].set(126, 238, 218, 0);
    mHighlightLoopBackStopFrame = 19.0f;

    mDropHighlightFrontInner.set(255, 255, 255, 255);
    mDropHighlightFrontOuter.set(0, 0, 0, 0);
    mDropHighlightBackInner.set(255, 255, 255, 255);
    mDropHighlightBackOuter.set(126, 238, 218, 0);
    mDropHighlightAnimSpeed = 0.1f;
    mDropHighlightAnimSpeed_Completed = 0.6f;
    mHighlightScaleNormal = 1.3f;
    mHighlightScaleComplete = 0.3f;
    mAnimDebug = 0;
}

/* 801FF5B8-802001AC 1F9EF8 0BF4+00 1/1 0/0 0/0 .text            __ct__16dMeter_drawHIO_cFv */
dMeter_drawHIO_c::dMeter_drawHIO_c() {
    mLifeTopPosX = 40.0f;
    mLifeTopPosY = -5.6f;

    mNoMagicPosY = -15.0f;

    mHUDScale = 1.0f;
    mHUDAlpha = 1.0f;

    mLifeGaugeScale = 1.0f;
    mLifeGaugeHeartAlpha = 1.0f;
    mLifeGaugeBaseAlpha = 0.4f;
    mLifeGaugePosX = 5.0f;
    mLifeGaugePosY = 18.0f;

    mHeartScale = 1.0f;
    mHeartAlpha = 0.7f;
    mLargeHeartScale = 1.0f;
    mLargeHeartAlpha = 1.0f;

    mMagicMeterScale = 0.7f;
    mMagicMeterAlpha = 1.0f;
    mMagicMeterFrameAlpha = 0.55f;
    mMagicMeterPosX = -42.0f;
    mMagicMeterPosY = 0.0f;

    mLanternMeterScale = 0.7f;
    mLanternMeterAlpha = 1.0f;
    mLanternMeterFrameAlpha = 0.55f;
    mLanternMeterPosX = 8.0f;
    mLanternMeterPosY = 20.0f;

    mOxygenMeterScale = 0.7f;
    mOxygenMeterAlpha = 1.0f;
    mOxygenMeterFrameAlpha = 0.55f;
    mOxygenMeterPosX = 8.0f;
    mOxygenMeterPosY = 20.0f;

    mMainHUDButtonsScale = 0.92f;
    mMainHUDButtonsAlpha = 1.0f;
    mMainHUDButtonsPosX = -15.0f;
    mMainHUDButtonsPosY = 8.0f;

    mRingHUDButtonsScale = 0.92f;
    mRingHUDButtonsAlpha = 1.0f;
    mRingHUDButtonsPosX = -15.0f;
    mRingHUDButtonsPosY = 8.0f;

    mButtonDisplayBackScale = 1.0f;
    mButtonDisplayBackAlpha = 1.0f;

    mAButtonScale = 1.1f;
    mAButtonAlpha = 1.0f;
    mAButtonPosX = 0.0f;
    mAButtonPosY = 0.0f;
    mAButtonTalkScale[0] = 1.0f;
    mAButtonTalkPosX[0] = 0.0f;
    mAButtonTalkPosY[0] = -63.0f;
    mAButtonTalkAScale = 1.0f;
    mAButtonTalkAPosX[0] = 0.0f;
    mAButtonTalkAPosY[0] = -49.0f;

    mAButtonTalkScale[1] = 1.0f;
    mAButtonTalkPosX[1] = -20.0f;
    mAButtonTalkPosY[1] = -62.0f;
    mAButtonFontTalkAScale = 1.0f;
    mAButtonTalkAPosX[1] = -20.0f;
    mAButtonTalkAPosY[1] = -48.0f;

    mAButtonVesselPosX = 0.0f;
    mAButtonVesselPosY = 0.0f;

    mBButtonScale = 1.1f;
    mBButtonAlpha = 1.0f;
    mBButtonPosX = -2.2f;
    mBButtonPosY = -1.3f;
    mBButtonTalkScale[0] = 1.0f;
    mBButtonTalkPosX[0] = 0.0f;
    mBButtonTalkPosY[0] = -62.0f;

    mBButtonTalkScale[1] = 1.0f;
    mBButtonTalkPosX[1] = -9.2f;
    mBButtonTalkPosY[1] = -65.0f;

    mBButtonWolfPosX = 0.0f;
    mBButtonWolfPosY = 0.0f;

    mBButtonVesselPosX = 0.0f;
    mBButtonVesselPosY = 0.0f;

    mMidnaIconScale = 1.1f;
    mMidnaIconAlpha = 1.0f;
    mMidnaIconPosX = 0.0f;
    mMidnaIconPosY = 0.0f;

    field_0x134 = 1.1f;
    field_0x138 = 1.0f;
    field_0x13c = 0.0f;
    field_0x140 = 0.0f;

    mXButtonScale = 1.0f;
    mXButtonAlpha = 0.9f;
    mXButtonPosX = 0.0f;
    mXButtonPosY = 0.0f;

    mYButtonScale = 1.0f;
    mYButtonAlpha = 0.9f;
    mYButtonPosX = 0.0f;
    mYButtonPosY = 0.0f;

    field_0x164 = 1.5f;
    field_0x168 = 1.0f;
    field_0x16c = 0.0f;
    field_0x170 = 0.0f;

    field_0x304 = 1.0f;
    field_0x308 = 0.0f;
    field_0x30c = 0.0f;

    field_0x314 = 1.0f;
    field_0x318 = 0.0f;
    field_0x31c = 0.0f;

    field_0x320 = 1.0f;
    field_0x324 = 0.0f;
    field_0x328 = 0.0f;

    mZButtonScale = 1.0f;
    mZButtonAlpha = 0.9f;
    mZButtonPosX = 0.0f;
    mZButtonPosY = 0.0f;

    mBButtonItemPosX = 3.0f;
    mBButtonItemPosY = 18.0f;
    mBButtonItemRotation = 0.0f;
    mBButtonItemScale = 1.4f;

    mBButtonSwordPosX = 17.0f;
    mBButtonSwordPosY = 25.0f;
    mBButtonSwordRotation = 76.0f;
    mBButtonSwordScale = 2.3f;

    mBButtonFishingPosX = 4.0f;
    mBButtonFishingPosY = 22.0f;
    mBButtonFishingRotation = 20.0f;
    mBButtonFishingScale = 2.1f;

    mXButtonItemPosX = 4.0f;
    mXButtonItemPosY = -14.0f;
    mXButtonItemScale = 1.5f;

    mYButtonItemPosX = 0.0f;
    mYButtonItemPosY = 0.0f;
    mYButtonItemScale = 1.5f;

    field_0x1cc = 0.0f;
    field_0x1d0 = 0.0f;
    field_0x1d4 = 1.0f;

    mXItemNumPosX = -13.0f;
    mXItemNumPosY = -12.0f;
    mXItemNumScale = 0.95f;

    mYItemNumPosX = -1.0f;
    mYItemNumPosY = -18.0f;
    mYItemNumScale = 0.95f;

    field_0x1f8 = 0.0f;
    field_0x208 = 0.0f;
    field_0x218 = 1.0f;

    mBItemNumPosX = 0.0f;
    mBItemNumPosY = 0.0f;
    mBItemNumScale = 1.0f;

    for (int i = 0; i < 3; i++) {
        mButtonItemRotation[i] = 0.0f;
    }

    mZButtonItemPosX = 0.0f;
    mZButtonItemPosY = 0.0f;
    mZButtonItemScale = 1.0f;

    for (int i = 0; i < 2; i++) {
        mBItemBaseScale[i] = 1.0f;
        mBItemBasePosX[i] = 0.0f;
        mBItemBasePosY[i] = 0.0f;
    }

    mBItemBaseAlpha[0] = 0.5f;
    mBItemBaseAlpha[1] = 0.5f;

    mXButtonItemBaseScale[0] = 1.5f;
    mXButtonItemBasePosX[0] = 14.0f;
    mXButtonItemBasePosY[0] = -12.0f;
    mXButtonItemBaseAlpha[0] = 0.5f;

    mXButtonItemBaseScale[1] = 1.5f;
    mXButtonItemBasePosX[1] = 0.0f;
    mXButtonItemBasePosY[1] = 0.0f;
    mXButtonItemBaseAlpha[1] = 1.0f;

    mYButtonItemBaseScale[0] = 1.5f;
    mYButtonItemBasePosX[0] = -15.0f;
    mYButtonItemBasePosY[0] = -12.0f;
    mYButtonItemBaseAlpha[0] = 0.5f;

    mYButtonItemBaseScale[1] = 1.5f;
    mYButtonItemBasePosX[1] = 0.0f;
    mYButtonItemBasePosY[1] = 0.0f;
    mYButtonItemBaseAlpha[1] = 0.5f;

    field_0x280 = 1.5f;
    field_0x288 = 0.0f;
    field_0x290 = 6.0f;
    field_0x298[0] = 0.5f;

    field_0x284 = 1.0f;
    field_0x28c = 0.0f;
    field_0x294 = 4.0f;
    field_0x298[1] = 1.0f;

    mZButtonItemBaseScale = 1.0f;
    mZButtonItemBasePosX = 0.0f;
    mZButtonItemBasePosY = 0.0f;
    mZButtonItemBaseAlpha = 0.5f;

    mButtonBaseAlpha = 0.55f;

    mAButtonFontActionID = 1001;
    field_0x2cc = 1001;
    mAButtonTextDebug = false;

    mAButtonFontSpacing = 1.0f;
    mAButtonFontScale = 1.0f;
    mAButtonFontPosX = 0.0f;
    mAButtonFontPosY = 0.0f;
    mAButtonFontColor.set(255, 255, 255, 255);

    mBButtonFontScale = 1.0f;
    mBButtonFontPosX = -8.0f;
    mBButtonFontPosY = 4.0f;
    mBButtonFontColor.set(255, 255, 255, 255);

    field_0x2e4 = 1.0f;
    field_0x2e8 = 0.0f;
    field_0x2ec = 0.0f;
    field_0x2f0.set(255, 255, 255, 255);

    mXYButtonFontScale = 1.0f;
    mXYButtonFontPosX = 0.0f;
    mXYButtonFontPosY = 0.0f;
    mXYButtonFontColor.set(255, 255, 255, 255);

    mZButtonFontScale = 1.0f;
    mZButtonFontPosX = 0.0f;
    mZButtonFontPosY = -4.7f;
    mZButtonFontColor.set(255, 255, 255, 255);

    mRupeeKeyScale = 1.0f;
    mRupeeKeyPosX = 9.2f;
    mRupeeKeyPosY = -4.0f;
    mRupeeKeyAlpha = 0.8f;

    mRupeeScale = 0.8f;
    mRupeePosX = 0.0f;
    mRupeePosY = 0.0f;
    mRupeeAlpha = 1.0f;

    mKeyScale = 0.7f;
    mKeyPosX = -14.0f;
    mKeyPosY = 1.3f;
    mKeyAlpha = 1.0f;

    mRupeeFrameScale = 0.0f;
    mRupeeFramePosX = 0.0f;
    mRupeeFramePosY = 1.0f;
    mRupeeFrameAlpha = 1.0f;

    mRupeeCountScale = 1.0f;
    mRupeeCountPosX = 0.0f;
    mRupeeCountPosY = 0.0f;
    mRupeeCountAlpha = 1.0f;

    mKeyNumScale = 1.0f;
    mKeyNumPosX = 0.0f;
    mKeyNumPosY = 0.0f;
    mKeyNumAlpha = 1.0f;

    mSpurDebug = false;
    mSpurIconScale = 1.0f;
    mSpurIconAlpha = 1.0f;
    mUsedSpurIconScale = 1.0f;
    mUsedSpurIconAlpha = 1.0f;
    mSpurBarScale = 0.95f;
    mSpurBarPosX = 6.6f;
    mSpurBarPosY = -1.3f;

    mAButtonHorsePosX = 2.2f;
    mAButtonHorsePosY = 0.0f;
    mAButtonHorseScale = 0.85f;

    mAButtonHighlightScale = 1.5f;
    mBButtonHighlightScale = 0.7f;
    field_0x3cc = 1.0f;
    mZButtonHighlightScale = 1.2f;
    mXYButtonHighlightScale = 1.2f;
    mMidnaIconHighlightScale = 1.0f;
    mSpurIconHighlightScale = 2.5f;
    mSpurIconReviveHighlightScale = 1.3f;
    field_0x3f0 = 0.0f;
    field_0x3f4 = 0.0f;
    field_0x3f8 = 1.0f;

    mDPadButtonScale = 0.9f;
    mDPadButtonOFFPosX = 12.0f;
    mDPadButtonOFFPosY = 0.0f;
    mDPadButtonONPosX = 12.0f;
    mDPadButtonONPosY = 0.0f;
    mDPadButtonLetterSpacing = 0.9f;
    mDPadButtonAlpha = 1.0f;
    mDPadButtonITEMAlpha = 1.0f;
    mDPadButtonMAPAlpha = 1.0f;
    mDPadButtonMoveFrame = 5;
    field_0x422 = 10;
    field_0x424 = 20;

    mXYButtonsItemDimAlpha = 128;
    mXYButtonsBaseDimAlpha = 128;
    field_0x42c = 128;

    for (int i = 0; i < 4; i++) {
        mButtonDebug[i] = false;
    }

    mMaxSpurAmount = 6;

    mSpurIconHighlightFrontInner.set(255, 255, 255, 255);
    mSpurIconHighlightFrontOuter.set(140, 232, 228, 0);
    mSpurIconHighlightBackInner.set(255, 255, 190, 255);
    mSpurIconHighlightBackOuter.set(55, 215, 90, 0);
    mSpurIconHighlightAnimSpeed = 1.5f;

    mSpurIconReviveHighlightFrontInner.set(255, 255, 255, 255);
    mSpurIconReviveHighlightFrontOuter.set(220, 110, 30, 0);
    mSpurIconReviveHighlightBackInner.set(255, 255, 190, 255);
    mSpurIconReviveHighlightBackOuter.set(170, 110, 0, 0);
    mSpurIconReviveHighlightAnimSpeed = 0.5f;

    mZButtonHighlightFrontInner.set(255, 255, 255, 255);
    mZButtonHighlightFrontOuter.set(0, 0, 0, 0);
    mZButtonHighlightBackInner.set(255, 255, 255, 255);
    mZButtonHighlightBackOuter.set(160, 160, 110, 0);
    mZButtonHighlightAnimSpeed = 0.4f;

    mXYButtonHighlightFrontInner.set(255, 255, 255, 255);
    mXYButtonHighlightFrontOuter.set(0, 0, 0, 0);
    mXYButtonHighlightBackInner.set(255, 255, 255, 255);
    mXYButtonHighlightBackOuter.set(160, 160, 110, 0);
    mXYButtonHighlightAnimSpeed = 0.4f;

    mAButtonHighlightFrontInner.set(255, 255, 255, 160);
    mAButtonHighlightFrontOuter.set(0, 0, 0, 0);
    mAButtonHighlightBackInner.set(255, 255, 255, 128);
    mAButtonHighlightBackOuter.set(0, 255, 0, 0);
    mAButtonHighlightAnimSpeed = 0.4f;

    mBButtonHighlightFrontInner.set(255, 180, 180, 160);
    mBButtonHighlightFrontOuter.set(0, 0, 0, 0);
    mBButtonHighlightBackInner.set(255, 255, 255, 128);
    mBButtonHighlightBackOuter.set(255, 0, 0, 0);
    mBButtonHighlightAnimSpeed = 0.4f;

    field_0x4a8.set(255, 180, 180, 160);
    field_0x4ac.set(0, 0, 0, 0);
    field_0x4b0.set(255, 255, 255, 128);
    field_0x4b4.set(255, 0, 0, 0);
    field_0x4b8 = 0.4f;

    field_0x4bc.set(255, 180, 180, 160);
    field_0x4c0.set(0, 0, 0, 0);
    field_0x4c4.set(255, 255, 255, 128);
    field_0x4c8.set(255, 255, 255, 0);
    field_0x4cc = 0.4f;
    field_0x3d0 = 0.7f;

    field_0x4d0.set(255, 180, 180, 160);
    field_0x4d4.set(0, 0, 0, 0);
    field_0x4d8.set(255, 255, 255, 128);
    field_0x4dc.set(255, 255, 255, 0);
    field_0x4e0 = 0.4f;
    field_0x3d4 = 0.7f;

    mMidnaIconHighlightFrontInner.set(200, 235, 255, 255);
    mMidnaIconHighlightFrontOuter.set(0, 0, 0, 0);
    mMidnaIconHighlightBackInner.set(255, 255, 255, 255);
    mMidnaIconHighlightBackOuter.set(140, 200, 125, 0);
    mMidnaIconHighlightAnimSpeed = 0.5f;
    mMidnaIconFlashRate = 50;

    mScrollArrowScaleX = 1.0f;
    mScrollArrowScaleY = 1.0f;
    mScrollArrowBCKAnimSpeed = 1.0f;
    mScrollArrowBPKAnimSpeed = 1.0f;
    mScrollArrowBTKAnimSpeed = 1.0f;
    mScrollArrowTopBottomPosX = 0.0f;
    mScrollArrowTopBottomPosY = 200.0f;
    mScrollArrowLeftRightPosX = 200.0f;
    mScrollArrowLeftRightPosY = 0.0f;
    mScrollArrowCenterPosX = 0.0f;
    mScrollArrowCenterPosY = 0.0f;
    mScrollArrowDisplayAll = false;

    mWiiLockArrowScaleX = 0.5f;
    mWiiLockArrowScaleY = 0.5f;
    mWiiLockArrowBCKAnimSpeed = 1.0f;
    mWiiLockArrowBPKAnimSpeed = 1.0f;
    mWiiLockArrowBTKAnimSpeed = 1.0f;
    mWiiLockArrowTopBottomPosX = 0.0f;
    mWiiLockArrowTopBottomPosY = 150.0f;
    mWiiLockArrowLeftRightPosX = 208.0f;
    mWiiLockArrowLeftRightPosY = 0.0f;
    mWiiLockArrowDisplayAll = false;

    field_0x54c = 1.0f;
    mItemScaleAdjustON = false;
    mItemScalePercent = 100;

    mFloatingMessagePosX = 0.0f;
    mFloatingMessagePosY = -100.0f;
    mMessageID = 395;
    mFlowID = 3003;
    mMessageDuration = 150;
    mMessageDebug = false;
    mFlowDebug = false;

    mTouchAreaSelectBlack[0].set(0, 0, 0, 0);
    mTouchAreaSelectWhite[0].set(255, 145, 100, 255);
    mTouchAreaSelectBlack[1].set(0, 0, 0, 0);
    mTouchAreaSelectWhite[1].set(255, 255, 0, 255);
    mTouchAreaSelectBlack[2].set(0, 0, 0, 0);
    mTouchAreaSelectWhite[2].set(230, 205, 180, 255);
    mTouchAreaSelectFrameNum = 10;

    for (int i = 0; i < 5; i++) {
        mTouchAreaUnselectScale[i] = 1.0f;
        mTouchAreaSelectScale[i] = 1.0f;
        mTouchAreaScale[i] = 1.0f;
        mTouchAreaAlpha[i] = 1.0f;
        mTouchAreaPosX[i] = 0.0f;
        mTouchAreaPosY[i] = 0.0f;
    }

    mDpadMAPScale = 1.0f;
    mDpadMAPPosX = 0.0f;
    mDpadMAPPosY = 0.0f;
    field_0x60a = false;

    mLanternIconMeterPosX = 0.0f;
    mLanternIconMeterPosY = 0.0f;
    mLanternIconMeterSize = 1.0f;
}

/* 802001AC-802004B4 1FAAEC 0308+00 1/1 0/0 0/0 .text            __ct__16dMeter_ringHIO_cFv */
dMeter_ringHIO_c::dMeter_ringHIO_c() {
    mRingRadiusH = 175.0f;
    mRingRadiusV = 160.0f;

    mOpenFrames = 5;
    mCloseFrames = 5;

    mSelectItemScale = 1.4f;
    mUnselectItemScale = 0.9f;
    mSelectButtonScale = 1.4f;
    mUnselectButtonScale = 1.0f;
    mCursorScale = 1.2f;

    mItemNum = 8;

    mInactiveItemScale = 0.4f;
    mItemAlphaFlashDuration = 300;
    mItemAlphaMin = 255;
    mItemAlphaMax = 255;

    mOffsetLineDisplay = 0;

    mItemIconAlpha = 255;
    mItemIconAlpha_Wolf = 110;

    mItemFrame[SELECT_FRAME].set(255, 255, 255, 0);
    mItemFrame[UNSELECT_FRAME].set(255, 255, 140, 0);

    mItemNamePosX = 125.0f;
    mItemNamePosY = 173.0f;
    mItemNameScale = 1.2f;

    mCenterPosX = 0.0f;
    mCenterPosY = 0.0f;
    mCenterScale = 1.0f;
    mOverlayAlpha = 0.35f;

    mGuidePosX[SET_ITEM] = -59.0f;
    mGuidePosY[SET_ITEM] = -64.0f;
    mGuideScale[SET_ITEM] = 0.8f;

    mGuidePosX[DIRECT_SELECT] = 90.0f;
    mGuidePosY[DIRECT_SELECT] = -124.0f;
    mGuideScale[DIRECT_SELECT] = 0.8f;

    mGuidePosX[2] = 0.0f;
    mGuidePosY[2] = 0.0f;
    mGuideScale[2] = 1.0f;

    mGuidePosX[ROTATE] = 118.0f;
    mGuidePosY[ROTATE] = -127.0f;
    mGuideScale[ROTATE] = 0.8f;

    mGuidePosX[COMBO_ITEM] = -1.3f;
    mGuidePosY[COMBO_ITEM] = -14.0f;
    mGuideScale[COMBO_ITEM] = 0.85f;

    for (int i = 5; i < 10; i++) {
        mGuidePosX[i] = 0.0f;
        mGuidePosY[i] = 18.0f;
        mGuideScale[i] = 0.85f;
    }

    mSelectPosX = 2.2f;
    mSelectPosY = 3.0f;
    mSelectScaleX = 0.8f;
    mSelectScaleY = 0.85f;

    mItemDescPosX = 0.0f;
    mItemDescPosY = 46.0f;
    mItemDescScale = 0.95f;
    mItemDescAlpha = 1.0f;

    mItemDescTitlePosX = 9.0f;
    mItemDescTitlePosY = 0.0f;
    mItemDescTitleScale = 1.1f;

    mItemRingPosX = -60.0f;
    mItemRingPosY = -5.0f;
    mRingPosX = -58.0f;
    mRingPosY = -8.0f;
    mRingAlpha = 0.75f;
    mRingAlpha_Wolf = 0.35f;
    mRingScaleH = 1.5f;
    mRingScaleV = 1.5f;

    mHighlightScale = 2.5f;
    mHighlightFrontInner.set(255, 255, 255, 185);
    mHighlightFrontOuter.set(0, 155, 0, 0);
    mHighlightBackInner.set(255, 255, 255, 87);
    mHighlightBackOuter.set(0, 115, 0, 0);
    mHighlightAnimSpeed = 0.772705f;

    mCursorInitSpeed = 5000;
    mCursorMax = 10000;
    mCursorAccel = 0;
    mCursorChangeWaitFrames = 2;

    field_0x10 = 120.0f;
    field_0x13e = 12;
    field_0x140 = 2048;
    field_0x142 = 128;

    field_0x44 = 0.0f;
    field_0x48 = 0.0f;
    field_0x4c = 1.0f;
    field_0x154 = 255;

    mDirectSelectWaitFrames = 4;
}

/* 802004B4-802006C8 1FADF4 0214+00 1/1 0/0 0/0 .text            __ct__19dMeter_mapIconHIO_cFv */
dMeter_mapIconHIO_c::dMeter_mapIconHIO_c() {
    mPortalCursorScale = 0.5f;
    mPortalIconScale = 0.65f;
    mDestinationScale = 0.5f;
    mDestinationZoomScale = 0.8f;
    mLinkScale = 0.5f;
    mLinkZoomScale = 0.6f;
    mYetoScale = 0.3f;
    mYetoZoomScale = 1.2f;
    mYetaScale = 0.3f;
    mYetaZoomScale = 1.2f;
    mGoldWolfScale = 0.2f;
    mGoldWolfZoomScale = 1.28f;
    field_0xa0 = 0.2f;
    field_0xa8 = 1.6f;
    field_0xb0 = 0.2f;
    field_0xb8 = 1.6f;
    field_0xc0 = 0.2f;
    field_0xc8 = 1.6f;
    field_0xd0 = 0.2f;
    field_0xd8 = 1.6f;
    mWagonScale = 0.2f;
    mWagonZoomScale = 1.0f;
    field_0x60 = 0.2f;
    field_0x68 = 1.6f;
    field_0x50 = 0.2f;
    field_0x58 = 1.4f;
    mDungeonEntranceScale = 0.4f;
    mDungeonEntranceZoomScale = 0.6f;
    field_0x20 = 0.2f;
    field_0x28 = 1.6f;
    field_0x30 = 0.2f;
    field_0x38 = 1.6f;
    mRoomEntranceScale = 0.5f;
    mRoomEntranceZoomScale = 0.6f;
    mLV8EntranceScale = 0.5f;
    mLV8EntranceZoomScale = 0.6f;
    field_0x120 = 0.2f;
    field_0x128 = 1.6f;
    mLightDropScale = 0.25f;
    mLightDropZoomScale = 0.55f;
    field_0x140 = 0.2f;
    field_0x148 = 1.6f;
    field_0x150 = 0.2f;
    field_0x158 = 1.6f;
    mDungeonDestScale = 0.5f;
    mDungeonDestZoomScale = 0.8f;
    mDungeonLinkScale = 0.4f;
    mDungeonLinkZoomScale = 0.5f;
    field_0x74 = 0.2f;
    field_0x7c = 0.8f;
    field_0x84 = 0.2f;
    field_0x8c = 0.8f;
    field_0x94 = 0.2f;
    field_0x9c = 0.8f;
    mMonkeyScale = 0.2f;
    mMonkeyZoomScale = 0.8f;
    mOoccooScale = 0.2f;
    mOoccooZoomScale = 0.8f;
    mOoccooPotScale = 0.2f;
    mOoccooPotZoomScale = 0.8f;
    mCopyRodStatueScale = 0.2f;
    mCopyRodStatueZoomScale = 0.8f;
    field_0xe4 = 0.2f;
    field_0xec = 0.5f;
    mChestScale = 0.2f;
    mChestZoomScale = 0.8f;
    mSmallKeyScale = 0.2f;
    mSmallKeyZoomScale = 0.7f;
    mDungeonExitScale = 0.3f;
    mDungeonExitZoomScale = 0.6f;
    mBossScale = 0.2f;
    mBossZoomScale = 0.8f;
    mGanonScale = 0.2f;
    mGanonZoomScale = 0.8f;
    mDungeonSpawnScale = 0.4f;
    mDungeonSpawnZoomScale = 0.5f;
    field_0x114 = 0.4f;
    field_0x11c = 0.5f;
    mDungeonWarpScale = 0.2f;
    mDungeonWarpZoomScale = 0.8f;
    field_0x134 = 0.25f;
    field_0x13c = 0.3f;
    mLightOrbScale = 0.2f;
    mLightOrbZoomScale = 0.8f;
    mCannonBallScale = 0.2f;
    mCannonBallZoomScale = 0.8f;

    mLV5DungeonItemDebug = false;
    mLV5DungeonItem = NO_ITEM;
    mIconDebug = false;

    for (int i = 0; i < ARRAY_SIZE(mIconDisplay); i++) {
        mIconDisplay[i] = true;
    }

    mLightDropFlashStartScaleOut = 1.2f;
    mLightDropFlashEndScaleOut = 1.5f;
    mLightDropFlashStartAlphaOut = 255;
    mLightDropFlashEndAlphaOut = 255;
    mLightDropFlashStartScaleIn = 1.0f;
    mLightDropFlashEndScaleIn = 1.3f;
    mLightDropFlashStartAlphaIn = 255;
    mLightDropFlashEndAlphaIn = 255;
    mLightDropFlashFrameNum = 10;
}

/* 802006C8-80200BCC 1FB008 0504+00 1/1 0/0 0/0 .text            __ct__16dMeter_fmapHIO_cFv */
dMeter_fmapHIO_c::dMeter_fmapHIO_c() {
    field_0xc = NULL;
    field_0x10 = NULL;
    field_0x8 = NULL;

    mDisplayFrameNum = 8;
    mUndisplayFrameNum = 6;
    mMapType = TYPE_DEFAULT;

    mRegionZoomRange = 50000.0f;
    mStageZoomScale = 20.0f;
    mRegionGridWidth = 10000.0f;
    mWorldGridWidth = 50000.0f;
    mRangeCheck = false;
    mRangeCheckDrawPriority = false;
    mPortalWarpON = false;
    mDisplayWorldOrigin = false;
    mDisplayRegionOrigin = false;
    mDisplayStageOrigin = false;
    mDisplayWorldGrid = false;
    mDisplayRegionGrid = false;

    mScrollSpeedWorldSlow = 0.5f;
    mScrollSpeedRegionSlow = 0.5f;
    mScrollSpeedRegionZoomSlow = 1.0f;
    mScrollSpeedDungeonMapSlow = 0.5f;

    mScrollSpeedWorldFast = 2.5f;
    mScrollSpeedRegionFast = 2.5f;
    mScrollSpeedRegionZoomFast = 5.0f;
    mScrollSpeedDungeonMapFast = 2.5f;

    mScrollSpeedSlowBound = 0.2f;
    mScrollSpeedFastBound = 1.0f;

    // fake match
    for (int i = 0; i < 8; i++) {
        int* tmp = (int*)this + i;
        *(f32*)(tmp + 0x5B) = 0.0f;
        *(f32*)(tmp + 0x63) = 0.0f;
        *(f32*)(tmp + 0x6B) = 0.0f;
        *(f32*)(tmp + 0x73) = -300000.0f;
        *(f32*)(tmp + 0x7B) = -300000.0f;
        *(f32*)(tmp + 0x83) = 300000.0f;
        *(f32*)(tmp + 0x8B) = 300000.0f;
    }
    mScrollRangeDebugON = false;
    mScrollRangeDisplay = false;
    field_0x308 = true;
    mRegionImageDebug = false;

    mMapTopLeftPosX = 142.0f;
    mMapTopLeftPosY = 61.0f;
    mMapScale = 329.0f;
    mDisplayReferenceArea = false;

    mBackgroundAlpha = 1.0f;
    mBackgroundFrontAlpha = 0.7f;

    field_0x2f9 = 0;
    mTerminalOutput = false;
    mPortalDataTerminalOutput = false;
    mRegionBitTerminalOutput = false;
    mAllRegionsUnlocked = false;
    mDrawBackground = true;

    mCursorScale = 1.0f;
    mCursorSpeed = 10.0f;
    mCursorWhite.set(255, 255, 255, 255);
    mCursorBlack.set(0, 182, 255, 0);
    mCursorDebugON = false;

    mDisplayAllPaths = false;
    mRegionPrintGlobalScroll = false;
    field_0x303 = 0;
    mRangeCheckInterval = 0;
    field_0x305 = 1;

    mTitlePosX = 6.6f;
    mTitlePosY = 7.0f;
    mTitleScale = 0.86499f;
    mSubTitlePosX = -22.0f;
    mSubTitlePosY = 4.5f;
    mSubTitleScale = 0.9f;

    mAreaMovementPosX = 6.0f;
    mAreaMovementPosY = -20.0f;
    mAreaMovementScale = 1.0f;

    mClosingPosX = 9.2f;
    mClosingPosY = -20.0f;
    mClosingScale = 0.9f;

    mDoIconPosX = 6.0f;
    mDoIconPosY = -6.0f;
    mDoIconScale = 0.9f;
    mButtonDebugON = false;

    mZButtonPosX = 25.0f;
    mZButtonPosY = 25.0f;
    mZButtonScale = 0.92f;

    mAButtonPosX = -0.5f;
    mAButtonPosY = 1.0f;
    mAButtonScale = 0.92f;

    mBButtonPosX = -1.0f;
    mBButtonPosY = -1.0f;
    mBButtonScale = 1.05f;

    mZButtonTextPosX = 20.0f;
    mZButtonTextPosY = 12.0f;
    mZButtonTextScale = 0.95f;

    mAButtonTextPosX = -7.5f;
    mAButtonTextPosY = 8.0f;
    mAButtonTextScale = 0.95f;

    mBButtonTextPosX = -7.0f;
    mBButtonTextPosY = 5.0f;
    mBButtonTextScale = 0.95f;

    mMapBlink[WORLD_VIEW].mSelectedRegion.mBlack.set(29, 24, 0, 0);
    mMapBlink[WORLD_VIEW].mSelectedRegion.mWhite.set(255, 255, 255, 255);
    mMapBlink[WORLD_VIEW].mSelectedRegion.mMax = 255;
    mMapBlink[WORLD_VIEW].mSelectedRegion.mMin = 200;
    mMapBlink[WORLD_VIEW].mSelectedRegion.mBlinkSpeed = 60;

    mMapBlink[WORLD_VIEW].mUnselectedRegion.mBlack.set(0, 0, 0, 0);
    mMapBlink[WORLD_VIEW].mUnselectedRegion.mWhite.set(170, 170, 170, 255);
    mMapBlink[WORLD_VIEW].mUnselectedRegion.mMax = 255;
    mMapBlink[WORLD_VIEW].mUnselectedRegion.mMin = 255;
    mMapBlink[WORLD_VIEW].mUnselectedRegion.mBlinkSpeed = 0;

    mMapBlink[WORLD_VIEW].mUnreachedRegionBlack.set(0, 20, 80, 0);
    mMapBlink[WORLD_VIEW].mUnreachedRegionWhite.set(30, 95, 190, 0);
    mMapBlink[WORLD_VIEW].field_0x20.set(0, 0, 0, 0);
    mMapBlink[WORLD_VIEW].field_0x24.set(0, 0, 0, 255);

    mMapBlink[REGION_VIEW].mSelectedRegion.mBlack.set(0, 0, 0, 0);
    mMapBlink[REGION_VIEW].mSelectedRegion.mWhite.set(255, 255, 255, 255);
    mMapBlink[REGION_VIEW].mSelectedRegion.mMax = 84;
    mMapBlink[REGION_VIEW].mSelectedRegion.mMin = 84;
    mMapBlink[REGION_VIEW].mSelectedRegion.mBlinkSpeed = 60;

    mMapBlink[REGION_VIEW].mUnselectedRegion.mBlack.set(0, 0, 0, 0);
    mMapBlink[REGION_VIEW].mUnselectedRegion.mWhite.set(48, 48, 48, 255);
    mMapBlink[REGION_VIEW].mUnselectedRegion.mMax = 255;
    mMapBlink[REGION_VIEW].mUnselectedRegion.mMin = 255;
    mMapBlink[REGION_VIEW].mUnselectedRegion.mBlinkSpeed = 0;

    mMapBlink[REGION_VIEW].mUnreachedRegionBlack.set(0, 20, 80, 0);
    mMapBlink[REGION_VIEW].mUnreachedRegionWhite.set(30, 95, 190, 0);
    mMapBlink[REGION_VIEW].field_0x20.set(0, 0, 0, 0);
    mMapBlink[REGION_VIEW].field_0x24.set(0, 0, 0, 255);

    mMapBlink[ZOOM_VIEW].mSelectedRegion.mBlack.set(0, 0, 0, 0);
    mMapBlink[ZOOM_VIEW].mSelectedRegion.mWhite.set(255, 255, 255, 255);
    mMapBlink[ZOOM_VIEW].mSelectedRegion.mMax = 40;
    mMapBlink[ZOOM_VIEW].mSelectedRegion.mMin = 40;
    mMapBlink[ZOOM_VIEW].mSelectedRegion.mBlinkSpeed = 60;

    mMapBlink[ZOOM_VIEW].mUnselectedRegion.mBlack.set(0, 0, 0, 0);
    mMapBlink[ZOOM_VIEW].mUnselectedRegion.mWhite.set(22, 22, 22, 255);
    mMapBlink[ZOOM_VIEW].mUnselectedRegion.mMax = 255;
    mMapBlink[ZOOM_VIEW].mUnselectedRegion.mMin = 255;
    mMapBlink[ZOOM_VIEW].mUnselectedRegion.mBlinkSpeed = 0;

    mMapBlink[ZOOM_VIEW].mUnreachedRegionBlack.set(0, 20, 80, 0);
    mMapBlink[ZOOM_VIEW].mUnreachedRegionWhite.set(30, 95, 190, 0);
    mMapBlink[ZOOM_VIEW].field_0x20.set(0, 0, 0, 0);
    mMapBlink[ZOOM_VIEW].field_0x24.set(0, 0, 0, 255);

    for (int i = 0; i < ARRAY_SIZE(mDebugRegionBits); i++) {
        mDebugRegionBits[i] = 0;
    }
}

/* 80200BCC-80200CD4 1FB50C 0108+00 2/1 0/0 0/0 .text            __dt__16dMeter_fmapHIO_cFv */
#ifdef NONMATCHING
dMeter_fmapHIO_c::~dMeter_fmapHIO_c() {
    if (field_0xc != NULL) {
        mDoExt_getGameHeap()->free(field_0xc);
        field_0xc = NULL;
    }

    if (field_0x10 != NULL) {
        mDoExt_getGameHeap()->free(field_0x10);
        field_0x10 = NULL;
    }

    if (field_0x8 != NULL) {
        field_0x8->unmount();
        delete field_0x8;
        field_0x8 = NULL;
    }

    delete mMapIconHIO;
}
#else
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// asm dMeter_fmapHIO_c::~dMeter_fmapHIO_c() {
extern "C" asm void __dt__16dMeter_fmapHIO_cFv() {
    nofralloc
#include "asm/d/meter/d_meter_HIO/__dt__16dMeter_fmapHIO_cFv.s"
}
#pragma pop
#endif

/* 80200CD4-80200D58 1FB614 0084+00 1/1 0/0 0/0 .text            __ct__18dMeter_cursorHIO_cFv */
dMeter_cursorHIO_c::dMeter_cursorHIO_c() {
    mShopCursorScale = 1.05f;
    mShopCursorOffsetY = -30.0f;
    mMagicArmorCursorOffsetX = 13.0f;
    mMagicArmorCursorOffsetY = -102.0f;
    mSeraShopObjZoom.set(100.0f, 145.0f, -155.0f);
    mSeraShopObjZoomAngleX = 3000;
    mObjZoom.set(0.0f, 0.0f, 0.0f);
    mShopObjZoomAngleX = 5000;
    mMagicArmorObjZoom.set(0.0f, 20.0f, 28.0f);
    mMagicArmorObjZoomAngleX = -500;
}

/* 80200D58-80200DA0 1FB698 0048+00 1/0 0/0 0/0 .text            __dt__25dMeter_drawLightDropHIO_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// asm dMeter_drawLightDropHIO_c::~dMeter_drawLightDropHIO_c() {
extern "C" asm void __dt__25dMeter_drawLightDropHIO_cFv() {
    nofralloc
#include "asm/d/meter/d_meter_HIO/__dt__25dMeter_drawLightDropHIO_cFv.s"
}
#pragma pop

/* 80200DA0-80200DE8 1FB6E0 0048+00 1/0 0/0 0/0 .text            __dt__25dMeter_drawEmpButtonHIO_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// asm dMeter_drawEmpButtonHIO_c::~dMeter_drawEmpButtonHIO_c() {
extern "C" asm void __dt__25dMeter_drawEmpButtonHIO_cFv() {
    nofralloc
#include "asm/d/meter/d_meter_HIO/__dt__25dMeter_drawEmpButtonHIO_cFv.s"
}
#pragma pop

/* 80200DE8-80200E30 1FB728 0048+00 1/0 0/0 0/0 .text            __dt__24dMeter_drawMiniGameHIO_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// asm dMeter_drawMiniGameHIO_c::~dMeter_drawMiniGameHIO_c() {
extern "C" asm void __dt__24dMeter_drawMiniGameHIO_cFv() {
    nofralloc
#include "asm/d/meter/d_meter_HIO/__dt__24dMeter_drawMiniGameHIO_cFv.s"
}
#pragma pop

/* 80200E30-80200E78 1FB770 0048+00 1/0 0/0 0/0 .text            __dt__21dMeter_drawSkillHIO_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// asm dMeter_drawSkillHIO_c::~dMeter_drawSkillHIO_c() {
extern "C" asm void __dt__21dMeter_drawSkillHIO_cFv() {
    nofralloc
#include "asm/d/meter/d_meter_HIO/__dt__21dMeter_drawSkillHIO_cFv.s"
}
#pragma pop

/* 80200E78-80200EC0 1FB7B8 0048+00 1/0 0/0 0/0 .text __dt__27dMeter_drawCalibrationHIO_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// asm dMeter_drawCalibrationHIO_c::~dMeter_drawCalibrationHIO_c() {
extern "C" asm void __dt__27dMeter_drawCalibrationHIO_cFv() {
    nofralloc
#include "asm/d/meter/d_meter_HIO/__dt__27dMeter_drawCalibrationHIO_cFv.s"
}
#pragma pop

/* 80200EC0-80200F08 1FB800 0048+00 1/0 0/0 0/0 .text            __dt__22dMeter_drawInsectHIO_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// asm dMeter_drawInsectHIO_c::~dMeter_drawInsectHIO_c() {
extern "C" asm void __dt__22dMeter_drawInsectHIO_cFv() {
    nofralloc
#include "asm/d/meter/d_meter_HIO/__dt__22dMeter_drawInsectHIO_cFv.s"
}
#pragma pop

/* 80200F08-80200F50 1FB848 0048+00 1/0 0/0 0/0 .text            __dt__23dMeter_drawFishingHIO_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// asm dMeter_drawFishingHIO_c::~dMeter_drawFishingHIO_c() {
extern "C" asm void __dt__23dMeter_drawFishingHIO_cFv() {
    nofralloc
#include "asm/d/meter/d_meter_HIO/__dt__23dMeter_drawFishingHIO_cFv.s"
}
#pragma pop

/* 80200F50-80200F98 1FB890 0048+00 1/0 0/0 0/0 .text            __dt__22dMeter_drawLetterHIO_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// asm dMeter_drawLetterHIO_c::~dMeter_drawLetterHIO_c() {
extern "C" asm void __dt__22dMeter_drawLetterHIO_cFv() {
    nofralloc
#include "asm/d/meter/d_meter_HIO/__dt__22dMeter_drawLetterHIO_cFv.s"
}
#pragma pop

/* 80200F98-80200FE0 1FB8D8 0048+00 1/0 0/0 0/0 .text            __dt__22dMeter_drawOptionHIO_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// asm dMeter_drawOptionHIO_c::~dMeter_drawOptionHIO_c() {
extern "C" asm void __dt__22dMeter_drawOptionHIO_cFv() {
    nofralloc
#include "asm/d/meter/d_meter_HIO/__dt__22dMeter_drawOptionHIO_cFv.s"
}
#pragma pop

/* 80200FE0-80201028 1FB920 0048+00 1/0 0/0 0/0 .text            __dt__23dMeter_drawCollectHIO_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// asm dMeter_drawCollectHIO_c::~dMeter_drawCollectHIO_c() {
extern "C" asm void __dt__23dMeter_drawCollectHIO_cFv() {
    nofralloc
#include "asm/d/meter/d_meter_HIO/__dt__23dMeter_drawCollectHIO_cFv.s"
}
#pragma pop

/* 80201028-80201070 1FB968 0048+00 1/0 0/0 0/0 .text            __dt__19dMeter_mapIconHIO_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// asm dMeter_mapIconHIO_c::~dMeter_mapIconHIO_c() {
extern "C" asm void __dt__19dMeter_mapIconHIO_cFv() {
    nofralloc
#include "asm/d/meter/d_meter_HIO/__dt__19dMeter_mapIconHIO_cFv.s"
}
#pragma pop

/* 80201070-80201098 1FB9B0 0028+00 1/1 0/0 0/0 .text __ct__Q216dMeter_fmapHIO_c13MapBlinkAnimeFv
 */
dMeter_fmapHIO_c::MapBlinkAnime::MapBlinkAnime() {}

/* 80201098-802010E0 1FB9D8 0048+00 2/1 0/0 0/0 .text            __dt__18dMeter_cursorHIO_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// asm dMeter_cursorHIO_c::~dMeter_cursorHIO_c() {
extern "C" asm void __dt__18dMeter_cursorHIO_cFv() {
    nofralloc
#include "asm/d/meter/d_meter_HIO/__dt__18dMeter_cursorHIO_cFv.s"
}
#pragma pop

/* 802010E0-80201128 1FBA20 0048+00 2/1 0/0 0/0 .text            __dt__16dMeter_ringHIO_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// asm dMeter_ringHIO_c::~dMeter_ringHIO_c() {
extern "C" asm void __dt__16dMeter_ringHIO_cFv() {
    nofralloc
#include "asm/d/meter/d_meter_HIO/__dt__16dMeter_ringHIO_cFv.s"
}
#pragma pop

/* 80201128-8020123C 1FBA68 0114+00 2/1 0/0 0/0 .text            __dt__16dMeter_drawHIO_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// asm dMeter_drawHIO_c::~dMeter_drawHIO_c() {
extern "C" asm void __dt__16dMeter_drawHIO_cFv() {
    nofralloc
#include "asm/d/meter/d_meter_HIO/__dt__16dMeter_drawHIO_cFv.s"
}
#pragma pop

/* 8020123C-80201284 1FBB7C 0048+00 2/1 0/0 0/0 .text            __dt__16dMeter_menuHIO_cFv */
dMeter_menuHIO_c::~dMeter_menuHIO_c() {}

/* 804510B0-804510B8 0005B0 0008+00 1/1 1/1 0/0 .sbss            g_menuHIO */
dMeter_menuHIO_c g_menuHIO;

/* 8042EBC8-8042FAF0 05B8E8 0F28+00 0/1 157/157 0/0 .bss             g_drawHIO */
dMeter_drawHIO_c g_drawHIO;

/* 8042FAFC-8042FC54 05C81C 0158+00 0/1 19/19 0/0 .bss             g_ringHIO */
dMeter_ringHIO_c g_ringHIO;

/* 8042FC60-80430104 05C980 04A4+00 0/1 54/54 0/0 .bss             g_fmapHIO */
dMeter_fmapHIO_c g_fmapHIO;

/* 80430110-80430158 05CE30 0044+04 0/1 6/6 1/1 .bss             g_cursorHIO */
dMeter_cursorHIO_c g_cursorHIO;
