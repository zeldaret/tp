//
// Generated By: dol2asm
// Translation Unit: d/d_stage
//

#include "d/d_stage.h"
#include "JSystem/JKernel/JKRAramArchive.h"
#include "SSystem/SComponent/c_malloc.h"
#include "d/com/d_com_inf_game.h"
#include "d/com/d_com_static.h"
#include "d/d_procname.h"
#include "d/save/d_save_HIO.h"
#include "dol2asm.h"
#include "dolphin/types.h"
#include "f_op/f_op_kankyo_mng.h"
#include "f_op/f_op_msg_mng.h"
#include "m_Do/m_Do_ext.h"
#include "m_Do/m_Do_reset.h"

//
// Forward References:
//

extern "C" void set__18dStage_nextStage_cFPCcScsScScUc();
extern "C" static void dStage_SetErrorRoom__Fv();
extern "C" static void dStage_SetErrorStage__Fv();
extern "C" void dStage_GetKeepDoorInfo__Fv();
extern "C" static void dStage_isBossStage__FP11dStage_dt_c();
extern "C" static void dStage_KeepDoorInfoInit__FP11dStage_dt_c();
extern "C" static void dStage_KeepDoorInfoProc__FP11dStage_dt_cP16stage_tgsc_class();
extern "C" void dStage_GetRoomKeepDoorInfo__Fv();
extern "C" static void dStage_initRoomKeepDoorInfo__Fv();
extern "C" static void dStage_RoomKeepDoorInfoProc__FP11dStage_dt_cP16stage_tgsc_class();
extern "C" static void dStage_RoomKeepDoorInit__FP11dStage_dt_cPviPv();
extern "C" void set__19dStage_startStage_cFPCcScsSc();
extern "C" void init__20dStage_roomControl_cFv();
extern "C" void initZone__20dStage_roomControl_cFv();
extern "C" void getStatusRoomDt__20dStage_roomControl_cFi();
extern "C" void getMemoryBlock__20dStage_roomControl_cFi();
extern "C" void setStayNo__20dStage_roomControl_cFi();
extern "C" void setNextStayNo__20dStage_roomControl_cFi();
extern "C" static void stayRoomCheck__FiPUci();
extern "C" static void createRoomScene__Fi();
extern "C" void checkRoomDisp__20dStage_roomControl_cCFi();
extern "C" void loadRoom__20dStage_roomControl_cFiPUcb();
extern "C" void zoneCountCheck__20dStage_roomControl_cCFi();
extern "C" void getStagInfo__16dStage_stageDt_cCFv();
extern "C" void createMemoryBlock__20dStage_roomControl_cFiUl();
extern "C" void destroyMemoryBlock__20dStage_roomControl_cFv();
extern "C" void setArcBank__20dStage_roomControl_cFiPCc();
extern "C" void getArcBank__20dStage_roomControl_cFi();
extern "C" void resetArchiveBank__20dStage_roomControl_cFi();
extern "C" void create__Q220dStage_roomControl_c9roomDzs_cFUc();
extern "C" void remove__Q220dStage_roomControl_c9roomDzs_cFv();
extern "C" void add__Q220dStage_roomControl_c9roomDzs_cFUcUc();
extern "C" void init__16dStage_stageDt_cFv();
extern "C" void initFileList2__15dStage_roomDt_cFv();
extern "C" void init__15dStage_roomDt_cFv();
extern "C" static void dStage_roomInit__Fi();
extern "C" void SetTimePass__20dStage_roomControl_cFi();
extern "C" void getRoom__16dStage_stageDt_cCFv();
extern "C" void dStage_searchName__FPCc();
extern "C" static void dStage_getName__FsSc();
extern "C" void dStage_getName2__FsSc();
extern "C" static void dStage_actorCreate__FP22stage_actor_data_classP16fopAcM_prm_class();
extern "C" static void dStage_cameraCreate__FP24stage_camera2_data_classii();
extern "C" void getPlayer__15dStage_roomDt_cCFv();
extern "C" void getPlayer__16dStage_stageDt_cCFv();
extern "C" static void dStage_playerInit__FP11dStage_dt_cPviPv();
extern "C" static void dStage_cameraInit__FP11dStage_dt_cPviPv();
extern "C" static void dStage_RoomCameraInit__FP11dStage_dt_cPviPv();
extern "C" static void dStage_arrowInit__FP11dStage_dt_cPviPv();
extern "C" void getMapInfo2__15dStage_roomDt_cCFi();
extern "C" void getMapInfoBase__15dStage_roomDt_cCFv();
extern "C" void getMapInfo2__16dStage_stageDt_cCFi();
extern "C" void getMapInfoBase__16dStage_stageDt_cCFv();
extern "C" static void dStage_paletteInfoInit__FP11dStage_dt_cPviPv();
extern "C" static void dStage_pselectInfoInit__FP11dStage_dt_cPviPv();
extern "C" static void dStage_envrInfoInit__FP11dStage_dt_cPviPv();
extern "C" static void dStage_filiInfo2Init__FP11dStage_dt_cPviPv();
extern "C" static void dStage_fieldMapFiliInfo2Init__FP11dStage_dt_cPviPv();
extern "C" static void dStage_filiInfoInit__FP11dStage_dt_cPviPv();
extern "C" static void dStage_vrboxInfoInit__FP11dStage_dt_cPviPv();
extern "C" static void dStage_vrboxcolInfoInit__FP11dStage_dt_cPviPv();
extern "C" static void dStage_plightInfoInit__FP11dStage_dt_cPviPv();
extern "C" static void dStage_lgtvInfoInit__FP11dStage_dt_cPviPv();
extern "C" void dStage_stagInfo_GetParticleNo__FP21stage_stag_info_classi();
extern "C" static void dStage_stagInfoInit__FP11dStage_dt_cPviPv();
extern "C" void resetOldMulti__16dStage_stageDt_cFv();
extern "C" static void dStage_sclsInfoInit__FP11dStage_dt_cPviPv();
extern "C" static void dStage_actorCommonLayerInit__FP11dStage_dt_cPviPv();
extern "C" static void dStage_tgscCommonLayerInit__FP11dStage_dt_cPviPv();
extern "C" static void dStage_actorInit__FP11dStage_dt_cPviPv();
extern "C" static void dStage_actorInit_always__FP11dStage_dt_cPviPv();
extern "C" static void dStage_tgscInfoInit__FP11dStage_dt_cPviPv();
extern "C" static void dStage_doorInfoInit__FP11dStage_dt_cPviPv();
extern "C" static void dStage_roomReadInit__FP11dStage_dt_cPviPv();
extern "C" void dStage_roomRead_dt_c_GetReverbStage__FR14roomRead_classi();
extern "C" static void dStage_ppntInfoInit__FP11dStage_dt_cPviPv();
extern "C" static void dStage_pathInfoInit__FP11dStage_dt_cPviPv();
extern "C" static void dStage_rppnInfoInit__FP11dStage_dt_cPviPv();
extern "C" static void dStage_rpatInfoInit__FP11dStage_dt_cPviPv();
extern "C" static void dStage_soundInfoInit__FP11dStage_dt_cPviPv();
extern "C" static void dStage_soundInfoInitCL__FP11dStage_dt_cPviPv();
extern "C" static void dStage_setLayerTagName__FP9FuncTableii();
extern "C" static void dStage_dt_c_decode__FPvP11dStage_dt_cP9FuncTablei();
extern "C" static void dStage_stEventInfoInit__FP11dStage_dt_cPviPv();
extern "C" static void dStage_mapEventInfoInit__FP11dStage_dt_cPviPv();
extern "C" static void dStage_floorInfoInit__FP11dStage_dt_cPviPv();
extern "C" static void dStage_memaInfoInit__FP11dStage_dt_cPviPv();
extern "C" static void dStage_mecoInfoInit__FP11dStage_dt_cPviPv();
extern "C" static void dStage_stageKeepTresureInit__FP11dStage_dt_cPviPv();
extern "C" static void dStage_fieldMapTresureInit__FP11dStage_dt_cPviPv();
extern "C" static void dStage_dt_c_offsetToPtr__FPv();
extern "C" static void dStage_mapPathInit__FP11dStage_dt_cPviPv();
extern "C" static void dStage_mapPathInitCommonLayer__FP11dStage_dt_cPviPv();
extern "C" static void dStage_fieldMapMapPathInit__FP11dStage_dt_cPviPv();
extern "C" static void readMult__FP11dStage_dt_cP14dStage_Multi_cb();
extern "C" static void dStage_multInfoInit__FP11dStage_dt_cPviPv();
extern "C" static void dStage_lbnkInfoInit__FP11dStage_dt_cPviPv();
extern "C" static void dStage_roomTresureInit__FP11dStage_dt_cPviPv();
extern "C" static void dStage_layerTresureInit__FP11dStage_dt_cPviPv();
extern "C" static void dStage_dmapInfoInit__FP11dStage_dt_cPviPv();
extern "C" static void dStage_stageDrtgInfoInit__FP11dStage_dt_cPviPv();
extern "C" static void dStage_roomDrtgInfoInit__FP11dStage_dt_cPviPv();
extern "C" static void dStage_elstInfoInit__FP11dStage_dt_cPviPv();
extern "C" static void dKankyo_create__Fv();
extern "C" static void layerMemoryInfoLoader__FPvP11dStage_dt_ci();
extern "C" static void dStage_dt_c_stageInitLoader__FPvP11dStage_dt_c();
extern "C" static void layerTableLoader__FPvP11dStage_dt_ci();
extern "C" void getElst__16dStage_stageDt_cFv();
extern "C" static void layerActorLoader__FPvP11dStage_dt_ci();
extern "C" static void dStage_dt_c_stageLoader__FPvP11dStage_dt_c();
extern "C" void dStage_dt_c_roomLoader__FPvP11dStage_dt_ci();
extern "C" void dStage_dt_c_roomReLoader__FPvP11dStage_dt_ci();
extern "C" void dStage_dt_c_fieldMapLoader__FPvP11dStage_dt_c();
extern "C" void dStage_infoCreate__Fv();
extern "C" void dStage_Create__Fv();
extern "C" void dStage_Delete__Fv();
extern "C" void setOldMulti__16dStage_stageDt_cFv();
extern "C" void dStage_RoomCheck__FP11cBgS_GndChk();
extern "C" void dStage_changeSceneExitId__FR13cBgS_PolyInfofUlScs();
extern "C" void dStage_changeScene__FifUlScsi();
extern "C" void getSclsInfo__15dStage_roomDt_cCFv();
extern "C" void getSclsInfo__16dStage_stageDt_cCFv();
extern "C" void dStage_changeScene4Event__FiScibfUlsi();
extern "C" void dStage_restartRoom__FUlUli();
extern "C" void setCamera__15dStage_roomDt_cFP18stage_camera_class();
extern "C" void getCamera__15dStage_roomDt_cCFv();
extern "C" void setArrow__15dStage_roomDt_cFP17stage_arrow_class();
extern "C" void getArrow__15dStage_roomDt_cCFv();
extern "C" void setPlayer__15dStage_roomDt_cFP17stage_actor_class();
extern "C" void setPlayerNum__15dStage_roomDt_cFUs();
extern "C" void getPlayerNum__15dStage_roomDt_cCFv();
extern "C" void setRoom__15dStage_roomDt_cFP14roomRead_class();
extern "C" void getRoom__15dStage_roomDt_cCFv();
extern "C" void setMapInfo__15dStage_roomDt_cFP20stage_map_info_class();
extern "C" void getMapInfo__15dStage_roomDt_cCFv();
extern "C" void setMapInfoBase__15dStage_roomDt_cFP26stage_map_info_dummy_class();
extern "C" void setPaletteInfo__15dStage_roomDt_cFP24stage_palette_info_class();
extern "C" void getPaletteInfo__15dStage_roomDt_cCFv();
extern "C" void setPselectInfo__15dStage_roomDt_cFP24stage_pselect_info_class();
extern "C" void getPselectInfo__15dStage_roomDt_cCFv();
extern "C" void setEnvrInfo__15dStage_roomDt_cFP21stage_envr_info_class();
extern "C" void getEnvrInfo__15dStage_roomDt_cCFv();
extern "C" void setVrboxInfo__15dStage_roomDt_cFP22stage_vrbox_info_class();
extern "C" void getVrboxInfo__15dStage_roomDt_cCFv();
extern "C" void setVrboxcolInfo__15dStage_roomDt_cFP25stage_vrboxcol_info_class();
extern "C" void getVrboxcolInfo__15dStage_roomDt_cCFv();
extern "C" void setPlightInfo__15dStage_roomDt_cFP23stage_plight_info_class();
extern "C" void getPlightInfo__15dStage_roomDt_cCFv();
extern "C" void setPaletteNumInfo__15dStage_roomDt_cFi();
extern "C" void getPaletteNumInfo__15dStage_roomDt_cCFv();
extern "C" void setPselectNumInfo__15dStage_roomDt_cFi();
extern "C" void getPselectNumInfo__15dStage_roomDt_cCFv();
extern "C" void setEnvrNumInfo__15dStage_roomDt_cFi();
extern "C" void getEnvrNumInfo__15dStage_roomDt_cCFv();
extern "C" void setVrboxNumInfo__15dStage_roomDt_cFi();
extern "C" void getVrboxNumInfo__15dStage_roomDt_cCFv();
extern "C" void setVrboxcolNumInfo__15dStage_roomDt_cFi();
extern "C" void getVrboxcolNumInfo__15dStage_roomDt_cCFv();
extern "C" void setPlightNumInfo__15dStage_roomDt_cFi();
extern "C" void getPlightNumInfo__15dStage_roomDt_cCFv();
extern "C" void setLightVecInfo__15dStage_roomDt_cFP30stage_pure_lightvec_info_class();
extern "C" void getLightVecInfo__15dStage_roomDt_cCFv();
extern "C" void setLightVecInfoNum__15dStage_roomDt_cFi();
extern "C" void getLightVecInfoNum__15dStage_roomDt_cCFv();
extern "C" void setStagInfo__15dStage_roomDt_cFP21stage_stag_info_class();
extern "C" void getStagInfo__15dStage_roomDt_cCFv();
extern "C" void setSclsInfo__15dStage_roomDt_cFP27stage_scls_info_dummy_class();
extern "C" void setPntInfo__15dStage_roomDt_cFP13dStage_dPnt_c();
extern "C" void getPntInf__15dStage_roomDt_cCFv();
extern "C" void setPathInfo__15dStage_roomDt_cFP14dStage_dPath_c();
extern "C" void getPathInf__15dStage_roomDt_cCFv();
extern "C" void setPnt2Info__15dStage_roomDt_cFP13dStage_dPnt_c();
extern "C" void getPnt2Inf__15dStage_roomDt_cCFv();
extern "C" void setPath2Info__15dStage_roomDt_cFP14dStage_dPath_c();
extern "C" void getPath2Inf__15dStage_roomDt_cCFv();
extern "C" void setSoundInf__15dStage_roomDt_cFP18dStage_SoundInfo_c();
extern "C" void getSoundInf__15dStage_roomDt_cCFv();
extern "C" void setSoundInfCL__15dStage_roomDt_cFP18dStage_SoundInfo_c();
extern "C" void getSoundInfCL__15dStage_roomDt_cCFv();
extern "C" void setMapEventInfo__15dStage_roomDt_cFP21dStage_MapEventInfo_c();
extern "C" void getMapEventInfo__15dStage_roomDt_cCFv();
extern "C" void setFileList2Info__15dStage_roomDt_cFP21dStage_FileList2_dt_c();
extern "C" void getFileList2Info__15dStage_roomDt_cCFv();
extern "C" void setFileListInfo__15dStage_roomDt_cFP20dStage_FileList_dt_c();
extern "C" void setFloorInfo__15dStage_roomDt_cFP18dStage_FloorInfo_c();
extern "C" void getFloorInfo__15dStage_roomDt_cCFv();
extern "C" void setMemoryConfig__15dStage_roomDt_cFP21dStage_MemoryConfig_c();
extern "C" void getMemoryConfig__15dStage_roomDt_cCFv();
extern "C" void setMemoryMap__15dStage_roomDt_cFP18dStage_MemoryMap_c();
extern "C" void getMemoryMap__15dStage_roomDt_cCFv();
extern "C" void setMulti__15dStage_roomDt_cFP14dStage_Multi_c();
extern "C" void getMulti__15dStage_roomDt_cCFv();
extern "C" void setOldMulti__15dStage_roomDt_cFv();
extern "C" void resetOldMulti__15dStage_roomDt_cFv();
extern "C" void getOldMulti__15dStage_roomDt_cCFv();
extern "C" void setLbnk__15dStage_roomDt_cFP13dStage_Lbnk_c();
extern "C" void getLbnk__15dStage_roomDt_cCFv();
extern "C" void setTresure__15dStage_roomDt_cFP19stage_tresure_class();
extern "C" void getTresure__15dStage_roomDt_cCFv();
extern "C" void setDMap__15dStage_roomDt_cFP13dStage_DMap_c();
extern "C" bool getDMap__15dStage_roomDt_cCFv();
extern "C" void setDrTg__15dStage_roomDt_cFP16stage_tgsc_class();
extern "C" void getDrTg__15dStage_roomDt_cCFv();
extern "C" void setDoor__15dStage_roomDt_cFP16stage_tgsc_class();
extern "C" void getDoor__15dStage_roomDt_cCFv();
extern "C" void setMapPath__15dStage_roomDt_cFPv();
extern "C" void getMapPath__15dStage_roomDt_cFv();
extern "C" void setElst__15dStage_roomDt_cFP13dStage_Elst_c();
extern "C" void getElst__15dStage_roomDt_cFv();
extern "C" void setCamera__16dStage_stageDt_cFP18stage_camera_class();
extern "C" void getCamera__16dStage_stageDt_cCFv();
extern "C" void setArrow__16dStage_stageDt_cFP17stage_arrow_class();
extern "C" void getArrow__16dStage_stageDt_cCFv();
extern "C" void setPlayer__16dStage_stageDt_cFP17stage_actor_class();
extern "C" void setPlayerNum__16dStage_stageDt_cFUs();
extern "C" void getPlayerNum__16dStage_stageDt_cCFv();
extern "C" void setRoom__16dStage_stageDt_cFP14roomRead_class();
extern "C" void setMapInfo__16dStage_stageDt_cFP20stage_map_info_class();
extern "C" void getMapInfo__16dStage_stageDt_cCFv();
extern "C" void setMapInfoBase__16dStage_stageDt_cFP26stage_map_info_dummy_class();
extern "C" void setPaletteInfo__16dStage_stageDt_cFP24stage_palette_info_class();
extern "C" void getPaletteInfo__16dStage_stageDt_cCFv();
extern "C" void setPselectInfo__16dStage_stageDt_cFP24stage_pselect_info_class();
extern "C" void getPselectInfo__16dStage_stageDt_cCFv();
extern "C" void setEnvrInfo__16dStage_stageDt_cFP21stage_envr_info_class();
extern "C" void getEnvrInfo__16dStage_stageDt_cCFv();
extern "C" void setVrboxInfo__16dStage_stageDt_cFP22stage_vrbox_info_class();
extern "C" void getVrboxInfo__16dStage_stageDt_cCFv();
extern "C" void setVrboxcolInfo__16dStage_stageDt_cFP25stage_vrboxcol_info_class();
extern "C" void getVrboxcolInfo__16dStage_stageDt_cCFv();
extern "C" void setPlightInfo__16dStage_stageDt_cFP23stage_plight_info_class();
extern "C" void getPlightInfo__16dStage_stageDt_cCFv();
extern "C" void setPaletteNumInfo__16dStage_stageDt_cFi();
extern "C" void getPaletteNumInfo__16dStage_stageDt_cCFv();
extern "C" void setPselectNumInfo__16dStage_stageDt_cFi();
extern "C" void getPselectNumInfo__16dStage_stageDt_cCFv();
extern "C" void setEnvrNumInfo__16dStage_stageDt_cFi();
extern "C" void getEnvrNumInfo__16dStage_stageDt_cCFv();
extern "C" void setVrboxNumInfo__16dStage_stageDt_cFi();
extern "C" void getVrboxNumInfo__16dStage_stageDt_cCFv();
extern "C" void setVrboxcolNumInfo__16dStage_stageDt_cFi();
extern "C" void getVrboxcolNumInfo__16dStage_stageDt_cCFv();
extern "C" void setLightVecInfo__16dStage_stageDt_cFP30stage_pure_lightvec_info_class();
extern "C" void getLightVecInfo__16dStage_stageDt_cCFv();
extern "C" void setLightVecInfoNum__16dStage_stageDt_cFi();
extern "C" void getLightVecInfoNum__16dStage_stageDt_cCFv();
extern "C" void setPlightNumInfo__16dStage_stageDt_cFi();
extern "C" void getPlightNumInfo__16dStage_stageDt_cCFv();
extern "C" void setStagInfo__16dStage_stageDt_cFP21stage_stag_info_class();
extern "C" void setSclsInfo__16dStage_stageDt_cFP27stage_scls_info_dummy_class();
extern "C" void setPntInfo__16dStage_stageDt_cFP13dStage_dPnt_c();
extern "C" void getPntInf__16dStage_stageDt_cCFv();
extern "C" void setPathInfo__16dStage_stageDt_cFP14dStage_dPath_c();
extern "C" void getPathInf__16dStage_stageDt_cCFv();
extern "C" void setPnt2Info__16dStage_stageDt_cFP13dStage_dPnt_c();
extern "C" void getPnt2Inf__16dStage_stageDt_cCFv();
extern "C" void setPath2Info__16dStage_stageDt_cFP14dStage_dPath_c();
extern "C" void getPath2Inf__16dStage_stageDt_cCFv();
extern "C" void setSoundInf__16dStage_stageDt_cFP18dStage_SoundInfo_c();
extern "C" void getSoundInf__16dStage_stageDt_cCFv();
extern "C" void setSoundInfCL__16dStage_stageDt_cFP18dStage_SoundInfo_c();
extern "C" void getSoundInfCL__16dStage_stageDt_cCFv();
extern "C" void setMapEventInfo__16dStage_stageDt_cFP21dStage_MapEventInfo_c();
extern "C" void getMapEventInfo__16dStage_stageDt_cCFv();
extern "C" void setFileList2Info__16dStage_stageDt_cFP21dStage_FileList2_dt_c();
extern "C" void getFileList2Info__16dStage_stageDt_cCFv();
extern "C" void setFileListInfo__16dStage_stageDt_cFP20dStage_FileList_dt_c();
extern "C" void getFileListInfo__16dStage_stageDt_cCFv();
extern "C" void setFloorInfo__16dStage_stageDt_cFP18dStage_FloorInfo_c();
extern "C" void getFloorInfo__16dStage_stageDt_cCFv();
extern "C" void setMemoryConfig__16dStage_stageDt_cFP21dStage_MemoryConfig_c();
extern "C" void getMemoryConfig__16dStage_stageDt_cCFv();
extern "C" void setMemoryMap__16dStage_stageDt_cFP18dStage_MemoryMap_c();
extern "C" void getMemoryMap__16dStage_stageDt_cCFv();
extern "C" void setMulti__16dStage_stageDt_cFP14dStage_Multi_c();
extern "C" void getMulti__16dStage_stageDt_cCFv();
extern "C" void getOldMulti__16dStage_stageDt_cCFv();
extern "C" void setLbnk__16dStage_stageDt_cFP13dStage_Lbnk_c();
extern "C" void getLbnk__16dStage_stageDt_cCFv();
extern "C" void setTresure__16dStage_stageDt_cFP19stage_tresure_class();
extern "C" void getTresure__16dStage_stageDt_cCFv();
extern "C" void setDMap__16dStage_stageDt_cFP13dStage_DMap_c();
extern "C" void getDMap__16dStage_stageDt_cCFv();
extern "C" void setDrTg__16dStage_stageDt_cFP16stage_tgsc_class();
extern "C" void getDrTg__16dStage_stageDt_cCFv();
extern "C" void setDoor__16dStage_stageDt_cFP16stage_tgsc_class();
extern "C" void getDoor__16dStage_stageDt_cCFv();
extern "C" void setMapPath__16dStage_stageDt_cFPv();
extern "C" bool getMapPath__16dStage_stageDt_cFv();
extern "C" void setElst__16dStage_stageDt_cFP13dStage_Elst_c();
extern "C" void __sinit_d_stage_cpp();
extern "C" void func_80028328();
extern "C" void __dt__19dStage_roomStatus_cFv();
extern "C" void __ct__19dStage_roomStatus_cFv();
extern "C" void __dt__19dStage_KeepDoorInfoFv();
extern "C" void __dt__21stage_tgsc_data_classFv();
extern "C" void __ct__21stage_tgsc_data_classFv();
extern "C" extern char const* const d_d_stage__stringBase0;
extern "C" u8 mMemoryBlock__20dStage_roomControl_c[76];
extern "C" u8 mArcBank__20dStage_roomControl_c[320];
extern "C" u8 mStatus__20dStage_roomControl_c[65792];
extern "C" u8 mDemoArcName__20dStage_roomControl_c[10 + 2 /* padding */];
extern "C" u8 mProcID__20dStage_roomControl_c[4];
extern "C" u8 mArcBankName__20dStage_roomControl_c[4];
extern "C" u8 mArcBankData__20dStage_roomControl_c[4];
extern "C" u8 m_roomDzs__20dStage_roomControl_c[8];

//
// External References:
//

extern "C" JKRHeap* mDoExt_getArchiveHeap__Fv();
extern "C" void mDoExt_destroyExpHeap__FP10JKRExpHeap(JKRExpHeap*);
extern "C" void __ct__11J3DLightObjFv();
extern "C" void getFileListInfo__15dStage_roomDt_cCFv();
extern "C" void fopAcM_FastCreate__FsPFPv_iPvPv();
extern "C" void fopAcM_CreateAppend__Fv();
extern "C" void fopAcM_delete__FP10fopAc_ac_c();
extern "C" void fopCamM_Create__FisPv();
extern "C" void fopScnM_SearchByID__FUi();
extern "C" void fopScnM_CreateReq__FssUsUl();
extern "C" void fopKyM_fastCreate__FsiP4cXyzP4cXyzPFPv_i();
extern "C" void fopMsgM_Create__FsPFPv_iPv();
extern "C" void fpcLy_CurrentLayer__Fv();
extern "C" void fpcSCtRq_Request__FP11layer_classsPFPvPv_iPvPv();
extern "C" void getLayerNo__14dComIfG_play_cFi();
extern "C" void dComIfGp_setNextStage__FPCcsScScfUliScsii();
extern "C" void dComIfG_getStageRes__FPCc();
extern "C" void dComIfG_getOldStageRes__FPCc();
extern "C" void check__7daSus_cFScRC4cXyz();
extern "C" void execute__7daSus_cFv();
extern "C" void dLib_getExpandSizeFromAramArchive__FP14JKRAramArchivePCc();
extern "C" void init__12dSv_danBit_cFSc();
extern "C" void clearRoomSwitch__13dSv_zoneBit_cFv();
extern "C" void clearRoomItem__13dSv_zoneBit_cFv();
extern "C" void getSave__10dSv_info_cFi();
extern "C" void putSave__10dSv_info_cFi();
extern "C" void initZone__10dSv_info_cFv();
extern "C" void isActor__10dSv_info_cCFii();
extern "C" void syncRes__14dRes_control_cFPCcP11dRes_info_ci();
extern "C" void deleteRes__14dRes_control_cFPCcP11dRes_info_ci();
extern "C" void getResInfo__14dRes_control_cFPCcP11dRes_info_ci();
extern "C" void setPointer__8dMpath_cFPQ211dDrawPath_c10room_classPScPSc();
extern "C" void setPointer__8dMpath_cFScPvi();
extern "C" void create__16dEvent_manager_cFv();
extern "C" void remove__16dEvent_manager_cFv();
extern "C" void GetExitId__4dBgSFRC13cBgS_PolyInfo();
extern "C" void GetRoomId__4dBgSFRC13cBgS_PolyInfo();
extern "C" void addData__7dTres_cFPQ27dTres_c10list_classSc();
extern "C" void dKy_set_nexttime__Ff();
extern "C" void init__12dSvBit_HIO_cFv();
extern "C" void memalignB__3cMlFiUl();
extern "C" void alloc__7JKRHeapFUliP7JKRHeap();
extern "C" void alloc__7JKRHeapFUli();
extern "C" void free__7JKRHeapFPvP7JKRHeap();
extern "C" void free__7JKRHeapFPv();
extern "C" void* __nwa__FUlP7JKRHeapi();
extern "C" void __dl__FPv();
extern "C" void __dla__FPv();
extern "C" void create__10JKRExpHeapFUlP7JKRHeapb();
extern "C" void __as__12J3DLightInfoFRC12J3DLightInfo();
extern "C" void __register_global_object();
extern "C" void __destroy_arr();
extern "C" void __construct_array();
extern "C" void _savegpr_24();
extern "C" void _savegpr_25();
extern "C" void _savegpr_26();
extern "C" void _savegpr_27();
extern "C" void _savegpr_28();
extern "C" void _savegpr_29();
extern "C" void _restgpr_24();
extern "C" void _restgpr_25();
extern "C" void _restgpr_26();
extern "C" void _restgpr_27();
extern "C" void _restgpr_28();
extern "C" void _restgpr_29();
extern "C" extern J3DLightInfo const j3dDefaultLightInfo;
extern "C" extern dSvBit_HIO_c g_save_bit_HIO;
extern "C" u8 mResetData__6mDoRst[4 + 4 /* padding */];

//
// Declarations:
//

inline u8 dStage_stagInfo_GetSaveTbl(stage_stag_info_class* param_0) {
    return param_0->field_0x09 >> 1 & 0x1f;
}

inline dStage_stageDt_c* dComIfGp_getStage() {
    return &g_dComIfG_gameInfo.play.getStage();
}

void dStage_nextStage_c::set(const char* i_stage, s8 i_roomId, s16 i_point, s8 i_layer, s8 i_wipe,
                             u8 i_speed) {
    if (!enabled) {
        enabled = true;
        wipe = i_wipe;
        wipe_speed = i_speed;
        dStage_startStage_c::set(i_stage, i_roomId, i_point, i_layer);
        if (!strcmp(i_stage, "OPENING")) {
            mDoRst::onReset();
        }
    }
}

static void dStage_SetErrorRoom() {
    // "Room information might be corrupted. \nPlease try to re-convert. \n"
    OSReport_Error("部屋情報が、多分ですが壊れています。\n変換し直してみてください。\n");
}

static void dStage_SetErrorStage() {
    // "Stage information might be corrupted. \nPlease try to re-convert. "
    OSReport_Error("ステージ情報が、多分ですが壊れています。\n変換し直してみてください。");
}

/* 803F4E74-803F5778 021B94 0904+00 3/4 0/0 0/0 .bss             DoorInfo */
static dStage_KeepDoorInfo DoorInfo;

dStage_KeepDoorInfo* dStage_GetKeepDoorInfo() {
    return &DoorInfo;
}

static u8 dStage_isBossStage(dStage_dt_c* stageDt) {
    stage_stag_info_class* pstag = stageDt->getStagInfo();

    if (pstag == NULL) {
        return false;
    }

    return dStage_stagInfo_GetSTType(pstag) == 3;
}

/* 80023F50-80023F84 01E890 0034+00 1/1 0/0 0/1 .text dStage_KeepDoorInfoInit__FP11dStage_dt_c */
static void dStage_KeepDoorInfoInit(dStage_dt_c* param_0) {
    if (dStage_isBossStage(param_0) == 0) {
        DoorInfo.unk_0x0 = NULL;
    }
}

/* 80023F84-8002405C 01E8C4 00D8+00 1/1 0/0 0/3 .text
 * dStage_KeepDoorInfoProc__FP11dStage_dt_cP16stage_tgsc_class  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void dStage_KeepDoorInfoProc(dStage_dt_c* param_0, stage_tgsc_class* param_1) {
    nofralloc
#include "asm/d/d_stage/dStage_KeepDoorInfoProc__FP11dStage_dt_cP16stage_tgsc_class.s"
}
#pragma pop

/* 803F5784-803F6088 0224A4 0904+00 3/4 0/0 0/0 .bss             l_RoomKeepDoorInfo */
static dStage_KeepDoorInfo l_RoomKeepDoorInfo;

dStage_KeepDoorInfo* dStage_GetRoomKeepDoorInfo() {
    return &l_RoomKeepDoorInfo;
}

static void dStage_initRoomKeepDoorInfo() {
    l_RoomKeepDoorInfo.unk_0x0 = NULL;
}

/* 80024078-80024174 01E9B8 00FC+00 1/1 0/0 0/0 .text
 * dStage_RoomKeepDoorInfoProc__FP11dStage_dt_cP16stage_tgsc_class */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void dStage_RoomKeepDoorInfoProc(dStage_dt_c* param_0, stage_tgsc_class* param_1) {
    nofralloc
#include "asm/d/d_stage/dStage_RoomKeepDoorInfoProc__FP11dStage_dt_cP16stage_tgsc_class.s"
}
#pragma pop

/* 80024174-8002419C 01EAB4 0028+00 2/0 0/0 0/0 .text
 * dStage_RoomKeepDoorInit__FP11dStage_dt_cPviPv                */
static int dStage_RoomKeepDoorInit(dStage_dt_c* stageDt, void* i_data, int entryNum,
                                   void* param_3) {
    dStage_RoomKeepDoorInfoProc(stageDt, (stage_tgsc_class*)((char*)i_data + 4));
    return 1;
}

void dStage_startStage_c::set(const char* i_Name, s8 i_RoomNo, s16 i_Point, s8 i_Layer) {
    strcpy(mName, i_Name);
    mRoomNo = i_RoomNo;
    mPoint = i_Point;
    mLayer = i_Layer;
}

/* 803F6094-80406194 022DB4 10100+00 12/12 31/31 16/16 .bss mStatus__20dStage_roomControl_c */
dStage_roomStatus_c dStage_roomControl_c::mStatus[0x40];

/* 80450D58-80450D60 000258 0008+00 1/1 0/0 0/0 .sbss            tmp_name$4456 */
static char tmp_name[8];

/* 80450D60-80450D64 000260 0004+00 1/1 3/3 1/1 .sbss            mProcID__20dStage_roomControl_c */
u32 dStage_roomControl_c::mProcID;

/* 80450D64-80450D68 -00001 0004+00 6/6 94/94 101/101 .sbss            None */
/* 80450D64 0001+00 data_80450D64 None */
s8 struct_80450D64;

/* 80450D65 0001+00 data_80450D65 None */
s8 gLastStayNo;

/* 80450D66 0001+00 data_80450D66 None */
s8 gNextStayNo;

/* 80450D67 0001+00 data_80450D67 None */
s8 gTimePass;

/* 80450D68-80450D6C 000268 0004+00 2/2 2/2 1/1 .sbss            None */
u8 data_80450D68;

/* 80450D6C-80450D70 00026C 0004+00 1/1 2/2 0/0 .sbss mArcBankName__20dStage_roomControl_c */
char* dStage_roomControl_c::mArcBankName;

/* 80450D70-80450D74 000270 0004+00 1/1 1/1 0/0 .sbss mArcBankData__20dStage_roomControl_c */
char* dStage_roomControl_c::mArcBankData;

/* 800241E8-80024338 01EB28 0150+00 1/1 0/0 0/4 .text            init__20dStage_roomControl_cFv */
void dStage_roomControl_c::init() {
    struct_80450D64 = -1;
    gLastStayNo = -1;
    gNextStayNo = -1;
    data_80450D68 = 0;
    data_804505F0 = -1;

    if (dComIfGp_getStartStagePoint() >= 0 || dComIfGp_getStartStagePoint() == -4) {
        initZone();
    }

    dStage_roomStatus_c* status = mStatus;
    for (int i = 0; i < 0x40; i++) {
        status->mRoomDt.init();
        status->mRoomDt.initFileList2();
        setStatusFlag(i, 0);
        status->mDraw = false;

        if (status->mZoneNo >= 0) {
            dComIfGs_clearRoomSwitch(status->mZoneNo);
            dComIfGs_clearRoomItem(status->mZoneNo);
        }

        status->mMemBlockID = -1;
        status->field_0x400 = 0;
        status++;
    }

    mArcBankName = (char*)dComIfG_getStageRes("name.bin");
    mArcBankData = (char*)dComIfG_getStageRes("bank.bin");

    if (mArcBankName == NULL) {
        mArcBankData = NULL;
    }
}

/* 80024338-80024384 01EC78 004C+00 1/1 1/1 0/7 .text            initZone__20dStage_roomControl_cFv
 */
void dStage_roomControl_c::initZone() {
    dComIfGs_initZone();

    dStage_roomStatus_c* status = mStatus;
    for (int i = 0; i < 0x40; i++) {
        status->mZoneNo = -1;
        status++;
    }
}

/* 80024384-800243B0 01ECC4 002C+00 2/2 27/27 6/6 .text getStatusRoomDt__20dStage_roomControl_cFi
 */
dStage_roomStatus_c* dStage_roomControl_c::getStatusRoomDt(int i_statusIdx) {
    if (i_statusIdx < 0 || i_statusIdx >= 0x40) {
        return NULL;
    }
    return &mStatus[i_statusIdx];
}

#define OBJNAME(name, proc, sub) { name, proc, sub }

/* ############################################################################################## */
/* 803A3B18-803A65CC 000C38 2AB4+00 2/2 0/0 0/0 .data            l_objectName */
static dStage_objectNameInf l_objectName[0x38F] = {
    OBJNAME("Grass",   PROC_GRASS,             0xFF),
    OBJNAME("kusax1",  PROC_GRASS,             0xFF),
    OBJNAME("kusax7",  PROC_GRASS,             0xFF),
    OBJNAME("kusax21", PROC_GRASS,             0xFF),
    OBJNAME("flower",  PROC_GRASS,             0xFF),
    OBJNAME("flwr7",   PROC_GRASS,             0xFF),
    OBJNAME("flwr17",  PROC_GRASS,             0xFF),
    OBJNAME("pflower", PROC_GRASS,             0xFF),
    OBJNAME("pflwrx7", PROC_GRASS,             0xFF),
    OBJNAME("door",    PROC_DOOR20,            0xFF),
    OBJNAME("kdoor",   PROC_KNOB20,            0xFF),
    OBJNAME("ddoor",   PROC_DBDOOR,            0xFF),
    OBJNAME("bdoor",   PROC_BOSS_DOOR,         0xFF),
    OBJNAME("ndoor",   PROC_DOOR20,            0xFF),
    OBJNAME("tadoor",  PROC_DOOR20,            0xFF),
    OBJNAME("yodoor",  PROC_DOOR20,            0xFF),
    OBJNAME("nadoor",  PROC_DOOR20,            0xFF),
    OBJNAME("l9door",  PROC_DOOR20,            0xFF),
    OBJNAME("l7door",  PROC_DOOR20,            0xFF),
    OBJNAME("pdoor",   PROC_PushDoor,          0xFF),
    OBJNAME("bigdoor", PROC_DOOR20,            0xFF),
    OBJNAME("kshtr00", PROC_Obj_Kshutter,      0xFF),
    OBJNAME("vshuter", PROC_Obj_Kshutter,      0xFF),
    OBJNAME("IzmGate", PROC_Izumi_Gate,        0xFF),
    OBJNAME("NoneCam", PROC_CAMERA,            0xFF),
    OBJNAME("NormCam", PROC_CAMERA,            0xFF),
    OBJNAME("Link",    PROC_ALINK,             0xFF),
    OBJNAME("carry00", PROC_Obj_Carry,         0xFF),
    OBJNAME("carry01", PROC_Obj_Carry,         0xFF),
    OBJNAME("carry02", PROC_Obj_Carry,         0xFF),
    OBJNAME("carry04", PROC_Obj_Carry,         0xFF),
    OBJNAME("carry05", PROC_Obj_Carry,         0xFF),
    OBJNAME("carry06", PROC_Obj_Carry,         0xFF),
    OBJNAME("carry07", PROC_Obj_Carry,         0xFF),
    OBJNAME("carry08", PROC_Obj_Carry,         0xFF),
    OBJNAME("carry09", PROC_Obj_Carry,         0xFF),
    OBJNAME("ball1",   PROC_Obj_Carry,         0xFF),
    OBJNAME("ball2",   PROC_Obj_Carry,         0xFF),
    OBJNAME("ball3",   PROC_Obj_Carry,         0xFF),
    OBJNAME("carry12", PROC_Obj_Carry,         0xFF),
    OBJNAME("carry13", PROC_Obj_Carry,         0xFF),
    OBJNAME("TagLite", PROC_Tag_LightBall,     0xFF),
    OBJNAME("InoBone", PROC_Obj_InoBone,       0xFF),
    OBJNAME("osiBLK0", PROC_Obj_Movebox,       0x00),
    OBJNAME("dmblk",   PROC_Obj_Movebox,       0x00),
    OBJNAME("Kkiba",   PROC_Obj_Movebox,       0x02),
    OBJNAME("smblk",   PROC_Obj_Movebox,       0x02),
    OBJNAME("Lv4blk",  PROC_Obj_Movebox,       0xFF),
    OBJNAME("Lv4blk2", PROC_Obj_Movebox,       0xFF),
    OBJNAME("gstone",  PROC_Obj_Movebox,       0xFF),
    OBJNAME("TagAtt",  PROC_Tag_Attp,          0xFF),
    OBJNAME("mmvbg",   PROC_SET_BG_OBJ,        0xFF),
    OBJNAME("Drop",    PROC_Obj_Drop,          0xFF),
    OBJNAME("BkLeaf",  PROC_Obj_BkLeaf,        0xFF),
    OBJNAME("cylwind", PROC_Obj_Tornado,       0xFF),
    OBJNAME("TagTrnd", PROC_Obj_Tornado2,      0xFF),
    OBJNAME("mvstair", PROC_Obj_MvStair,       0xFF),
    OBJNAME("UHDoor",  PROC_Obj_Cowdoor,       0xFF),
    OBJNAME("SwBoom",  PROC_Obj_Swpropeller,   0xFF),
    OBJNAME("Swboom",  PROC_Obj_Swpropeller,   0xFF),
    OBJNAME("BoomSht", PROC_Obj_BoomShutter,   0xFF),
    OBJNAME("haihai",  PROC_Obj_Hfuta,         0xFF),
    OBJNAME("stopper", PROC_Obj_Stopper,       0xFF),
    OBJNAME("dstop",   PROC_Obj_Stopper2,      0xFF),
    OBJNAME("mhole",   PROC_Obj_MHole,         0xFF),
    OBJNAME("mhole2",  PROC_Obj_MHole,         0xFF),
    OBJNAME("TagMag",  PROC_Tag_Magne,         0xFF),
    OBJNAME("P_Warp",  PROC_Obj_BossWarp,      0xFF),
    OBJNAME("fpillar", PROC_Obj_FirePillar,    0xFF),
    OBJNAME("yfire",   PROC_Obj_FirePillar2,   0xFF),
    OBJNAME("pfire",   PROC_Obj_FirePillar2,   0xFF),
    OBJNAME("Huriko1", PROC_Obj_WoodPendulum,  0xFF),
    OBJNAME("VolBall", PROC_Obj_VolcanicBall,  0xFF),
    OBJNAME("VolBom",  PROC_Obj_VolcanicBall,  0xFF),
    OBJNAME("BigVolc", PROC_Obj_VolcanicBomb,  0xFF),
    OBJNAME("geyser",  PROC_Obj_Geyser,        0xFF),
    OBJNAME("Cwall",   PROC_Obj_ChainWall,     0xFF),
    OBJNAME("Tansu",   PROC_Obj_Chest,         0xFF),
    OBJNAME("Onsen",   PROC_Obj_Onsen,         0xFF),
    OBJNAME("Obj_bm",  PROC_Obj_Bemos,         0xFF),
    OBJNAME("lv6bm",   PROC_Obj_Lv6bemos,      0xFF),
    OBJNAME("E_bm6",   PROC_Obj_Lv6bemos2,     0xFF),
    OBJNAME("stone",   PROC_Obj_Stone,         0xFF),
    OBJNAME("stoneB",  PROC_Obj_Stone,         0xFF),
    OBJNAME("TagSpin", PROC_Tag_Spinner,       0xFF),
    OBJNAME("L_RopeS", PROC_Obj_RopeBridge,    0xFF),
    OBJNAME("L_RopeB", PROC_Obj_RopeBridge,    0xFF),
    OBJNAME("wcover",  PROC_Obj_WellCover,     0xFF),
    OBJNAME("rstair",  PROC_Obj_RotStair,      0xFF),
    OBJNAME("marm",    PROC_Obj_MagneArm,      0xFF),
    OBJNAME("turnSw",  PROC_Obj_SwTurn,        0xFF),
    OBJNAME("chainSw", PROC_Obj_SwChain,       0xFF),
    OBJNAME("wsword",  PROC_Obj_WoodenSword,   0xFF),
    OBJNAME("iceblk",  PROC_Obj_IceBlock,      0xFF),
    OBJNAME("KkrSmk",  PROC_Obj_Smoke,         0xFF),
    OBJNAME("dmele",   PROC_Obj_Elevator,      0xFF),
    OBJNAME("wfall",   PROC_Obj_WaterFall,     0xFF),
    OBJNAME("izora",   PROC_Obj_ZoraCloth,     0xFF),
    OBJNAME("smgdoor", PROC_Obj_SmgDoor,       0xFF),
    OBJNAME("smkdoor", PROC_Obj_SmgDoor,       0xFF),
    OBJNAME("Obj_ava", PROC_Obj_Avalanche,     0xFF),
    OBJNAME("thdoor",  PROC_Obj_TDoor,         0xFF),
    OBJNAME("mstrsrd", PROC_Obj_MasterSword,   0xFF),
    OBJNAME("wimage",  PROC_Obj_WoodStatue,    0xFF),
    OBJNAME("sword",   PROC_Obj_Sword,         0xFF),
    OBJNAME("spring",  PROC_Tag_Spring,        0xFF),
    OBJNAME("BkDoorL", PROC_Obj_BkDoor,        0xFF),
    OBJNAME("BkDoorR", PROC_Obj_BkDoor,        0xFF),
    OBJNAME("IGateL",  PROC_Obj_MGate,         0xFF),
    OBJNAME("IGateR",  PROC_Obj_MGate,         0xFF),
    OBJNAME("HGateL",  PROC_Obj_MGate,         0xFF),
    OBJNAME("HGateR",  PROC_Obj_MGate,         0xFF),
    OBJNAME("K_Gate",  PROC_Obj_KkrGate,       0xFF),
    OBJNAME("R_Gate",  PROC_Obj_RiderGate,     0xFF),
    OBJNAME("kkanban", PROC_Obj_KKanban,       0xFF),
    OBJNAME("Mhsg6",   PROC_Obj_Ladder,        0x00),
    OBJNAME("Mhsg9",   PROC_Obj_Ladder,        0x01),
    OBJNAME("Mhsg12",  PROC_Obj_Ladder,        0x02),
    OBJNAME("Mhsg15",  PROC_Obj_Ladder,        0x03),
    OBJNAME("Mhsg4h",  PROC_Obj_Ladder,        0x04),
    OBJNAME("Mhsg3",   PROC_Obj_Ladder,        0x05),
    OBJNAME("bonbori", PROC_EP,                0xFF),
    OBJNAME("Cow",     PROC_COW,               0xFF),
    OBJNAME("Peru",    PROC_PERU,              0xFF),
    OBJNAME("Kago",    PROC_KAGO,              0xFF),
    OBJNAME("TagFall", PROC_Tag_WaterFall,     0xFF),
    OBJNAME("Kbota_A", PROC_Obj_Swpush,        0x00),
    OBJNAME("Kbota_B", PROC_Obj_Swpush,        0x01),
    OBJNAME("KbotaC",  PROC_Obj_Swpush,        0x02),
    OBJNAME("Swpush",  PROC_Obj_Swpush,        0x00),
    OBJNAME("Lv3bota", PROC_Obj_Swpush,        0x00),
    OBJNAME("Ksw00_C", PROC_Obj_Swpush2,       0x02),
    OBJNAME("hvySw",   PROC_Obj_Swpush5,       0x00),
    OBJNAME("buraA",   PROC_Obj_SwHang,        0x00),
    OBJNAME("buraB",   PROC_Obj_SwHang,        0x00),
    OBJNAME("buraA2",  PROC_Obj_SwHang,        0x00),
    OBJNAME("buraB2",  PROC_Obj_SwHang,        0x00),
    OBJNAME("bura7A",  PROC_Obj_SwHang,        0x00),
    OBJNAME("bura7B",  PROC_Obj_SwHang,        0x00),
    OBJNAME("bura7C",  PROC_Obj_SwHang,        0x00),
    OBJNAME("bura7D",  PROC_Obj_SwHang,        0x00),
    OBJNAME("bura7E",  PROC_Obj_SwHang,        0x00),
    OBJNAME("tbox_sw", PROC_TBOX_SW,           0x00),
    OBJNAME("swLight", PROC_Obj_SwLight,       0x00),
    OBJNAME("iceleaf", PROC_Obj_IceLeaf,       0x00),
    OBJNAME("swHit",   PROC_SWHIT0,            0x00),
    OBJNAME("swHit2",  PROC_SWHIT0,            0x01),
    OBJNAME("ObjTime", PROC_Obj_Timer,         0xFF),
    OBJNAME("AND_SW",  PROC_ANDSW,             0xFF),
    OBJNAME("AND_SW2", PROC_ANDSW2,            0xFF),
    OBJNAME("ALLdie",  PROC_ALLDIE,            0xFF),
    OBJNAME("rvback",  PROC_Tag_RiverBack,     0xFF),
    OBJNAME("kagoFal", PROC_Tag_KagoFall,      0xFF),
    OBJNAME("CrvGate", PROC_Obj_CRVGATE,       0xFF),
    OBJNAME("CrvSaku", PROC_Obj_CRVFENCE,      0xFF),
    OBJNAME("CrvWood", PROC_Obj_CRVHAHEN,      0xFF),
    OBJNAME("CrvStel", PROC_Obj_CRVSTEEL,      0xFF),
    OBJNAME("CrvLH",   PROC_Obj_CRVLH_DW,      0xFF),
    OBJNAME("RvRock",  PROC_Obj_RIVERROCK,     0xFF),
    OBJNAME("P2a",     PROC_NPC_P2,            0x00),
    OBJNAME("P2b",     PROC_NPC_P2,            0x01),
    OBJNAME("P2c",     PROC_NPC_P2,            0x02),
    OBJNAME("Gnd",     PROC_NPC_GND,           0xFF),
    OBJNAME("grA",     PROC_NPC_GRA,           0xFF),
    OBJNAME("Obj_grA", PROC_OBJ_GRA,           0xFF),
    OBJNAME("Tag_grA", PROC_TAG_GRA,           0xFF),
    OBJNAME("TagYami", PROC_TAG_YAMI,          0xFF),
    OBJNAME("grC",     PROC_NPC_GRC,           0xFF),
    OBJNAME("grM",     PROC_NPC_GRM,           0xFF),
    OBJNAME("grMC",    PROC_NPC_GRMC,          0xFF),
    OBJNAME("grS",     PROC_NPC_GRS,           0xFF),
    OBJNAME("grD1",    PROC_NPC_GRD,           0xFF),
    OBJNAME("grD",     PROC_NPC_WRESTLER,      0x01),
    OBJNAME("grR",     PROC_NPC_GRR,           0xFF),
    OBJNAME("grO",     PROC_NPC_GRO,           0xFF),
    OBJNAME("grZ",     PROC_NPC_GRZ,           0xFF),
    OBJNAME("grARock", PROC_Obj_GraRock,       0xFF),
    OBJNAME("grZRock", PROC_Obj_GrzRock,       0xFF),
    OBJNAME("osnFire", PROC_OBJ_ONSEN_FIRE,    0xFF),
    OBJNAME("yamiD",   PROC_NPC_YAMID,         0xFF),
    OBJNAME("yamiT",   PROC_NPC_YAMIT,         0xFF),
    OBJNAME("yamiS",   PROC_NPC_YAMIS,         0xFF),
    OBJNAME("Blue_NS", PROC_NPC_BLUENS,        0xFF),
    OBJNAME("Kakashi", PROC_NPC_KAKASHI,       0x00),
    OBJNAME("Kdk",     PROC_NPC_KDK,           0xFF),
    OBJNAME("Aru",     PROC_NPC_ARU,           0xFF),
    OBJNAME("Bans",    PROC_NPC_BANS,          0xFF),
    OBJNAME("Besu",    PROC_NPC_BESU,          0xFF),
    OBJNAME("Bou",     PROC_NPC_BOU,           0xFF),
    OBJNAME("BouS",    PROC_NPC_BOU_S,         0x00),
    OBJNAME("clerkA",  PROC_NPC_CLERKA,        0x00),
    OBJNAME("clerkB",  PROC_NPC_CLERKB,        0x00),
    OBJNAME("clerkT",  PROC_NPC_CLERKT,        0x00),
    OBJNAME("Ash",     PROC_NPC_ASH,           0xFF),
    OBJNAME("AshB",    PROC_NPC_ASHB,          0xFF),
    OBJNAME("Shad",    PROC_NPC_SHAD,          0xFF),
    OBJNAME("Rafrel",  PROC_NPC_RAFREL,        0xFF),
    OBJNAME("MoiR",    PROC_NPC_MOIR,          0xFF),
    OBJNAME("impal",   PROC_NPC_IMPAL,         0xFF),
    OBJNAME("Coach",   PROC_NPC_COACH,         0xFF),
    OBJNAME("TheB",    PROC_NPC_THEB,          0xFF),
    OBJNAME("TgArena", PROC_Tag_Arena,         0xFF),
    OBJNAME("TagInst", PROC_Tag_Instruction,   0xFF),
    OBJNAME("GWolf",   PROC_NPC_GWOLF,         0xFF),
    OBJNAME("Len",     PROC_NPC_LEN,           0xFF),
    OBJNAME("Lud",     PROC_NPC_LUD,           0xFF),
    OBJNAME("Doc",     PROC_NPC_DOC,           0xFF),
    OBJNAME("FSeirei", PROC_NPC_FAIRY_SEIREI,  0xFF),
    OBJNAME("Fairy",   PROC_NPC_FAIRY,         0xFF),
    OBJNAME("Hanjo",   PROC_NPC_HANJO,         0xFF),
    OBJNAME("Hoz",     PROC_NPC_HOZ,           0xFF),
    OBJNAME("Jagar",   PROC_NPC_JAGAR,         0xFF),
    OBJNAME("Kkri",    PROC_NPC_KKRI,          0xFF),
    OBJNAME("Kn",      PROC_NPC_KN,            0xFF),
    OBJNAME("KnBlt",   PROC_KN_BULLET,         0xFF),
    OBJNAME("Knj",     PROC_NPC_KNJ,           0xFF),
    OBJNAME("Kolin",   PROC_NPC_KOLIN,         0xFF),
    OBJNAME("Kolinb",  PROC_NPC_KOLINB,        0xFF),
    OBJNAME("Kyury",   PROC_NPC_KYURY,         0xFF),
    OBJNAME("Maro",    PROC_NPC_MARO,          0xFF),
    OBJNAME("midP",    PROC_NPC_MIDP,          0xFF),
    OBJNAME("Moi",     PROC_NPC_MOI,           0xFF),
    OBJNAME("Raca",    PROC_NPC_RACA,          0xFF),
    OBJNAME("Post",    PROC_NPC_POST,          0xFF),
    OBJNAME("Pouya",   PROC_NPC_POUYA,         0xFF),
    OBJNAME("Saru",    PROC_NPC_SARU,          0xFF),
    OBJNAME("seiB",    PROC_NPC_SEIB,          0xFF),
    OBJNAME("seiC",    PROC_NPC_SEIC,          0xFF),
    OBJNAME("seiD",    PROC_NPC_SEID,          0xFF),
    OBJNAME("Seira",   PROC_NPC_SEIRA,         0xFF),
    OBJNAME("Seira2",  PROC_NPC_SERA2,         0xFF),
    OBJNAME("Seirei",  PROC_NPC_SEIREI,        0xFF),
    OBJNAME("Sha",     PROC_NPC_SHAMAN,        0xFF),
    OBJNAME("sMaro",   PROC_NPC_SMARO,         0xFF),
    OBJNAME("solA",    PROC_NPC_SOLA,          0xFF),
    OBJNAME("Taro",    PROC_NPC_TARO,          0xFF),
    OBJNAME("PA_Besu", PROC_NPC_PACHI_BESU,    0xFF),
    OBJNAME("PA_Taro", PROC_NPC_PACHI_TARO,    0xFF),
    OBJNAME("PA_Maro", PROC_NPC_PACHI_MARO,    0xFF),
    OBJNAME("TagPati", PROC_TAG_PATI,          0xFF),
    OBJNAME("The",     PROC_NPC_THE,           0xFF),
    OBJNAME("Tkj",     PROC_NPC_TKJ,           0xFF),
    OBJNAME("Tks",     PROC_NPC_TKS,           0xFF),
    OBJNAME("ObjTks",  PROC_OBJ_TKS,           0xFF),
    OBJNAME("Tkc",     PROC_NPC_TKC,           0xFF),
    OBJNAME("Tkj2",    PROC_NPC_TKJ2,          0xFF),
    OBJNAME("Toby",    PROC_NPC_TOBY,          0xFF),
    OBJNAME("Uri",     PROC_NPC_URI,           0xFF),
    OBJNAME("Yelia",   PROC_NPC_YELIA,         0xFF),
    OBJNAME("ykM",     PROC_NPC_YKM,           0xFF),
    OBJNAME("ykW",     PROC_NPC_YKW,           0xFF),
    OBJNAME("zanB",    PROC_NPC_ZANB,          0xFF),
    OBJNAME("Zant",    PROC_NPC_ZANT,          0xFF),
    OBJNAME("Zelda",   PROC_NPC_ZELDA,         0xFF),
    OBJNAME("ZelR",    PROC_NPC_ZELR,          0xFF),
    OBJNAME("ZelRo",   PROC_NPC_ZELRO,         0xFF),
    OBJNAME("zrA",     PROC_NPC_ZRA,           0x00),
    OBJNAME("zrS",     PROC_NPC_ZRA,           0x01),
    OBJNAME("zrWF",    PROC_NPC_ZRA,           0x02),
    OBJNAME("zrR",     PROC_NPC_ZRA,           0x03),
    OBJNAME("zrD",     PROC_NPC_ZRA,           0x04),
    OBJNAME("zrSP",    PROC_NPC_ZRA,           0x05),
    OBJNAME("zrSPA",   PROC_NPC_ZRA,           0x06),
    OBJNAME("zrF",     PROC_OBJ_ZRAFREEZE,     0x00),
    OBJNAME("zrF2",    PROC_OBJ_ZRAFREEZE,     0x01),
    OBJNAME("zrF3",    PROC_OBJ_ZRAFREEZE,     0x02),
    OBJNAME("zrC",     PROC_NPC_ZRC,           0xFF),
    OBJNAME("zrZ",     PROC_NPC_ZRZ,           0xFF),
    OBJNAME("GrvStn",  PROC_Obj_GraveStone,    0xFF),
    OBJNAME("zrARock", PROC_Obj_ZraRock,       0xFF),
    OBJNAME("StAndGl", PROC_START_AND_GOAL,    0xFF),
    OBJNAME("zrAMark", PROC_ZRA_MARK,          0xFF),
    OBJNAME("myna2",   PROC_MYNA2,             0xFF),
    OBJNAME("myn2tag", PROC_TAG_MYNA2,         0xFF),
    OBJNAME("MAN_a",   PROC_NPC_CD3,           0x00),
    OBJNAME("MAD_a",   PROC_NPC_CD3,           0x01),
    OBJNAME("MCN_a",   PROC_NPC_CD3,           0x02),
    OBJNAME("MON_a",   PROC_NPC_CD3,           0x03),
    OBJNAME("MAN_b",   PROC_NPC_CD3,           0x04),
    OBJNAME("MAN_c",   PROC_NPC_CD3,           0x05),
    OBJNAME("MAS_a",   PROC_NPC_CD3,           0x06),
    OBJNAME("MBN_a",   PROC_NPC_CD3,           0x07),
    OBJNAME("MAN_a2",  PROC_NPC_CD3,           0x08),
    OBJNAME("MAD_a2",  PROC_NPC_CD3,           0x09),
    OBJNAME("MCN_a2",  PROC_NPC_CD3,           0x0A),
    OBJNAME("MON_a2",  PROC_NPC_CD3,           0x0B),
    OBJNAME("MAN_b2",  PROC_NPC_CD3,           0x0C),
    OBJNAME("MAN_c2",  PROC_NPC_CD3,           0x0D),
    OBJNAME("MAS_a2",  PROC_NPC_CD3,           0x0E),
    OBJNAME("MBN_a2",  PROC_NPC_CD3,           0x0F),
    OBJNAME("WAN_a",   PROC_NPC_CD3,           0x10),
    OBJNAME("WAD_a",   PROC_NPC_CD3,           0x11),
    OBJNAME("MAT_a",   PROC_NPC_CD3,           0x12),
    OBJNAME("WCN_a",   PROC_NPC_CD3,           0x13),
    OBJNAME("WON_a",   PROC_NPC_CD3,           0x14),
    OBJNAME("WGN_a",   PROC_NPC_CD3,           0x15),
    OBJNAME("WAN_b",   PROC_NPC_CD3,           0x16),
    OBJNAME("WAN_a2",  PROC_NPC_CD3,           0x17),
    OBJNAME("WAD_a2",  PROC_NPC_CD3,           0x18),
    OBJNAME("MAT_a2",  PROC_NPC_CD3,           0x19),
    OBJNAME("WCN_a2",  PROC_NPC_CD3,           0x1A),
    OBJNAME("WON_a2",  PROC_NPC_CD3,           0x1B),
    OBJNAME("WGN_a2",  PROC_NPC_CD3,           0x1C),
    OBJNAME("WAN_b2",  PROC_NPC_CD3,           0x1D),
    OBJNAME("shoe",    PROC_NPC_SHOE,          0xFF),
    OBJNAME("DoorBoy", PROC_NPC_DOORBOY,       0xFF),
    OBJNAME("prayer",  PROC_NPC_PRAYER,        0xFF),
    OBJNAME("km_Hana", PROC_NPC_KASIHANA,      0xFF),
    OBJNAME("km_Kyu",  PROC_NPC_KASIKYU,       0xFF),
    OBJNAME("km_Mich", PROC_NPC_KASIMICH,      0xFF),
    OBJNAME("NpcChat", PROC_NPC_CHAT,          0xFF),
    OBJNAME("chtSolA", PROC_NPC_SOLDIERa,      0xFF),
    OBJNAME("chtSolB", PROC_NPC_SOLDIERb,      0xFF),
    OBJNAME("DrSol1",  PROC_NPC_DRSOL,         0x00),
    OBJNAME("DrSol2",  PROC_NPC_DRSOL,         0x01),
    OBJNAME("chin",    PROC_NPC_CHIN,          0xFF),
    OBJNAME("ins",     PROC_NPC_INS,           0xFF),
    OBJNAME("Shop0",   PROC_NPC_SHOP0,         0xFF),
    OBJNAME("TagSch",  PROC_Tag_Schedule,      0xFF),
    OBJNAME("TagEsc",  PROC_Tag_Escape,        0xFF),
    OBJNAME("passer",  PROC_PASSER_MNG,        0x00),
    OBJNAME("passerL", PROC_PASSER_MNG,        0x01),
    OBJNAME("fmtion",  PROC_FORMATION_MNG,     0x00),
    OBJNAME("fmtionL", PROC_FORMATION_MNG,     0x01),
    OBJNAME("guard",   PROC_GUARD_MNG,         0xFF),
    OBJNAME("TgGuard", PROC_TAG_GUARD,         0xFF),
    OBJNAME("Mk",      PROC_NPC_MK,            0xFF),
    OBJNAME("Obj_Tbi", PROC_Obj_Yobikusa,      0x00),
    OBJNAME("Obj_Uma", PROC_Obj_Yobikusa,      0x01),
    OBJNAME("Obj_knk", PROC_Obj_KazeNeko,      0xFF),
    OBJNAME("Obj_nmp", PROC_Obj_NamePlate,     0xFF),
    OBJNAME("Obj_Tie", PROC_Obj_OnCloth,       0xFF),
    OBJNAME("Obj_Lrp", PROC_Obj_LndRope,       0xFF),
    OBJNAME("Obj_Sit", PROC_Obj_ItaRope,       0xFF),
    OBJNAME("Ikada",   PROC_Obj_Ikada,         0xFF),
    OBJNAME("Dust",    PROC_Obj_DUST,          0xFF),
    OBJNAME("Obj_Ita", PROC_Obj_ITA,           0xFF),
    OBJNAME("Ice_l",   PROC_Obj_Ice_l,         0xFF),
    OBJNAME("Ice_s",   PROC_Obj_Ice_s,         0xFF),
    OBJNAME("E_Make",  PROC_Obj_E_CREATE,      0xFF),
    OBJNAME("Bhhashi", PROC_Obj_Bhbridge,      0xFF),
    OBJNAME("Yousei",  PROC_Obj_Yousei,        0xFF),
    OBJNAME("G_Kabe",  PROC_Obj_GOMIKABE,      0xFF),
    OBJNAME("B_ling",  PROC_Obj_Mato,          0xFF),
    OBJNAME("kab_o",   PROC_Obj_Kabuto,        0xFF),
    OBJNAME("I_Cho",   PROC_Obj_Cho,           0xFF),
    OBJNAME("I_Kuw",   PROC_Obj_Kuw,           0xFF),
    OBJNAME("I_Nan",   PROC_Obj_Nan,           0xFF),
    OBJNAME("I_Dan",   PROC_Obj_Dan,           0xFF),
    OBJNAME("I_Kam",   PROC_Obj_Kam,           0xFF),
    OBJNAME("I_Ten",   PROC_Obj_Ten,           0xFF),
    OBJNAME("I_Ari",   PROC_Obj_Ari,           0xFF),
    OBJNAME("I_Kag",   PROC_Obj_Kag,           0xFF),
    OBJNAME("I_Tom",   PROC_Obj_Tombo,         0xFF),
    OBJNAME("I_Bat",   PROC_Obj_Batta,         0xFF),
    OBJNAME("I_Kat",   PROC_Obj_Kat,           0xFF),
    OBJNAME("H_Saku",  PROC_Obj_H_Saku,        0xFF),
    OBJNAME("sm_door", PROC_Obj_SM_DOOR,       0xFF),
    OBJNAME("Kaisou",  PROC_Obj_Kaisou,        0xFF),
    OBJNAME("Ni",      PROC_NI,                0xFF),
    OBJNAME("Fr",      PROC_FR,                0xFF),
    OBJNAME("Sq",      PROC_SQ,                0xFF),
    OBJNAME("Bd",      PROC_BD,                0xFF),
    OBJNAME("Obj_ki",  PROC_OBJ_KI,            0xFF),
    OBJNAME("Do",      PROC_DO,                0xFF),
    OBJNAME("Lm",      PROC_NPC_FISH,          0x00),
    OBJNAME("Tr",      PROC_NPC_FISH,          0x05),
    OBJNAME("Npc_tr",  PROC_NPC_TR,            0xFF),
    OBJNAME("Npc_lf",  PROC_NPC_LF,            0xFF),
    OBJNAME("Fish",    PROC_MG_FISH,           0xFF),
    OBJNAME("NPC_TK",  PROC_NPC_TK,            0xFF),
    OBJNAME("Obj_fd",  PROC_OBJ_FOOD,          0xFF),
    OBJNAME("MYNA",    PROC_MYNA,              0xFF),
    OBJNAME("SSITEM",  PROC_OBJ_SSITEM,        0xFF),
    OBJNAME("SSDRINK", PROC_OBJ_SSDRINK,       0xFF),
    OBJNAME("TGDRINK", PROC_TAG_SSDRINK,       0xFF),
    OBJNAME("Tag_Btl", PROC_TAG_BTLITM,        0xFF),
    OBJNAME("lv5soup", PROC_TAG_LV5SOUP,       0xFF),
    OBJNAME("TGMNLIG", PROC_TAG_MNLIGHT,       0xFF),
    OBJNAME("TGSPCAM", PROC_TAG_SHOPCAM,       0xFF),
    OBJNAME("TGSPITM", PROC_TAG_SHOPITM,       0xFF),
    OBJNAME("OilTubo", PROC_OBJ_OILTUBO,       0xFF),
    OBJNAME("Roten",   PROC_OBJ_ROTEN,         0xFF),
    OBJNAME("Pleaf",   PROC_OBJ_PLEAF,         0xFF),
    OBJNAME("KBacket", PROC_OBJ_KBACKET,       0xFF),
    OBJNAME("YBag",    PROC_OBJ_YBAG,          0xFF),
    OBJNAME("Pumpkin", PROC_OBJ_PUMPKIN,       0xFF),
    OBJNAME("Obj_kg",  PROC_OBJ_KAGO,          0xFF),
    OBJNAME("BbKago",  PROC_OBJ_KAGO,          0x00),
    OBJNAME("OnKago",  PROC_OBJ_KAGO,          0x01),
    OBJNAME("ObjHasi", PROC_Obj_HHASHI,        0xFF),
    OBJNAME("Thashi",  PROC_Obj_THASHI,        0xFF),
    OBJNAME("B_Hashi", PROC_Obj_BHASHI,        0xFF),
    OBJNAME("E_MD",    PROC_E_MD,              0xFF),
    OBJNAME("E_s1",    PROC_E_S1,              0xFF),
    OBJNAME("E_wb",    PROC_E_WB,              0xFF),
    OBJNAME("E_rd",    PROC_E_RD,              0xFF),
    OBJNAME("E_rdb",   PROC_E_RDB,             0xFF),
    OBJNAME("E_rdy",   PROC_E_RDY,             0xFF),
    OBJNAME("E_fm",    PROC_E_FM,              0xFF),
    OBJNAME("E_dn",    PROC_E_DN,              0xFF),
    OBJNAME("E_mf",    PROC_E_MF,              0xFF),
    OBJNAME("TreeSh",  PROC_TREESH,            0xFF),
    OBJNAME("E_bug",   PROC_E_BUG,             0xFF),
    OBJNAME("E_bee",   PROC_E_BEE,             0xFF),
    OBJNAME("E_nest",  PROC_E_NEST,            0xFF),
    OBJNAME("E_kr",    PROC_E_KR,              0xFF),
    OBJNAME("E_st",    PROC_E_ST,              0xFF),
    OBJNAME("E_tk",    PROC_E_TK,              0xFF),
    OBJNAME("E_tk2",   PROC_E_TK2,             0xFF),
    OBJNAME("E_th",    PROC_E_TH,              0xFF),
    OBJNAME("E_cr",    PROC_E_CR,              0xFF),
    OBJNAME("E_df",    PROC_E_DF,              0xFF),
    OBJNAME("E_ph",    PROC_E_PH,              0xFF),
    OBJNAME("E_fs",    PROC_E_FS,              0xFF),
    OBJNAME("E_SB",    PROC_E_SB,              0xFF),
    OBJNAME("E_HM",    PROC_E_HM,              0xFF),
    OBJNAME("E_fk",    PROC_E_FK,              0xFF),
    OBJNAME("E_pm",    PROC_E_PM,              0xFF),
    OBJNAME("Npc_ne",  PROC_NPC_NE,            0xFF),
    OBJNAME("E_db",    PROC_E_DB,              0xFF),
    OBJNAME("E_kg",    PROC_E_KG,              0xFF),
    OBJNAME("E_sh",    PROC_E_SH,              0xFF),
    OBJNAME("E_sf",    PROC_E_SF,              0xFF),
    OBJNAME("Obj_lb",  PROC_OBJ_LBOX,          0xFF),
    OBJNAME("Obj_kb",  PROC_OBJ_KBOX,          0xFF),
    OBJNAME("E_bs",    PROC_E_BS,              0xFF),
    OBJNAME("Sekizoa", PROC_OBJ_SEKIZOA,       0x00),
    OBJNAME("Sekizob", PROC_OBJ_SEKIZOA,       0x01),
    OBJNAME("E_sm",    PROC_E_SM,              0xFF),
    OBJNAME("E_sm2",   PROC_E_SM2,             0xFF),
    OBJNAME("ky_tag0", PROC_KYTAG00,           0xFF),
    OBJNAME("ky_tag1", PROC_KYTAG01,           0x00),
    OBJNAME("ky_tag2", PROC_KYTAG02,           0xFF),
    OBJNAME("ky_tag3", PROC_KYTAG01,           0x01),
    OBJNAME("kytag3",  PROC_KYTAG03,           0xFF),
    OBJNAME("DK_tag",  PROC_KYTAG04,           0xFF),
    OBJNAME("PPHole",  PROC_KYTAG05,           0xFF),
    OBJNAME("KY_chg",  PROC_KYTAG06,           0xFF),
    OBJNAME("Plight",  PROC_KYTAG07,           0xFF),
    OBJNAME("KY_mk",   PROC_KYTAG08,           0xFF),
    OBJNAME("Bound",   PROC_KYTAG09,           0xFF),
    OBJNAME("WC_tag",  PROC_KYTAG01,           0x02),
    OBJNAME("Sparks",  PROC_KYTAG10,           0xFF),
    OBJNAME("Tcntrl",  PROC_KYTAG11,           0xFF),
    OBJNAME("Drkmst",  PROC_KYTAG12,           0xFF),
    OBJNAME("Blsnow",  PROC_KYTAG13,           0xFF),
    OBJNAME("Savmem",  PROC_KYTAG14,           0xFF),
    OBJNAME("Zshake",  PROC_KYTAG15,           0xFF),
    OBJNAME("Pikari",  PROC_KYTAG16,           0xFF),
    OBJNAME("Lmask",   PROC_KYTAG17,           0xFF),
    OBJNAME("E_is",    PROC_E_IS,              0xFF),
    OBJNAME("E_ai",    PROC_E_AI,              0xFF),
    OBJNAME("E_ba",    PROC_E_BA,              0xFF),
    OBJNAME("E_bu",    PROC_E_BU,              0xFF),
    OBJNAME("E_sw",    PROC_E_SW,              0xFF),
    OBJNAME("E_ge",    PROC_E_GE,              0xFF),
    OBJNAME("TagGe",   PROC_Tag_WatchGe,       0xFF),
    OBJNAME("E_ym",    PROC_E_YM,              0xFF),
    OBJNAME("E_ymt",   PROC_E_YM_TAG,          0xFF),
    OBJNAME("E_ymb",   PROC_E_YMB,             0xFF),
    OBJNAME("Fwall",   PROC_Tag_FWall,         0xFF),
    OBJNAME("E_hz",    PROC_E_HZ,              0xFF),
    OBJNAME("E_ws",    PROC_E_WS,              0xFF),
    OBJNAME("E_oc",    PROC_E_OC,              0xFF),
    OBJNAME("E_dt",    PROC_E_DT,              0xFF),
    OBJNAME("E_bg",    PROC_E_BG,              0xFF),
    OBJNAME("E_octbg", PROC_E_OctBg,           0xFF),
    OBJNAME("E_tt",    PROC_E_TT,              0xFF),
    OBJNAME("E_dk",    PROC_E_DK,              0xFF),
    OBJNAME("E_vt",    PROC_E_VT,              0xFF),
    OBJNAME("E_ww",    PROC_E_WW,              0xFF),
    OBJNAME("E_gi",    PROC_E_GI,              0xFF),
    OBJNAME("E_mk",    PROC_E_MK,              0xFF),
    OBJNAME("B_gm",    PROC_B_GM,              0xFF),
    OBJNAME("E_gm",    PROC_E_GM,              0xFF),
    OBJNAME("E_gs",    PROC_E_GS,              0xFF),
    OBJNAME("Npc_ne",  PROC_NPC_NE,            0xFF),
    OBJNAME("Obj_gm",  PROC_OBJ_GM,            0xFF),
    OBJNAME("E_mm",    PROC_E_MM,              0xFF),
    OBJNAME("E_mm2",   PROC_E_MM,              0x01),
    OBJNAME("E_fz",    PROC_E_FZ,              0xFF),
    OBJNAME("E_fb",    PROC_E_FB,              0xFF),
    OBJNAME("E_Zs",    PROC_E_ZS,              0xFF),
    OBJNAME("E_kk",    PROC_E_KK,              0xFF),
    OBJNAME("E_hp",    PROC_E_HP,              0xFF),
    OBJNAME("E_zh",    PROC_E_ZH,              0xFF),
    OBJNAME("E_zm",    PROC_E_ZM,              0xFF),
    OBJNAME("E_zm2",   PROC_E_ZM,              0x01),
    OBJNAME("E_pz",    PROC_E_PZ,              0xFF),
    OBJNAME("Kita",    PROC_OBJ_KITA,          0xFF),
    OBJNAME("E_nz",    PROC_E_NZ,              0xFF),
    OBJNAME("E_po",    PROC_E_PO,              0xFF),
    OBJNAME("Obj_w0",  PROC_OBJ_WEB0,          0xFF),
    OBJNAME("Obj_w1",  PROC_OBJ_WEB1,          0xFF),
    OBJNAME("Obj_cb",  PROC_OBJ_CB,            0xFF),
    OBJNAME("Obj_mak", PROC_OBJ_MAKI,          0xFF),
    OBJNAME("Obj_brg", PROC_OBJ_BRG,           0xFF),
    OBJNAME("E_rb",    PROC_E_RB,              0xFF),
    OBJNAME("E_sg",    PROC_E_SG,              0xFF),
    OBJNAME("Obj_tby", PROC_OBJ_TOBY,          0xFF),
    OBJNAME("Obj_sw",  PROC_OBJ_SW,            0xFF),
    OBJNAME("Npc_ks",  PROC_NPC_KS,            0xFF),
    OBJNAME("Obj_so",  PROC_OBJ_SO,            0xFF),
    OBJNAME("E_bi",    PROC_E_BI,              0xFF),
    OBJNAME("Obj_key", PROC_OBJ_KEY,           0xFF),
    OBJNAME("E_hb",    PROC_E_HB,              0xFF),
    OBJNAME("Obj_hb",  PROC_OBJ_HB,            0xFF),
    OBJNAME("B_bq",    PROC_B_BQ,              0xFF),
    OBJNAME("B_bh",    PROC_B_BH,              0xFF),
    OBJNAME("B_go",    PROC_B_GO,              0xFF),
    OBJNAME("Obj_fw",  PROC_OBJ_FW,            0xFF),
    OBJNAME("E_ga",    PROC_E_GA,              0xFF),
    OBJNAME("E_gb",    PROC_E_GB,              0xFF),
    OBJNAME("E_wap",   PROC_E_WAP,             0xFF),
    OBJNAME("Obj_sui", PROC_OBJ_SUISYA,        0xFF),
    OBJNAME("Obj_bal", PROC_OBJ_BALLOON,       0xFF),
    OBJNAME("Obj_lp",  PROC_OBJ_LP,            0xFF),
    OBJNAME("Obj_nd",  PROC_OBJ_NDOOR,         0xFF),
    OBJNAME("Obj_ud",  PROC_OBJ_UDOOR,         0xFF),
    OBJNAME("Obj_us",  PROC_OBJ_USAKU,         0xFF),
    OBJNAME("Obj_kn2", PROC_OBJ_KANBAN2,       0xFF),
    OBJNAME("Obj_kyh", PROC_OBJ_KEYHOLE,       0xFF),
    OBJNAME("Bed",     PROC_OBJ_BED,           0xFF),
    OBJNAME("BouMato", PROC_OBJ_BOUMATO,       0xFF),
    OBJNAME("AutoMt",  PROC_OBJ_AUTOMATA,      0xFF),
    OBJNAME("Gadget",  PROC_OBJ_GADGET,        0xFF),
    OBJNAME("ItaMato", PROC_OBJ_ITAMATO,       0xFF),
    OBJNAME("Nougu",   PROC_OBJ_NOUGU,         0xFF),
    OBJNAME("Stick",   PROC_OBJ_STICK,         0xFF),
    OBJNAME("Mie",     PROC_OBJ_MIE,           0xFF),
    OBJNAME("SkDoor",  PROC_OBJ_SEKIDOOR,      0xFF),
    OBJNAME("Sekizo",  PROC_OBJ_SEKIZO,        0xFF),
    OBJNAME("SMTile",  PROC_OBJ_SMTILE,        0xFF),
    OBJNAME("H_kage",  PROC_OBJ_KAGE,          0xFF),
    OBJNAME("E_ms",    PROC_E_MS,              0xFF),
    OBJNAME("Obj_tp",  PROC_OBJ_TP,            0xFF),
    OBJNAME("Obj_ms",  PROC_OBJ_MSIMA,         0xFF),
    OBJNAME("E_gob",   PROC_E_GOB,             0xFF),
    OBJNAME("E_yk",    PROC_E_YK,              0xFF),
    OBJNAME("E_yr",    PROC_E_YR,              0xFF),
    OBJNAME("E_yg",    PROC_E_YG,              0xFF),
    OBJNAME("Obj_fm",  PROC_OBJ_FMOBJ,         0xFF),
    OBJNAME("B_ob",    PROC_B_OB,              0xFF),
    OBJNAME("OcHashi", PROC_OCTHASHI,          0xFF),
    OBJNAME("E_dd",    PROC_E_DD,              0xFF),
    OBJNAME("Obj_rw",  PROC_OBJ_RW,            0xFF),
    OBJNAME("Obj_ih",  PROC_OBJ_IHASI,         0xFF),
    OBJNAME("E_yc",    PROC_E_YC,              0xFF),
    OBJNAME("B_ds",    PROC_B_DS,              0xFF),
    OBJNAME("B_dr",    PROC_B_DR,              0xFF),
    OBJNAME("B_gg",    PROC_B_GG,              0xFF),
    OBJNAME("B_yo",    PROC_B_YO,              0xFF),
    OBJNAME("B_tn",    PROC_B_TN,              0xFF),
    OBJNAME("B_zant",  PROC_B_ZANT,            0xFF),
    OBJNAME("B_zntm",  PROC_B_ZANTZ,           0xFF),
    OBJNAME("B_znts",  PROC_B_ZANTS,           0xFF),
    OBJNAME("E_yd",    PROC_E_YD,              0xFF),
    OBJNAME("E_yh",    PROC_E_YH,              0xFF),
    OBJNAME("Henna",   PROC_NPC_HENNA,         0xFF),
    OBJNAME("Henna0",  PROC_NPC_HENNA0,        0xFF),
    OBJNAME("Npc_du",  PROC_NPC_DU,            0x00),
    OBJNAME("Econt",   PROC_ECONT,             0xFF),
    OBJNAME("B_mgn",   PROC_B_MGN,             0xFF),
    OBJNAME("Hzelda",  PROC_E_HZELDA,          0xFF),
    OBJNAME("Worm",    PROC_NPC_WORM,          0xFF),
    OBJNAME("B_gnd",   PROC_B_GND,             0xFF),
    OBJNAME("Obj_gb",  PROC_OBJ_GB,            0xFF),
    OBJNAME("tboxA0",  PROC_TBOX,              0xFF),
    OBJNAME("tboxA1",  PROC_TBOX,              0xFF),
    OBJNAME("tboxA2",  PROC_TBOX,              0xFF),
    OBJNAME("tboxB0",  PROC_TBOX,              0xFF),
    OBJNAME("tboxB1",  PROC_TBOX,              0xFF),
    OBJNAME("tboxB2",  PROC_TBOX,              0xFF),
    OBJNAME("tboxJ0",  PROC_TBOX,              0xFF),
    OBJNAME("tboxP0",  PROC_TBOX,              0xFF),
    OBJNAME("tboxB00", PROC_TBOX,              0xFF),
    OBJNAME("tboxB01", PROC_TBOX,              0xFF),
    OBJNAME("tboxW0",  PROC_TBOX,              0xFF),
    OBJNAME("tboxEL0", PROC_TBOX2,             0xFF),
    OBJNAME("tboxEL1", PROC_TBOX2,             0xFF),
    OBJNAME("l8warp",  PROC_Obj_BossWarp,      0xFF),
    OBJNAME("L1Bdoor", PROC_L1BOSS_DOOR,       0xFF),
    OBJNAME("L2Bdoor", PROC_L1BOSS_DOOR,       0xFF),
    OBJNAME("L3Bdoor", PROC_Obj_Kshutter,      0xFF),
    OBJNAME("L4Bdoor", PROC_L1BOSS_DOOR,       0xFF),
    OBJNAME("L5Bdoor", PROC_L5BOSS_DOOR,       0xFF),
    OBJNAME("L6Bdoor", PROC_L1BOSS_DOOR,       0xFF),
    OBJNAME("L7Bdoor", PROC_L1BOSS_DOOR,       0xFF),
    OBJNAME("L8Bdoor", PROC_L1BOSS_DOOR,       0xFF),
    OBJNAME("L9Bdoor", PROC_L1BOSS_DOOR,       0xFF),
    OBJNAME("L1Mdoor", PROC_L1MBOSS_DOOR,      0x01),
    OBJNAME("L2Mdoor", PROC_L1MBOSS_DOOR,      0x02),
    OBJNAME("L3Mdoor", PROC_L1MBOSS_DOOR,      0x03),
    OBJNAME("L4Mdoor", PROC_L1MBOSS_DOOR,      0x04),
    OBJNAME("L5Mdoor", PROC_L1MBOSS_DOOR,      0x05),
    OBJNAME("L6Mdoor", PROC_L1MBOSS_DOOR,      0x06),
    OBJNAME("L7Mdoor", PROC_L1MBOSS_DOOR,      0x07),
    OBJNAME("L8Mdoor", PROC_L1MBOSS_DOOR,      0x08),
    OBJNAME("L7door",  PROC_L1MBOSS_DOOR,      0x0A),
    OBJNAME("L5door",  PROC_L1MBOSS_DOOR,      0x0B),
    OBJNAME("Horse",   PROC_HORSE,             0xFF),
    OBJNAME("Canoe",   PROC_CANOE,             0xFF),
    OBJNAME("Crope",   PROC_Obj_Crope,         0xFF),
    OBJNAME("Cstatue", PROC_CSTATUE,           0xFF),
    OBJNAME("CstaF",   PROC_CSTAF,             0xFF),
    OBJNAME("HoZelda", PROC_HOZELDA,           0xFF),
    OBJNAME("Mhint",   PROC_Tag_Mhint,         0xFF),
    OBJNAME("Mmsg",    PROC_Tag_Mmsg,          0xFF),
    OBJNAME("Mwait",   PROC_Tag_Mwait,         0xFF),
    OBJNAME("Mstop",   PROC_Tag_Mstop,         0xFF),
    OBJNAME("MstopE",  PROC_Tag_Mstop,         0xFF),
    OBJNAME("Hinit",   PROC_Tag_Hinit,         0xFF),
    OBJNAME("Hjump",   PROC_Tag_Hjump,         0xFF),
    OBJNAME("Hstop",   PROC_Tag_Hstop,         0xFF),
    OBJNAME("AJnot",   PROC_Tag_AJnot,         0xFF),
    OBJNAME("Wljump",  PROC_Tag_Wljump,        0xFF),
    OBJNAME("Sppath",  PROC_Tag_Sppath,        0xFF),
    OBJNAME("Stream",  PROC_Tag_Stream,        0xFF),
    OBJNAME("Gstart",  PROC_Tag_Gstart,        0xFF),
    OBJNAME("TgTGate", PROC_Tag_TWGate,        0xFF),
    OBJNAME("Lv6Gate", PROC_Tag_Lv6Gate,       0xFF),
    OBJNAME("Lv7Gate", PROC_Tag_Lv7Gate,       0xFF),
    OBJNAME("Lv8Gate", PROC_Tag_Lv8Gate,       0xFF),
    OBJNAME("TgTHint", PROC_Tag_TheBHint,      0xFF),
    OBJNAME("TagAsst", PROC_Tag_Assist,        0xFF),
    OBJNAME("Dmidna",  PROC_DMIDNA,            0xFF),
    OBJNAME("Fchain",  PROC_Obj_Fchain,        0xFF),
    OBJNAME("Wchain",  PROC_Obj_Wchain,        0xFF),
    OBJNAME("Cdoor",   PROC_Obj_Cdoor,         0xFF),
    OBJNAME("Cgate",   PROC_Obj_Cdoor,         0xFF),
    OBJNAME("Water00", PROC_GRDWATER,          0xFF),
    OBJNAME("Digpl",   PROC_Obj_Digpl,         0xFF),
    OBJNAME("Digholl", PROC_Obj_Digholl,       0xFF),
    OBJNAME("Bombf",   PROC_Obj_Bombf,         0xFF),
    OBJNAME("hider",   PROC_SUSPEND,           0xFF),
    OBJNAME("SwAreaC", PROC_SWC00,             0xFF),
    OBJNAME("SwAreaS", PROC_SWC00,             0xFF),
    OBJNAME("SwLBall", PROC_SwLBall,           0xFF),
    OBJNAME("SwBall",  PROC_SwBall,            0xFF),
    OBJNAME("thouse",  PROC_Obj_TobyHouse,     0xFF),
    OBJNAME("ironbox", PROC_Obj_MetalBox,      0xFF),
    OBJNAME("l6swtrn", PROC_Obj_Lv6SwTurn,     0xFF),
    OBJNAME("l2bmtag", PROC_Tag_Lv2PrChk,      0xFF),
    OBJNAME("swspin",  PROC_Obj_SwSpinner,     0xFF),
    OBJNAME("spnGear", PROC_Obj_Lv4Gear,       0xFF),
    OBJNAME("fan",     PROC_Obj_Fan,           0xFF),
    OBJNAME("tgake",   PROC_Obj_Gake,          0xFF),
    OBJNAME("tmoon",   PROC_Obj_TMoon,         0xFF),
    OBJNAME("gwall",   PROC_Obj_GanonWall,     0xFF),
    OBJNAME("gwall2",  PROC_Obj_GanonWall2,    0xFF),
    OBJNAME("scnChg",  PROC_SCENE_EXIT,        0xFF),
    OBJNAME("scnChg2", PROC_SCENE_EXIT2,       0xFF),
    OBJNAME("noChgRm", PROC_NO_CHG_ROOM,       0xFF),
    OBJNAME("readRm",  PROC_NO_CHG_ROOM,       0x00),
    OBJNAME("Tetd",    PROC_DSHUTTER,          0xFF),
    OBJNAME("fence",   PROC_DSHUTTER,          0xFF),
    OBJNAME("lv7saku", PROC_DSHUTTER,          0xFF),
    OBJNAME("YkgrON",  PROC_Ykgr,              0xFF),
    OBJNAME("YkgrOFF", PROC_Ykgr,              0xFF),
    OBJNAME("TagEv",   PROC_TAG_EVENT,         0xFF),
    OBJNAME("TagEvC",  PROC_TAG_EVENT,         0xFF),
    OBJNAME("TagEvt",  PROC_TAG_EVT,           0x00),
    OBJNAME("TagEvt1", PROC_TAG_EVT,           0x01),
    OBJNAME("TagHowl", PROC_TAG_HOWL,          0x01),
    OBJNAME("Tag_ms",  PROC_TAG_MSG,           0x00),
    OBJNAME("LntnTag", PROC_TAG_LANTERN,       0xFF),
    OBJNAME("EvtArea", PROC_TAG_EVTAREA,       0xFF),
    OBJNAME("AllMato", PROC_TAG_ALLMATO,       0xFF),
    OBJNAME("EvtMsg",  PROC_TAG_EVTMSG,        0xFF),
    OBJNAME("KMsg",    PROC_TAG_KMSG,          0xFF),
    OBJNAME("Push",    PROC_TAG_PUSH,          0xFF),
    OBJNAME("Teloper", PROC_TAG_TELOP,         0xFF),
    OBJNAME("CamChg",  PROC_TAG_CAMERA,        0xFF),
    OBJNAME("CamArea", PROC_TAG_CAMERA,        0xFF),
    OBJNAME("CamAreC", PROC_TAG_CAMERA,        0xFF),
    OBJNAME("ChkPntS", PROC_TAG_CHKPOINT,      0xFF),
    OBJNAME("ChkPntC", PROC_TAG_CHKPOINT,      0xFF),
    OBJNAME("setball", PROC_Tag_SetBall,       0xFF),
    OBJNAME("atkItem", PROC_Tag_AttackItem,    0xFF),
    OBJNAME("TagStat", PROC_Tag_Statue,        0xFF),
    OBJNAME("zdoor",   PROC_Obj_ZDoor,         0xFF),
    OBJNAME("rdoor",   PROC_Obj_ZDoor,         0xFF),
    OBJNAME("STDoa",   PROC_Obj_ZDoor,         0xFF),
    OBJNAME("hasi00",  PROC_Obj_Pillar,        0xFF),
    OBJNAME("hasi01",  PROC_Obj_Pillar,        0xFF),
    OBJNAME("window",  PROC_Obj_Window,        0xFF),
    OBJNAME("bbox",    PROC_Obj_BBox,          0xFF),
    OBJNAME("spiralC", PROC_Obj_Lv3R10Saka,    0xFF),
    OBJNAME("spiral2", PROC_Obj_Lv3R10Saka,    0xFF),
    OBJNAME("digsnow", PROC_Obj_DigSnow,       0xFF),
    OBJNAME("digsand", PROC_Obj_Lv4DigSand,    0xFF),
    OBJNAME("fallobj", PROC_Obj_FallObj,       0xFF),
    OBJNAME("l7brg",   PROC_Obj_Lv7Bridge,     0xFF),
    OBJNAME("dr",      PROC_DR,                0xFF),
    OBJNAME("L7lowDr", PROC_L7lowDr,           0xFF),
    OBJNAME("swTime",  PROC_SwTime,            0xFF),
    OBJNAME("pdrobj",  PROC_Obj_PushDoor,      0xFF),
    OBJNAME("crystal", PROC_Obj_Crystal,       0xFF),
    OBJNAME("WarpBrg", PROC_Obj_KakarikoBrg,   0xFF),
    OBJNAME("WarpB2",  PROC_Obj_KakarikoBrg,   0xFF),
    OBJNAME("WarpOB1", PROC_Obj_OrdinBrg,      0x00),
    OBJNAME("WarpOB2", PROC_Obj_OrdinBrg,      0x01),
    OBJNAME("VolcGnd", PROC_Obj_VolcGnd,       0xFF),
    OBJNAME("r09wtr",  PROC_Obj_WaterEff,      0xFF),
    OBJNAME("ballSw",  PROC_Obj_SwBallA,       0xFF),
    OBJNAME("lballSw", PROC_Obj_SwBallB,       0xFF),
    OBJNAME("lbsw",    PROC_Obj_SwBallC,       0xFF),
    OBJNAME("R50Sand", PROC_Obj_Lv4Sand,       0xFF),
    OBJNAME("rwall",   PROC_Obj_Lv4RailWall,   0xFF),
    OBJNAME("l4brg",   PROC_Obj_Lv4Bridge,     0xFF),
    OBJNAME("l4floor", PROC_Obj_Lv4Floor,      0xFF),
    OBJNAME("item",    PROC_ITEM,              0xFF),
    OBJNAME("itemKey", PROC_Obj_SmallKey,      0xFF),
    OBJNAME("kantera", PROC_Obj_Kantera,       0xFF),
    OBJNAME("witem",   PROC_ITEM,              0xFF),
    OBJNAME("wshield", PROC_Obj_Shield,        0xFF),
    OBJNAME("htPiece", PROC_Obj_LifeContainer, 0xFF),
    OBJNAME("htCase",  PROC_Obj_LifeContainer, 0xFF),
    OBJNAME("Mbrid15", PROC_Obj_RotBridge,     0xFF),
    OBJNAME("Mbrid9",  PROC_Obj_RotBridge,     0xFF),
    OBJNAME("maglift", PROC_Obj_MagLift,       0xFF),
    OBJNAME("Cldst00", PROC_Obj_Lv1Cdl00,      0xFF),
    OBJNAME("Cldst01", PROC_Obj_Lv1Cdl01,      0xFF),
    OBJNAME("RMback0", PROC_Tag_Restart,       0xFF),
    OBJNAME("RMback1", PROC_Tag_ChgRestart,    0xFF),
    OBJNAME("Mist",    PROC_Tag_Mist,          0xFF),
    OBJNAME("magLifR", PROC_Obj_MagLiftRot,    0xFF),
    OBJNAME("TCdlst",  PROC_Obj_TvCdlst,       0xFF),
    OBJNAME("wdstick", PROC_Obj_WdStick,       0xFF),
    OBJNAME("stBlock", PROC_Obj_StairBlock,    0xFF),
    OBJNAME("hsMato",  PROC_Obj_HsTarget,      0xFF),
    OBJNAME("ktFire",  PROC_Tag_KtOnFire,      0xFF),
    OBJNAME("hswitch", PROC_Obj_HeavySw,       0xFF),
    OBJNAME("goGate",  PROC_Obj_GoGate,        0xFF),
    OBJNAME("taAmi",   PROC_Obj_TaFence,       0xFF),
    OBJNAME("fireWd",  PROC_Obj_FireWood,      0xFF),
    OBJNAME("fireWd2", PROC_Obj_FireWood2,     0xFF),
    OBJNAME("altar",   PROC_Obj_Saidan,        0xFF),
    OBJNAME("gpTaru",  PROC_Obj_GpTaru,        0xFF),
    OBJNAME("spinLf",  PROC_Obj_SpinLift,      0xFF),
    OBJNAME("bmWin",   PROC_Obj_BmWindow,      0xFF),
    OBJNAME("roofHl",  PROC_Obj_RfHole,        0xFF),
    OBJNAME("syRock",  PROC_Obj_SyRock,        0xFF),
    OBJNAME("wColumn", PROC_Obj_WaterPillar,   0xFF),
    OBJNAME("kpot",    PROC_Obj_KiPot,         0xFF),
    OBJNAME("bsGate",  PROC_Obj_BsGate,        0xFF),
    OBJNAME("amiShut", PROC_Obj_AmiShutter,    0xFF),
    OBJNAME("kwhel00", PROC_Obj_KWheel00,      0xFF),
    OBJNAME("kwhel01", PROC_Obj_KWheel01,      0xFF),
    OBJNAME("PRElvtr", PROC_Obj_PRElvtr,       0xFF),
    OBJNAME("swhel00", PROC_Obj_KWheel00,      0xFF),
    OBJNAME("M_hasu",  PROC_Obj_MHasu,         0xFF),
    OBJNAME("yiblltr", PROC_Obj_YIblltray,     0xFF),
    OBJNAME("l6egate", PROC_Obj_Lv6EGate,      0xFF),
    OBJNAME("l6eleva", PROC_Obj_Lv6ElevtA,     0xFF),
    OBJNAME("wtGate",  PROC_Obj_WtGate,        0xFF),
    OBJNAME("candlL2", PROC_Obj_Lv2Candle,     0xFF),
    OBJNAME("togeTp",  PROC_Obj_TogeTrap,      0xFF),
    OBJNAME("rotTrap", PROC_Obj_RotTrap,       0xFF),
    OBJNAME("klift00", PROC_Obj_KLift00,       0xFF),
    OBJNAME("l4chand", PROC_Obj_Lv4Chan,       0xFF),
    OBJNAME("Ychndlr", PROC_Obj_Ychndlr,       0xFF),
    OBJNAME("hbmbkoy", PROC_Obj_HBombkoya,     0xFF),
    OBJNAME("TagCsw",  PROC_TAG_CSW,           0xFF),
    OBJNAME("TagCswO", PROC_TAG_CSW,           0xFF),
    OBJNAME("P_Rwall", PROC_Obj_Lv4PRwall,     0xFF),
    OBJNAME("PDtile",  PROC_Obj_PDtile,        0xFF),
    OBJNAME("PDwall",  PROC_Obj_PDwall,        0xFF),
    OBJNAME("Qs",      PROC_TAG_QS,            0xFF),
    OBJNAME("mirror",  PROC_MIRROR,            0xFF),
    OBJNAME("rGate",   PROC_Obj_SwallShutter,  0xFF),
    OBJNAME("l3water", PROC_Obj_Lv3Water,      0xFF),
    OBJNAME("l3wat02", PROC_Obj_Lv3Water2,     0xFF),
    OBJNAME("l3watB",  PROC_OBJ_LV3WATERB,     0xFF),
    OBJNAME("szbridg", PROC_Obj_SZbridge,      0xFF),
    OBJNAME("kjgjs",   PROC_Obj_KJgjs,         0xFF),
    OBJNAME("kjs",     PROC_Obj_KJgjs,         0xFF),
    OBJNAME("candlL3", PROC_Obj_Lv3Candle,     0xFF),
    OBJNAME("l5icewl", PROC_Obj_IceWall,       0xFF),
    OBJNAME("Turara",  PROC_Obj_Turara,        0xFF),
    OBJNAME("twGate",  PROC_Obj_TwGate,        0xFF),
    OBJNAME("L4cdlTg", PROC_Tag_Lv4Candle,     0xFF),
    OBJNAME("L4cddTg", PROC_Tag_Lv4CandleDm,   0xFF),
    OBJNAME("togeRol", PROC_Obj_Lv6TogeRoll,   0xFF),
    OBJNAME("l6TogeT", PROC_Obj_Lv6TogeTrap,   0xFF),
    OBJNAME("Tenbin",  PROC_Obj_Lv6Tenbin,     0xFF),
    OBJNAME("l6Lblk",  PROC_Obj_Lv6Lblock,     0xFF),
    OBJNAME("l6SwGt",  PROC_Obj_Lv6SwGate,     0xFF),
    OBJNAME("l6ChBlk", PROC_Obj_Lv6ChgGate,    0xFF),
    OBJNAME("l6FuriT", PROC_Obj_Lv6FuriTrap,   0xFF),
    OBJNAME("KHdesk",  PROC_Obj_BarDesk,       0xFF),
    OBJNAME("Ytaihou", PROC_Obj_Ytaihou,       0xFF),
    OBJNAME("L4eShut", PROC_Obj_Lv4EdShutter,  0xFF),
    OBJNAME("pofire",  PROC_Obj_poFire,        0xFF),
    OBJNAME("pofiTg",  PROC_Tag_poFire,        0xFF),
    OBJNAME("poCandl", PROC_Obj_poCandle,      0xFF),
    OBJNAME("L4Gate",  PROC_Obj_Lv4Gate,       0xFF),
    OBJNAME("L4Pgate", PROC_Obj_Lv4PoGate,     0xFF),
    OBJNAME("L4SWall", PROC_Obj_Lv4SlideWall,  0xFF),
    OBJNAME("L4hmato", PROC_Obj_Lv4HsTarget,   0xFF),
    OBJNAME("propy",   PROC_Obj_Lv7PropY,      0xFF),
    OBJNAME("L7BsGt",  PROC_Obj_Lv7BsGate,     0xFF),
    OBJNAME("optLift", PROC_Obj_Lv8OptiLift,   0xFF),
    OBJNAME("kkiTrap", PROC_Obj_Lv8KekkaiTrap, 0xFF),
    OBJNAME("L8LiftX", PROC_Obj_Lv8Lift,       0xFF),
    OBJNAME("swStep",  PROC_Obj_Lv8UdFloor,    0xFF),
    OBJNAME("L9SwSht", PROC_Obj_Lv9SwShutter,  0xFF),
    OBJNAME("L5SwIce", PROC_Obj_Lv5SwIce,      0xFF),
    OBJNAME("glwSph",  PROC_Obj_glowSphere,    0xFF),
    OBJNAME("MR_Scrw", PROC_Obj_MirrorScrew,   0xFF),
    OBJNAME("MR_Sand", PROC_Obj_MirrorSand,    0xFF),
    OBJNAME("MR_Tble", PROC_Obj_MirrorTable,   0xFF),
    OBJNAME("MR_Chin", PROC_Obj_MirrorChain,   0xFF),
    OBJNAME("MR_Pole", PROC_Obj_Mirror6Pole,   0xFF),
    OBJNAME("PPolamp", PROC_PPolamp,           0xFF),
    OBJNAME("l5hYuka", PROC_Obj_Lv5FBoard,     0xFF),
    OBJNAME("BYRock",  PROC_BkyRock,           0xFF),
    OBJNAME("zrDrock", PROC_Obj_zrTurara,      0xFF),
    OBJNAME("tkrDai",  PROC_Obj_TakaraDai,     0xFF),
    OBJNAME("Table",   PROC_Obj_Table,         0xFF),
    OBJNAME("CatDoor", PROC_Obj_CatDoor,       0xFF),
    OBJNAME("RetTag",  PROC_Tag_RetRoom,       0xFF),
    OBJNAME("WdStone", PROC_Obj_WindStone,     0xFF),
    OBJNAME("HwlWara", PROC_Tag_WaraHowl,      0xFF),
    OBJNAME("SCannon", PROC_Obj_SCannon,       0xFF),
    OBJNAME("szGate",  PROC_Obj_Lv6SzGate,     0xFF),
    OBJNAME("onsTaru", PROC_Obj_OnsenTaru,     0xFF),
    OBJNAME("WStoneF", PROC_Obj_SmWStone,      0xFF),
    OBJNAME("SCanCrs", PROC_Obj_SCannonCrs,    0xFF),
    OBJNAME("snwEfTg", PROC_Tag_SnowEff,       0xFF),
    OBJNAME("tmFire",  PROC_Obj_TimeFire,      0xFF),
    OBJNAME("L7Prop",  PROC_Obj_Prop,          0xFF),
    OBJNAME("awaPlar", PROC_Obj_awaPlar,       0xFF),
    OBJNAME("poTbox",  PROC_Obj_poTbox,        0xFF),
    OBJNAME("SnwSoup", PROC_Obj_SnowSoup,      0xFF),
    OBJNAME("Nagaisu", PROC_Obj_Nagaisu,       0xFF),
    OBJNAME("RCircle", PROC_Obj_RCircle,       0xFF),
    OBJNAME("L9Chand", PROC_Obj_Chandelier,    0xFF),
    OBJNAME("L9Pictr", PROC_Obj_Picture,       0xFF),
    OBJNAME("SmkEmt",  PROC_Tag_SmkEmt,        0xFF),
    OBJNAME("HFtr",    PROC_Obj_HFtr,          0xFF),
    OBJNAME("HBarrel", PROC_Obj_HBarrel,       0xFF),
    OBJNAME("SCanTen", PROC_Obj_SCannonTen,    0xFF),
    OBJNAME("cstaSw",  PROC_Tag_CstaSw,        0xFF),
    OBJNAME("l6cstSw", PROC_Tag_Lv6CstaSw,     0xFF),
    OBJNAME("Hata",    PROC_Obj_Hata,          0xFF),
    OBJNAME("RmbitSw", PROC_Tag_RmbitSw,       0xFF),
    OBJNAME("T_Maki",  PROC_Obj_ToaruMaki,     0xFF),
    OBJNAME("d_act",   PROC_DEMO00,            0xFF),
    OBJNAME("d_act0",  PROC_DEMO00,            0x00),
    OBJNAME("d_act1",  PROC_DEMO00,            0x01),
    OBJNAME("d_act2",  PROC_DEMO00,            0x02),
    OBJNAME("d_act3",  PROC_DEMO00,            0x03),
    OBJNAME("d_act4",  PROC_DEMO00,            0x04),
    OBJNAME("d_act5",  PROC_DEMO00,            0x05),
    OBJNAME("d_act6",  PROC_DEMO00,            0x06),
    OBJNAME("d_act7",  PROC_DEMO00,            0x07),
    OBJNAME("d_act8",  PROC_DEMO00,            0x08),
    OBJNAME("d_act9",  PROC_DEMO00,            0x09),
    OBJNAME("d_act10", PROC_DEMO00,            0x0A),
    OBJNAME("d_act11", PROC_DEMO00,            0x0B),
    OBJNAME("d_act12", PROC_DEMO00,            0x0C),
    OBJNAME("d_act13", PROC_DEMO00,            0x0D),
    OBJNAME("d_act14", PROC_DEMO00,            0x0E),
    OBJNAME("d_act15", PROC_DEMO00,            0x0F),
    OBJNAME("d_act16", PROC_DEMO00,            0x10),
    OBJNAME("d_act17", PROC_DEMO00,            0x11),
    OBJNAME("d_act18", PROC_DEMO00,            0x12),
    OBJNAME("d_act19", PROC_DEMO00,            0x13),
    OBJNAME("d_act20", PROC_DEMO00,            0x14),
    OBJNAME("d_act21", PROC_DEMO00,            0x15),
    OBJNAME("d_act22", PROC_DEMO00,            0x16),
    OBJNAME("d_act23", PROC_DEMO00,            0x17),
    OBJNAME("d_act24", PROC_DEMO00,            0x18),
    OBJNAME("d_act25", PROC_DEMO00,            0x19),
    OBJNAME("d_act26", PROC_DEMO00,            0x1A),
    OBJNAME("d_act27", PROC_DEMO00,            0x1B),
    OBJNAME("d_act28", PROC_DEMO00,            0x1C),
    OBJNAME("d_act29", PROC_DEMO00,            0x1D),
    OBJNAME("d_act30", PROC_DEMO00,            0x1E),
    OBJNAME("d_act31", PROC_DEMO00,            0x1F),
    OBJNAME("TLogo",   PROC_TITLE,             0xFF),
    OBJNAME("ClearB",  PROC_Obj_Cboard,        0xFF),
    OBJNAME("Bg",      PROC_BG,                0xFF),
    OBJNAME("Boom",    PROC_BOOMERANG,         0xFF),
    OBJNAME("Nbomb",   PROC_NBOMB,             0xFF),
    OBJNAME("Arrow",   PROC_ARROW,             0xFF),
    OBJNAME("E_Arrow", PROC_E_ARROW,           0xFF),
    OBJNAME("Spinner", PROC_SPINNER,           0xFF),
    OBJNAME("Crod",    PROC_CROD,              0xFF),
    OBJNAME("Midna",   PROC_MIDNA,             0xFF),
    OBJNAME("Vrbox",   PROC_VRBOX,             0xFF),
    OBJNAME("Vrbox2",  PROC_VRBOX2,            0xFF),
    OBJNAME("mvbg_a",  PROC_BG_OBJ,            0xFF),
    OBJNAME("burnBox", PROC_Obj_BurnBox,       0xFF),
    OBJNAME("stnMark", PROC_Obj_StoneMark,     0xFF),
    OBJNAME("Passer",  PROC_NPC_PASSER,        0xFF),
    OBJNAME("Passer2", PROC_NPC_PASSER2,       0xFF),
    OBJNAME("ShopItm", PROC_ShopItem,          0xFF),
    OBJNAME("E_yd_lf", PROC_E_YD_LEAF,         0xFF),
    OBJNAME("E_db_lf", PROC_E_DB_LEAF,         0xFF),
    OBJNAME("E_hb_lf", PROC_E_HB_LEAF,         0xFF),
    OBJNAME("E_bi_lf", PROC_E_BI_LEAF,         0xFF),
    OBJNAME("O_Mato",  PROC_Obj_Mato,          0xFF),
    OBJNAME("O_Flag",  PROC_Obj_Flag,          0xFF),
    OBJNAME("O_Flag2", PROC_Obj_Flag2,         0xFF),
    OBJNAME("O_Flag3", PROC_Obj_Flag3,         0xFF),
    OBJNAME("CRVLH_U", PROC_Obj_CRVLH_UP,      0xFF),
    OBJNAME("DemoItm", PROC_Demo_Item,         0xFF),
    OBJNAME("EndCode", PROC_PLAY_SCENE,        0xFF),
};

/* 803A65CC-803A65FC -00001 0030+00 1/1 0/0 0/0 .data            l_roomFuncTable$5052 */
static FuncTable l_roomFuncTable[4] = {
    {"TRES", dStage_stageKeepTresureInit},
    {"FILI", dStage_filiInfo2Init},
    {"MPAT", dStage_mapPathInitCommonLayer},
    {"Door", dStage_RoomKeepDoorInit},
};

/* 803A65FC-803A6620 -00001 0024+00 1/1 0/0 0/0 .data            l_layerFuncTable$5053 */
SECTION_DATA static FuncTable l_layerFuncTable_5053[3] = {
    {"TRE0", dStage_stageKeepTresureInit},
    {"MPA0", dStage_mapPathInit},
    {"Doo0", dStage_RoomKeepDoorInit},
};

/* 803A6620-803A6638 -00001 0018+00 1/1 0/0 0/0 .data            l_layerFuncTable$5131 */
SECTION_DATA static FuncTable l_layerFuncTable_5131[2] = {
    {"MEM0", dStage_memaInfoInit},
    {"MEC0", dStage_mecoInfoInit},
};

/* 803A6638-803A6644 -00001 000C+00 1/1 0/0 0/0 .data            l_funcTable$5136 */
SECTION_DATA static FuncTable l_funcTable_5136[1] = {"STAG", dStage_stagInfoInit};

/* 803A6644-803A6650 -00001 000C+00 1/1 0/0 0/0 .data            l_layerFuncTableA$5141 */
SECTION_DATA static FuncTable l_layerFuncTableA[1] = {"SON0", dStage_soundInfoInit};

/* 803A6650-803A668C -00001 003C+00 1/1 0/0 0/0 .data            l_envLayerFuncTable$5142 */
SECTION_DATA static FuncTable l_envLayerFuncTable[5] = {
    {"LGT0", dStage_lgtvInfoInit},     {"Env0", dStage_envrInfoInit},
    {"Col0", dStage_pselectInfoInit},  {"PAL0", dStage_paletteInfoInit},
    {"VRB0", dStage_vrboxcolInfoInit},
};

/* 803A668C-803A66BC -00001 0030+00 1/1 0/0 0/0 .data            l_layerFuncTable$5158 */
SECTION_DATA static FuncTable l_layerFuncTable_5158[4] = {
    {"Doo0", dStage_roomDrtgInfoInit},
    {"SCO0", dStage_tgscInfoInit},
    {"ACT0", dStage_actorInit},
    {"TRE0", dStage_layerTresureInit},
};

/* 803A66BC-803A67F4 -00001 0138+00 1/1 0/0 0/0 .data            l_funcTable$5163 */
SECTION_DATA static FuncTable l_funcTable_5163[26] = {
    {"EVLY", dStage_elstInfoInit},      {"RPPN", dStage_rppnInfoInit},
    {"RPAT", dStage_rpatInfoInit},      {"MULT", dStage_multInfoInit},
    {"PLYR", dStage_playerInit},        {"CAMR", dStage_cameraInit},
    {"RCAM", dStage_cameraInit},        {"ACTR", dStage_actorInit_always},
    {"TGOB", dStage_actorInit_always},  {"RTBL", dStage_roomReadInit},
    {"AROB", dStage_arrowInit},         {"RARO", dStage_arrowInit},
    {"Virt", dStage_vrboxInfoInit},     {"SCLS", dStage_sclsInfoInit},
    {"TGSC", dStage_tgscInfoInit},      {"LGHT", dStage_plightInfoInit},
    {"PPNT", dStage_ppntInfoInit},      {"PATH", dStage_pathInfoInit},
    {"SCOB", dStage_tgscInfoInit},      {"FILI", dStage_filiInfoInit},
    {"Door", dStage_stageDrtgInfoInit}, {"FLOR", dStage_floorInfoInit},
    {"TGDR", dStage_tgscInfoInit},      {"DMAP", dStage_dmapInfoInit},
    {"REVT", dStage_stEventInfoInit},   {"SOND", dStage_soundInfoInitCL},
};

/* 803A67F4-803A689C -00001 00A8+00 1/1 0/0 0/0 .data            l_funcTable$5168 */
SECTION_DATA static FuncTable l_funcTable_5168[14] = {
    {"PLYR", dStage_playerInit},   {"RCAM", dStage_RoomCameraInit},  {"RARO", dStage_arrowInit},
    {"RTBL", dStage_roomReadInit}, {"AROB", dStage_arrowInit},       {"Virt", dStage_vrboxInfoInit},
    {"SCLS", dStage_sclsInfoInit}, {"LGHT", dStage_plightInfoInit},  {"RPPN", dStage_rppnInfoInit},
    {"RPAT", dStage_rpatInfoInit}, {"FILI", dStage_filiInfoInit},    {"FLOR", dStage_floorInfoInit},
    {"LBNK", dStage_lbnkInfoInit}, {"SOND", dStage_soundInfoInitCL},
};

/* 803A689C-803A68FC -00001 0060+00 1/1 0/0 0/0 .data            l_funcTable$5173 */
SECTION_DATA static FuncTable l_funcTable_5173[8] = {
    {"Door", dStage_roomDrtgInfoInit},     {"ACTR", dStage_actorCommonLayerInit},
    {"TGOB", dStage_actorCommonLayerInit}, {"TRES", dStage_roomTresureInit},
    {"TGSC", dStage_tgscCommonLayerInit},  {"SCOB", dStage_tgscCommonLayerInit},
    {"TGDR", dStage_tgscInfoInit},         {"REVT", dStage_mapEventInfoInit},
};

/* 803A68FC-803A6920 -00001 0024+00 1/1 0/0 0/0 .data            l_funcTable$5178 */
SECTION_DATA static FuncTable l_funcTable_5178[3] = {
    {"TRES", dStage_fieldMapTresureInit},
    {"FILI", dStage_fieldMapFiliInfo2Init},
    {"MPAT", dStage_fieldMapMapPathInit},
};

/* 803A6920-803A696C 003A40 004C+00 3/3 0/0 0/0 .data mMemoryBlock__20dStage_roomControl_c */
SECTION_DATA JKRExpHeap* dStage_roomControl_c::mMemoryBlock[19] = {
    NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
    NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
};

/* 800243B0-800243E8 01ECF0 0038+00 0/0 3/3 1/1 .text getMemoryBlock__20dStage_roomControl_cFi */
JKRExpHeap* dStage_roomControl_c::getMemoryBlock(int i_roomNo) {
    int blockId = getMemoryBlockID(i_roomNo);

    if (blockId < 0) {
        return NULL;
    }
    return mMemoryBlock[blockId];
}

/* 800243E8-80024424 01ED28 003C+00 2/2 0/0 0/0 .text            setStayNo__20dStage_roomControl_cFi
 */
void dStage_roomControl_c::setStayNo(int stayNo) {
    gLastStayNo = struct_80450D64;
    struct_80450D64 = stayNo;
    gNextStayNo = struct_80450D64;

    if (struct_80450D64 < 0) {
        return;
    }

    onStatusDraw(struct_80450D64);
}

/* 80024424-8002442C 01ED64 0008+00 0/0 0/0 1/1 .text setNextStayNo__20dStage_roomControl_cFi */
void dStage_roomControl_c::setNextStayNo(int nextStayNo) {
    gNextStayNo = nextStayNo;
}

static int stayRoomCheck(int param_0, u8* param_1, int param_2) {
    for (; param_0 > 0; param_0--) {
        if (param_2 == dStage_roomRead_dt_c_GetLoadRoomIndex(*param_1)) {
            return 1;
        }
        param_1++;
    }
    return 0;
}

/* 80024460-800244E8 01EDA0 0088+00 1/1 0/0 0/0 .text            createRoomScene__Fi */
static int createRoomScene(int param_0) {
    int* ptr = (int*)JKRHeap::alloc(4, -4, NULL);

    if (ptr == NULL) {
        return 0;
    }
    *ptr = param_0;

    if (!fopScnM_CreateReq(PROC_ROOM_SCENE, 0x7FFF, 0, (u32)ptr)) {
        JKRHeap::free(ptr, NULL);
        return 0;
    }

    return 1;
}

/* 800244E8-8002451C 01EE28 0034+00 0/0 0/0 8/13 .text checkRoomDisp__20dStage_roomControl_cCFi */
bool dStage_roomControl_c::checkRoomDisp(int i_roomNo) const {
    if (checkStatusFlag(i_roomNo, 8)) {
        return false;
    }
    return checkStatusFlag(i_roomNo, 16) ? true : false;
}

/* 8002451C-8002471C 01EE5C 0200+00 2/2 0/0 0/2 .text loadRoom__20dStage_roomControl_cFiPUcb */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm int dStage_roomControl_c::loadRoom(int param_0, u8* param_1, bool param_2) {
    nofralloc
#include "asm/d/d_stage/loadRoom__20dStage_roomControl_cFiPUcb.s"
}
#pragma pop

/* 8002471C-8002483C 01F05C 0120+00 1/1 0/0 0/3 .text zoneCountCheck__20dStage_roomControl_cCFi */
void dStage_roomControl_c::zoneCountCheck(int stayNo) const {
    dStage_roomStatus_c* status = mStatus;
    for (int i = 0; i < 0x40; i++) {
        if (status->mZoneNo >= 0 && status->mZoneCount > 0) {
            dComIfGs_clearRoomSwitch(status->mZoneNo);
            dComIfGs_clearRoomItem(status->mZoneNo);

            if (dStage_stagInfo_GetSTType(dComIfGp_getStage()->getStagInfo()) != 0 &&
                stayNo != gLastStayNo) {
                if (--status->mZoneCount == 0) {
                    dComIfGs_removeZone(status->mZoneNo);
                    status->mZoneNo = -1;
                }
            }
        }
        status++;
    }
    setStayNo(stayNo);
}

stage_stag_info_class* dStage_stageDt_c::getStagInfo() const {
    return mStagInfo;
}

JKRExpHeap* dStage_roomControl_c::createMemoryBlock(int index, u32 param_1) {
    if (mMemoryBlock[index] == NULL) {
        mMemoryBlock[index] = JKRExpHeap::create(param_1, mDoExt_getArchiveHeap(), false);
    }
    return mMemoryBlock[index];
}

void dStage_roomControl_c::destroyMemoryBlock() {
    for (int i = 0; i < (int)ARRAY_SIZE(mMemoryBlock); i++) {
        if (mMemoryBlock[i] != NULL) {
            mDoExt_destroyExpHeap(mMemoryBlock[i]);
            mMemoryBlock[i] = NULL;
        }
    }
}

/* ############################################################################################## */
/* 803A696C-803A6AAC 003A8C 0140+00 2/2 0/0 0/0 .data            mArcBank__20dStage_roomControl_c */
SECTION_DATA char dStage_roomControl_c::mArcBank[32][10] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 8002490C-80024940 01F24C 0034+00 1/1 1/1 0/2 .text setArcBank__20dStage_roomControl_cFiPCc */
void dStage_roomControl_c::setArcBank(int i_bank, char const* bankName) {
    strncpy(&mArcBank[i_bank][0], bankName, 9);
}

/* 80024940-80024954 01F280 0014+00 1/1 1/1 0/1 .text getArcBank__20dStage_roomControl_cFi */
char* dStage_roomControl_c::getArcBank(int i_bank) {
    return mArcBank[i_bank];
}

/* ############################################################################################## */
/* 80378A50-80378A50 0050B0 0000+00 0/0 0/0 0/0 .rodata          @stringBase0 */
#pragma push
#pragma force_active on
SECTION_DEAD static char const* const stringBase_80378AEF = "";
SECTION_DEAD static char const* const stringBase_80378AF0 =
    "Bank[%d] : %s.arc Sync Read Error !!\n";
#pragma pop

/* 80024954-80024A34 01F294 00E0+00 0/0 2/2 0/2 .text resetArchiveBank__20dStage_roomControl_cFi
 */
// regalloc
#ifdef NONMATCHING
bool dStage_roomControl_c::resetArchiveBank(int i_bank) {
    for (; i_bank < 32; i_bank++) {
        char* bank = getArcBank(i_bank);

        if (strcmp(bank, "")) {
            s32 syncStatus = dComIfG_syncObjectRes(bank);
            if (syncStatus < 0) {
                OSReport_Error("Bank[%d] : %s.arc Sync Read Error !!\n", i_bank, bank);
            } else {
                if (syncStatus > 0) {
                    return 0;
                }
                dComIfG_deleteObjectResMain(bank);
                setArcBank(i_bank, "");
            }
        }
    }
    return 1;
}
#else
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm bool dStage_roomControl_c::resetArchiveBank(int param_0) {
    nofralloc
#include "asm/d/d_stage/resetArchiveBank__20dStage_roomControl_cFi.s"
}
#pragma pop
#endif

/* 80024A34-80024ABC 01F374 0088+00 1/1 0/0 0/2 .text
 * create__Q220dStage_roomControl_c9roomDzs_cFUc                */
void dStage_roomControl_c::roomDzs_c::create(u8 i_num) {
    m_dzs = new (mDoExt_getArchiveHeap(), -4) void*[i_num];

    if (m_dzs != NULL) {
        u32** dzs = (u32**)m_dzs;
        for (u8 i = 0; i < i_num; i++) {
            *dzs = NULL;
            dzs++;
        }
        m_num = i_num;
    }
}

/* 80024ABC-80024B44 01F3FC 0088+00 1/1 0/0 0/0 .text remove__Q220dStage_roomControl_c9roomDzs_cFv
 */
void dStage_roomControl_c::roomDzs_c::remove() {
    if (m_num != 0) {
        u32** dzs = (u32**)m_dzs;
        for (u8 i = 0; i < m_num; i++) {
            if (*dzs != NULL) {
                mDoExt_getArchiveHeap()->free(*dzs);
            }
            dzs++;
        }
        delete[] m_dzs;
        m_num = 0;
    }
}

/* 80024B44-80024C1C 01F484 00D8+00 1/1 0/0 0/1 .text add__Q220dStage_roomControl_c9roomDzs_cFUcUc
 */
void* dStage_roomControl_c::roomDzs_c::add(u8 i_num, u8 roomNo) {
    if (m_num == 0) {
        return NULL;
    }

    void** dzs = m_dzs;
    if (dzs[i_num] == NULL) {
        char dzsName[20];
        sprintf(dzsName, "%s/room%d.dzs", dComIfGp_getStartStageName(), roomNo);

        u32 expandSize =
            dLib_getExpandSizeFromAramArchive(dComIfGp_getFieldMapArchive2(), (const char*)dzsName);
        void* dzs_buf = mDoExt_getArchiveHeap()->alloc(expandSize, -0x20);
        dzs[i_num] = dzs_buf;

        if (dzs[i_num] != NULL) {
            dComIfGp_getFieldMapArchive2()->readResource(dzs[i_num], expandSize, dzsName);
        }
    }

    return dzs[i_num];
}

void dStage_stageDt_c::init() {
    mCamera = NULL;
    mArrow = NULL;
    mPlayer = NULL;
    mRoom = NULL;
    mMapInfo = NULL;
    mMapInfoBase = NULL;
    mPaletteInfo = NULL;
    mPselectInfo = NULL;
    mEnvrInfo = NULL;
    mVrboxInfo = NULL;
    mVrboxcolInfo = NULL;
    mPlightInfo = NULL;
    mPlightNumInfo = 0;
    mMapEventInfo = NULL;
    mStagInfo = NULL;
    mSclsInfo = NULL;
    mPntInfo = NULL;
    mPathInfo = NULL;
    mPnt2Inf = NULL;
    mPath2Info = NULL;
    mSoundInf = NULL;
    mSoundInfCL = NULL;
    mFloorInfo = NULL;
    mMemoryConfig = NULL;
    mMemoryMap = NULL;
    mMulti = NULL;
    mTreasure = NULL;
    mDMap = NULL;
    mDrTg = NULL;
    mDoor = NULL;
    mElst = NULL;
    field_0x56 = 0;
    field_0x58 = 0;
}

void dStage_roomDt_c::initFileList2() {
    mFileList2Info = NULL;
}

void dStage_roomDt_c::init() {
    mLightVecInfo = NULL;
    mLightVecInfoNum = 0;
    mMapInfo = NULL;
    mMapInfoBase = NULL;
    mVrboxInfo = NULL;
    mVrboxcolInfo = NULL;
    mFileListInfo = NULL;
    mPlayer = NULL;
    mPnt2Info = NULL;
    mPath2Info = NULL;
    mCamera = NULL;
    mArrow = NULL;
    mMapEventInfo = NULL;
    mSoundInf = NULL;
    mSoundInfCL = NULL;
    mSclsInfo = NULL;
    mLbnk = NULL;
    mTreasure = NULL;
    mDrTg = NULL;
    mDoor = NULL;
    mFloorInfo = NULL;
}

/* 80024D10-80024DB0 01F650 00A0+00 1/1 0/0 0/0 .text            dStage_roomInit__Fi */
static int dStage_roomInit(int stayNo) {
    dComIfGp_roomControl_setStayNo(stayNo);

    roomRead_class* room = dComIfGp_getStageRoom();
    if (room != NULL && room->field_0x0 > stayNo) {
        int time_pass = dStage_roomRead_dt_c_GetTimePass(*room->field_0x4[stayNo]);
        dComIfGp_roomControl_setTimePass(time_pass);

        return dComIfGp_roomControl_loadRoom(room->field_0x4[stayNo]->field_0x0,
                                             room->field_0x4[stayNo]->field_0x4, true);
    }

    return 1;
}

/* 80024DB0-80024DB8 01F6F0 0008+00 2/2 0/0 0/0 .text SetTimePass__20dStage_roomControl_cFi */
void dStage_roomControl_c::SetTimePass(int isPassing) {
    gTimePass = isPassing;
}

roomRead_class* dStage_stageDt_c::getRoom() const {
    return mRoom;
}

dStage_objectNameInf* dStage_searchName(char const* objName) {
    dStage_objectNameInf* obj = &l_objectName[0];

    for (u32 i = 0; i < ARRAY_SIZE(l_objectName); i++) {
        if (!strcmp(obj->mName, objName)) {
            return obj;
        }
        obj++;
    }
    return NULL;
}

static const char* dStage_getName(s16 procName, s8 subtype) {
    dStage_objectNameInf* obj = &l_objectName[0];
    char* tmp = NULL;

    for (int i = 0; i < ARRAY_SIZE(l_objectName); i++) {
        if (obj->mProcName == procName) {
            if (obj->mSubtype == subtype) {
                return obj->mName;
            }
            if (tmp == NULL) {
                tmp = obj->mName;
            }
        }
        obj++;
    }

    if (tmp == NULL) {
        snprintf(tmp_name, 8, "%d%+0d", procName, subtype);
        tmp = tmp_name;
    }
    return tmp;
}

const char* dStage_getName2(s16 procName, s8 subtype) {
    return dStage_getName(procName, subtype);
}

/* 80024EFC-80024F98 01F83C 009C+00 7/7 0/0 0/0 .text
 * dStage_actorCreate__FP22stage_actor_data_classP16fopAcM_prm_class */
static void dStage_actorCreate(stage_actor_data_class* param_0, fopAcM_prm_class* param_1) {
    dStage_objectNameInf* actorInf = dStage_searchName((char*)param_0);
    fopAc_ac_c* actor;

    if (actorInf == NULL) {
        JKRHeap::free(param_1, NULL);
    } else {
        param_1->mSubtype = actorInf->mSubtype;
        s16 objName = actorInf->mProcName;

        if (objName == PROC_SUSPEND) {
            actor = (fopAc_ac_c*)fopAcM_FastCreate(objName, 0, NULL, param_1);

            if (actor != NULL) {
                fopAcM_delete(actor);
            }
        } else {
            layer_class* curLayer = fpcLy_CurrentLayer();
            fpcSCtRq_Request(curLayer, objName, 0, NULL, param_1);
        }
    }
}

/* 80024F98-80025004 01F8D8 006C+00 1/1 0/0 0/0 .text
 * dStage_cameraCreate__FP24stage_camera2_data_classii          */
static int dStage_cameraCreate(stage_camera2_data_class* camera, int i_cameraIdx, int param_2) {
    camera = static_cast<stage_camera2_data_class*>(cMl::memalignB(-4, 0x18));

    if (camera != NULL) {
        camera->field_0x4 = 0.0f;
        camera->field_0x8 = 0.0f;
        camera->field_0x4 = 0.0f;
        camera->field_0x0 = param_2;
        fopCamM_Create(i_cameraIdx, PROC_CAMERA, camera);
    }
    return 1;
}

stage_actor_class* dStage_roomDt_c::getPlayer() const {
    return mPlayer;
}

stage_actor_class* dStage_stageDt_c::getPlayer() const {
    return mPlayer;
}

/* 80025014-800252B8 01F954 02A4+00 2/0 0/0 0/0 .text dStage_playerInit__FP11dStage_dt_cPviPv */
static int dStage_playerInit(dStage_dt_c* stageDt, void* i_data, int num, void* param_3) {
    stage_actor_class* player = (stage_actor_class*)((int*)i_data + 1);
    stage_actor_data_class* player_data = player->mEntries;
    stageDt->setPlayer(player);
    stageDt->setPlayerNum(num);

    if (dComIfGp_getPlayer(0) != NULL || dComIfGp_getStartStageRoomNo() != stageDt->getRoomNo()) {
        return 1;
    }

    fopAcM_prm_class* appen = fopAcM_CreateAppend();

    int point = dComIfGp_getStartStagePoint();
    u32 roomParam = dComIfGs_getRestartRoomParam();
    if (point == -2 || point == -3) {
        appen->mParameter = dComIfGs_getTurnRestartParam();
        appen->mPos = dComIfGs_getTurnRestartPos();
        appen->mAngle.set(0, dComIfGs_getTurnRestartAngleY(), -0x100);
    } else if (point == -1) {
        appen->mParameter = roomParam;
        appen->mPos = dComIfGs_getRestartRoomPos();
        appen->mAngle.set(0, dComIfGs_getRestartRoomAngleY(), -0x100);
    } else {
        int unk;
        if (point == -4) {
            unk = dComIfGs_getTurnRestartAngleY();
        } else {
            unk = point;
        }

        for (int i = 0; i < num; i++) {
            if ((u8)player_data->mAngle.z == unk) {
                break;
            }
            player_data++;
        }

        appen->mParameter = player_data->mParameter;
        appen->mPos = player_data->mSpawnPos;
        appen->mAngle = player_data->mAngle;
        appen->mEnemyNo = player_data->mEnemyNo;

        if (point == -4) {
            appen->mParameter = dComIfGs_getTurnRestartParam();
        } else if (roomParam != 0) {
            appen->mParameter = (roomParam & 0xFFFFFFC0) | (dComIfGp_getStartStageRoomNo() & 0x3F);
        } else if (roomParam == 0) {
            appen->mParameter =
                (appen->mParameter & 0xFFFFFFC0) | (dComIfGp_getStartStageRoomNo() & 0x3F);
        }
    }

    dComIfGs_setRestartRoomParam(0);
    appen->mEnemyNo = 0xFFFF;
    appen->mRoomNo = -1;

    dComIfGp_getStartStage()->set(dComIfGp_getStartStageName(), appen->mParameter & 0x3F,
                                  dComIfGp_getStartStagePoint(), dComIfGp_getStartStageLayer());
    dStage_actorCreate(player_data, appen);

    base_process_class* ac =
        (base_process_class*)fopScnM_SearchByID(dStage_roomControl_c::getProcID());
    if (ac->mProcName == PROC_PLAY_SCENE) {
        if (strcmp(dComIfGp_getStartStageName(), "S_MV000")) {
            fopMsgM_Create(PROC_METER2, NULL, NULL);
        }
    }

    return 1;
}

/* 800252B8-80025308 01FBF8 0050+00 1/0 0/0 0/0 .text dStage_cameraInit__FP11dStage_dt_cPviPv */
static int dStage_cameraInit(dStage_dt_c* stageDt, void* i_data, int param_2, void* param_3) {
    stage_camera_class* camera = (stage_camera_class*)((char*)i_data + 4);
    stageDt->setCamera(camera);
    dStage_cameraCreate(camera->field_0x4, 0, 0);
    return 1;
}

/* 80025308-8002533C 01FC48 0034+00 1/0 0/0 0/0 .text dStage_RoomCameraInit__FP11dStage_dt_cPviPv
 */
static int dStage_RoomCameraInit(dStage_dt_c* i_stage, void* i_data, int param_2, void* param_3) {
    i_stage->setCamera((stage_camera_class*)((char*)i_data + 4));
    return 1;
}

/* 8002533C-80025370 01FC7C 0034+00 2/0 0/0 0/0 .text dStage_arrowInit__FP11dStage_dt_cPviPv */
static int dStage_arrowInit(dStage_dt_c* i_stage, void* i_data, int param_2, void* param_3) {
    i_stage->setArrow((stage_arrow_class*)((char*)i_data + 4));
    return 1;
}

/* 80025370-800253FC 01FCB0 008C+00 1/0 0/0 0/0 .text            getMapInfo2__15dStage_roomDt_cCFi
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm stage_map_info_class* dStage_roomDt_c::getMapInfo2(int param_0) const {
    nofralloc
#include "asm/d/d_stage/getMapInfo2__15dStage_roomDt_cCFi.s"
}
#pragma pop

/* 800253FC-80025404 01FD3C 0008+00 1/0 0/0 0/0 .text getMapInfoBase__15dStage_roomDt_cCFv */
stage_map_info_dummy_class* dStage_roomDt_c::getMapInfoBase() const {
    return mMapInfoBase;
}

/* 80025404-80025490 01FD44 008C+00 1/0 0/0 0/0 .text            getMapInfo2__16dStage_stageDt_cCFi
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm stage_map_info_class* dStage_stageDt_c::getMapInfo2(int param_0) const {
    nofralloc
#include "asm/d/d_stage/getMapInfo2__16dStage_stageDt_cCFi.s"
}
#pragma pop

/* 80025490-80025498 01FDD0 0008+00 1/0 0/0 0/0 .text getMapInfoBase__16dStage_stageDt_cCFv */
stage_map_info_dummy_class* dStage_stageDt_c::getMapInfoBase() const {
    return mMapInfoBase;
}

/* 80025498-800254CC 01FDD8 0034+00 1/0 0/0 0/0 .text dStage_paletteInfoInit__FP11dStage_dt_cPviPv
 */
static int dStage_paletteInfoInit(dStage_dt_c* stageDt, void* i_data, int param_2, void* param_3) {
    dStage_nodeHeader* pal_info = (dStage_nodeHeader*)(i_data);
    stageDt->setPaletteInfo((stage_palette_info_class*)pal_info->m_offset);
    return 1;
}

/* 800254CC-80025500 01FE0C 0034+00 1/0 0/0 0/1 .text dStage_pselectInfoInit__FP11dStage_dt_cPviPv
 */
static int dStage_pselectInfoInit(dStage_dt_c* stageDt, void* i_data, int param_2, void* param_3) {
    dStage_nodeHeader* psel_info = (dStage_nodeHeader*)(i_data);
    stageDt->setPselectInfo((stage_pselect_info_class*)psel_info->m_offset);
    return 1;
}

/* 80025500-80025534 01FE40 0034+00 1/0 0/0 0/1 .text dStage_envrInfoInit__FP11dStage_dt_cPviPv */
static int dStage_envrInfoInit(dStage_dt_c* stageDt, void* i_data, int param_2, void* param_3) {
    dStage_nodeHeader* envr_info = (dStage_nodeHeader*)(i_data);
    stageDt->setEnvrInfo((stage_envr_info_class*)envr_info->m_offset);
    return 1;
}

/* 80025534-8002556C 01FE74 0038+00 1/0 0/0 0/2 .text dStage_filiInfo2Init__FP11dStage_dt_cPviPv
 */
static int dStage_filiInfo2Init(dStage_dt_c* stageDt, void* i_data, int entryNum, void* param_3) {
    if (entryNum == 0) {
        return 1;
    }

    dStage_nodeHeader* fili_info = (dStage_nodeHeader*)(i_data);
    dStage_roomControl_c::setFileList2(stageDt->getRoomNo(),
                                       (dStage_FileList2_dt_c*)fili_info->m_offset);
    return 1;
}

/* 8002556C-8002558C 01FEAC 0020+00 1/0 0/0 0/0 .text
 * dStage_fieldMapFiliInfo2Init__FP11dStage_dt_cPviPv           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm int dStage_fieldMapFiliInfo2Init(dStage_dt_c* param_0, void* param_1, int param_2,
                                            void* param_3) {
    nofralloc
#include "asm/d/d_stage/dStage_fieldMapFiliInfo2Init__FP11dStage_dt_cPviPv.s"
}
#pragma pop

/* 8002558C-800255E0 01FECC 0054+00 2/0 0/0 0/0 .text dStage_filiInfoInit__FP11dStage_dt_cPviPv */
static int dStage_filiInfoInit(dStage_dt_c* stageDt, void* i_data, int entryNum, void* param_3) {
    if (entryNum == 0) {
        stageDt->setFileListInfo(NULL);
    } else {
        dStage_nodeHeader* fili_info = (dStage_nodeHeader*)(i_data);
        stageDt->setFileListInfo((dStage_FileList_dt_c*)fili_info->m_offset);
    }

    return 1;
}

/* 800255E0-80025614 01FF20 0034+00 2/0 0/0 0/0 .text dStage_vrboxInfoInit__FP11dStage_dt_cPviPv
 */
static int dStage_vrboxInfoInit(dStage_dt_c* stageDt, void* i_data, int entryNum, void* param_3) {
    dStage_nodeHeader* vrbox_info = (dStage_nodeHeader*)(i_data);
    stageDt->setVrboxInfo((stage_vrbox_info_class*)vrbox_info->m_offset);
    return 1;
}

/* 80025614-80025648 01FF54 0034+00 1/0 0/0 0/0 .text
 * dStage_vrboxcolInfoInit__FP11dStage_dt_cPviPv                */
static int dStage_vrboxcolInfoInit(dStage_dt_c* stageDt, void* i_data, int entryNum,
                                   void* param_3) {
    dStage_nodeHeader* vrcol_info = (dStage_nodeHeader*)(i_data);
    stageDt->setVrboxcolInfo((stage_vrboxcol_info_class*)vrcol_info->m_offset);
    return 1;
}

/* 80025648-800256AC 01FF88 0064+00 2/0 0/0 0/0 .text dStage_plightInfoInit__FP11dStage_dt_cPviPv
 */
static int dStage_plightInfoInit(dStage_dt_c* stageDt, void* i_data, int entryNum, void* param_3) {
    dStage_nodeHeader* plight_info = (dStage_nodeHeader*)(i_data);
    stageDt->setPlightInfo((stage_plight_info_class*)plight_info->m_offset);
    stageDt->setPlightNumInfo(entryNum);
    return 1;
}

/* 800256AC-80025738 01FFEC 008C+00 1/0 0/0 0/0 .text dStage_lgtvInfoInit__FP11dStage_dt_cPviPv */
static int dStage_lgtvInfoInit(dStage_dt_c* stageDt, void* i_data, int entryNum, void* param_3) {
    stageDt->setLightVecInfoNum(entryNum);

    if (entryNum == 0) {
        stageDt->setLightVecInfo(NULL);
    } else {
        dStage_nodeHeader* lgtv_info = (dStage_nodeHeader*)(i_data);
        stageDt->setLightVecInfo((stage_pure_lightvec_info_class*)lgtv_info->m_offset);
    }

    return 1;
}

/* 80025738-80025744 020078 000C+00 0/0 1/1 0/0 .text
 * dStage_stagInfo_GetParticleNo__FP21stage_stag_info_classi    */
#ifdef NONMATCHING
u8 dStage_stagInfo_GetParticleNo(stage_stag_info_class* p_info, int layer) {
    return p_info[layer].mParticleNo;
}
#else
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm u8 dStage_stagInfo_GetParticleNo(stage_stag_info_class* p_info, int layer) {
    nofralloc
#include "asm/d/d_stage/dStage_stagInfo_GetParticleNo__FP21stage_stag_info_classi.s"
}
#pragma pop
#endif

/* 80025744-8002582C 020084 00E8+00 1/0 0/0 0/0 .text dStage_stagInfoInit__FP11dStage_dt_cPviPv */
static int dStage_stagInfoInit(dStage_dt_c* stageDt, void* i_data, int entryNum,
                                   void* param_3) {
    dStage_nodeHeader* stag_info = (dStage_nodeHeader*)(i_data);
    stageDt->setStagInfo((stage_stag_info_class*)stag_info->m_offset);
    
    if (!dStage_isBossStage(stageDt)) {
        dComIfG_deleteStageRes("Xtg_00");
        dComIfGp_resetOldMulti();
    }

    int stageNo = dStage_stagInfo_GetSaveTbl(stageDt->getStagInfo());
    dComIfGs_getSave(stageNo);
    g_save_bit_HIO.init();
    dComIfGs_initDan(stageNo);
    dStage_KeepDoorInfoInit(stageDt);
    return 1;
}

/* 8002582C-80025838 02016C 000C+00 1/0 0/0 0/0 .text            resetOldMulti__16dStage_stageDt_cFv
 */
void dStage_stageDt_c::resetOldMulti() {
    mOldMulti = NULL;
}

/* 80025838-8002586C 020178 0034+00 2/0 0/0 0/0 .text dStage_sclsInfoInit__FP11dStage_dt_cPviPv */
static int dStage_sclsInfoInit(dStage_dt_c* stageDt, void* i_data, int entryNum, void* param_3) {
    stageDt->setSclsInfo((stage_scls_info_dummy_class*)((char*)i_data + 4));
    return 1;
}

/* 8002586C-80025958 0201AC 00EC+00 1/0 0/0 0/0 .text
 * dStage_actorCommonLayerInit__FP11dStage_dt_cPviPv            */
static int dStage_actorCommonLayerInit(dStage_dt_c* stageDt, void* i_data, int entryNum,
                                       void* param_3) {
    stage_actor_class* actor = (stage_actor_class*)((int*)i_data + 1);
    stage_actor_data_class* actor_data = actor->mEntries;

    for (int i = 0; i < actor->mEntryNum; i++) {
        if (!dComIfGs_isActor(actor_data->mEnemyNo, stageDt->getRoomNo())) {
            if (!daSus_c::check(stageDt->getRoomNo(), actor_data->mSpawnPos)) {
                fopAcM_prm_class* appen = fopAcM_CreateAppend();

                if (appen != NULL) {
                    appen->mParameter = actor_data->mParameter;
                    appen->mPos = actor_data->mSpawnPos;
                    appen->mAngle = actor_data->mAngle;
                    appen->mEnemyNo = actor_data->mEnemyNo;
                    appen->mRoomNo = stageDt->getRoomNo();
                    dStage_actorCreate(actor_data, appen);
                }
            }
        }
        actor_data++;
    }

    return 1;
}

/* 80025958-80025A38 020298 00E0+00 1/0 0/0 0/0 .text
 * dStage_tgscCommonLayerInit__FP11dStage_dt_cPviPv             */
static int dStage_tgscCommonLayerInit(dStage_dt_c* stageDt, void* i_data, int entryNum,
                                      void* param_3) {
    stage_tgsc_class* actor = (stage_tgsc_class*)((int*)i_data + 1);
    stage_tgsc_data_class* actor_data = actor->mData;

    for (int i = 0; i < actor->mEntryNum; i++) {
        if (!daSus_c::check(stageDt->getRoomNo(), actor_data->mSpawnPos)) {
            fopAcM_prm_class* appen = fopAcM_CreateAppend();

            if (appen != NULL) {
                appen->mParameter = actor_data->mParameter;
                appen->mPos = actor_data->mSpawnPos;
                appen->mAngle = actor_data->mAngle;
                appen->mEnemyNo = actor_data->mEnemyNo;
                appen->mRoomNo = stageDt->getRoomNo();
                appen->mScale[0] = actor_data->field_0x20;
                appen->mScale[1] = actor_data->field_0x21;
                appen->mScale[2] = actor_data->field_0x22;
                dStage_actorCreate(actor_data, appen);
            }
        }
        actor_data++;
    }

    return 1;
}

/* 80025A38-80025B24 020378 00EC+00 3/2 0/0 0/0 .text dStage_actorInit__FP11dStage_dt_cPviPv */
static int dStage_actorInit(dStage_dt_c* stageDt, void* i_data, int entryNum, void* param_3) {
    stage_actor_class* actor = (stage_actor_class*)((int*)i_data + 1);
    stage_actor_data_class* actor_data = actor->mEntries;

    for (int i = 0; i < actor->mEntryNum; i++) {
        if (!dComIfGs_isActor(actor_data->mEnemyNo, stageDt->getRoomNo())) {
            if (!daSus_c::check(stageDt->getRoomNo(), actor_data->mSpawnPos)) {
                fopAcM_prm_class* appen = fopAcM_CreateAppend();

                if (appen != NULL) {
                    appen->mParameter = actor_data->mParameter;
                    appen->mPos = actor_data->mSpawnPos;
                    appen->mAngle = actor_data->mAngle;
                    appen->mEnemyNo = actor_data->mEnemyNo;
                    appen->mRoomNo = stageDt->getRoomNo();
                    dStage_actorCreate(actor_data, appen);
                }
            }
        }
        actor_data++;
    }

    return 1;
}

/* 80025B24-80025BFC 020464 00D8+00 1/0 0/0 0/0 .text
 * dStage_actorInit_always__FP11dStage_dt_cPviPv                */
static int dStage_actorInit_always(dStage_dt_c* stageDt, void* i_data, int entryNum,
                                   void* param_3) {
    stage_actor_class* actor = (stage_actor_class*)((int*)i_data + 1);
    stage_actor_data_class* actor_data = actor->mEntries;

    for (int i = 0; i < actor->mEntryNum; i++) {
        if (!dComIfGs_isActor(actor_data->mEnemyNo, stageDt->getRoomNo())) {
            fopAcM_prm_class* appen = fopAcM_CreateAppend();

            if (appen != NULL) {
                appen->mParameter = actor_data->mParameter;
                appen->mPos = actor_data->mSpawnPos;
                appen->mAngle = actor_data->mAngle;
                appen->mEnemyNo = actor_data->mEnemyNo;
                appen->mRoomNo = stageDt->getRoomNo();
                dStage_actorCreate(actor_data, appen);
            }
        }
        actor_data++;
    }

    return 1;
}

/* 80025BFC-80025CDC 02053C 00E0+00 4/1 0/0 0/0 .text dStage_tgscInfoInit__FP11dStage_dt_cPviPv */
static int dStage_tgscInfoInit(dStage_dt_c* stageDt, void* i_data, int entryNum, void* param_3) {
    stage_tgsc_class* actor = (stage_tgsc_class*)((int*)i_data + 1);
    stage_tgsc_data_class* actor_data = actor->mData;

    for (int i = 0; i < actor->mEntryNum; i++) {
        if (!daSus_c::check(stageDt->getRoomNo(), actor_data->mSpawnPos)) {
            fopAcM_prm_class* appen = fopAcM_CreateAppend();

            if (appen != NULL) {
                appen->mParameter = actor_data->mParameter;
                appen->mPos = actor_data->mSpawnPos;
                appen->mAngle = actor_data->mAngle;
                appen->mEnemyNo = actor_data->mEnemyNo;
                appen->mRoomNo = stageDt->getRoomNo();
                appen->mScale[0] = actor_data->field_0x20;
                appen->mScale[1] = actor_data->field_0x21;
                appen->mScale[2] = actor_data->field_0x22;
                dStage_actorCreate(actor_data, appen);
            }
        }
        actor_data++;
    }

    return 1;
}

/* 80025CDC-80025DA8 02061C 00CC+00 1/1 0/0 0/0 .text dStage_doorInfoInit__FP11dStage_dt_cPviPv */
static int dStage_doorInfoInit(dStage_dt_c* stageDt, void* i_data, int entryNum, void* param_3) {
    stage_tgsc_class* actor = (stage_tgsc_class*)((int*)i_data + 1);
    stage_tgsc_data_class* actor_data = actor->mData;

    for (int i = 0; i < actor->mEntryNum; i++) {
        fopAcM_prm_class* appen = fopAcM_CreateAppend();

        if (appen != NULL) {
            appen->mParameter = actor_data->mParameter;
            appen->mPos = actor_data->mSpawnPos;
            appen->mAngle = actor_data->mAngle;
            appen->mEnemyNo = actor_data->mEnemyNo;
            appen->mRoomNo = stageDt->getRoomNo();
            appen->mScale[0] = actor_data->field_0x20;
            appen->mScale[1] = actor_data->field_0x21;
            appen->mScale[2] = actor_data->field_0x22;
            dStage_actorCreate(actor_data, appen);
        }
        actor_data++;
    }

    return 1;
}

/* 80025DA8-80025E40 0206E8 0098+00 2/0 0/0 0/0 .text dStage_roomReadInit__FP11dStage_dt_cPviPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm int dStage_roomReadInit(dStage_dt_c* param_0, void* param_1, int param_2,
                                   void* param_3) {
    nofralloc
#include "asm/d/d_stage/dStage_roomReadInit__FP11dStage_dt_cPviPv.s"
}
#pragma pop

/* 80025E40-80025E70 020780 0030+00 0/0 1/1 0/0 .text
 * dStage_roomRead_dt_c_GetReverbStage__FR14roomRead_classi     */
u8 dStage_roomRead_dt_c_GetReverbStage(roomRead_class& room, int index) {
    if (index < 0 || index >= room.field_0x0) {
        index = 0;
    }

    return dStage_roomRead_dt_c_GetReverb(*room.field_0x4[index]);
}

/* 80025E70-80025EA4 0207B0 0034+00 1/0 0/0 0/0 .text dStage_ppntInfoInit__FP11dStage_dt_cPviPv */
static int dStage_ppntInfoInit(dStage_dt_c* stageDt, void* i_data, int entryNum, void* param_3) {
    stageDt->setPntInfo((dStage_dPnt_c*)((char*)i_data + 4));
    return 1;
}

/* 80025EA4-80025F44 0207E4 00A0+00 1/0 0/0 0/0 .text dStage_pathInfoInit__FP11dStage_dt_cPviPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm int dStage_pathInfoInit(dStage_dt_c* param_0, void* param_1, int param_2,
                                   void* param_3) {
    nofralloc
#include "asm/d/d_stage/dStage_pathInfoInit__FP11dStage_dt_cPviPv.s"
}
#pragma pop

/* 80025F44-80025F78 020884 0034+00 2/0 0/0 0/0 .text dStage_rppnInfoInit__FP11dStage_dt_cPviPv */
static int dStage_rppnInfoInit(dStage_dt_c* stageDt, void* i_data, int entryNum, void* param_3) {
    stageDt->setPnt2Info((dStage_dPnt_c*)((char*)i_data + 4));
    return 1;
}

/* 80025F78-80026018 0208B8 00A0+00 2/0 0/0 0/0 .text dStage_rpatInfoInit__FP11dStage_dt_cPviPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm int dStage_rpatInfoInit(dStage_dt_c* param_0, void* param_1, int param_2,
                                   void* param_3) {
    nofralloc
#include "asm/d/d_stage/dStage_rpatInfoInit__FP11dStage_dt_cPviPv.s"
}
#pragma pop

/* 80026018-8002604C 020958 0034+00 1/0 0/0 0/0 .text dStage_soundInfoInit__FP11dStage_dt_cPviPv
 */
static int dStage_soundInfoInit(dStage_dt_c* stageDt, void* i_data, int entryNum, void* param_3) {
    stageDt->setSoundInf((dStage_SoundInfo_c*)((char*)i_data + 4));
    return 1;
}

/* 8002604C-80026080 02098C 0034+00 2/0 0/0 0/0 .text dStage_soundInfoInitCL__FP11dStage_dt_cPviPv
 */
static int dStage_soundInfoInitCL(dStage_dt_c* stageDt, void* i_data, int entryNum, void* param_3) {
    stageDt->setSoundInfCL((dStage_SoundInfo_c*)((char*)i_data + 4));
    return 1;
}

/* 80026080-800260B4 0209C0 0034+00 3/3 0/0 0/0 .text dStage_setLayerTagName__FP9FuncTableii */
static void dStage_setLayerTagName(FuncTable* funcTbl, int tblSize, int i_layerNo) {
    char layerTag;
    if (i_layerNo < 10) {
        layerTag = '0';
    } else {
        layerTag = 'W';
    }
    layerTag = i_layerNo + layerTag;

    for (int i = 0; i < tblSize; i++) {
        funcTbl->identifier[3] = layerTag;
        funcTbl++;
    }
}

/* 800260B4-8002617C 0209F4 00C8+00 9/9 0/0 0/0 .text
 * dStage_dt_c_decode__FPvP11dStage_dt_cP9FuncTablei            */
static void dStage_dt_c_decode(void* i_data, dStage_dt_c* i_stage, FuncTable* funcTbl,
                               int tblSize) {
    if (i_data != NULL) {
        for (int i = 0; i < tblSize; i++) {
            dStage_fileHeader* file = ((dStage_fileHeader*)i_data);
            dStage_nodeHeader* node = ((dStage_nodeHeader*)(file + 1));

            FuncTable* nodeFunc = funcTbl + i;

            for (int j = 0; j < file->chunkCount; j++) {
                if ((int)node->m_tag == *(int*)nodeFunc->identifier) {
                    if (nodeFunc->function != NULL) {
                        nodeFunc->function(i_stage, node, node->m_entryNum, i_data);
                    }
                    break;
                }
                node++;
            }
        }
    } else {
        OSReport_Error("dStage_dt_c_decode: i_data is NULL\n");
    }
}

/* 8002617C-800261B0 020ABC 0034+00 1/0 0/0 0/0 .text dStage_stEventInfoInit__FP11dStage_dt_cPviPv
 */
static int dStage_stEventInfoInit(dStage_dt_c* stageDt, void* i_data, int entryNum, void* param_3) {
    stageDt->setMapEventInfo((dStage_MapEventInfo_c*)((char*)i_data + 4));
    return 1;
}

/* 800261B0-800261E4 020AF0 0034+00 1/0 0/0 0/0 .text
 * dStage_mapEventInfoInit__FP11dStage_dt_cPviPv                */
static int dStage_mapEventInfoInit(dStage_dt_c* stageDt, void* i_data, int entryNum,
                                   void* param_3) {
    stageDt->setMapEventInfo((dStage_MapEventInfo_c*)((char*)i_data + 4));
    return 1;
}

/* 800261E4-80026218 020B24 0034+00 2/0 0/0 0/0 .text dStage_floorInfoInit__FP11dStage_dt_cPviPv
 */
static int dStage_floorInfoInit(dStage_dt_c* stageDt, void* i_data, int entryNum, void* param_3) {
    stageDt->setFloorInfo((dStage_FloorInfo_c*)((char*)i_data + 4));
    return 1;
}

/* 80026218-80026298 020B58 0080+00 1/0 0/0 0/9 .text dStage_memaInfoInit__FP11dStage_dt_cPviPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm int dStage_memaInfoInit(dStage_dt_c* param_0, void* param_1, int param_2,
                                   void* param_3) {
    nofralloc
#include "asm/d/d_stage/dStage_memaInfoInit__FP11dStage_dt_cPviPv.s"
}
#pragma pop

/* 80026298-8002631C 020BD8 0084+00 1/0 0/0 0/0 .text dStage_mecoInfoInit__FP11dStage_dt_cPviPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm int dStage_mecoInfoInit(dStage_dt_c* param_0, void* param_1, int param_2,
                                   void* param_3) {
    nofralloc
#include "asm/d/d_stage/dStage_mecoInfoInit__FP11dStage_dt_cPviPv.s"
}
#pragma pop

/* 8002631C-8002634C 020C5C 0030+00 2/0 0/0 0/0 .text
 * dStage_stageKeepTresureInit__FP11dStage_dt_cPviPv            */
static int dStage_stageKeepTresureInit(dStage_dt_c* stageDt, void* i_data, int entryNum,
                                       void* param_3) {
    dTres_c::addData((dTres_c::list_class*)((char*)i_data + 4), stageDt->getRoomNo());
    return 1;
}

/* 8002634C-8002635C 020C8C 0010+00 1/0 0/0 0/0 .text
 * dStage_fieldMapTresureInit__FP11dStage_dt_cPviPv             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm int dStage_fieldMapTresureInit(dStage_dt_c* param_0, void* param_1, int param_2,
                                          void* param_3) {
    nofralloc
#include "asm/d/d_stage/dStage_fieldMapTresureInit__FP11dStage_dt_cPviPv.s"
}
#pragma pop

/* 8002635C-800263A0 020C9C 0044+00 4/4 0/0 0/0 .text            dStage_dt_c_offsetToPtr__FPv */
static void dStage_dt_c_offsetToPtr(void* i_data) {
    dStage_nodeHeader* p_node = (dStage_nodeHeader*)((int*)i_data + 1);

    for (int i = 0; i < ((dStage_fileHeader*)i_data)->chunkCount; i++) {
        if (p_node->m_offset != 0 && p_node->m_offset < 0x80000000) {
            p_node->m_offset += (u32)i_data;
        }
        p_node++;
    }
}

/* 800263A0-800263D0 020CE0 0030+00 1/0 0/0 0/0 .text dStage_mapPathInit__FP11dStage_dt_cPviPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm int dStage_mapPathInit(dStage_dt_c* param_0, void* param_1, int param_2, void* param_3) {
    nofralloc
#include "asm/d/d_stage/dStage_mapPathInit__FP11dStage_dt_cPviPv.s"
}
#pragma pop

/* 800263D0-80026400 020D10 0030+00 1/0 0/0 0/0 .text
 * dStage_mapPathInitCommonLayer__FP11dStage_dt_cPviPv          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm int dStage_mapPathInitCommonLayer(dStage_dt_c* param_0, void* param_1, int param_2,
                                             void* param_3) {
    nofralloc
#include "asm/d/d_stage/dStage_mapPathInitCommonLayer__FP11dStage_dt_cPviPv.s"
}
#pragma pop

/* 80026400-8002645C 020D40 005C+00 1/0 0/0 0/0 .text
 * dStage_fieldMapMapPathInit__FP11dStage_dt_cPviPv             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm int dStage_fieldMapMapPathInit(dStage_dt_c* param_0, void* param_1, int param_2,
                                          void* param_3) {
    nofralloc
#include "asm/d/d_stage/dStage_fieldMapMapPathInit__FP11dStage_dt_cPviPv.s"
}
#pragma pop

/* 80450D74-80450D7C 000274 0008+00 3/3 0/0 0/0 .sbss            m_roomDzs__20dStage_roomControl_c
 */
dStage_roomControl_c::roomDzs_c dStage_roomControl_c::m_roomDzs;

/* 8002645C-800265DC 020D9C 0180+00 1/1 0/0 0/0 .text readMult__FP11dStage_dt_cP14dStage_Multi_cb
 */
static void readMult(dStage_dt_c* stageDt, dStage_Multi_c* multi, bool useOldRes) {
    if (multi != NULL) {
        dStage_Mult_info* info = multi->mInfo;

        if (dStage_stagInfo_GetUpButton(dComIfGp_getStage()->getStagInfo()) == 0 ||
            dStage_stagInfo_GetUpButton(dComIfGp_getStage()->getStagInfo()) == 6) {
            dStage_roomControl_c::m_roomDzs.create(multi->field_0x0);
        }

        for (s8 i = 0; i < multi->field_0x0; i++) {
            void* dzs = dStage_roomControl_c::addRoomDzs(i, info->mRoomNo);

            if (dzs == NULL) {
                char dzsName[11];
                sprintf(dzsName, "room%d.dzs", info->mRoomNo);

                if (useOldRes) {
                    dzs = dComIfG_getOldStageRes(dzsName);
                } else {
                    dzs = dComIfG_getStageRes(dzsName);
                }
            }

            if (dzs != NULL) {
                dStage_dt_c_offsetToPtr(dzs);
                stageDt->setRoomNo(info->mRoomNo);
                dStage_dt_c_decode(dzs, stageDt, l_roomFuncTable, 4);
                dStage_setLayerTagName(l_layerFuncTable_5053, 3, dComIfG_play_c::getLayerNo(0));
                dStage_dt_c_decode(dzs, stageDt, l_layerFuncTable_5053, 3);
            }

            info++;
        }
    }
}

/* 800265DC-80026670 020F1C 0094+00 1/0 0/0 0/0 .text dStage_multInfoInit__FP11dStage_dt_cPviPv */
static int dStage_multInfoInit(dStage_dt_c* stageDt, void* i_data, int entryNum, void* param_3) {
    stageDt->setMulti((dStage_Multi_c*)((char*)i_data + 4));
    dStage_initRoomKeepDoorInfo();

    readMult(stageDt, stageDt->getMulti(), false);
    readMult(stageDt, stageDt->getOldMulti(), true);
    stageDt->setRoomNo(-1);

    return 1;
}

/* 80026670-800266A4 020FB0 0034+00 1/0 0/0 0/0 .text dStage_lbnkInfoInit__FP11dStage_dt_cPviPv */
static int dStage_lbnkInfoInit(dStage_dt_c* stageDt, void* i_data, int entryNum, void* param_3) {
    stageDt->setLbnk((dStage_Lbnk_c*)((char*)i_data + 4));
    return 1;
}

/* 800266A4-8002670C 020FE4 0068+00 1/0 0/0 0/0 .text dStage_roomTresureInit__FP11dStage_dt_cPviPv
 */
static int dStage_roomTresureInit(dStage_dt_c* stageDt, void* i_data, int entryNum, void* param_3) {
    stageDt->setTresure((stage_tresure_class*)((char*)i_data + 4));
    dStage_actorInit(stageDt, i_data, entryNum, param_3);
    return 1;
}

/* 8002670C-80026730 02104C 0024+00 1/0 0/0 0/0 .text
 * dStage_layerTresureInit__FP11dStage_dt_cPviPv                */
static int dStage_layerTresureInit(dStage_dt_c* stageDt, void* i_data, int entryNum,
                                   void* param_3) {
    dStage_actorInit(stageDt, i_data, entryNum, param_3);
    return 1;
}

/* 80026730-80026764 021070 0034+00 1/0 0/0 0/0 .text dStage_dmapInfoInit__FP11dStage_dt_cPviPv */
static int dStage_dmapInfoInit(dStage_dt_c* stageDt, void* i_data, int entryNum, void* param_3) {
    stageDt->setDMap((dStage_DMap_c*)((char*)i_data + 4));
    return 1;
}

/* 80026764-800267DC 0210A4 0078+00 1/0 0/0 0/0 .text
 * dStage_stageDrtgInfoInit__FP11dStage_dt_cPviPv               */
static int dStage_stageDrtgInfoInit(dStage_dt_c* stageDt, void* i_data, int entryNum,
                                    void* param_3) {
    stageDt->setDrTg((stage_tgsc_class*)((char*)i_data + 4));
    dStage_tgscInfoInit(stageDt, i_data, entryNum, param_3);
    dStage_KeepDoorInfoProc(stageDt, (stage_tgsc_class*)((char*)i_data + 4));
    return 1;
}

/* 800267DC-80026844 02111C 0068+00 2/0 0/0 0/0 .text
 * dStage_roomDrtgInfoInit__FP11dStage_dt_cPviPv                */
static int dStage_roomDrtgInfoInit(dStage_dt_c* stageDt, void* i_data, int entryNum,
                                   void* param_3) {
    stageDt->setDrTg((stage_tgsc_class*)((char*)i_data + 4));
    dStage_doorInfoInit(stageDt, i_data, entryNum, param_3);
    return 1;
}

/* 80026844-80026898 021184 0054+00 1/0 0/0 0/0 .text dStage_elstInfoInit__FP11dStage_dt_cPviPv */
static int dStage_elstInfoInit(dStage_dt_c* stageDt, void* i_data, int param_2, void* param_3) {
    dStage_Elst_c* elst = (dStage_Elst_c*)((char*)i_data + 4);

    if (param_2 == 0) {
        stageDt->setElst(NULL);
    } else {
        stageDt->setElst(elst);
    }

    return 1;
}

/* 80026898-80026914 0211D8 007C+00 1/1 0/0 0/0 .text            dKankyo_create__Fv */
static void dKankyo_create() {
    fopKyM_fastCreate(PROC_KANKYO, NULL, NULL, NULL, NULL);
    fopKyM_fastCreate(PROC_KYEFF, NULL, NULL, NULL, NULL);
    fopKyM_fastCreate(PROC_KYEFF2, NULL, NULL, NULL, NULL);
    fopKyM_fastCreate(PROC_ENVSE, NULL, NULL, NULL, NULL);
}

/* 80026914-80026940 021254 002C+00 1/1 0/0 0/0 .text layerMemoryInfoLoader__FPvP11dStage_dt_ci */
static void layerMemoryInfoLoader(void* i_data, dStage_dt_c* i_stage, int param_2) {
    dStage_dt_c_decode(i_data, i_stage, l_layerFuncTable_5131, 2);
}

/* 80026940-800269B4 021280 0074+00 1/1 0/0 0/0 .text
 * dStage_dt_c_stageInitLoader__FPvP11dStage_dt_c               */
static void dStage_dt_c_stageInitLoader(void* i_data, dStage_dt_c* i_stage) {
    dStage_dt_c_offsetToPtr(i_data);
    i_stage->init();
    dStage_dt_c_decode(i_data, i_stage, l_funcTable_5136, 1);
    layerMemoryInfoLoader(i_data, i_stage, -1);
}

/* 800269B4-80026AE8 0212F4 0134+00 2/2 0/0 0/0 .text layerTableLoader__FPvP11dStage_dt_ci */
static void layerTableLoader(void* i_data, dStage_dt_c* stageDt, int roomNo) {
    int newRoomNo;
    if (roomNo != -1) {
        newRoomNo = roomNo;
    } else {
        newRoomNo = dComIfGp_getStartStageRoomNo();
    }

    dStage_setLayerTagName(l_layerFuncTableA, ARRAY_SIZE(l_layerFuncTableA),
                           dComIfG_play_c::getLayerNo(0));
    dStage_dt_c_decode(i_data, stageDt, l_layerFuncTableA, ARRAY_SIZE(l_layerFuncTableA));

    dStage_Elst_c* elst = dComIfGp_getStage()->getElst();
    if (elst != NULL && newRoomNo >= 0 && elst->field_0x0 > newRoomNo) {
        dStage_Elst_c::unkData* d = elst->field_0x4;
        int layer = dComIfG_play_c::getLayerNo(0);
        dStage_setLayerTagName(l_envLayerFuncTable, ARRAY_SIZE(l_envLayerFuncTable),
                               d[newRoomNo].field_0x0[layer]);
        dStage_dt_c_decode(i_data, stageDt, l_envLayerFuncTable, ARRAY_SIZE(l_envLayerFuncTable));
    } else {
        dStage_setLayerTagName(l_envLayerFuncTable, ARRAY_SIZE(l_envLayerFuncTable), 0);
        dStage_dt_c_decode(i_data, stageDt, l_envLayerFuncTable, ARRAY_SIZE(l_envLayerFuncTable));
    }
}

/* 80026AE8-80026AF0 021428 0008+00 1/0 0/0 0/0 .text            getElst__16dStage_stageDt_cFv */
dStage_Elst_c* dStage_stageDt_c::getElst() {
    return mElst;
}

/* 80026AF0-80026B58 021430 0068+00 2/2 0/0 0/0 .text layerActorLoader__FPvP11dStage_dt_ci */
static void layerActorLoader(void* i_data, dStage_dt_c* stageDt, int param_2) {
    dStage_setLayerTagName(l_layerFuncTable_5158, 4, dComIfG_play_c::getLayerNo(0));
    dStage_dt_c_decode(i_data, stageDt, l_layerFuncTable_5158, 4);
}

/* 80026B58-80026BBC 021498 0064+00 1/1 0/0 0/0 .text dStage_dt_c_stageLoader__FPvP11dStage_dt_c
 */
static void dStage_dt_c_stageLoader(void* i_data, dStage_dt_c* stageDt) {
    dStage_dt_c_decode(i_data, stageDt, l_funcTable_5163, 26);
    layerTableLoader(i_data, stageDt, -1);
    layerActorLoader(i_data, stageDt, -1);
}

/* 80026BBC-80026C34 0214FC 0078+00 0/0 1/1 0/0 .text dStage_dt_c_roomLoader__FPvP11dStage_dt_ci
 */
void dStage_dt_c_roomLoader(void* i_data, dStage_dt_c* stageDt, int param_2) {
    dStage_dt_c_offsetToPtr(i_data);
    stageDt->init();
    dStage_dt_c_decode(i_data, stageDt, l_funcTable_5168, 14);
    layerTableLoader(i_data, stageDt, param_2);
}

/* 80026C34-80026C8C 021574 0058+00 0/0 1/1 0/0 .text dStage_dt_c_roomReLoader__FPvP11dStage_dt_ci
 */
void dStage_dt_c_roomReLoader(void* i_data, dStage_dt_c* stageDt, int param_2) {
    dStage_dt_c_decode(i_data, stageDt, l_funcTable_5173, 8);
    layerActorLoader(i_data, stageDt, param_2);
}

/* 80026C8C-80026CDC 0215CC 0050+00 0/0 1/1 0/0 .text
 * dStage_dt_c_fieldMapLoader__FPvP11dStage_dt_c                */
void dStage_dt_c_fieldMapLoader(void* i_data, dStage_dt_c* i_stage) {
    dStage_dt_c_offsetToPtr(i_data);
    dStage_dt_c_decode(i_data, i_stage, l_funcTable_5178, 3);
}

/* 80026CDC-80026D38 02161C 005C+00 0/0 1/1 0/0 .text            dStage_infoCreate__Fv */
void dStage_infoCreate() {
    void* stageRsrc = dComIfG_getStageRes("stage.dzs");

    dComIfGp_roomControl_init();
    dStage_dt_c_stageInitLoader(stageRsrc, dComIfGp_getStage());
}

/* 80406194-804061A0 032EB4 000A+02 2/2 14/14 7/7 .bss mDemoArcName__20dStage_roomControl_c */
char dStage_roomControl_c::mDemoArcName[10];

/* 80026D38-80026DF8 021678 00C0+00 0/0 1/1 0/0 .text            dStage_Create__Fv */
void dStage_Create() {
    void* stageRsrc = dComIfG_getStageRes("stage.dzs");
    dStage_dt_c_stageLoader(stageRsrc, dComIfGp_getStage());
    daSus_c::execute();

    if (dComIfGp_getStartStageRoomNo() >= 0) {
        dStage_roomInit(dComIfGp_getStartStageRoomNo());
    }

    *dStage_roomControl_c::getDemoArcName() = NULL;
    dKankyo_create();

    if (dComIfG_getStageRes("vrbox_sora.bmd")) {
        fpcSCtRq_Request(fpcLy_CurrentLayer(), PROC_VRBOX, NULL, NULL, NULL);
        fpcSCtRq_Request(fpcLy_CurrentLayer(), PROC_VRBOX2, NULL, NULL, NULL);
    }

    dComIfGp_evmng_create();
}

/* 80026DF8-80026FDC 021738 01E4+00 0/0 1/1 0/7 .text            dStage_Delete__Fv */
void dStage_Delete() {
    if (*dStage_roomControl_c::getDemoArcName() != NULL) {
        dComIfG_deleteObjectResMain(dStage_roomControl_c::getDemoArcName());
    }

    int stageNo = dStage_stagInfo_GetSaveTbl(dComIfGp_getStageStagInfo());
    dComIfGs_putSave(stageNo);
    dStage_roomControl_c::removeRoomDzs();

    if (mDoRst::isReset() || !dComIfGp_isEnableNextStage() ||
        strcmp(dComIfGp_getNextStageName(), dComIfGp_getStartStageName())) {
        dStage_roomControl_c::destroyMemoryBlock();

        if (dStage_stagInfo_GetSTType(dComIfGp_getStageStagInfo()) == 1) {
            dRes_info_c* info = dComIfG_getStageResInfo("Stg_00");
            *info->getArchiveName() = 'X';
            dComIfGp_setOldMulti();
        } else {
            dComIfG_deleteStageRes("Stg_00");
            dComIfG_deleteStageRes("Xtg_00");
            dComIfGp_resetOldMulti();
        }
    }

    dComIfG_deleteObjectResMain("Event");
    dComIfG_deleteObjectResMain(dComIfGp_getCameraParamFileName(0));
    dComIfGp_evmng_remove();
    dComIfGp_getStage()->init();
}

/* 80026FDC-80026FE8 02191C 000C+00 1/0 0/0 0/0 .text            setOldMulti__16dStage_stageDt_cFv
 */
void dStage_stageDt_c::setOldMulti() {
    mOldMulti = mMulti;
}

/* 80026FE8-800270FC 021928 0114+00 0/0 1/1 1/1 .text            dStage_RoomCheck__FP11cBgS_GndChk
 */
int dStage_RoomCheck(cBgS_GndChk* gndChk) {
    int roomReadId = dStage_roomControl_c::getRoomReadId();
    int roomId;

    if (gndChk == NULL) {
        roomId = roomReadId;
    } else {
        roomId = dComIfG_Bgsp().GetRoomId(*gndChk);
    }

    if (roomId < 0) {
        return 0;
    }

    if (roomId != dComIfGp_roomControl_getStayNo()) {
        dComIfGp_roomControl_zoneCountCheck(roomId);
    }

    if (roomReadId < 0) {
        roomReadId = dComIfGp_roomControl_getStayNo();
    }

    roomRead_class* room = dComIfGp_getStageRoom();
    if (room != NULL && room->field_0x0 > roomReadId) {
        int timePass =
            dStage_roomRead_dt_c_GetTimePass(*room->field_0x4[dComIfGp_roomControl_getStayNo()]);
        dComIfGp_roomControl_setTimePass(timePass);

        roomRead_data_class* room_data = room->field_0x4[roomReadId];
        return dComIfGp_roomControl_loadRoom(room_data->field_0x0, room_data->field_0x4, false);
    }

    return 1;
}

/* 800270FC-80027170 021A3C 0074+00 0/0 1/1 0/0 .text
 * dStage_changeSceneExitId__FR13cBgS_PolyInfofUlScs            */
void dStage_changeSceneExitId(cBgS_PolyInfo& param_0, f32 speed, u32 mode, s8 roomNo, s16 angle) {
    dStage_changeScene(dComIfG_Bgsp().GetExitId(param_0), speed, mode, roomNo, angle, -1);
}

/* ############################################################################################## */
/* 80451C94-80451C98 000294 0004+00 2/2 0/0 0/0 .sdata2          @5315 */
SECTION_SDATA2 static f32 lit_5315 = 15.0f;

/* 80451C98-80451CA0 000298 0008+00 2/2 0/0 0/0 .sdata2          @5317 */
SECTION_SDATA2 static f64 lit_5317 = 4503601774854144.0 /* cast s32 to float */;

/* 80027170-800272E0 021AB0 0170+00 1/1 10/10 63/63 .text            dStage_changeScene__FifUlScsi
 */
// scls info types might be wrong or inlines wrong
#ifdef NONMATCHING
int dStage_changeScene(int i_exitId, f32 speed, u32 mode, s8 room_no, s16 angle, int param_5) {
    stage_scls_info_dummy_class* scls;

    if (room_no == -1) {
        scls = dComIfGp_getStageSclsInfo();
    } else {
        scls = dComIfGp_roomControl_getStatusRoomDt(room_no)->mRoomDt.getSclsInfo();
    }

    if (scls == NULL) {
        return 0;
    }

    stage_scls_info_class* scls_info = &scls->mEntries[i_exitId];
    u8 wipe = dStage_sclsInfo_getWipe(scls_info);
    int wipe_time = dStage_sclsInfo_getWipeTime(scls_info);
    s8 layer = dStage_sclsInfo_getSceneLayer(scls_info);
    int timeH = dStage_sclsInfo_getTimeH(scls_info);

    if (layer >= 15) {
        layer = -1;
    }

    if (layer == -1 && param_5 != -1) {
        layer = param_5;
    }

    if (timeH < 31) {
        dKy_set_nexttime(15.0f * timeH);
    }

    dComIfGp_setNextStage(scls_info->mStage, scls_info->mStart, scls_info->mRoom, layer, speed,
                          mode, 1, wipe == 15 ? 0 : wipe, angle, 1, wipe_time);
    return 1;
}
#else
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm int dStage_changeScene(int i_exitId, f32 speed, u32 mode, s8 room_no, s16 angle, int param_5) {
    nofralloc
#include "asm/d/d_stage/dStage_changeScene__FifUlScsi.s"
}
#pragma pop
#endif

/* 800272E0-800272E8 021C20 0008+00 1/0 0/0 0/0 .text            getSclsInfo__15dStage_roomDt_cCFv
 */
stage_scls_info_dummy_class* dStage_roomDt_c::getSclsInfo() const {
    return mSclsInfo;
}

/* 800272E8-800272F0 021C28 0008+00 1/0 0/0 0/0 .text            getSclsInfo__16dStage_stageDt_cCFv
 */
stage_scls_info_dummy_class* dStage_stageDt_c::getSclsInfo() const {
    return mSclsInfo;
}

/* ############################################################################################## */
/* 80378A50-80378A50 0050B0 0000+00 0/0 0/0 0/0 .rodata          @stringBase0 */
#pragma push
#pragma force_active on
SECTION_DEAD static char const* const stringBase_80378B8F = "%s: %d: シーンリストがありません。\n";
SECTION_DEAD static char const* const stringBase_80378BB3 = "d_stage.cpp";
#pragma pop

/* 800272F0-800274B0 021C30 01C0+00 0/0 1/1 0/0 .text dStage_changeScene4Event__FiScibfUlsi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dStage_changeScene4Event(int param_0, s8 param_1, int param_2, bool param_3, f32 param_4,
                                  u32 param_5, s16 param_6, int param_7) {
    nofralloc
#include "asm/d/d_stage/dStage_changeScene4Event__FiScibfUlsi.s"
}
#pragma pop

/* 800274B0-80027524 021DF0 0074+00 0/0 1/1 0/0 .text            dStage_restartRoom__FUlUli */
void dStage_restartRoom(u32 roomParam, u32 mode, int param_2) {
    dComIfGp_setNextStage(dComIfGp_getStartStageName(), -1, dComIfGs_getRestartRoomNo(), -1, 0.0f,
                          mode, 0, 0, 0, param_2, 0);
    dComIfGs_setRestartRoomParam(roomParam);
}

void dStage_roomDt_c::setCamera(stage_camera_class* i_Camera) {
    mCamera = i_Camera;
}

stage_camera_class* dStage_roomDt_c::getCamera() const {
    return mCamera;
}

void dStage_roomDt_c::setArrow(stage_arrow_class* i_Arrow) {
    mArrow = i_Arrow;
}

stage_arrow_class* dStage_roomDt_c::getArrow() const {
    return mArrow;
}

void dStage_roomDt_c::setPlayer(stage_actor_class* i_Player) {
    mPlayer = i_Player;
}

void dStage_roomDt_c::setPlayerNum(u16 i_PlayerNum) {
    mPlayerNum = i_PlayerNum;
}

u16 dStage_roomDt_c::getPlayerNum() const {
    return mPlayerNum;
}

void dStage_roomDt_c::setRoom(roomRead_class* i_Room) {
    dStage_SetErrorRoom();
    OSReport("Room non room data !!\n");
}

roomRead_class* dStage_roomDt_c::getRoom() const {
    OSReport("Room non room data !!\n");
    return NULL;
}

void dStage_roomDt_c::setMapInfo(stage_map_info_class* i_MapInfo) {
    mMapInfo = i_MapInfo;
}

stage_map_info_class* dStage_roomDt_c::getMapInfo() const {
    return mMapInfo;
}

void dStage_roomDt_c::setMapInfoBase(stage_map_info_dummy_class* i_MapInfoBase) {
    mMapInfoBase = i_MapInfoBase;
}

void dStage_roomDt_c::setPaletteInfo(stage_palette_info_class*) {
    dStage_SetErrorRoom();
    OSReport("Room non palet data !!\n");
}

stage_palette_info_class* dStage_roomDt_c::getPaletteInfo() const {
    OSReport("Room non palet data !!\n");
    return NULL;
}

void dStage_roomDt_c::setPselectInfo(stage_pselect_info_class*) {
    dStage_SetErrorRoom();
    OSReport("Room non pselect data !!\n");
}

stage_pselect_info_class* dStage_roomDt_c::getPselectInfo() const {
    OSReport("Room non pselect data !!\n");
    return NULL;
}

void dStage_roomDt_c::setEnvrInfo(stage_envr_info_class*) {
    dStage_SetErrorRoom();
    OSReport("Room non envr data !!\n");
}

stage_envr_info_class* dStage_roomDt_c::getEnvrInfo() const {
    OSReport("Room non envr data !!\n");
    return NULL;
}

void dStage_roomDt_c::setVrboxInfo(stage_vrbox_info_class* i_VrboxInfo) {
    mVrboxInfo = i_VrboxInfo;
}

stage_vrbox_info_class* dStage_roomDt_c::getVrboxInfo() const {
    return mVrboxInfo;
}

void dStage_roomDt_c::setVrboxcolInfo(stage_vrboxcol_info_class* i_VrboxcolInfo) {
    mVrboxcolInfo = i_VrboxcolInfo;
}

stage_vrboxcol_info_class* dStage_roomDt_c::getVrboxcolInfo() const {
    return mVrboxcolInfo;
}

void dStage_roomDt_c::setPlightInfo(stage_plight_info_class* i_PlightInfo) {
    dStage_SetErrorRoom();
    OSReport("Room non plight data !!\n");
}

stage_plight_info_class* dStage_roomDt_c::getPlightInfo() const {
    OSReport("Room non plight data !!\n");
    return NULL;
}

void dStage_roomDt_c::setPaletteNumInfo(int) {
    dStage_SetErrorRoom();
    OSReport("Room non palette num data !!\n");
}

int dStage_roomDt_c::getPaletteNumInfo() const {
    OSReport("Room non palette num data !!\n");
    return NULL;
}

void dStage_roomDt_c::setPselectNumInfo(int) {
    dStage_SetErrorRoom();
    OSReport("Room non pselect num data !!\n");
}

int dStage_roomDt_c::getPselectNumInfo() const {
    OSReport("Room non pselect num data !!\n");
    return NULL;
}

void dStage_roomDt_c::setEnvrNumInfo(int) {
    dStage_SetErrorRoom();
    OSReport("Room non envr num data !!\n");
}

int dStage_roomDt_c::getEnvrNumInfo() const {
    OSReport("Room non envr num data !!\n");
    return NULL;
}

void dStage_roomDt_c::setVrboxNumInfo(int i_VrboxNumInfo) {
    mVrboxNumInfo = i_VrboxNumInfo;
}

int dStage_roomDt_c::getVrboxNumInfo() const {
    return mVrboxNumInfo;
}

void dStage_roomDt_c::setVrboxcolNumInfo(int i_VrboxcolNumInfo) {
    mVrboxcolNumInfo = i_VrboxcolNumInfo;
}

int dStage_roomDt_c::getVrboxcolNumInfo() const {
    return mVrboxcolNumInfo;
}

void dStage_roomDt_c::setPlightNumInfo(int) {
    dStage_SetErrorRoom();
    OSReport("Room non plight num data !!\n");
}

int dStage_roomDt_c::getPlightNumInfo() const {
    OSReport("Room non plight num data !!\n");
    return NULL;
}

void dStage_roomDt_c::setLightVecInfo(stage_pure_lightvec_info_class* i_LightVecInfo) {
    mLightVecInfo = i_LightVecInfo;
}

stage_pure_lightvec_info_class* dStage_roomDt_c::getLightVecInfo() const {
    return mLightVecInfo;
}

void dStage_roomDt_c::setLightVecInfoNum(int i_LightVecInfoNum) {
    mLightVecInfoNum = i_LightVecInfoNum;
}

int dStage_roomDt_c::getLightVecInfoNum() const {
    return mLightVecInfoNum;
}

void dStage_roomDt_c::setStagInfo(stage_stag_info_class*) {
    dStage_SetErrorRoom();
    OSReport("Room non stag data !!\n");
}

stage_stag_info_class* dStage_roomDt_c::getStagInfo() const {
    OSReport("Room non stag data !!\n");
    return NULL;
}

void dStage_roomDt_c::setSclsInfo(stage_scls_info_dummy_class* i_SclsInfo) {
    mSclsInfo = i_SclsInfo;
}

void dStage_roomDt_c::setPntInfo(dStage_dPnt_c*) {
    dStage_SetErrorRoom();
    OSReport("Room non Pnt data !\n");
}

dStage_dPnt_c* dStage_roomDt_c::getPntInf() const {
    OSReport("Room non Pnts data !\n");
    return NULL;
}

void dStage_roomDt_c::setPathInfo(dStage_dPath_c*) {
    dStage_SetErrorRoom();
    OSReport("Room non Path data !\n");
}

dStage_dPath_c* dStage_roomDt_c::getPathInf() const {
    OSReport("Room non Path data !\n");
    return NULL;
}

void dStage_roomDt_c::setPnt2Info(dStage_dPnt_c* i_Pnt2Info) {
    mPnt2Info = i_Pnt2Info;
}

dStage_dPnt_c* dStage_roomDt_c::getPnt2Inf() const {
    return mPnt2Info;
}

void dStage_roomDt_c::setPath2Info(dStage_dPath_c* i_Path2Info) {
    mPath2Info = i_Path2Info;
}

dStage_dPath_c* dStage_roomDt_c::getPath2Inf() const {
    return mPath2Info;
}

void dStage_roomDt_c::setSoundInf(dStage_SoundInfo_c* i_SoundInf) {
    mSoundInf = i_SoundInf;
}

dStage_SoundInfo_c* dStage_roomDt_c::getSoundInf() const {
    return mSoundInf;
}

void dStage_roomDt_c::setSoundInfCL(dStage_SoundInfo_c* i_SoundInfCL) {
    mSoundInfCL = i_SoundInfCL;
}

dStage_SoundInfo_c* dStage_roomDt_c::getSoundInfCL() const {
    return mSoundInfCL;
}

void dStage_roomDt_c::setMapEventInfo(dStage_MapEventInfo_c* i_MapEventInfo) {
    mMapEventInfo = i_MapEventInfo;
}

dStage_MapEventInfo_c* dStage_roomDt_c::getMapEventInfo() const {
    return mMapEventInfo;
}

void dStage_roomDt_c::setFileList2Info(dStage_FileList2_dt_c* i_FileList2Info) {
    mFileList2Info = i_FileList2Info;
}

dStage_FileList2_dt_c* dStage_roomDt_c::getFileList2Info() const {
    return mFileList2Info;
}

void dStage_roomDt_c::setFileListInfo(dStage_FileList_dt_c* i_FileListInfo) {
    mFileListInfo = i_FileListInfo;
}

void dStage_roomDt_c::setFloorInfo(dStage_FloorInfo_c* i_FloorInfo) {
    mFloorInfo = i_FloorInfo;
}

dStage_FloorInfo_c* dStage_roomDt_c::getFloorInfo() const {
    return mFloorInfo;
}

void dStage_roomDt_c::setMemoryConfig(dStage_MemoryConfig_c*) {
    OSReport("Room non memory config data!\n");
}

dStage_MemoryConfig_c* dStage_roomDt_c::getMemoryConfig() const {
    OSReport("Room non memory config data!\n");
    return NULL;
}

void dStage_roomDt_c::setMemoryMap(dStage_MemoryMap_c*) {
    OSReport("Room non memory map data!\n");
}

dStage_MemoryMap_c* dStage_roomDt_c::getMemoryMap() const {
    OSReport("Room non memory map data!\n");
    return NULL;
}

void dStage_roomDt_c::setMulti(dStage_Multi_c*) {
    OSReport("Room non multi data!\n");
}

dStage_Multi_c* dStage_roomDt_c::getMulti() const {
    OSReport("Room non multi data!\n");
    return NULL;
}

void dStage_roomDt_c::setOldMulti() {
    OSReport("Room non old multi data!\n");
}

void dStage_roomDt_c::resetOldMulti() {
    OSReport("Room non old multi data!\n");
}

dStage_Multi_c* dStage_roomDt_c::getOldMulti(void) const {
    OSReport("Room non old multi data!\n");
    return NULL;
}

void dStage_roomDt_c::setLbnk(dStage_Lbnk_c* i_Lbnk) {
    mLbnk = i_Lbnk;
}

dStage_Lbnk_c* dStage_roomDt_c::getLbnk(void) const {
    return mLbnk;
}

void dStage_roomDt_c::setTresure(stage_tresure_class* i_Treasure) {
    mTreasure = i_Treasure;
}

stage_tresure_class* dStage_roomDt_c::getTresure(void) const {
    return mTreasure;
}

void dStage_roomDt_c::setDMap(dStage_DMap_c*) {
    return;
}

dStage_DMap_c* dStage_roomDt_c::getDMap(void) const {
    return 0;
}

void dStage_roomDt_c::setDrTg(stage_tgsc_class* i_DrTg) {
    mDrTg = i_DrTg;
}

stage_tgsc_class* dStage_roomDt_c::getDrTg(void) const {
    return mDrTg;
}

void dStage_roomDt_c::setDoor(stage_tgsc_class* i_Door) {
    mDoor = i_Door;
}

stage_tgsc_class* dStage_roomDt_c::getDoor(void) const {
    return mDoor;
}

void dStage_roomDt_c::setMapPath(void*) {
    OSReport("stage non 2d map path data !!\n");
}

int dStage_roomDt_c::getMapPath(void) {
    OSReport("stage non 2d map path data !!\n");
    return NULL;
}

void dStage_roomDt_c::setElst(dStage_Elst_c*) {
    dStage_SetErrorRoom();
    OSReport("Room non envLayserSet data\n");
}

dStage_Elst_c* dStage_roomDt_c::getElst(void) {
    dStage_SetErrorRoom();
    OSReport("Room no Elst Data!!\n");
    return NULL;
}

void dStage_stageDt_c::setCamera(stage_camera_class* i_Camera) {
    mCamera = i_Camera;
}

stage_camera_class* dStage_stageDt_c::getCamera(void) const {
    return mCamera;
}

void dStage_stageDt_c::setArrow(stage_arrow_class* i_Arrow) {
    mArrow = i_Arrow;
}

stage_arrow_class* dStage_stageDt_c::getArrow(void) const {
    return mArrow;
}

void dStage_stageDt_c::setPlayer(stage_actor_class* i_Player) {
    mPlayer = i_Player;
}

void dStage_stageDt_c::setPlayerNum(u16 i_PlayerNum) {
    mPlayerNum = i_PlayerNum;
}

u16 dStage_stageDt_c::getPlayerNum(void) const {
    return mPlayerNum;
}

void dStage_stageDt_c::setRoom(roomRead_class* i_Room) {
    mRoom = i_Room;
}

void dStage_stageDt_c::setMapInfo(stage_map_info_class* i_MapInfo) {
    mMapInfo = i_MapInfo;
}

stage_map_info_class* dStage_stageDt_c::getMapInfo(void) const {
    return mMapInfo;
}

void dStage_stageDt_c::setMapInfoBase(stage_map_info_dummy_class* i_MapInfoBase) {
    mMapInfoBase = i_MapInfoBase;
}

void dStage_stageDt_c::setPaletteInfo(stage_palette_info_class* i_PaletteInfo) {
    mPaletteInfo = i_PaletteInfo;
}

stage_palette_info_class* dStage_stageDt_c::getPaletteInfo(void) const {
    return mPaletteInfo;
}

void dStage_stageDt_c::setPselectInfo(stage_pselect_info_class* i_PselectInfo) {
    mPselectInfo = i_PselectInfo;
}

stage_pselect_info_class* dStage_stageDt_c::getPselectInfo(void) const {
    return mPselectInfo;
}

void dStage_stageDt_c::setEnvrInfo(stage_envr_info_class* i_EnvrInfo) {
    mEnvrInfo = i_EnvrInfo;
}

stage_envr_info_class* dStage_stageDt_c::getEnvrInfo(void) const {
    return mEnvrInfo;
}

void dStage_stageDt_c::setVrboxInfo(stage_vrbox_info_class* i_VrboxInfo) {
    mVrboxInfo = i_VrboxInfo;
}

stage_vrbox_info_class* dStage_stageDt_c::getVrboxInfo(void) const {
    return mVrboxInfo;
}

void dStage_stageDt_c::setVrboxcolInfo(stage_vrboxcol_info_class* i_VrboxcolInfo) {
    mVrboxcolInfo = i_VrboxcolInfo;
}

stage_vrboxcol_info_class* dStage_stageDt_c::getVrboxcolInfo(void) const {
    return mVrboxcolInfo;
}

void dStage_stageDt_c::setPlightInfo(stage_plight_info_class* i_PlightInfo) {
    mPlightInfo = i_PlightInfo;
}

stage_plight_info_class* dStage_stageDt_c::getPlightInfo(void) const {
    return mPlightInfo;
}

void dStage_stageDt_c::setPaletteNumInfo(int i_PaletteNumInfo) {
    mPaletteNumInfo = i_PaletteNumInfo;
}

int dStage_stageDt_c::getPaletteNumInfo(void) const {
    return mPaletteNumInfo;
}

void dStage_stageDt_c::setPselectNumInfo(int i_PselectNumInfo) {
    mPselectNumInfo = i_PselectNumInfo;
}

int dStage_stageDt_c::getPselectNumInfo(void) const {
    return mPselectNumInfo;
}

void dStage_stageDt_c::setEnvrNumInfo(int i_EnvrNumInfo) {
    mEnvrNumInfo = i_EnvrNumInfo;
}

int dStage_stageDt_c::getEnvrNumInfo(void) const {
    return mEnvrNumInfo;
}

void dStage_stageDt_c::setVrboxNumInfo(int i_VrboxNumInfo) {
    mVrboxNumInfo = i_VrboxNumInfo;
}

int dStage_stageDt_c::getVrboxNumInfo(void) const {
    return mVrboxNumInfo;
}

void dStage_stageDt_c::setVrboxcolNumInfo(int i_VrboxcolNumInfo) {
    mVrboxcolNumInfo = i_VrboxcolNumInfo;
}

int dStage_stageDt_c::getVrboxcolNumInfo(void) const {
    return mVrboxcolNumInfo;
}

void dStage_stageDt_c::setLightVecInfo(stage_pure_lightvec_info_class*) {
    dStage_SetErrorStage();
    OSReport("stage non LightVec data !!\n");
}

stage_pure_lightvec_info_class* dStage_stageDt_c::getLightVecInfo(void) const {
    OSReport("stage non LightVec data !!\n");
    return NULL;
}

void dStage_stageDt_c::setLightVecInfoNum(int) {
    dStage_SetErrorStage();
    OSReport("stage non LightVecNum data !!\n");
}

int dStage_stageDt_c::getLightVecInfoNum(void) const {
    OSReport("stage non LightVecNum data !!\n");
    return NULL;
}

void dStage_stageDt_c::setPlightNumInfo(int i_PlightNumInfo) {
    mPlightNumInfo = i_PlightNumInfo;
}

int dStage_stageDt_c::getPlightNumInfo(void) const {
    return mPlightNumInfo;
}

void dStage_stageDt_c::setStagInfo(stage_stag_info_class* i_StagInfo) {
    mStagInfo = i_StagInfo;
}

void dStage_stageDt_c::setSclsInfo(stage_scls_info_dummy_class* i_SclsInfo) {
    mSclsInfo = i_SclsInfo;
}

void dStage_stageDt_c::setPntInfo(dStage_dPnt_c* i_PntInfo) {
    mPntInfo = i_PntInfo;
}

dStage_dPnt_c* dStage_stageDt_c::getPntInf(void) const {
    return mPntInfo;
}

void dStage_stageDt_c::setPathInfo(dStage_dPath_c* i_PathInfo) {
    mPathInfo = i_PathInfo;
}

dStage_dPath_c* dStage_stageDt_c::getPathInf(void) const {
    return mPathInfo;
}

void dStage_stageDt_c::setPnt2Info(dStage_dPnt_c* i_Pnt2Info) {
    mPnt2Inf = i_Pnt2Info;
}

dStage_dPnt_c* dStage_stageDt_c::getPnt2Inf(void) const {
    return mPnt2Inf;
}

void dStage_stageDt_c::setPath2Info(dStage_dPath_c* i_Path2Info) {
    mPath2Info = i_Path2Info;
}

dStage_dPath_c* dStage_stageDt_c::getPath2Inf(void) const {
    return mPath2Info;
}

void dStage_stageDt_c::setSoundInf(dStage_SoundInfo_c* i_SoundInf) {
    mSoundInf = i_SoundInf;
}

dStage_SoundInfo_c* dStage_stageDt_c::getSoundInf(void) const {
    return mSoundInf;
}

void dStage_stageDt_c::setSoundInfCL(dStage_SoundInfo_c* i_SoundInfCL) {
    mSoundInfCL = i_SoundInfCL;
}

dStage_SoundInfo_c* dStage_stageDt_c::getSoundInfCL(void) const {
    return mSoundInfCL;
}

void dStage_stageDt_c::setMapEventInfo(dStage_MapEventInfo_c* i_MapEventInfo) {
    mMapEventInfo = i_MapEventInfo;
}

dStage_MapEventInfo_c* dStage_stageDt_c::getMapEventInfo(void) const {
    return mMapEventInfo;
}

void dStage_stageDt_c::setFileList2Info(dStage_FileList2_dt_c*) {
    dStage_SetErrorStage();
    OSReport("stage non filelist2 data!\n");
}

dStage_FileList2_dt_c* dStage_stageDt_c::getFileList2Info(void) const {
    OSReport("stage non filelist2 data!\n");
    return NULL;
}

void dStage_stageDt_c::setFileListInfo(dStage_FileList_dt_c*) {
    dStage_SetErrorStage();
    OSReport("stage non filelist data!\n");
}

dStage_FileList_dt_c* dStage_stageDt_c::getFileListInfo(void) const {
    OSReport("stage non filelist data!\n");
    return NULL;
}

void dStage_stageDt_c::setFloorInfo(dStage_FloorInfo_c* i_FloorInfo) {
    mFloorInfo = i_FloorInfo;
}

dStage_FloorInfo_c* dStage_stageDt_c::getFloorInfo(void) const {
    return mFloorInfo;
}

void dStage_stageDt_c::setMemoryConfig(dStage_MemoryConfig_c* i_MemoryConfig) {
    mMemoryConfig = i_MemoryConfig;
}

dStage_MemoryConfig_c* dStage_stageDt_c::getMemoryConfig(void) const {
    return mMemoryConfig;
}

void dStage_stageDt_c::setMemoryMap(dStage_MemoryMap_c* i_MemmoryMap) {
    mMemoryMap = i_MemmoryMap;
}

dStage_MemoryMap_c* dStage_stageDt_c::getMemoryMap(void) const {
    return mMemoryMap;
}

void dStage_stageDt_c::setMulti(dStage_Multi_c* i_Multi) {
    mMulti = i_Multi;
}

dStage_Multi_c* dStage_stageDt_c::getMulti(void) const {
    return mMulti;
}

dStage_Multi_c* dStage_stageDt_c::getOldMulti(void) const {
    return mOldMulti;
}

void dStage_stageDt_c::setLbnk(dStage_Lbnk_c*) {
    dStage_SetErrorStage();
    OSReport("stage non Lbnk data!\n");
}

dStage_Lbnk_c* dStage_stageDt_c::getLbnk(void) const {
    OSReport("stage non Lbnk data!\n");
    return NULL;
}

void dStage_stageDt_c::setTresure(stage_tresure_class* i_Treasure) {
    mTreasure = i_Treasure;
}

stage_tresure_class* dStage_stageDt_c::getTresure(void) const {
    return mTreasure;
}

void dStage_stageDt_c::setDMap(dStage_DMap_c* i_DMap) {
    mDMap = i_DMap;
}

dStage_DMap_c* dStage_stageDt_c::getDMap(void) const {
    return mDMap;
}

void dStage_stageDt_c::setDrTg(stage_tgsc_class* i_DrTg) {
    mDrTg = i_DrTg;
}

stage_tgsc_class* dStage_stageDt_c::getDrTg(void) const {
    return mDrTg;
}

void dStage_stageDt_c::setDoor(stage_tgsc_class* i_Door) {
    mDoor = i_Door;
}

stage_tgsc_class* dStage_stageDt_c::getDoor(void) const {
    return mDoor;
}

void dStage_stageDt_c::setMapPath(void* i_MapPath) {
    return;
}

int dStage_stageDt_c::getMapPath(void) {
    return NULL;
}

void dStage_stageDt_c::setElst(dStage_Elst_c* i_Elst) {
    mElst = i_Elst;
}

/* ############################################################################################## */
/* 80450D7C-80450D80 -00001 0004+00 0/0 0/0 0/0 .sbss            None */
#pragma push
#pragma force_active on
static u8 pad_80450D7C[4];
#pragma pop

/* 80378A50-80378A50 0050B0 0000+00 0/0 0/0 0/0 .rodata          @stringBase0 */
