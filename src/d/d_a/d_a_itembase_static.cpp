/* d_a_itembase_static.cpp autogenerated by split.py v0.4 at 2021-03-27 23:11:58.315274 */
#include "d/d_a/d_a_itembase_static/d_a_itembase_static.h"
#include "SComponent/c_lib.h"

// additional symbols needed for d_a_itembase_static.cpp
// autogenerated by split.py v0.4 at 2021-03-27 23:11:58.320198
extern "C" {
void CheckFieldItemCreateHeap__FP10fopAc_ac_c(void);
void CreateItemHeap__12daItemBase_cFPCcsssssss(void);
void changeDraw__12daItemBase_cFv(void);
u8 chkDraw__12daItemBase_cFv(void);
void dead__12daItemBase_cFv(void);
void func_80037AF4(void);
void func_80037B0C(void);
u8 getItemNo__12daItemBase_cFv(void);
void hide__12daItemBase_cFv(void);
void show__12daItemBase_cFv(void);
}

// additional symbols needed for d_a_itembase_static.cpp
// autogenerated by split.py v0.4 at 2021-03-27 23:11:58.320207
extern u8 lbl_803AC5A0;
extern u8 lbl_803ADD88;

u8 daItemBase_c::getItemNo(void) {
    return mItemNo;
}

void daItemBase_c::hide(void) {
    cLib_offBit(unk2347, 1);
}

void daItemBase_c::show(void) {
    cLib_onBit(unk2347, 1);
}

void daItemBase_c::changeDraw(void) {
    if (chkDraw() != 0) {
        hide();
    } else {
        show();
    }
}

u8 daItemBase_c::chkDraw(void) {
    return cLib_checkBit(unk2347, 1) != 0;
}

void daItemBase_c::dead(void) {
    cLib_onBit(unk2347, 2);
}

u8 daItemBase_c::chkDead(void) {
    return cLib_checkBit(unk2347, 2) != 0;
}

extern "C" {
// CheckItemCreateHeap__FP10fopAc_ac_c
// CheckItemCreateHeap(fopAc_ac_c*)
asm void func_80037B0C(void) {
    nofralloc
#include "d/d_a/d_a_itembase_static/asm/func_80037B0C.s"
}

// CheckFieldItemCreateHeap__FP10fopAc_ac_c
// CheckFieldItemCreateHeap(fopAc_ac_c*)
asm void CheckFieldItemCreateHeap__FP10fopAc_ac_c(void) {
    nofralloc
#include "d/d_a/d_a_itembase_static/asm/func_80037B78.s"
}
};