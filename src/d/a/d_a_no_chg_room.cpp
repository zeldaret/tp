//
// Generated By: dol2asm
// Translation Unit: d/a/d_a_no_chg_room
//

#include "d/a/d_a_no_chg_room.h"
#include "dol2asm.h"

//
// Types:
//

struct process_node_class {};

struct mDoMtx_stack_c {
    static u8 now[48];
};

struct fopAc_ac_c {
    /* 80018B64 */ fopAc_ac_c();
};

struct cXyz {};

struct fopAcM_gc_c {
    /* 8001DCBC */ void gndCheck(cXyz const*);

    static u8 mGndCheck[84];
};

struct daNocrm_c {
    /* 801452DC */ void execute();
    /* 80145508 */ void getRoomNo(int);
};

struct dStage_roomControl_c {
    static u8 mStatus[65792];
};

struct cBgS_PolyInfo {};

struct dBgS {
    /* 80075100 */ void GetRoomId(cBgS_PolyInfo const&);
};

//
// Forward References:
//

extern "C" static void isLoadRoom__Fi();
extern "C" void execute__9daNocrm_cFv();
extern "C" void getRoomNo__9daNocrm_cFi();
extern "C" static void daNocrm_create__FP9daNocrm_c();
extern "C" static bool daNocrm_Delete__FP9daNocrm_c();
extern "C" static void daNocrm_execute__FP9daNocrm_c();
extern "C" static bool daNocrm_draw__FP9daNocrm_c();
extern "C" extern char const* const d_a_d_a_no_chg_room__stringBase0;
extern "C" extern void* g_profile_NO_CHG_ROOM[12];

//
// External References:
//

extern "C" void OSReport_Warning();
extern "C" void mDoMtx_YrotM__FPA4_fs();
extern "C" void __ct__10fopAc_ac_cFv();
extern "C" void gndCheck__11fopAcM_gc_cFPC4cXyz();
extern "C" void fopScnM_SearchByID__FUi();
extern "C" void fpcNd_IsDeleteTiming__FP18process_node_class();
extern "C" void GetRoomId__4dBgSFRC13cBgS_PolyInfo();
extern "C" void PSMTXCopy();
extern "C" void PSMTXInverse();
extern "C" void PSMTXTrans();
extern "C" void PSMTXMultVec();
extern "C" void PSVECScale();
extern "C" void _savegpr_28();
extern "C" void _restgpr_28();
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" u8 now__14mDoMtx_stack_c[48];
extern "C" u8 mGndCheck__11fopAcM_gc_c[84];
extern "C" u8 mStatus__20dStage_roomControl_c[65792];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 data_804505F0[8];
extern "C" extern u8 mNoChangeRoom__20dStage_roomControl_c[4];

//
// Declarations:
//

/* 801451EC-801452DC 13FB2C 00F0+00 1/1 0/0 0/0 .text            isLoadRoom__Fi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void isLoadRoom(int param_0) {
    nofralloc
#include "asm/d/a/d_a_no_chg_room/isLoadRoom__Fi.s"
}
#pragma pop

/* ############################################################################################## */
/* 804533C8-804533CC 0019C8 0004+00 2/2 0/0 0/0 .sdata2          @3762 */
SECTION_SDATA2 static u8 lit_3762[4] = {
    0x00,
    0x00,
    0x00,
    0x00,
};

/* 801452DC-80145508 13FC1C 022C+00 1/1 0/0 0/0 .text            execute__9daNocrm_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNocrm_c::execute() {
    nofralloc
#include "asm/d/a/d_a_no_chg_room/execute__9daNocrm_cFv.s"
}
#pragma pop

/* 80145508-801455A8 13FE48 00A0+00 1/1 0/0 0/0 .text            getRoomNo__9daNocrm_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNocrm_c::getRoomNo(int param_0) {
    nofralloc
#include "asm/d/a/d_a_no_chg_room/getRoomNo__9daNocrm_cFi.s"
}
#pragma pop

/* ############################################################################################## */
/* 80392640-80392640 01ECA0 0000+00 0/0 0/0 0/0 .rodata          @stringBase0 */
#pragma push
#pragma force_active on
SECTION_DEAD static char const* const stringBase_80392640 =
    "部屋読み込み矩形：読み込みＩＤが−１ですので、自滅します！\n";
/* @stringBase0 padding */
SECTION_DEAD static char const* const pad_8039267C = "\0\0\0";
#pragma pop

/* 804533CC-804533D0 0019CC 0004+00 1/1 0/0 0/0 .sdata2          @3832 */
SECTION_SDATA2 static f32 lit_3832 = 1000.0f;

/* 804533D0-804533D8 0019D0 0004+04 1/1 0/0 0/0 .sdata2          @3833 */
SECTION_SDATA2 static f32 lit_3833[1 + 1 /* padding */] = {
    100.0f,
    /* padding */
    0.0f,
};

/* 801455A8-801456A4 13FEE8 00FC+00 1/0 0/0 0/0 .text            daNocrm_create__FP9daNocrm_c */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void daNocrm_create(daNocrm_c* param_0) {
    nofralloc
#include "asm/d/a/d_a_no_chg_room/daNocrm_create__FP9daNocrm_c.s"
}
#pragma pop

/* 801456A4-801456AC 13FFE4 0008+00 1/0 0/0 0/0 .text            daNocrm_Delete__FP9daNocrm_c */
static bool daNocrm_Delete(daNocrm_c* param_0) {
    return true;
}

/* 801456AC-801456CC 13FFEC 0020+00 1/0 0/0 0/0 .text            daNocrm_execute__FP9daNocrm_c */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void daNocrm_execute(daNocrm_c* param_0) {
    nofralloc
#include "asm/d/a/d_a_no_chg_room/daNocrm_execute__FP9daNocrm_c.s"
}
#pragma pop

/* 801456CC-801456D4 14000C 0008+00 1/0 0/0 0/0 .text            daNocrm_draw__FP9daNocrm_c */
static bool daNocrm_draw(daNocrm_c* param_0) {
    return true;
}

/* ############################################################################################## */
/* 803B3658-803B3678 -00001 0020+00 1/0 0/0 0/0 .data            daNocrm_METHODS */
SECTION_DATA static void* daNocrm_METHODS[8] = {
    (void*)daNocrm_create__FP9daNocrm_c,
    (void*)daNocrm_Delete__FP9daNocrm_c,
    (void*)daNocrm_execute__FP9daNocrm_c,
    (void*)NULL,
    (void*)daNocrm_draw__FP9daNocrm_c,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
};

/* 803B3678-803B36A8 -00001 0030+00 0/0 0/0 1/0 .data            g_profile_NO_CHG_ROOM */
SECTION_DATA extern void* g_profile_NO_CHG_ROOM[12] = {
    (void*)0xFFFFFFFD, (void*)0x0002FFFD,
    (void*)0x001A0000, (void*)&g_fpcLf_Method,
    (void*)0x000005CC, (void*)NULL,
    (void*)NULL,       (void*)&g_fopAc_Method,
    (void*)0x02FA0000, (void*)&daNocrm_METHODS,
    (void*)0x00060000, (void*)0x05000000,
};

/* 80392640-80392640 01ECA0 0000+00 0/0 0/0 0/0 .rodata          @stringBase0 */
