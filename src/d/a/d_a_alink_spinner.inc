/* 8010D93C-8010D94C 10827C 0010+00 0/0 0/0 1/1 .text            getSpinnerGravity__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getSpinnerGravity() const {
    nofralloc
#include "asm/d/a/d_a_alink/getSpinnerGravity__9daAlink_cCFv.s"
}
#pragma pop

/* 8010D94C-8010D95C 10828C 0010+00 0/0 0/0 1/1 .text getSpinnerMaxFallSpeed__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getSpinnerMaxFallSpeed() const {
    nofralloc
#include "asm/d/a/d_a_alink/getSpinnerMaxFallSpeed__9daAlink_cCFv.s"
}
#pragma pop

/* 8010D95C-8010D96C 10829C 0010+00 0/0 0/0 1/1 .text            getSpinnerJumpRate__9daAlink_cCFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getSpinnerJumpRate() const {
    nofralloc
#include "asm/d/a/d_a_alink/getSpinnerJumpRate__9daAlink_cCFv.s"
}
#pragma pop

/* 8010D96C-8010D9B0 1082AC 0044+00 1/1 0/0 2/2 .text getSpinnerRideMoveTime__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getSpinnerRideMoveTime() {
    nofralloc
#include "asm/d/a/d_a_alink/getSpinnerRideMoveTime__9daAlink_cFv.s"
}
#pragma pop

/* 8010D9B0-8010D9F4 1082F0 0044+00 1/1 0/0 3/3 .text            getSpinnerRideSpeedF__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getSpinnerRideSpeedF() {
    nofralloc
#include "asm/d/a/d_a_alink/getSpinnerRideSpeedF__9daAlink_cFv.s"
}
#pragma pop

/* 8010D9F4-8010DA04 108334 0010+00 0/0 0/0 1/1 .text getSpinnerRideDecSpeedMax__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getSpinnerRideDecSpeedMax() const {
    nofralloc
#include "asm/d/a/d_a_alink/getSpinnerRideDecSpeedMax__9daAlink_cCFv.s"
}
#pragma pop

/* 8010DA04-8010DA14 108344 0010+00 0/0 0/0 1/1 .text getSpinnerRideDecSpeedMin__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getSpinnerRideDecSpeedMin() const {
    nofralloc
#include "asm/d/a/d_a_alink/getSpinnerRideDecSpeedMin__9daAlink_cCFv.s"
}
#pragma pop

/* 8010DA14-8010DA24 108354 0010+00 0/0 0/0 1/1 .text getSpinnerRideDecSpeedRate__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getSpinnerRideDecSpeedRate() const {
    nofralloc
#include "asm/d/a/d_a_alink/getSpinnerRideDecSpeedRate__9daAlink_cCFv.s"
}
#pragma pop

/* 8010DA24-8010DA34 108364 0010+00 0/0 0/0 1/1 .text getSpinnerRideRotAngleMax__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getSpinnerRideRotAngleMax() const {
    nofralloc
#include "asm/d/a/d_a_alink/getSpinnerRideRotAngleMax__9daAlink_cCFv.s"
}
#pragma pop

/* 8010DA34-8010DA44 108374 0010+00 0/0 0/0 1/1 .text getSpinnerRideRotAngleMin__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getSpinnerRideRotAngleMin() const {
    nofralloc
#include "asm/d/a/d_a_alink/getSpinnerRideRotAngleMin__9daAlink_cCFv.s"
}
#pragma pop

/* 8010DA44-8010DA98 108384 0054+00 1/0 0/0 0/0 .text onSpinnerPathForceRemove__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::onSpinnerPathForceRemove() {
    nofralloc
#include "asm/d/a/d_a_alink/onSpinnerPathForceRemove__9daAlink_cFv.s"
}
#pragma pop

/* 8010DA98-8010DAFC 1083D8 0064+00 1/0 0/0 0/0 .text            checkSpinnerPathMove__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm bool daAlink_c::checkSpinnerPathMove() {
    nofralloc
#include "asm/d/a/d_a_alink/checkSpinnerPathMove__9daAlink_cFv.s"
}
#pragma pop

/* 8010DAFC-8010DB28 10843C 002C+00 2/2 0/0 0/0 .text            checkLv4BossRoom__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkLv4BossRoom() {
    nofralloc
#include "asm/d/a/d_a_alink/checkLv4BossRoom__9daAlink_cFv.s"
}
#pragma pop

/* 8010DB28-8010DBC8 108468 00A0+00 1/0 0/0 0/0 .text checkSpinnerTriggerAttack__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm bool daAlink_c::checkSpinnerTriggerAttack() {
    nofralloc
#include "asm/d/a/d_a_alink/checkSpinnerTriggerAttack__9daAlink_cFv.s"
}
#pragma pop

/* 8010DBC8-8010DC64 108508 009C+00 2/2 0/0 0/0 .text            setSpinnerSyncPos__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSpinnerSyncPos() {
    nofralloc
#include "asm/d/a/d_a_alink/setSpinnerSyncPos__9daAlink_cFv.s"
}
#pragma pop

/* 8010DC64-8010DDCC 1085A4 0168+00 1/1 0/0 0/0 .text            procSpinnerReadyInit__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSpinnerReadyInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procSpinnerReadyInit__9daAlink_cFv.s"
}
#pragma pop

/* 8010DDCC-8010DE64 10870C 0098+00 1/0 0/0 0/0 .text            procSpinnerReady__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSpinnerReady() {
    nofralloc
#include "asm/d/a/d_a_alink/procSpinnerReady__9daAlink_cFv.s"
}
#pragma pop

/* 8010DE64-8010DE78 1087A4 0014+00 1/1 0/0 0/0 .text            setSpinnerStatus__9daAlink_cFUcUc
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSpinnerStatus(u8 param_0, u8 param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/setSpinnerStatus__9daAlink_cFUcUc.s"
}
#pragma pop

/* 8010DE78-8010DF4C 1087B8 00D4+00 2/2 0/0 0/0 .text            procSpinnerWaitInit__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSpinnerWaitInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procSpinnerWaitInit__9daAlink_cFv.s"
}
#pragma pop

/* 8010DF4C-8010E48C 10888C 0540+00 1/0 0/0 0/0 .text            procSpinnerWait__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSpinnerWait() {
    nofralloc
#include "asm/d/a/d_a_alink/procSpinnerWait__9daAlink_cFv.s"
}
#pragma pop