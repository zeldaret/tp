//
// Generated By: dol2asm
// Translation Unit: d/a/d_a_alink
//

#include "d/a/d_a_alink.h"
#include "JSystem/J2DGraph/J2DAnmLoader.h"
#include "JSystem/J3DGraphLoader/J3DAnmLoader.h"
#include "JSystem/JMath/JMath.h"
#include "JSystem/JStudio/JStudio/stb.h"
#include "SSystem/SComponent/c_math.h"
#include "Z2AudioLib/Z2AudioMgr.h"
#include "d/a/d_a_horse_static.h"
#include "d/com/d_com_inf_game.h"
#include "d/d_bomb.h"
#include "dol2asm.h"
#include "dolphin/types.h"
#include "f_op/f_op_actor_mng.h"
#include "m_Do/m_Do_audio.h"
#include "m_Do/m_Do_ext.h"
#include "m_Do/m_Do_mtx.h"
#include "rel/d/a/d_a_crod/d_a_crod.h"
#include "rel/d/a/d_a_horse/d_a_horse.h"
#include "rel/d/a/obj/d_a_obj_carry/d_a_obj_carry.h"

//
// Types:
//

struct mDoExt_blkAnm {
    /* 8000DA08 */ void init(J3DDeformData*, J3DAnmCluster*, int, int, f32, s16, s16);
};

struct mDoExt_MtxCalcAnmBlendTbl {
    /* 800D00BC */ void getAnm(int);
};

struct fopEn_enemy_c {};

struct daTagMist_c {
    /* 80031CF0 */ void getPlayerNo();
};

struct daTagMagne_c {
    /* 80031B50 */ void checkMagnetCode(cBgS_PolyInfo&);
};

struct daObj_Sekizoa_c {
    /* 801312C8 */ void setWolfHowling();
};

struct daObjSwHang_c {
    /* 80101874 */ void getHangPos();
};

struct daObjMovebox {
    struct Act_c {
        struct Prm_e {};
    };
};

struct daObj {
    template <typename A1>
    void PrmAbstract(/* ... */);
    /* 80141ACC */ /* daObj::PrmAbstract<daObjMovebox::Act_c::Prm_e> */
    void func_80141ACC(void* _this, fopAc_ac_c const*, daObjMovebox::Act_c::Prm_e,
                       daObjMovebox::Act_c::Prm_e);
};

struct daNpcT_ActorMngr_c {
    /* 80145708 */ void getActorP();
};

struct daMirror_c {
    /* 8003194C */ void entry(J3DModel*);
};

struct dDemo_actor_c {
    /* 8003819C */ void getPrm_Morf();
    /* 80038338 */ void getDemoIDData(int*, int*, int*, u16*, u8*);
};

struct daAlinkHIO_wolf_c {
    /* 80140B98 */ ~daAlinkHIO_wolf_c();
};

struct daAlinkHIO_wlAtDown_c0 {
    static u8 const m[156];
};

struct daAlinkHIO_wlAtCjump_c0 {
    static u8 const m[100];
};

struct daAlinkHIO_wlAtBite_c0 {
    static u8 const m[92];
};

struct daAlinkHIO_wallHang_c0 {
    static u8 const m[28];
};

struct daAlinkHIO_wallFall_c0 {
    static u8 const m[40];
};

struct daAlinkHIO_wallCatch_c0 {
    static u8 const m[84];
};

struct daAlinkHIO_smallJump_c0 {
    static u8 const m[72];
};

struct daAlinkHIO_roofHang_c0 {
    static u8 const m[76];
};

struct daAlinkHIO_pushpull_c0 {
    static u8 const m[60];
};

struct daAlinkHIO_pickUp_c0 {
    static u8 const m[48];
};

struct daAlinkHIO_noActAtnMove_c0 {
    static u8 const m[84];
};

struct daAlinkHIO_kandelaar_c0 {
    static u8 const m[80];
};

struct daAlinkHIO_ironBall_c0 {
    static u8 const m[140];
};

struct daAlinkHIO_huLight_c0 {
    static u8 const m[28];
};

struct daAlinkHIO_hoCutRB_c0 {
    static u8 const m[32];
};

struct daAlinkHIO_hoCutRA_c0 {
    static u8 const m[32];
};

struct daAlinkHIO_hoCutLB_c0 {
    static u8 const m[32];
};

struct daAlinkHIO_hoCutLA_c0 {
    static u8 const m[32];
};

struct daAlinkHIO_hoCutCharge_c0 {
    static u8 const m[84];
};

struct daAlinkHIO_guard_c0 {
    static u8 const m[128];
};

struct daAlinkHIO_grab_c0 {
    static u8 const m[228];
};

struct daAlinkHIO_gAtPush_c0 {
    static u8 const m[36];
};

struct daAlinkHIO_gAtKick_c0 {
    static u8 const m[36];
};

struct daAlinkHIO_fmChain_c0 {
    static u8 const m[40];
};

struct daAlinkHIO_damage_c0 {
    static u8 const m[88];
};

struct daAlinkHIO_damSwim_c0 {
    static u8 const m[140];
};

struct daAlinkHIO_damNormal_c0 {
    static u8 const m[100];
};

struct daAlinkHIO_damLarge_c0 {
    static u8 const m[188];
};

struct daAlinkHIO_damHuge_c0 {
    static u8 const m[188];
};

struct daAlinkHIO_damHorse_c0 {
    static u8 const m[44];
};

struct daAlinkHIO_damFall_c0 {
    static u8 const m[72];
};

struct daAlinkHIO_damCaught_c0 {
    static u8 const m[36];
};

struct daAlinkHIO_cut_c {
    /* 80140BD4 */ ~daAlinkHIO_cut_c();
};

struct daAlinkHIO_cutTurn_c0 {
    static u8 const m[152];
};

struct daAlinkHIO_cutNmV_c0 {
    static u8 const m[32];
};

struct daAlinkHIO_cutNmSR_c0 {
    static u8 const m[32];
};

struct daAlinkHIO_cutNmSL_c0 {
    static u8 const m[32];
};

struct daAlinkHIO_cutNmR_c0 {
    static u8 const m[32];
};

struct daAlinkHIO_cutNmL_c0 {
    static u8 const m[32];
};

struct daAlinkHIO_cutHead_c0 {
    static u8 const m[96];
};

struct daAlinkHIO_cutFnV_c0 {
    static u8 const m[44];
};

struct daAlinkHIO_cutFnSm_c0 {
    static u8 const m[44];
};

struct daAlinkHIO_cutFnSl_c0 {
    static u8 const m[44];
};

struct daAlinkHIO_cutFnS_c0 {
    static u8 const m[44];
};

struct daAlinkHIO_cutFnR_c0 {
    static u8 const m[44];
};

struct daAlinkHIO_cutFnL_c0 {
    static u8 const m[44];
};

struct daAlinkHIO_cutFnJU_c0 {
    static u8 const m[84];
};

struct daAlinkHIO_cutDown_c0 {
    static u8 const m[116];
};

struct daAlinkHIO_cutDaR_c0 {
    static u8 const m[28];
};

struct daAlinkHIO_cutDaL_c0 {
    static u8 const m[28];
};

struct daAlinkHIO_cutDaCharge_c0 {
    static u8 const m[28];
};

struct daAlinkHIO_crouch_c0 {
    static u8 const m[76];
};

struct daAlinkHIO_canoe_c0 {
    static u8 const m[72];
};

struct daAlinkHIO_c {
    /* 80140B88 */ daAlinkHIO_c();
    /* 80140C10 */ ~daAlinkHIO_c();
};

struct dPaPoF_c {
    /* 800512E8 */ void setEffectFour(dKy_tevstr_c const*, cXyz const*, u32, u32, cXyz const*,
                                      cXyz const*, cXyz const*, cXyz const*, cXyz const*,
                                      csXyz const*, cXyz const*, s8, f32, f32);
    /* 80051424 */ void clearFourAllID();

    static u8 m_typeFourData[60];
    static u8 m_emitterFourData[60 + 28 /* padding */];
};

struct dInsect_c {
    /* 80110648 */ void Insect_Release();
};

struct dDemo_object_c {
    /* 80039088 */ void getActor(u8);
};

struct dDemo_c {
    /* 80039EEC */ void setBranchId(u16, s16);

    static u16 m_branchId[1 + 3 /* padding */];
    static u8 m_object[4];
};

struct dCamera_c {
    /* 80088A7C */ void StartEventCamera(int, int, ...);
    /* 80088BBC */ void EndEventCamera(int);
    /* 801614AC */ void Start();
    /* 801614D0 */ void Stop();
    /* 801614F4 */ void ChangeModeOK(s32);
    /* 80163028 */ void SetTrimTypeForce(s32);
    /* 80164B64 */ void GetCameraTypeFromCameraName(char const*);
    /* 80181500 */ void GetForceLockOnActor();
};

struct JASKernel {
    /* 80290B08 */ void getAramHeap();
};

struct JAISeq {
    /* 802A0A8C */ JAISeq(JAISeqMgr*, JAISoundStrategyMgr<JAISeq>*);
};

//
// Forward References:
//

extern "C" bool getE3Zhint__9daAlink_cFv();
extern "C" void getAlinkArcName__9daAlink_cFv();
extern "C" static void
daAlink_tgHitCallback__FP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf();
extern "C" static void
daAlink_coHitCallback__FP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf();
extern "C" void init__16daAlink_matAnm_cFv();
extern "C" void calc__16daAlink_matAnm_cCFP11J3DMaterial();
extern "C" void checkStageName__9daAlink_cFPCc();
extern "C" void tgHitCallback__9daAlink_cFP10fopAc_ac_cP12dCcD_GObjInfP12dCcD_GObjInf();
extern "C" void coHitCallback__9daAlink_cFP10fopAc_ac_cP12dCcD_GObjInf();
extern "C" void setMatrixWorldAxisRot__9daAlink_cFPA4_fsssiPC4cXyz();
extern "C" void jointControll__9daAlink_cFi();
extern "C" void setUpperFront__9daAlink_cFv();
extern "C" void changeBlendRate__9daAlink_cFi();
extern "C" void resetRootMtx__9daAlink_cFv();
extern "C" void modelCallBack__9daAlink_cFi();
extern "C" static void daAlink_modelCallBack__FP8J3DJointi();
extern "C" void headModelCallBack__9daAlink_cFi();
extern "C" static void daAlink_headModelCallBack__FP8J3DJointi();
extern "C" void wolfModelCallBack__9daAlink_cFi();
extern "C" static void daAlink_wolfModelCallBack__FP8J3DJointi();
extern "C" void setHatAngle__9daAlink_cFv();
extern "C" void calcHairAngle__9daAlink_cFPs();
extern "C" void setHairAngle__9daAlink_cFP4cXyzff();
extern "C" void setLookPosFromOut__9daAlink_cFP4cXyz();
extern "C" void checkAttentionPosAngle__9daAlink_cFP4cXyz();
extern "C" void checkActorPosAngle__9daAlink_cFP10fopAc_ac_cPP4cXyz();
extern "C" void getNeckAimPos__9daAlink_cFP4cXyzPii();
extern "C" void getNeckAimAngle__9daAlink_cFP4cXyzPsPsPsPs();
extern "C" void setEyeMove__9daAlink_cFP4cXyzss();
extern "C" void setNeckAngle__9daAlink_cFv();
extern "C" void getStickAngleFromPlayerShape__9daAlink_cCFPs();
extern "C" void commonLineCheck__9daAlink_cFP4cXyzP4cXyz();
extern "C" void getMoveBGActorName__9daAlink_cFR13cBgS_PolyInfoi();
extern "C" void checkGoronRide__9daAlink_cFv();
extern "C" void setMoveSlantAngle__9daAlink_cFv();
extern "C" void setArmMatrix__9daAlink_cFv();
extern "C" void setFootMatrix__9daAlink_cFv();
extern "C" void setMatrixOffset__9daAlink_cFPff();
extern "C" void setLegAngle__9daAlink_cFfP18daAlink_footData_cPsPsi();
extern "C" void footBgCheck__9daAlink_cFv();
extern "C" void handBgCheck__9daAlink_cFv();
extern "C" void setItemHeap__9daAlink_cFv();
extern "C" void setIdxMask__9daAlink_cFPUsPUs();
extern "C" void getAnimeResource__9daAlink_cFP14daPy_anmHeap_cUsUl();
extern "C" void initModel__9daAlink_cFP12J3DModelDataUlUl();
extern "C" void initModel__9daAlink_cFUsUl();
extern "C" void initModelEnv__9daAlink_cFUsUl();
extern "C" void initDemoModel__9daAlink_cFPP8J3DModelPCcUl();
extern "C" void initDemoBck__9daAlink_cFPP13mDoExt_bckAnmPCc();
extern "C" void createHeap__9daAlink_cFv();
extern "C" void __dt__14J3DMaterialAnmFv();
extern "C" static void daAlink_createHeap__FP10fopAc_ac_c();
extern "C" void setSelectEquipItem__9daAlink_cFi();
extern "C" void checkBoarStart__9daAlink_cFv();
extern "C" void checkCanoeStart__9daAlink_cFv();
extern "C" void playerInit__9daAlink_cFv();
extern "C" void checkHorseStart__9daAlink_cFUli();
extern "C" void setStartProcInit__9daAlink_cFv();
extern "C" void create__9daAlink_cFv();
extern "C" static void daAlink_Create__FP10fopAc_ac_c();
extern "C" void setRoomInfo__9daAlink_cFv();
extern "C" void setShapeAngleOnGround__9daAlink_cFv();
extern "C" void setStepsOffset__9daAlink_cFv();
extern "C" void iceSlipBgCheck__9daAlink_cFv();
extern "C" void setIceSlipSpeed__9daAlink_cFv();
extern "C" void setPolygonSpeed__9daAlink_cFv();
extern "C" void checkWindSpeedOnAngle__9daAlink_cCFv();
extern "C" void checkWindSpeedOnAngleAnime__9daAlink_cCFi();
extern "C" void checkDashAnime__9daAlink_cCFv();
extern "C" void checkWindWallRate__9daAlink_cFRC4cXyz();
extern "C" void setWindSpeed__9daAlink_cFv();
extern "C" void setBodyPartPos__9daAlink_cFv();
extern "C" void setRollJump__9daAlink_cFffs();
extern "C" void setAttentionPos__9daAlink_cFv();
extern "C" void setMatrix__9daAlink_cFv();
extern "C" void simpleAnmPlay__9daAlink_cFP10J3DAnmBase();
extern "C" void setSwordPos__9daAlink_cFv();
extern "C" void setItemMatrix__9daAlink_cFi();
extern "C" void setWolfItemMatrix__9daAlink_cFv();
extern "C" void setHandIndex__9daAlink_cFQ29daAlink_c11daAlink_ANM();
extern "C" void setSwordAtCollision__9daAlink_cFi();
extern "C" void checkNoCollisionCorret__9daAlink_cFv();
extern "C" void decSwordBlur__9daAlink_cFv();
extern "C" void resetWolfAtCollision__9daAlink_cFv();
extern "C" void setWolfAtCollision__9daAlink_cFv();
extern "C" void resetAtCollision__9daAlink_cFi();
extern "C" void setAtCollision__9daAlink_cFv();
extern "C" void setWolfCollisionPos__9daAlink_cFv();
extern "C" void initLockAt__9daAlink_cFv();
extern "C" void cancelLockAt__9daAlink_cFv();
extern "C" void setCollisionPos__9daAlink_cFv();
extern "C" void setCollision__9daAlink_cFv();
extern "C" void getBaseAnimeFrame__9daAlink_cCFv();
extern "C" void setAnimeFrame__9daAlink_cFf();
extern "C" void setFrameCtrl__9daAlink_cFP16daPy_frameCtrl_cUcssff();
extern "C" void getMainBckData__9daAlink_cCFQ29daAlink_c11daAlink_ANM();
extern "C" void checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM();
extern "C" void checkUnderMove1BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM();
extern "C" void
getUnderUpperAnime__9daAlink_cFQ29daAlink_c11daAlink_ANMPP15J3DAnmTransformPP15J3DAnmTransformiUl();
extern "C" void setDoubleAnimeBlendRatio__9daAlink_cFf();
extern "C" void
commonDoubleAnime__9daAlink_cFP15J3DAnmTransformP15J3DAnmTransformP15J3DAnmTransformP15J3DAnmTransformfffi();
extern "C" void
setDoubleAnime__9daAlink_cFfffQ29daAlink_c11daAlink_ANMQ29daAlink_c11daAlink_ANMif();
extern "C" void commonSingleAnime__9daAlink_cFP15J3DAnmTransformP15J3DAnmTransformffs();
extern "C" void setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM();
extern "C" void setSingleAnimeBaseMorf__9daAlink_cFQ29daAlink_c11daAlink_ANMf();
extern "C" void setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff();
extern "C" void setSingleAnime__9daAlink_cFQ29daAlink_c11daAlink_ANMffsf();
extern "C" void setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c();
extern "C" void animePlay__9daAlink_cFP15J3DAnmTransformP16daPy_frameCtrl_c();
extern "C" void allAnimePlay__9daAlink_cFv();
extern "C" void setUpperAnimeMorf__9daAlink_cFf();
extern "C" void setUpperAnimeBase__9daAlink_cFUs();
extern "C" void setUpperAnimeBaseMorf__9daAlink_cFUsf();
extern "C" void setUpperAnimeBaseSpeed__9daAlink_cFUsff();
extern "C" void setUpperAnime__9daAlink_cFUsQ29daAlink_c13daAlink_UPPERffsf();
extern "C" void setUpperAnimeParam__9daAlink_cFUsQ29daAlink_c13daAlink_UPPERPC16daAlinkHIO_anm_c();
extern "C" void resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf();
extern "C" void setUnderAnimeMorf__9daAlink_cFf();
extern "C" void setUnderAnime__9daAlink_cFUsQ29daAlink_c13daAlink_UNDERffsf();
extern "C" void setUnderAnimeParam__9daAlink_cFUsQ29daAlink_c13daAlink_UNDERPC16daAlinkHIO_anm_c();
extern "C" void resetUnderAnime__9daAlink_cFQ29daAlink_c13daAlink_UNDERf();
extern "C" void setOldRootQuaternion__9daAlink_cFsss();
extern "C" void checkAtnLeftAnime__9daAlink_cFv();
extern "C" void checkAtnRightAnime__9daAlink_cFv();
extern "C" void getMoveGroundAngleSpeedRate__9daAlink_cFv();
extern "C" void setBlendMoveAnime__9daAlink_cFf();
extern "C" void setBlendAtnMoveAnime__9daAlink_cFf();
extern "C" void setBlendAtnBackMoveAnime__9daAlink_cFf();
extern "C" void setFaceBck__9daAlink_cFUsiUs();
extern "C" void setFaceBtp__9daAlink_cFUsiUs();
extern "C" void setFaceBtk__9daAlink_cFUsiUs();
extern "C" void setFaceBasicTexture__9daAlink_cFQ29daAlink_c13daAlink_FTANM();
extern "C" void setFaceBasicAnime__9daAlink_cFQ29daAlink_c11daAlink_ANM();
extern "C" void setFacePriTexture__9daAlink_cFQ29daAlink_c13daAlink_FTANM();
extern "C" void setFacePriAnime__9daAlink_cFQ29daAlink_c11daAlink_ANM();
extern "C" void resetFacePriBck__9daAlink_cFv();
extern "C" void resetFacePriBtp__9daAlink_cFv();
extern "C" void resetFacePriBtk__9daAlink_cFv();
extern "C" void resetFacePriTexture__9daAlink_cFv();
extern "C" void resetFacePriAnime__9daAlink_cFv();
extern "C" void playFaceTextureAnime__9daAlink_cFv();
extern "C" void getGroundAngle__9daAlink_cFP13cBgS_PolyInfos();
extern "C" void getRoofAngle__9daAlink_cFP13cBgS_PolyInfos();
extern "C" void getWallEdgePos__9daAlink_cFRC4cXyzP8cM3dGPlaP8cM3dGPlaP4cXyzi();
extern "C" void setFrontWallType__9daAlink_cFv();
extern "C" void SetPos__12dBgS_RoofChkFRC4cXyz();
extern "C" void checkWaterPolygonUnder__9daAlink_cFv();
extern "C" void setWaterY__9daAlink_cFv();
extern "C" void setHangWaterY__9daAlink_cFv();
extern "C" void setSandDownBgCheckWallH__9daAlink_cFv();
extern "C" void setBgCheckParam__9daAlink_cFv();
extern "C" void checkNotJumpSinkLimit__9daAlink_cFv();
extern "C" void checkNotItemSinkLimit__9daAlink_cFv();
extern "C" void setSandShapeOffset__9daAlink_cFv();
extern "C" void checkLv2MiddleBossBgRide__9daAlink_cFs();
extern "C" void getSlidePolygon__9daAlink_cFP8cM3dGPla();
extern "C" void checkSlope__9daAlink_cCFv();
extern "C" void setPlayerPosAndAngle__9daAlink_cFPC4cXyzsi();
extern "C" void setPlayerPosAndAngle__9daAlink_cFPC4cXyzPC5csXyz();
extern "C" void setPlayerPosAndAngle__9daAlink_cFPA4_f();
extern "C" void itemTriggerCheck__9daAlink_cFUc();
extern "C" void itemButtonCheck__9daAlink_cFUc();
extern "C" void itemButton__9daAlink_cFv();
extern "C" void itemTrigger__9daAlink_cFv();
extern "C" void spActionButton__9daAlink_cFv();
extern "C" void spActionTrigger__9daAlink_cFv();
extern "C" void midnaTalkTrigger__9daAlink_cCFv();
extern "C" void swordSwingTrigger__9daAlink_cFv();
extern "C" void setItemActionButtonStatus__9daAlink_cFUc();
extern "C" void itemActionTrigger__9daAlink_cFv();
extern "C" void setStickData__9daAlink_cFv();
extern "C" void setAtnList__9daAlink_cFv();
extern "C" void setRStatus__9daAlink_cFUc();
extern "C" void setRStatusEmphasys__9daAlink_cFUc();
extern "C" void setDoStatus__9daAlink_cFUc();
extern "C" void setDoStatusEmphasys__9daAlink_cFUc();
extern "C" void setDoStatusContinuation__9daAlink_cFUc();
extern "C" void setBStatus__9daAlink_cFUc();
extern "C" void checkAtnWaitAnime__9daAlink_cFv();
extern "C" void setTiredVoice__9daAlink_cFP16daPy_frameCtrl_c();
extern "C" void checkRestHPAnime__9daAlink_cFv();
extern "C" void getDirectionFromAngle__9daAlink_cFs();
extern "C" void checkAttentionState__9daAlink_cFv();
extern "C" void getShapeAngleYAtnActor__9daAlink_cFv();
extern "C" void setShapeAngleToAtnActor__9daAlink_cFi();
extern "C" void initServiceWaitTime__9daAlink_cFv();
extern "C" void checkZeroSpeedF__9daAlink_cCFv();
extern "C" void setNormalSpeedF__9daAlink_cFff();
extern "C" void getStickAngleDistanceRate__9daAlink_cFv();
extern "C" void setSpeedAndAngleNormal__9daAlink_cFv();
extern "C" void setSpeedAndAngleAtn__9daAlink_cFv();
extern "C" void checkRequestTalkActor__9daAlink_cFP10dAttList_cP10fopAc_ac_c();
extern "C" void checkServiceWaitMode__9daAlink_cFv();
extern "C" void setJumpMode__9daAlink_cFv();
extern "C" void getMetamorphoseNearDis__9daAlink_cCFv();
extern "C" void getMetamorphoseFarDis__9daAlink_cCFv();
extern "C" void getMetamorphoseFarAngle__9daAlink_cCFv();
extern "C" void setMidnaMsg__9daAlink_cFv();
extern "C" void notTalk__9daAlink_cFv();
extern "C" void setTalkStatus__9daAlink_cFv();
extern "C" void getFrontRollRate__9daAlink_cFv();
extern "C" void decideCommonDoStatus__9daAlink_cFv();
extern "C" void decideDoStatus__9daAlink_cFv();
extern "C" void checkWaitAction__9daAlink_cFv();
extern "C" void setFallVoice__9daAlink_cFv();
extern "C" void setLandPassiveData__9daAlink_cFv();
extern "C" void setStepLandVibration__9daAlink_cFv();
extern "C" void checkLandAction__9daAlink_cFi();
extern "C" void checkSlideAction__9daAlink_cFv();
extern "C" void checkAutoJumpAction__9daAlink_cFv();
extern "C" void checkCutJumpInFly__9daAlink_cFv();
extern "C" void checkFrontWallTypeAction__9daAlink_cFv();
extern "C" void checkItemActionInitStart__9daAlink_cFv();
extern "C" void checkItemChangeAutoAction__9daAlink_cFv();
extern "C" void setFastShotTimer__9daAlink_cFv();
extern "C" void cancelItemUseQuake__9daAlink_cFi();
extern "C" void cancelUpperItemReadyAnime__9daAlink_cFi();
extern "C" void checkItemActorPointer__9daAlink_cFv();
extern "C" void checkSwordTwirlAction__9daAlink_cFv();
extern "C" void checkUpperItemActionFly__9daAlink_cFv();
extern "C" void checkItemButtonChange__9daAlink_cFv();
extern "C" void checkUpperItemAction__9daAlink_cFv();
extern "C" void orderPeep__9daAlink_cFv();
extern "C" void orderTalk__9daAlink_cFi();
extern "C" static void daAlink_searchBouDoor__FP10fopAc_ac_cPv();
extern "C" static void daAlink_searchKolin__FP10fopAc_ac_cPv();
extern "C" void orderZTalk__9daAlink_cFv();
extern "C" void checkNormalAction__9daAlink_cFv();
extern "C" void checkReadyItem__9daAlink_cFv();
extern "C" void checkItemAction__9daAlink_cFv();
extern "C" bool checkRAction__9daAlink_cFv();
extern "C" void checkMoveDoAction__9daAlink_cFv();
extern "C" void checkSideRollAction__9daAlink_cFi();
extern "C" void checkNoUpperAnime__9daAlink_cCFv();
extern "C" void checkOneHandItemEquipAnime__9daAlink_cCFv();
extern "C" void checkItemEquipAnime__9daAlink_cCFv();
extern "C" void checkEquipAnime__9daAlink_cCFv();
extern "C" void checkWindDashAnime__9daAlink_cCFv();
extern "C" void checkSwordTwirlAnime__9daAlink_cCFv();
extern "C" void swordEquip__9daAlink_cFi();
extern "C" void swordUnequip__9daAlink_cFv();
extern "C" void itemEquip__9daAlink_cFUs();
extern "C" void itemUnequip__9daAlink_cFUsf();
extern "C" void checkFastUnequip__9daAlink_cFv();
extern "C" void allUnequip__9daAlink_cFi();
extern "C" void checkItemChangeFromButton__9daAlink_cFv();
extern "C" void checkNextActionFromButton__9daAlink_cFv();
extern "C" void checkGroundSpecialMode__9daAlink_cFv();
extern "C" void commonCheckNextAction__9daAlink_cFi();
extern "C" void checkNextAction__9daAlink_cFi();
extern "C" void commonChangeItem__9daAlink_cFv();
extern "C" void setItemAction__9daAlink_cFv();
extern "C" void checkNextActionFromCrouch__9daAlink_cFi();
extern "C" void checkUpperReadyThrowAnime__9daAlink_cCFv();
extern "C" void getBodyAngleXBasePos__9daAlink_cFP4cXyz();
extern "C" void getBodyAngleXAtnActor__9daAlink_cFi();
extern "C" void setBodyAngleXReadyAnime__9daAlink_cFi();
extern "C" void setMagicArmorBrk__9daAlink_cFi();
extern "C" void checkMagicArmorHeavy__9daAlink_cCFv();
extern "C" void checkBootsOrArmorHeavy__9daAlink_cCFv();
extern "C" void checkHeavyStateOn__9daAlink_cFii();
extern "C" void setOutPower__9daAlink_cFfsi();
extern "C" void initGravity__9daAlink_cFv();
extern "C" void setSpecialGravity__9daAlink_cFffi();
extern "C" void transAnimeProc__9daAlink_cFP4cXyzff();
extern "C" void setFootSpeed__9daAlink_cFv();
extern "C" void posMove__9daAlink_cFv();
extern "C" void autoGroundHit__9daAlink_cFv();
extern "C" void startPeepChange__9daAlink_cFv();
extern "C" void setLastSceneDamage__9daAlink_cFiPUl();
extern "C" void setLastSceneMode__9daAlink_cFPUl();
extern "C" void startRestartRoom__9daAlink_cFUliii();
extern "C" void checkCoachGuardGame__9daAlink_cFv();
extern "C" void checkRoofRestart__9daAlink_cFv();
extern "C" void checkRestartRoom__9daAlink_cFv();
extern "C" void getSceneExitMoveAngle__9daAlink_cFv();
extern "C" void checkSceneChange__9daAlink_cFi();
extern "C" void voiceStart__9daAlink_cFUl();
extern "C" void voiceStartLevel__9daAlink_cFUl();
extern "C" void seStartSwordCut__9daAlink_cFUl();
extern "C" void seStartOnlyReverb__9daAlink_cFUl();
extern "C" void seStartOnlyReverbLevel__9daAlink_cFUl();
extern "C" void seStartMapInfo__9daAlink_cFUl();
extern "C" void seStartMapInfoLevel__9daAlink_cFUl();
extern "C" void setBasAnime__9daAlink_cFQ29daAlink_c13daAlink_UNDER();
extern "C" void initBasAnime__9daAlink_cFv();
extern "C" void resetBasAnime__9daAlink_cFv();
extern "C" void checkSightLine__9daAlink_cFfP4cXyz();
extern "C" void setMetamorphoseModel__9daAlink_cFi();
extern "C" void keepItemData__9daAlink_cFv();
extern "C" void returnKeepItemData__9daAlink_cFv();
extern "C" void setItemModel__9daAlink_cFv();
extern "C" void setItemActor__9daAlink_cFv();
extern "C" void makeItemType__9daAlink_cFv();
extern "C" void checkZoraWearAbility__9daAlink_cCFv();
extern "C" void checkMagicArmorWearAbility__9daAlink_cCFv();
extern "C" void loadAramBmd__9daAlink_cFUsUl();
extern "C" void loadAram__9daAlink_cFUsUl();
extern "C" void loadAramItemBrk__9daAlink_cFUsP8J3DModel();
extern "C" void loadAramItemBtk__9daAlink_cFUsP8J3DModel();
extern "C" void loadAramItemBtp__9daAlink_cFUsP8J3DModel();
extern "C" void changeItemBck__9daAlink_cFUsf();
extern "C" void checkGroupItem__9daAlink_cCFii();
extern "C" void checkSetItemTrigger__9daAlink_cFi();
extern "C" void checkItemSetButton__9daAlink_cFi();
extern "C" void checkField__9daAlink_cFv();
extern "C" void checkBossRoom__9daAlink_cFv();
extern "C" void checkDungeon__9daAlink_cFv();
extern "C" void checkCastleTown__9daAlink_cFv();
extern "C" void checkCloudSea__9daAlink_cFv();
extern "C" void checkRoomOnly__9daAlink_cFv();
extern "C" void checkLv2DungeonRoomSpecial__9daAlink_cFv();
extern "C" void checkRoomSpecial__9daAlink_cFv();
extern "C" void checkRoom__9daAlink_cFv();
extern "C" void checkNotBattleStage__9daAlink_cFv();
extern "C" void checkNotHeavyBootsStage__9daAlink_cFv();
extern "C" void checkNotAutoJumpStage__9daAlink_cFv();
extern "C" void checkCastleTownUseItem__9daAlink_cFUs();
extern "C" void changeItemTriggerKeepProc__9daAlink_cFUci();
extern "C" void checkNewItemChange__9daAlink_cFUc();
extern "C" void deleteEquipItem__9daAlink_cFii();
extern "C" void setLight__9daAlink_cFv();
extern "C" void setFrontRollCrashShock__9daAlink_cFUc();
extern "C" void getModelJointMtx__9daAlink_cFUs();
extern "C" void onFrollCrashFlg__9daAlink_cFUci();
extern "C" void changeWarpMaterial__9daAlink_cFQ29daAlink_c21daAlink_WARP_MAT_MODE();
extern "C" void commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC();
extern "C" void commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC();
extern "C" void procPreActionUnequipInit__9daAlink_cFiP10fopAc_ac_c();
extern "C" void procPreActionUnequip__9daAlink_cFv();
extern "C" void procServiceWaitInit__9daAlink_cFv();
extern "C" void procServiceWait__9daAlink_cFv();
extern "C" void procTiredWaitInit__9daAlink_cFv();
extern "C" void procTiredWait__9daAlink_cFv();
extern "C" void procWaitInit__9daAlink_cFv();
extern "C" void procWait__9daAlink_cFv();
extern "C" void procMoveInit__9daAlink_cFv();
extern "C" void procMove__9daAlink_cFv();
extern "C" void procAtnMoveInit__9daAlink_cFv();
extern "C" void procAtnMove__9daAlink_cFv();
extern "C" void procAtnActorWaitInit__9daAlink_cFv();
extern "C" void procAtnActorWait__9daAlink_cFv();
extern "C" void procAtnActorMoveInit__9daAlink_cFv();
extern "C" void procAtnActorMove__9daAlink_cFv();
extern "C" void procWaitTurnInit__9daAlink_cFv();
extern "C" void procWaitTurn__9daAlink_cFv();
extern "C" void procMoveTurnInit__9daAlink_cFi();
extern "C" void procMoveTurn__9daAlink_cFv();
extern "C" void procSideStepInit__9daAlink_cFi();
extern "C" void procSideStep__9daAlink_cFv();
extern "C" void procSideStepLandInit__9daAlink_cFv();
extern "C" void procSideStepLand__9daAlink_cFv();
extern "C" void procSlideInit__9daAlink_cFs();
extern "C" void procSlide__9daAlink_cFv();
extern "C" void procSlideLandInit__9daAlink_cFi();
extern "C" void procSlideLand__9daAlink_cFv();
extern "C" void procFrontRollInit__9daAlink_cFv();
extern "C" void procFrontRoll__9daAlink_cFv();
extern "C" void procFrontRollCrashInit__9daAlink_cFv();
extern "C" void procFrontRollCrash__9daAlink_cFv();
extern "C" void procFrontRollSuccessInit__9daAlink_cFv();
extern "C" void procFrontRollSuccess__9daAlink_cFv();
extern "C" void procSideRollInit__9daAlink_cFi();
extern "C" void procSideRoll__9daAlink_cFv();
extern "C" void backJumpSpeedDec__9daAlink_cFv();
extern "C" void procBackJumpInit__9daAlink_cFi();
extern "C" void procBackJump__9daAlink_cFv();
extern "C" void procBackJumpLandInit__9daAlink_cFi();
extern "C" void procBackJumpLand__9daAlink_cFv();
extern "C" void procSlipInit__9daAlink_cFv();
extern "C" void procSlip__9daAlink_cFv();
extern "C" void procAutoJumpInit__9daAlink_cFi();
extern "C" void procAutoJump__9daAlink_cFv();
extern "C" void procDiveJumpInit__9daAlink_cFv();
extern "C" void procDiveJump__9daAlink_cFv();
extern "C" void procRollJumpInit__9daAlink_cFv();
extern "C" void procRollJump__9daAlink_cFv();
extern "C" void procFallInit__9daAlink_cFif();
extern "C" void procFall__9daAlink_cFv();
extern "C" void procLandInit__9daAlink_cFf();
extern "C" void procLand__9daAlink_cFv();
extern "C" void procSmallJumpInit__9daAlink_cFi();
extern "C" void procSmallJump__9daAlink_cFv();
extern "C" void procStepMoveInit__9daAlink_cFv();
extern "C" void procStepMove__9daAlink_cFv();
extern "C" void procCrouchInit__9daAlink_cFv();
extern "C" void procCrouch__9daAlink_cFv();
extern "C" void procCoMetamorphoseInit__9daAlink_cFv();
extern "C" void procCoMetamorphose__9daAlink_cFv();
extern "C" void procCoMetamorphoseOnlyInit__9daAlink_cFv();
extern "C" void procCoMetamorphoseOnly__9daAlink_cFv();
extern "C" void procFloorDownReboundInit__9daAlink_cFv();
extern "C" void procFloorDownRebound__9daAlink_cFv();
extern "C" void procGoronRideWaitInit__9daAlink_cFP10fopAc_ac_c();
extern "C" void procGoronRideWait__9daAlink_cFv();
extern "C" void execute__9daAlink_cFv();
extern "C" static void daAlink_Execute__FP9daAlink_c();
extern "C" void setDrawHand__9daAlink_cFv();
extern "C" void checkSwordDraw__9daAlink_cFv();
extern "C" void checkShieldDraw__9daAlink_cFv();
extern "C" void checkItemDraw__9daAlink_cFv();
extern "C" void initShadowScaleLight__9daAlink_cFv();
extern "C" void moveShadowScaleLight__9daAlink_cFv();
extern "C" void shadowDraw__9daAlink_cFv();
extern "C" void modelCalc__9daAlink_cFP8J3DModel();
extern "C" void basicModelDraw__9daAlink_cFP8J3DModel();
extern "C" void modelDraw__9daAlink_cFP8J3DModeli();
extern "C" void setWaterDropColor__9daAlink_cFPC13J3DGXColorS10();
extern "C" void initTevCustomColor__9daAlink_cFv();
extern "C" void draw__9daAlink_cFv();
extern "C" static void daAlink_Draw__FP9daAlink_c();
extern "C" void __dt__9daAlink_cFv();
extern "C" static void daAlink_Delete__FP9daAlink_c();
extern "C" void checkNoSubjectModeCamera__9daAlink_cFv();
extern "C" void acceptSubjectModeChange__9daAlink_cFv();
extern "C" void checkSubjectAction__9daAlink_cFv();
extern "C" void checkBodyAngleX__9daAlink_cFs();
extern "C" void setBodyAngleToCamera__9daAlink_cFv();
extern "C" void setSubjectMode__9daAlink_cFv();
extern "C" void subjectCancelTrigger__9daAlink_cFv();
extern "C" void checkSubjectEnd__9daAlink_cFi();
extern "C" void searchPeepObj__9daAlink_cFP10fopAc_ac_cPv();
extern "C" static void daAlink_searchPeepObj__FP10fopAc_ac_cPv();
extern "C" void procCoSubjectivityInit__9daAlink_cFv();
extern "C" void procCoSubjectivity__9daAlink_cFv();
extern "C" void procCoSwimSubjectivityInit__9daAlink_cFv();
extern "C" void procCoSwimSubjectivity__9daAlink_cFv();
extern "C" void procCoPeepSubjectivityInit__9daAlink_cFv();
extern "C" void procCoPeepSubjectivity__9daAlink_cFv();
extern "C" void checkBoardRide__9daAlink_cCFv();
extern "C" void checkCanoeRide__9daAlink_cCFv();
extern "C" void checkHorseRide__9daAlink_cCFv();
extern "C" void getLeftItemMatrix__9daAlink_cFv();
extern "C" void checkBoarRide__9daAlink_cCFv();
extern "C" void checkSpinnerRide__9daAlink_cCFv();
extern "C" void getLeftHandMatrix__9daAlink_cFv();
extern "C" void getRightHandMatrix__9daAlink_cFv();
extern "C" void onSceneChangeArea__9daAlink_cFUcUcP10fopAc_ac_c();
extern "C" void getRightItemMatrix__9daAlink_cFv();
extern "C" void checkPlayerNoDraw__9daAlink_cFv();
extern "C" void __ct__9daAlink_cFv();
extern "C" void __dt__Q29daAlink_c14firePointEff_cFv();
extern "C" void __ct__Q29daAlink_c14firePointEff_cFv();
extern "C" void __dt__15LIGHT_INFLUENCEFv();
extern "C" void __dt__18daAlink_footData_cFv();
extern "C" void __ct__18daAlink_footData_cFv();
extern "C" void __dt__29dAlink_bottleWaterPcallBack_cFv();
extern "C" void __dt__14daAlink_blur_cFv();
extern "C" void __dt__15daAlink_sight_cFv();
extern "C" void __dt__20daAlink_lockCursor_cFv();
extern "C" void checkRideOn__9daAlink_cCFv();
extern "C" static void dComIfGp_att_getCatghTarget__Fv();
extern "C" static void mDoAud_setLinkHp__Fll();
extern "C" static void dComIfGs_getLife__Fv();
extern "C" static void dComIfGp_getRStatus__Fv();
extern "C" void checkAttentionLock__9daAlink_cFv();
extern "C" void dComIfGp_setItemLifeCount__FfUc(f32, u8);
extern "C" static void cMtx_multVec__FPA4_CfPC3VecP3Vec();
extern "C" void getAnmMtx__8J3DModelFi();
extern "C" void setBaseTRMtx__8J3DModelFPA4_f();
extern "C" void checkFmChainGrabAnime__9daAlink_cCFv();
extern "C" void checkSmallUpperGuardAnime__9daAlink_cCFv();
extern "C" static void dComIfGp_evmng_startCheck__FPCc();
extern "C" static void mDoAud_setLinkGroupInfo__FUc();
extern "C" void getAnm__25mDoExt_MtxCalcAnmBlendTblFi();
extern "C" void ChkRoofHit__9dBgS_AcchCFv();
extern "C" void ClrGroundHit__9dBgS_AcchFv();
extern "C" void checkReinRide__9daAlink_cCFv();
extern "C" void checkWolfEnemyThrowAnime__9daAlink_cCFv();
extern "C" void checkSpecialDemoMode__9daAlink_cCFv();
extern "C" void setMidnaTalkStatus__9daAlink_cFUc();
extern "C" void set3DStatus__9daAlink_cFUcUc();
extern "C" void offSetFlg__16daAlink_matAnm_cFv();
extern "C" void checkModeFlg__9daAlink_cCFUl();
extern "C" void getShieldChangeWaitTimer__9daAlink_cCFv();
extern "C" void getClothesChangeWaitTimer__9daAlink_cCFv();
extern "C" void checkHorseStart__9daAlink_cFv();
extern "C" void checkCutTurnCharge__9daAlink_cCFv();
extern "C" void checkAcceptDungeonWarpAlink__9daAlink_cFi();
extern "C" void getSpinnerActor__9daAlink_cFv();
extern "C" void getSumouCounter__9daAlink_cCFv();
extern "C" void checkSumouWithstand__9daAlink_cCFv();
extern "C" void setMidnaMsgNum__9daAlink_cFP10fopAc_ac_cUs();
extern "C" void getModelMtx__9daAlink_cFv();
extern "C" void getInvMtx__9daAlink_cFv();
extern "C" void getLinkBackBone1Matrix__9daAlink_cFv();
extern "C" void getWolfMouthMatrix__9daAlink_cFv();
extern "C" void getWolfBackbone2Matrix__9daAlink_cFv();
extern "C" void getBottleMtx__9daAlink_cFv();
extern "C" void getHeadMtx__9daAlink_cFv();
extern "C" void getGroundY__9daAlink_cFv();
extern "C" void getBaseAnimeFrameRate__9daAlink_cCFv();
extern "C" void getAtnActorID__9daAlink_cCFv();
extern "C" void getItemID__9daAlink_cCFv();
extern "C" void getGrabActorID__9daAlink_cCFv();
extern "C" void setForcePutPos__9daAlink_cFRC4cXyz();
extern "C" void checkPlayerFly__9daAlink_cCFv();
extern "C" void checkFrontRoll__9daAlink_cCFv();
extern "C" void checkWolfDash__9daAlink_cCFv();
extern "C" void checkAutoJump__9daAlink_cCFv();
extern "C" void checkSideStep__9daAlink_cCFv();
extern "C" void checkWolfTriggerJump__9daAlink_cCFv();
extern "C" void checkGuardBreakMode__9daAlink_cCFv();
extern "C" void checkLv3Slide__9daAlink_cCFv();
extern "C" void checkWolfHowlDemoMode__9daAlink_cCFv();
extern "C" void checkElecDamage__9daAlink_cCFv();
extern "C" void checkEmptyBottleSwing__9daAlink_cCFv();
extern "C" void checkBottleSwingMode__9daAlink_cCFv();
extern "C" void checkHawkWait__9daAlink_cCFv();
extern "C" void checkGoatThrow__9daAlink_cCFv();
extern "C" void checkGoatThrowAfter__9daAlink_cCFv();
extern "C" void checkWolfTagLockJump__9daAlink_cCFv();
extern "C" void checkWolfTagLockJumpLand__9daAlink_cCFv();
extern "C" void checkWolfRopeHang__9daAlink_cCFv();
extern "C" void checkRollJump__9daAlink_cCFv();
extern "C" void checkGoronRideWait__9daAlink_cCFv();
extern "C" void checkWolfChain__9daAlink_cCFv();
extern "C" void checkWolfWait__9daAlink_cCFv();
extern "C" void checkWolfJumpAttack__9daAlink_cCFv();
extern "C" void checkWolfRSit__9daAlink_cCFv();
extern "C" void checkBottleDrinkEnd__9daAlink_cCFv();
extern "C" void checkWolfDig__9daAlink_cCFv();
extern "C" void checkCutCharge__9daAlink_cCFv();
extern "C" void checkCutLargeJumpCharge__9daAlink_cCFv();
extern "C" void checkComboCutTurn__9daAlink_cCFv();
extern "C" void checkClimbMove__9daAlink_cCFv();
extern "C" void checkGrassWhistle__9daAlink_cCFv();
extern "C" void checkBoarRun__9daAlink_cCFv();
extern "C" void checkHorseRideNotReady__9daAlink_cCFv();
extern "C" void getSearchBallScale__9daAlink_cCFv();
extern "C" void checkFastShotTime__9daAlink_cFv();
extern "C" void checkCutJumpCancelTurn__9daAlink_cCFv();
extern "C" void checkSingleBoarBattleSecondBowReady__9daAlink_cCFv();
extern "C" void cancelDungeonWarpReadyNeck__9daAlink_cFv();
extern "C" void onSceneChangeAreaJump__9daAlink_cFUcUcP10fopAc_ac_c();
extern "C" void onSceneChangeDead__9daAlink_cFUci();
extern "C" void checkNoEquipItem__9daAlink_cCFv();
extern "C" void getBoardCutTurnOffsetAngleY__9daAlink_cCFv();
extern "C" void getMagneBootsTopVec__9daAlink_cFv();
extern "C" void setCargoCarry__9daAlink_cFP10fopAc_ac_c();
extern "C" void setGoronSideMove__9daAlink_cFP10fopAc_ac_c();
extern "C" void setSumouReady__9daAlink_cFP10fopAc_ac_c();
extern "C" void setSumouPushBackDirection__9daAlink_cFs();
extern "C" void setSumouLoseHeadUp__9daAlink_cFv();
extern "C" void checkPriActorOwn__9daAlink_cCFPC10fopAc_ac_c();
extern "C" void checkWolfEnemyBiteAllOwn__9daAlink_cCFPC10fopAc_ac_c();
extern "C" void setWolfEnemyHangBiteAngle__9daAlink_cFs();
extern "C" void setSumouGraspCancelCount__9daAlink_cFi();
extern "C" void checkItemSwordEquip__9daAlink_cCFv();
extern "C" void getSinkShapeOffset__9daAlink_cCFv();
extern "C" void checkSinkDead__9daAlink_cCFv();
extern "C" void checkCutJumpMode__9daAlink_cCFv();
extern "C" void getGiantPuzzleAimAngle__9daAlink_cCFv();
extern "C" void getSwordChangeWaitTimer__9daAlink_cCFv();
extern "C" void checkMetamorphose__9daAlink_cCFv();
extern "C" void checkWolfDownAttackPullOut__9daAlink_cCFv();
extern "C" void getMidnaAtnPos__9daAlink_cCFv();
extern "C" void checkCopyRodEquip__9daAlink_cCFv();
extern "C" void checkCanoeFishingGetLeft__9daAlink_cCFv();
extern "C" void checkCanoeFishingGetRight__9daAlink_cCFv();
extern "C" void checkBeeChildDrink__9daAlink_cCFv();
extern "C" void getWolfHowlMgrP__9daAlink_cFv();
extern "C" void checkWolfHowlSuccessAnime__9daAlink_cCFv();
extern "C" void checkOctaIealHang__9daAlink_cCFv();
extern "C" void cancelOctaIealHang__9daAlink_cFv();
extern "C" void cancelDragonHangBackJump__9daAlink_cFv();
extern "C" void setOctaIealWildHang__9daAlink_cFv();
extern "C" void checkDragonHangRide__9daAlink_cCFv();
extern "C" void playerStartCollisionSE__9daAlink_cFUlUl();
extern "C" void __dt__16daAlink_matAnm_cFv();
extern "C" void __dt__12dBgS_ObjAcchFv();
extern "C" void __dt__Q29daAlink_c14hsChainShape_cFv();
extern "C" static void daAlink_searchNightStalker__FP10fopAc_ac_cPv();
extern "C" void checkLightSwordMtrl__9daAlink_cFv();
extern "C" void checkSwordEquipAnime__9daAlink_cCFv();
extern "C" void checkCutDashAnime__9daAlink_cCFv();
extern "C" void checkCutDashEnemyHit__9daAlink_cFR12dCcD_GObjInf();
extern "C" void getSwordAtType__9daAlink_cFv();
extern "C" void initCutTurnAt__9daAlink_cFfi();
extern "C" void checkCutFinishJumpUp__9daAlink_cFv();
extern "C" void changeCutFast__9daAlink_cFv();
extern "C" void checkCutFastReady__9daAlink_cFv();
extern "C" void setSwordModel__9daAlink_cFv();
extern "C" void offSwordModel__9daAlink_cFv();
extern "C" void checkCutTypeNoBlur__9daAlink_cCFv();
extern "C" void checkCutTurnInput__9daAlink_cCFv();
extern "C" void getCutTurnDirection__9daAlink_cCFv();
extern "C" void resetCombo__9daAlink_cFi();
extern "C" void checkComboCnt__9daAlink_cFv();
extern "C" void setCutType__9daAlink_cFUc();
extern "C" void setCylAtParam__9daAlink_cFUl11dCcG_At_SplUcUciff();
extern "C" void setSwordAtParam__9daAlink_cF11dCcG_At_SplUcUciff();
extern "C" void notSwordHitVibActor__9daAlink_cFP10fopAc_ac_c();
extern "C" void setSwordHitVibration__9daAlink_cFP12dCcD_GObjInf();
extern "C" void checkAtShieldHit__9daAlink_cFR12dCcD_GObjInf();
extern "C" void checkCutReverseAt__9daAlink_cFP12dCcD_GObjInf();
extern "C" void changeCutReverseProc__9daAlink_cFQ29daAlink_c11daAlink_ANM();
extern "C" void setCutDash__9daAlink_cFii();
extern "C" void checkForceSwordSwing__9daAlink_cFv();
extern "C" void setComboReserb__9daAlink_cFv();
extern "C" void checkComboReserb__9daAlink_cFv();
extern "C" void commonCutAction__9daAlink_cFv();
extern "C" void setSwordVoiceSe__9daAlink_cFUl();
extern "C" void setSwordChargeVoiceSe__9daAlink_cFv();
extern "C" void setSwordComboVoice__9daAlink_cFv();
extern "C" void checkCutTurnInputTrigger__9daAlink_cFv();
extern "C" void checkCutAction__9daAlink_cFv();
extern "C" void checkCutTurnCharge__9daAlink_cFv();
extern "C" void getCutDirection__9daAlink_cFv();
extern "C" void checkCutCancelNextMode__9daAlink_cFi();
extern "C" void checkDoCutAction__9daAlink_cFv();
extern "C" void checkCutBackState__9daAlink_cFv();
extern "C" void checkCutHeadState__9daAlink_cFv();
extern "C" void checkDownAttackState__9daAlink_cFv();
extern "C" void checkCutLargeTurnState__9daAlink_cCFv();
extern "C" void cancelCutCharge__9daAlink_cFv();
extern "C" void initCutAtnActorSearch__9daAlink_cFv();
extern "C" void checkCutAtnActorChange__9daAlink_cFv();
extern "C" void setCutJumpSpeed__9daAlink_cFi();
extern "C" void procCutNormalInit__9daAlink_cFi();
extern "C" void procCutNormal__9daAlink_cFv();
extern "C" void procCutFinishInit__9daAlink_cFi();
extern "C" void procCutFinish__9daAlink_cFv();
extern "C" void procCutFinishJumpUpInit__9daAlink_cFv();
extern "C" void procCutFinishJumpUp__9daAlink_cFv();
extern "C" void procCutFinishJumpUpLandInit__9daAlink_cFv();
extern "C" void procCutFinishJumpUpLand__9daAlink_cFv();
extern "C" void procCutReverseInit__9daAlink_cFQ29daAlink_c11daAlink_ANM();
extern "C" void procCutReverse__9daAlink_cFv();
extern "C" void procCutJumpInit__9daAlink_cFi();
extern "C" void procCutJump__9daAlink_cFv();
extern "C" void procCutJumpLandInit__9daAlink_cFi();
extern "C" void procCutJumpLand__9daAlink_cFv();
extern "C" void procCutTurnInit__9daAlink_cFii();
extern "C" void procCutTurn__9daAlink_cFv();
extern "C" void procCutTurnChargeInit__9daAlink_cFv();
extern "C" void procCutTurnCharge__9daAlink_cFv();
extern "C" void procCutTurnMoveInit__9daAlink_cFi();
extern "C" void procCutTurnMove__9daAlink_cFv();
extern "C" void procCutDownInit__9daAlink_cFv();
extern "C" void procCutDown__9daAlink_cFv();
extern "C" void procCutDownLandInit__9daAlink_cFP13fopEn_enemy_c();
extern "C" void procCutDownLand__9daAlink_cFv();
extern "C" void procCutHeadInit__9daAlink_cFv();
extern "C" void procCutHead__9daAlink_cFv();
extern "C" void procCutHeadLandInit__9daAlink_cFv();
extern "C" void procCutHeadLand__9daAlink_cFv();
extern "C" void procCutLargeJumpChargeInit__9daAlink_cFv();
extern "C" void procCutLargeJumpCharge__9daAlink_cFv();
extern "C" void procCutLargeJumpInit__9daAlink_cFv();
extern "C" void procCutLargeJump__9daAlink_cFv();
extern "C" void procCutLargeJumpLandInit__9daAlink_cFi();
extern "C" void procCutLargeJumpLand__9daAlink_cFv();
extern "C" void procSwordUnequipSpInit__9daAlink_cFv();
extern "C" void procSwordUnequipSp__9daAlink_cFv();
extern "C" void getFreezeR__9daAlink_cCFv();
extern "C" void getFreezeG__9daAlink_cCFv();
extern "C" void getFreezeB__9daAlink_cCFv();
extern "C" void checkMiddleBossGoronRoom__9daAlink_cFv();
extern "C" void setDkCaught__9daAlink_cFP10fopAc_ac_c();
extern "C" void freezeTimerDamage__9daAlink_cFv();
extern "C" void onPressedDamage__9daAlink_cFRC4cXyzs();
extern "C" void checkNoLandDamageSlidePolygon__9daAlink_cFv();
extern "C" void checkCutLandDamage__9daAlink_cFv();
extern "C" void checkCaughtEscapeCutTurn__9daAlink_cFv();
extern "C" void setThrowDamage__9daAlink_cFsffiii();
extern "C" void damageMagnification__9daAlink_cFii();
extern "C" void setDamagePoint__9daAlink_cFiiii();
extern "C" void setDamagePointNormal__9daAlink_cFi();
extern "C" void setLandDamagePoint__9daAlink_cFi();
extern "C" void getDamageVec__9daAlink_cFP12dCcD_GObjInf();
extern "C" void setDashDamage__9daAlink_cFv();
extern "C" void checkIcePolygonDamage__9daAlink_cFP13cBgS_PolyInfo();
extern "C" void checkMagicArmorNoDamage__9daAlink_cFv();
extern "C" void checkPolyDamage__9daAlink_cFv();
extern "C" void checkElecReturnDamage__9daAlink_cFR12dCcD_GObjInfPP10fopAc_ac_c();
extern "C" void damageTimerCount__9daAlink_cFv();
extern "C" void checkHugeAttack__9daAlink_cCFi();
extern "C" void checkLargeAttack__9daAlink_cCFi();
extern "C" void checkDamageAction__9daAlink_cFv();
extern "C" void procDamageInit__9daAlink_cFP12dCcD_GObjInfi();
extern "C" void procDamage__9daAlink_cFv();
extern "C" void procCoLargeDamageInit__9daAlink_cFiissP12dCcD_GObjInfi();
extern "C" void procCoLargeDamage__9daAlink_cFv();
extern "C" void procLargeDamageUpInit__9daAlink_cFiiss();
extern "C" void procLargeDamageUp__9daAlink_cFv();
extern "C" void procCoLargeDamageWallInit__9daAlink_cFiiss();
extern "C" void procCoLargeDamageWall__9daAlink_cFv();
extern "C" void procCoPolyDamageInit__9daAlink_cFv();
extern "C" void procCoPolyDamage__9daAlink_cFv();
extern "C" void procLandDamageInit__9daAlink_cFi();
extern "C" void procLandDamage__9daAlink_cFv();
extern "C" void procCoElecDamageInit__9daAlink_cFP10fopAc_ac_cP12dCcD_GObjInfi();
extern "C" void procCoElecDamage__9daAlink_cFv();
extern "C" void procStEscapeInit__9daAlink_cFv();
extern "C" void procStEscape__9daAlink_cFv();
extern "C" void procDkCaughtInit__9daAlink_cFUi();
extern "C" void procDkCaught__9daAlink_cFv();
extern "C" void setScreamWaitAnime__9daAlink_cFv();
extern "C" void procScreamWaitInit__9daAlink_cFv();
extern "C" void procScreamWait__9daAlink_cFv();
extern "C" void procCoSandWallHitInit__9daAlink_cFv();
extern "C" void procCoSandWallHit__9daAlink_cFv();
extern "C" void procCoLavaReturnInit__9daAlink_cFi();
extern "C" void procCoLavaReturn__9daAlink_cFv();
extern "C" void procCoSwimFreezeReturnInit__9daAlink_cFv();
extern "C" void procCoSwimFreezeReturn__9daAlink_cFv();
extern "C" void checkEnemyGroup__9daAlink_cFP10fopAc_ac_c();
extern "C" void checkSpecialNpc__9daAlink_cFP10fopAc_ac_c();
extern "C" void checkShieldAttackEmphasys__9daAlink_cFv();
extern "C" void checkGuardActionChange__9daAlink_cFv();
extern "C" void stickArrowIncrement__9daAlink_cFi();
extern "C" void setArrowShieldActor__9daAlink_cFP10fopAc_ac_ci();
extern "C" void checkWoodShieldEquipNotIronBall__9daAlink_cCFv();
extern "C" void getArrowShieldOffset__9daAlink_cCFPC4cXyzPC5csXyzP4cXyzP4cXyz();
extern "C" void setArrowShieldPos__9daAlink_cCFP4cXyzP5csXyzPC4cXyzPC4cXyz();
extern "C" void checkUpperGuardAnime__9daAlink_cCFv();
extern "C" void checkPlayerGuard__9daAlink_cCFv();
extern "C" void checkPlayerGuardAndAttack__9daAlink_cCFv();
extern "C" void checkGuardAccept__9daAlink_cFv();
extern "C" void setUpperGuardAnime__9daAlink_cFf();
extern "C" void setShieldGuard__9daAlink_cFv();
extern "C" void setGuardSe__9daAlink_cFP12dCcD_GObjInf();
extern "C" void setSmallGuard__9daAlink_cFP12dCcD_GObjInf();
extern "C" void procGuardSlipInit__9daAlink_cFiP12dCcD_GObjInf();
extern "C" void procGuardSlip__9daAlink_cFv();
extern "C" void procGuardAttackInit__9daAlink_cFv();
extern "C" void procGuardAttack__9daAlink_cFv();
extern "C" void procGuardBreakInit__9daAlink_cFv();
extern "C" void procGuardBreak__9daAlink_cFv();
extern "C" void procTurnMoveInit__9daAlink_cFi();
extern "C" void procTurnMove__9daAlink_cFv();
extern "C" void getArrowFlyData__9daAlink_cCFPfPfi();
extern "C" void getArrowIncAtR__9daAlink_cCFv();
extern "C" void getBombArrowFlyExplodeTime__9daAlink_cCFv();
extern "C" void getArrowIncAtMaxStart__9daAlink_cCFv();
extern "C" void getArrowIncAtMax__9daAlink_cCFv();
extern "C" void checkBowAndSlingItem__9daAlink_cFi();
extern "C" void setSlingModel__9daAlink_cFv();
extern "C" void checkBowCameraArrowPosP__9daAlink_cFPsPs();
extern "C" void checkArrowChargeEnd__9daAlink_cCFv();
extern "C" void checkBowReadyAnime__9daAlink_cCFv();
extern "C" void checkBowAnime__9daAlink_cCFv();
extern "C" void makeArrow__9daAlink_cFv();
extern "C" void deleteArrow__9daAlink_cFv();
extern "C" void setBowOrSlingStatus__9daAlink_cFv();
extern "C" void changeArrowType__9daAlink_cFv();
extern "C" void cancelBowMoveRideNotAtn__9daAlink_cFv();
extern "C" void cancelBowMove__9daAlink_cFv();
extern "C" void setBowReadyAnime__9daAlink_cFv();
extern "C" void setBowReloadAnime__9daAlink_cFv();
extern "C" void checkUpperItemActionBow__9daAlink_cFv();
extern "C" void checkUpperItemActionBowFly__9daAlink_cFv();
extern "C" void checkNextActionBow__9daAlink_cFv();
extern "C" void setBowModel__9daAlink_cFv();
extern "C" void checkBowGrabLeftHand__9daAlink_cCFv();
extern "C" void setBowHangAnime__9daAlink_cFv();
extern "C" void setBowNormalAnime__9daAlink_cFv();
extern "C" void setBowSight__9daAlink_cFv();
extern "C" void procBowSubjectInit__9daAlink_cFv();
extern "C" void procBowSubject__9daAlink_cFv();
extern "C" void procBowMoveInit__9daAlink_cFv();
extern "C" void procBowMove__9daAlink_cFv();
extern "C" void checkBoomerangLockAccept__9daAlink_cFv();
extern "C" void getBoomSpeed__9daAlink_cFv();
extern "C" void getBoomCatchSpeed__9daAlink_cCFv();
extern "C" void getBoomFlyMax__9daAlink_cCFv();
extern "C" void getBoomLockMax__9daAlink_cFv();
extern "C" void getBoomBgThroughTime__9daAlink_cCFv();
extern "C" void checkBossBabaRoom__9daAlink_cFv();
extern "C" void cancelBoomerangLock__9daAlink_cFP10fopAc_ac_c();
extern "C" void getBoomerangActor__9daAlink_cFv();
extern "C" void checkBoomerangChargeEnd__9daAlink_cFv();
extern "C" void checkBoomerangCarry__9daAlink_cFP10fopAc_ac_c();
extern "C" void initBoomerangUpperAnimeSpeed__9daAlink_cFi();
extern "C" void checkBoomerangAnime__9daAlink_cCFv();
extern "C" void checkBoomerangThrowAnime__9daAlink_cCFv();
extern "C" void setBoomerangReadyQuake__9daAlink_cFv();
extern "C" void setBoomerangReadyAnime__9daAlink_cFv();
extern "C" void setThrowBoomerangAnime__9daAlink_cFv();
extern "C" void setBoomerangCatchAnime__9daAlink_cFv();
extern "C" void throwBoomerang__9daAlink_cFv();
extern "C" void returnBoomerang__9daAlink_cFi();
extern "C" void checkUpperItemActionBoomerang__9daAlink_cFv();
extern "C" void checkUpperItemActionBoomerangFly__9daAlink_cFv();
extern "C" void checkNextActionBoomerang__9daAlink_cFv();
extern "C" void checkBoomerangCatchAction__9daAlink_cFv();
extern "C" void setBoomerangSight__9daAlink_cFv();
extern "C" void procBoomerangSubjectInit__9daAlink_cFv();
extern "C" void procBoomerangSubject__9daAlink_cFv();
extern "C" void procBoomerangMoveInit__9daAlink_cFv();
extern "C" void procBoomerangMove__9daAlink_cFv();
extern "C" void procBoomerangCatchInit__9daAlink_cFv();
extern "C" void procBoomerangCatch__9daAlink_cFv();
extern "C" void checkLv6BossRoom__9daAlink_cFv();
extern "C" void getCopyRodBallSpeed__9daAlink_cCFv();
extern "C" void getCopyRodBallReturnSpeed__9daAlink_cCFv();
extern "C" void getCopyRodBallDisMax__9daAlink_cCFv();
extern "C" void getCopyRodControllActor__9daAlink_cFv();
extern "C" void getCopyRodCameraActor__9daAlink_cFv();
extern "C" void initCopyRodUpperAnimeSpeed__9daAlink_cFi();
extern "C" void checkForestOldCentury__9daAlink_cFv();
extern "C" void checkCopyRodTopUse__9daAlink_cFv();
extern "C" void checkCopyRodAnime__9daAlink_cCFv();
extern "C" void setCopyRodControllAnime__9daAlink_cFv();
extern "C" void setCopyRodControllUpperSpeedRate__9daAlink_cFv();
extern "C" void setCopyRodModel__9daAlink_cFv();
extern "C" void setCopyRodReadyAnime__9daAlink_cFv();
extern "C" void throwCopyRod__9daAlink_cFv();
extern "C" void returnCopyRod__9daAlink_cFv();
extern "C" void checkUpperItemActionCopyRod__9daAlink_cFv();
extern "C" void checkUpperItemActionCopyRodFly__9daAlink_cFv();
extern "C" void checkNextActionCopyRod__9daAlink_cFv();
extern "C" void setCopyRodSight__9daAlink_cFv();
extern "C" void procCopyRodSubjectInit__9daAlink_cFv();
extern "C" void procCopyRodSubject__9daAlink_cFv();
extern "C" void procCopyRodMoveInit__9daAlink_cFv();
extern "C" void procCopyRodMove__9daAlink_cFv();
extern "C" void procCopyRodSwingInit__9daAlink_cFv();
extern "C" void procCopyRodSwing__9daAlink_cFv();
extern "C" void procCopyRodReviveInit__9daAlink_cFv();
extern "C" void procCopyRodRevive__9daAlink_cFv();
extern "C" void concatMagneBootMtx__9daAlink_cFv();
extern "C" void concatMagneBootInvMtx__9daAlink_cFv();
extern "C" void multVecMagneBootInvMtx__9daAlink_cFP4cXyz();
extern "C" void commonMagneLineCheck__9daAlink_cFP4cXyzP4cXyz();
extern "C" void checkBootsMoveAnime__9daAlink_cFi();
extern "C" void setHeavyBoots__9daAlink_cFi();
extern "C" void getMagneBootsLocalAngleY__9daAlink_cFsi();
extern "C" void setMagneBootsMtx__9daAlink_cFP13cBgS_PolyInfoi();
extern "C" void cancelMagneBootsOn__9daAlink_cFv();
extern "C" void checkMagneBootsFly__9daAlink_cFv();
extern "C" void procBootsEquipInit__9daAlink_cFv();
extern "C" void procBootsEquip__9daAlink_cFv();
extern "C" void procMagneBootsFlyInit__9daAlink_cFv();
extern "C" void procMagneBootsFly__9daAlink_cFv();
extern "C" void getBombExplodeTime__9daAlink_cCFv();
extern "C" void getBombGravity__9daAlink_cCFv();
extern "C" void getBombMaxFallSpeed__9daAlink_cCFv();
extern "C" void getBombBoundRate__9daAlink_cCFv();
extern "C" void getBombStopSpeedY__9daAlink_cCFv();
extern "C" void getBombMaxSpeedY__9daAlink_cCFv();
extern "C" void getBombEffScale__9daAlink_cCFv();
extern "C" void getBombAtR__9daAlink_cCFv();
extern "C" void getEnemyBombColorR__9daAlink_cCFv();
extern "C" void getBombWaterGravity__9daAlink_cCFv();
extern "C" void getBombWaterMaxFallSpeed__9daAlink_cCFv();
extern "C" void getBombExplodeWaterEffectLimit__9daAlink_cCFv();
extern "C" void getBombInsectLimitAngle__9daAlink_cCFv();
extern "C" static void daAlink_checkLightBallA__FP10fopAc_ac_c();
extern "C" static void daAlink_checkLightBallB__FP10fopAc_ac_c();
extern "C" static void daAlink_searchLightBall__FP10fopAc_ac_cPv();
extern "C" void checkGrabLineCheck__9daAlink_cFv();
extern "C" void setGrabCollisionOffset__9daAlink_cFffP13cBgS_PolyInfo();
extern "C" void exchangeGrabActor__9daAlink_cFP10fopAc_ac_c();
extern "C" void setForceGrab__9daAlink_cFP10fopAc_ac_cii();
extern "C" void getGrabThrowRate__9daAlink_cFv();
extern "C" void checkGrabThrowAnime__9daAlink_cCFv();
extern "C" void checkGrabAnime__9daAlink_cCFv();
extern "C" void checkGrabAnimeAndThrow__9daAlink_cCFv();
extern "C" void checkGrabCarryActor__9daAlink_cFv();
extern "C" void checkGrabSlowMoveActor__9daAlink_cFv();
extern "C" void checkGrabHeavyActor__9daAlink_cFv();
extern "C" void checkGrabSideActor__9daAlink_cFv();
extern "C" void setGrabUpperAnime__9daAlink_cFf();
extern "C" void checkGrabRooster__9daAlink_cFv();
extern "C" void setGrabItemPos__9daAlink_cFv();
extern "C" void freeGrabItem__9daAlink_cFv();
extern "C" void setGrabUpperSpeedRate__9daAlink_cFv();
extern "C" void setCarryArmAngle__9daAlink_cFff();
extern "C" void checkGrabNotThrow__9daAlink_cFv();
extern "C" void checkNextActionGrab__9daAlink_cFv();
extern "C" void initGrabNextMode__9daAlink_cFv();
extern "C" void setGrabItemThrow__9daAlink_cFv();
extern "C" void checkUpperGrabItemThrow__9daAlink_cFf();
extern "C" void putObjLineCheck__9daAlink_cFR11dBgS_LinChkP4cXyzP10fopAc_ac_c();
extern "C" void grabLineCheck__9daAlink_cFP4cXyzP4cXyz();
extern "C" void setGrabItemActor__9daAlink_cFP10fopAc_ac_c();
extern "C" void procGrabReadyInit__9daAlink_cFv();
extern "C" void procGrabReady__9daAlink_cFv();
extern "C" void procGrabUpInit__9daAlink_cFv();
extern "C" void procGrabUp__9daAlink_cFv();
extern "C" void procGrabMiss__9daAlink_cFv();
extern "C" void procGrabThrowInit__9daAlink_cFi();
extern "C" void procGrabThrow__9daAlink_cFv();
extern "C" void procGrabPutInit__9daAlink_cFv();
extern "C" void procGrabPut__9daAlink_cFv();
extern "C" void procGrabWaitInit__9daAlink_cFv();
extern "C" void procGrabWait__9daAlink_cFv();
extern "C" void procGrabReboundInit__9daAlink_cFi();
extern "C" void procGrabRebound__9daAlink_cFv();
extern "C" void procGrabStandInit__9daAlink_cFv();
extern "C" void procGrabStand__9daAlink_cFv();
extern "C" void checkInsectActorName__9daAlink_cFP10fopAc_ac_c();
extern "C" void procInsectCatchInit__9daAlink_cFv();
extern "C" void procInsectCatch__9daAlink_cFv();
extern "C" void procPickUpInit__9daAlink_cFv();
extern "C" void procPickUp__9daAlink_cFv();
extern "C" void procPickPutInit__9daAlink_cFi();
extern "C" void procPickPut__9daAlink_cFv();
extern "C" void checkSetChainPullAnime__9daAlink_cFs();
extern "C" void getChainStickAngleY__9daAlink_cCFs();
extern "C" void checkChainEmphasys__9daAlink_cFv();
extern "C" void searchFmChainPos__9daAlink_cFv();
extern "C" void setFmChainPosFromOut__9daAlink_cFP10fopAc_ac_cP4cXyzi();
extern "C" void checkChainBlockPushPull__9daAlink_cFv();
extern "C" void procFmChainUpInit__9daAlink_cFv();
extern "C" void procFmChainUp__9daAlink_cFv();
extern "C" void procFmChainStrongPullInit__9daAlink_cFv();
extern "C" void procFmChainStrongPull__9daAlink_cFv();
extern "C" void setWallGrabStatus__9daAlink_cFUcUc();
extern "C" void getWallGrabStatus__9daAlink_cFv();
extern "C" void wallGrabTrigger__9daAlink_cFv();
extern "C" void wallGrabButton__9daAlink_cFv();
extern "C" void setPushPullKeepData__9daAlink_cFQ29dBgW_Base13PushPullLabeli();
extern "C" void checkPushPullTurnBlock__9daAlink_cFv();
extern "C" void checkPullBehindWall__9daAlink_cFv();
extern "C" void offGoatStopGame__9daAlink_cFv();
extern "C" void checkGoatCatchActor__9daAlink_cFP10fopAc_ac_c();
extern "C" void getGoatCatchDistance2__9daAlink_cFv();
extern "C" void endPushPull__9daAlink_cFv();
extern "C" void getPushPullAnimeSpeed__9daAlink_cFv();
extern "C" void procCoPushPullWaitInit__9daAlink_cFi();
extern "C" void procCoPushPullWait__9daAlink_cFv();
extern "C" void procCoPushMoveInit__9daAlink_cFii();
extern "C" void procCoPushMove__9daAlink_cFv();
extern "C" void procPullMoveInit__9daAlink_cFi();
extern "C" void procPullMove__9daAlink_cFv();
extern "C" static void daAlink_searchGoat__FP10fopAc_ac_cPv();
extern "C" void cancelGoronThrowEvent__9daAlink_cFv();
extern "C" void setGoatStopGameFail__9daAlink_cFP10fopAc_ac_c();
extern "C" void procGoatMoveInit__9daAlink_cFv();
extern "C" void procGoatMove__9daAlink_cFv();
extern "C" void procGoatCatchInit__9daAlink_cFP10fopAc_ac_cf();
extern "C" void procGoatCatch__9daAlink_cFv();
extern "C" void procGoatStrokeInit__9daAlink_cFv();
extern "C" void procGoatStroke__9daAlink_cFv();
extern "C" void procGoronMoveInit__9daAlink_cFv();
extern "C" void procGoronMove__9daAlink_cFv();
extern "C" void checkSumouVsActor__9daAlink_cFv();
extern "C" void cancelSumouMode__9daAlink_cFv();
extern "C" void sumouPunchTrigger__9daAlink_cFv();
extern "C" void setSumouPunchStatus__9daAlink_cFv();
extern "C" void procSumouReadyInit__9daAlink_cFv();
extern "C" void procSumouReady__9daAlink_cFv();
extern "C" void procSumouMoveInit__9daAlink_cFv();
extern "C" void procSumouMove__9daAlink_cFv();
extern "C" void procSumouSideMoveInit__9daAlink_cFv();
extern "C" void procSumouSideMove__9daAlink_cFv();
extern "C" void procSumouActionInit__9daAlink_cFiii();
extern "C" void procSumouAction__9daAlink_cFv();
extern "C" void procSumouStaggerInit__9daAlink_cFv();
extern "C" void procSumouStagger__9daAlink_cFv();
extern "C" void procSumouWinLoseInit__9daAlink_cFv();
extern "C" void procSumouWinLose__9daAlink_cFv();
extern "C" void procSumouShikoInit__9daAlink_cFv();
extern "C" void procSumouShiko__9daAlink_cFv();
extern "C" static void daAlink_searchBoar__FP10fopAc_ac_cPv();
extern "C" static void daAlink_searchCoach__FP10fopAc_ac_cPv();
extern "C" void checkHorseZeldaBowMode__9daAlink_cFv();
extern "C" void setHorseZeldaDamage__9daAlink_cFv();
extern "C" void checkHorseDashAccept__9daAlink_cFv();
extern "C" void checkCowGame__9daAlink_cFv();
extern "C" void getReinRideDirection__9daAlink_cFv();
extern "C" void checkReinRideBgCheck__9daAlink_cFv();
extern "C" void commonInitForceRideRein__9daAlink_cFv();
extern "C" void initForceRideBoar__9daAlink_cFv();
extern "C" void initForceRideHorse__9daAlink_cFv();
extern "C" void rideGetOff__9daAlink_cFv();
extern "C" void checkHorseNotDamageReaction__9daAlink_cCFv();
extern "C" void checkHorseWaitLashAnime__9daAlink_cCFv();
extern "C" void checkHorseReinLeftOnly__9daAlink_cCFv();
extern "C" void getReinHandType__9daAlink_cCFv();
extern "C" void checkHorseLieAnime__9daAlink_cCFv();
extern "C" void checkHorseSubjectivity__9daAlink_cCFv();
extern "C" void setHorseSwordUpAnime__9daAlink_cFv();
extern "C" void setHorseTurnUpperAnime__9daAlink_cFi();
extern "C" void checkHorseNoUpperAnime__9daAlink_cCFv();
extern "C" void getHorseReinHandPos__9daAlink_cFP4cXyzP4cXyz();
extern "C" void checkHorseNotGrab__9daAlink_cCFv();
extern "C" void setHorseStirrup__9daAlink_cFv();
extern "C" void changeBoarRunRide__9daAlink_cFv();
extern "C" void setSyncHorsePos__9daAlink_cFv();
extern "C" void setSyncBoarPos__9daAlink_cFv();
extern "C" void setSyncBoarRunPos__9daAlink_cFv();
extern "C" void setSyncRidePos__9daAlink_cFv();
extern "C" void setHorseTurnAnime__9daAlink_cFv();
extern "C" void getBaseHorseAnime__9daAlink_cFPQ29daAlink_c11daAlink_ANM();
extern "C" void checkHorseSpecialProc__9daAlink_cFv();
extern "C" void checkHorseServiceWaitAnime__9daAlink_cFv();
extern "C" void setSyncHorse__9daAlink_cFi();
extern "C" void setSyncBoar__9daAlink_cFi();
extern "C" void setSyncRide__9daAlink_cFi();
extern "C" void setBaseHorseAnimeFrame__9daAlink_cFv();
extern "C" void setBaseBoarAnime__9daAlink_cFv();
extern "C" void setBaseRideAnime__9daAlink_cFv();
extern "C" void checkHorseSwordUpSpped__9daAlink_cFv();
extern "C" void setHorseSwordUp__9daAlink_cFi();
extern "C" void setRideSubjectAngle__9daAlink_cFs();
extern "C" void setBodyAngleRideReadyAnime__9daAlink_cFv();
extern "C" void checkHorseGetOffWallCheck__9daAlink_cFP4cXyzP4cXyzs();
extern "C" void checkHorseGetOffDirection__9daAlink_cFv();
extern "C" void boarForceGetOff__9daAlink_cFv();
extern "C" void horseGetOffEnd__9daAlink_cFv();
extern "C" void checkNextActionHorse__9daAlink_cFv();
extern "C" void checkHorseGetOff__9daAlink_cFv();
extern "C" void checkHorseGetOffAndSetDoStatus__9daAlink_cFv();
extern "C" void setHorseGetOff__9daAlink_cFi();
extern "C" void procHorseRideInit__9daAlink_cFv();
extern "C" void procHorseRide__9daAlink_cFv();
extern "C" void procHorseGetOffInit__9daAlink_cFi();
extern "C" void procHorseGetOff__9daAlink_cFv();
extern "C" void procHorseWaitInit__9daAlink_cFv();
extern "C" void procHorseWait__9daAlink_cFv();
extern "C" void procHorseTurnInit__9daAlink_cFv();
extern "C" void procHorseTurn__9daAlink_cFv();
extern "C" void procHorseJumpInit__9daAlink_cFv();
extern "C" void procHorseJump__9daAlink_cFv();
extern "C" void procHorseLandInit__9daAlink_cFv();
extern "C" void procHorseLand__9daAlink_cFv();
extern "C" void procHorseSubjectivityInit__9daAlink_cFv();
extern "C" void procHorseSubjectivity__9daAlink_cFv();
extern "C" void procHorseCutInit__9daAlink_cFv();
extern "C" void procHorseCut__9daAlink_cFv();
extern "C" void procHorseCutChargeReadyInit__9daAlink_cFv();
extern "C" void procHorseCutChargeReady__9daAlink_cFv();
extern "C" void procHorseCutTurnInit__9daAlink_cFv();
extern "C" void procHorseCutTurn__9daAlink_cFv();
extern "C" void procHorseDamageInit__9daAlink_cFP12dCcD_GObjInf();
extern "C" void procHorseDamage__9daAlink_cFv();
extern "C" void procHorseBowSubjectInit__9daAlink_cFv();
extern "C" void procHorseBowSubject__9daAlink_cFv();
extern "C" void procHorseBowMoveInit__9daAlink_cFv();
extern "C" void procHorseBowMove__9daAlink_cFv();
extern "C" void procHorseGrabMoveInit__9daAlink_cFv();
extern "C" void procHorseGrabMove__9daAlink_cFv();
extern "C" void procHorseBoomerangSubjectInit__9daAlink_cFv();
extern "C" void procHorseBoomerangSubject__9daAlink_cFv();
extern "C" void procHorseBoomerangMoveInit__9daAlink_cFv();
extern "C" void procHorseBoomerangMove__9daAlink_cFv();
extern "C" void procHorseHookshotSubjectInit__9daAlink_cFv();
extern "C" void procHorseHookshotSubject__9daAlink_cFv();
extern "C" void procHorseHookshotMoveInit__9daAlink_cFv();
extern "C" void procHorseHookshotMove__9daAlink_cFv();
extern "C" void procHorseBottleDrinkInit__9daAlink_cFUs();
extern "C" void procHorseBottleDrink__9daAlink_cFv();
extern "C" void procHorseKandelaarPourInit__9daAlink_cFv();
extern "C" void procHorseKandelaarPour__9daAlink_cFv();
extern "C" void procHorseComebackInit__9daAlink_cFv();
extern "C" void procHorseComeback__9daAlink_cFv();
extern "C" void procHorseRunInit__9daAlink_cFv();
extern "C" void procHorseRun__9daAlink_cFv();
extern "C" void procHorseHangInit__9daAlink_cFP12dCcD_GObjInfi();
extern "C" void procHorseHang__9daAlink_cFv();
extern "C" void procHorseGetKeyInit__9daAlink_cFv();
extern "C" void procHorseGetKey__9daAlink_cFv();
extern "C" void procHorseLookDownInit__9daAlink_cFv();
extern "C" void procHorseLookDown__9daAlink_cFv();
extern "C" void procBoarRunInit__9daAlink_cFv();
extern "C" void procBoarRun__9daAlink_cFv();
extern "C" void getCanoeMaxSpeed__9daAlink_cCFv();
extern "C" void getCanoeBackMaxSpeed__9daAlink_cCFv();
extern "C" void getCanoeCres__9daAlink_cCFv();
extern "C" void getCanoeSpeedRate__9daAlink_cCFv();
extern "C" void getCanoeMaxRotSpeed__9daAlink_cCFv();
extern "C" void getCanoeLocalPaddleTop__9daAlink_cFv();
extern "C" static void daAlink_searchCanoe__FP10fopAc_ac_cPv();
extern "C" void checkCanoeRideTandem__9daAlink_cFv();
extern "C" void checkFishingRodAndLureItem__9daAlink_cCFv();
extern "C" void initFishingRodHand__9daAlink_cFv();
extern "C" void getCanoePaddleMatrix__9daAlink_cFv();
extern "C" void checkFishingRodGrab__9daAlink_cCFP10fopAc_ac_c();
extern "C" void checkCanoePaddleGrab__9daAlink_cCFP10fopAc_ac_c();
extern "C" void checkCanoeFishingRodGrabOrPut__9daAlink_cCFv();
extern "C" void initCanoeRide__9daAlink_cFv();
extern "C" void checkCanoeJumpRide__9daAlink_cFv();
extern "C" void setArmReelAnime__9daAlink_cFv();
extern "C" void setFishingWaitAction__9daAlink_cFv();
extern "C" void setFishGetFace__9daAlink_cFv();
extern "C" void setRideCanoeBasePos__9daAlink_cFP10fopAc_ac_c();
extern "C" void setSyncCanoePos__9daAlink_cFv();
extern "C" void canoeCommon__9daAlink_cFv();
extern "C" void checkNextActionCanoe__9daAlink_cFv();
extern "C" void procCanoeRideInit__9daAlink_cFv();
extern "C" void procCanoeRide__9daAlink_cFv();
extern "C" void procCanoeJumpRideInit__9daAlink_cFP10fopAc_ac_c();
extern "C" void procCanoeJumpRide__9daAlink_cFv();
extern "C" void procCanoeGetOffInit__9daAlink_cFv();
extern "C" void procCanoeGetOff__9daAlink_cFv();
extern "C" void procCanoeWaitInit__9daAlink_cFi();
extern "C" void procCanoeWait__9daAlink_cFv();
extern "C" void procCanoeRowInit__9daAlink_cFi();
extern "C" void procCanoeRow__9daAlink_cFv();
extern "C" void procCanoePaddleShiftInit__9daAlink_cFi();
extern "C" void procCanoePaddleShift__9daAlink_cFv();
extern "C" void procCanoePaddlePutInit__9daAlink_cFi();
extern "C" void procCanoePaddlePut__9daAlink_cFv();
extern "C" void procCanoePaddleGrabInit__9daAlink_cFv();
extern "C" void procCanoePaddleGrab__9daAlink_cFv();
extern "C" void procCanoeRodGrabInit__9daAlink_cFv();
extern "C" void procCanoeRodGrab__9daAlink_cFv();
extern "C" void procCanoeFishingWaitInit__9daAlink_cFv();
extern "C" void procCanoeFishingWait__9daAlink_cFv();
extern "C" void procCanoeFishingReelInit__9daAlink_cFv();
extern "C" void procCanoeFishingReel__9daAlink_cFv();
extern "C" void procCanoeFishingGetInit__9daAlink_cFv();
extern "C" void procCanoeFishingGet__9daAlink_cFv();
extern "C" void procCanoeSubjectivityInit__9daAlink_cFv();
extern "C" void procCanoeSubjectivity__9daAlink_cFv();
extern "C" void procCanoeBowSubjectInit__9daAlink_cFv();
extern "C" void procCanoeBowSubject__9daAlink_cFv();
extern "C" void procCanoeBowMoveInit__9daAlink_cFv();
extern "C" void procCanoeBowMove__9daAlink_cFv();
extern "C" void procCanoeGrabMoveInit__9daAlink_cFv();
extern "C" void procCanoeGrabMove__9daAlink_cFv();
extern "C" void procCanoeBoomerangSubjectInit__9daAlink_cFv();
extern "C" void procCanoeBoomerangSubject__9daAlink_cFv();
extern "C" void procCanoeBoomerangMoveInit__9daAlink_cFv();
extern "C" void procCanoeBoomerangMove__9daAlink_cFv();
extern "C" void procCanoeHookshotSubjectInit__9daAlink_cFv();
extern "C" void procCanoeHookshotSubject__9daAlink_cFv();
extern "C" void procCanoeHookshotMoveInit__9daAlink_cFv();
extern "C" void procCanoeHookshotMove__9daAlink_cFv();
extern "C" void procCanoeBottleDrinkInit__9daAlink_cFUs();
extern "C" void procCanoeBottleDrink__9daAlink_cFv();
extern "C" void procCanoeKandelaarPourInit__9daAlink_cFv();
extern "C" void procCanoeKandelaarPour__9daAlink_cFv();
extern "C" void setGroundFishingRodActor__9daAlink_cFv();
extern "C" void procFishingCastInit__9daAlink_cFv();
extern "C" void procFishingCast__9daAlink_cFv();
extern "C" void procFishingFoodInit__9daAlink_cFv();
extern "C" void procFishingFood__9daAlink_cFv();
extern "C" void getCrawlMoveAnmSpeed__9daAlink_cFv();
extern "C" void getCrawlMoveSpeed__9daAlink_cFv();
extern "C" void setCrawlMoveDirectionArrow__9daAlink_cFv();
extern "C" void changeCrawlAutoMoveProc__9daAlink_cFP4cXyz();
extern "C" void getCrawlMoveVec__9daAlink_cFP4cXyzP4cXyzP4cXyziiPUc();
extern "C" void crawlBgCheck__9daAlink_cFP4cXyzP4cXyzi();
extern "C" void checkCrawlSideWall__9daAlink_cFP4cXyzP4cXyzP4cXyzP4cXyzPsPs();
extern "C" void decideCrawlDoStatus__9daAlink_cFv();
extern "C" void checkNotCrawlStand__9daAlink_cFP4cXyz();
extern "C" void checkNotCrawlStand__9daAlink_cFP4cXyzP4cXyz();
extern "C" void checkCrawlInHoll__9daAlink_cFP4cXyzP4cXyzP4cXyzi();
extern "C" void setCrawlMoveHoll__9daAlink_cFv();
extern "C" void setCrawlMoveAngle__9daAlink_cFv();
extern "C" void stopHalfMoveAnime__9daAlink_cFf();
extern "C" void setCrawlAutoMoveAimPos__9daAlink_cFv();
extern "C" void procCrawlStartInit__9daAlink_cFv();
extern "C" void procCrawlStart__9daAlink_cFv();
extern "C" void procCrawlMoveInit__9daAlink_cFss();
extern "C" void procCrawlMove__9daAlink_cFv();
extern "C" void procCrawlAutoMoveInit__9daAlink_cFiP4cXyz();
extern "C" void procCrawlAutoMove__9daAlink_cFv();
extern "C" void procCrawlEndInit__9daAlink_cFiss();
extern "C" void procCrawlEnd__9daAlink_cFv();
extern "C" void getHangMoveAnmSpeed__9daAlink_cFv();
extern "C" void getHangDirectionFromAngle__9daAlink_cFv();
extern "C" void hangMoveBgCheck__9daAlink_cFsP4cXyz();
extern "C" void changeHangMoveProc__9daAlink_cFi();
extern "C" void checkHangFootWall__9daAlink_cFv();
extern "C" void setHangGroundY__9daAlink_cFv();
extern "C" void changeHangEndProc__9daAlink_cFv();
extern "C" void checkHangStartSideWall__9daAlink_cFs();
extern "C" void procHangStartInit__9daAlink_cFv();
extern "C" void procHangStart__9daAlink_cFv();
extern "C" void procHangFallStartInit__9daAlink_cFP8cM3dGPla();
extern "C" void procHangFallStart__9daAlink_cFv();
extern "C" void procHangUpInit__9daAlink_cFi();
extern "C" void procHangUp__9daAlink_cFv();
extern "C" void procHangWaitInit__9daAlink_cFv();
extern "C" void procHangWait__9daAlink_cFv();
extern "C" void procHangMoveInit__9daAlink_cFi();
extern "C" void procHangMove__9daAlink_cFv();
extern "C" void procHangClimbInit__9daAlink_cFf();
extern "C" void procHangClimb__9daAlink_cFv();
extern "C" void procHangWallCatchInit__9daAlink_cFv();
extern "C" void procHangWallCatch__9daAlink_cFv();
extern "C" void procHangReadyInit__9daAlink_cFv();
extern "C" void procHangReady__9daAlink_cFv();
extern "C" void procHangLeverDownInit__9daAlink_cFv();
extern "C" void procHangLeverDown__9daAlink_cFv();
extern "C" void changeDragonActor__9daAlink_cFP10fopAc_ac_c();
extern "C" void setDragonHangPos__9daAlink_cFv();
extern "C" void setOctaIealHangPos__9daAlink_cFv();
extern "C" void setBossBodyHangPos__9daAlink_cFv();
extern "C" void procBossBodyHangInit__9daAlink_cFP10fopAc_ac_c();
extern "C" void procBossBodyHang__9daAlink_cFv();
extern "C" void getLadderUnitCount__9daAlink_cCFv();
extern "C" void setLadderInit__9daAlink_cFv();
extern "C" void setLadderPosInit__9daAlink_cFv();
extern "C" void setLadderPos__9daAlink_cFi();
extern "C" void getLadderMoveAnmSpeed__9daAlink_cFv();
extern "C" void changeLadderMoveProc__9daAlink_cFi();
extern "C" void setMoveBGLadderCorrect__9daAlink_cFv();
extern "C" void checkLadderFall__9daAlink_cFv();
extern "C" void procLadderUpStartInit__9daAlink_cFv();
extern "C" void procLadderUpStart__9daAlink_cFv();
extern "C" void procLadderUpEndInit__9daAlink_cFi();
extern "C" void procLadderUpEnd__9daAlink_cFv();
extern "C" void procLadderDownStartInit__9daAlink_cFv();
extern "C" void procLadderDownStart__9daAlink_cFv();
extern "C" void procLadderDownEndInit__9daAlink_cFi();
extern "C" void procLadderDownEnd__9daAlink_cFv();
extern "C" void procLadderMoveInit__9daAlink_cFiiP4cXyz();
extern "C" void procLadderMove__9daAlink_cFv();
extern "C" void getClimbMoveUpDownAnmSpeed__9daAlink_cFv();
extern "C" void getClimbMoveSideAnmSpeed__9daAlink_cFv();
extern "C" void checkClimbCode__9daAlink_cFR13cBgS_PolyInfo();
extern "C" void setClimbInit__9daAlink_cFv();
extern "C" void setClimbShapeOffset__9daAlink_cFv();
extern "C" void getClimbDirectionFromAngle__9daAlink_cFv();
extern "C" void changeClimbMoveProc__9daAlink_cFi();
extern "C" void checkClimbMoveUpDownProc__9daAlink_cFi();
extern "C" void checkClimbMoveSideProc__9daAlink_cFi();
extern "C" void setMoveBGClimbCorrect__9daAlink_cFv();
extern "C" void checkBgCorrectClimbMove__9daAlink_cFP4cXyzP4cXyz();
extern "C" void checkClimbRoof__9daAlink_cFf();
extern "C" void checkClimbGround__9daAlink_cFP4cXyzf();
extern "C" void checkBgClimbMove__9daAlink_cFi();
extern "C" void setClimbStartNotGround__9daAlink_cFv();
extern "C" void procClimbUpStartInit__9daAlink_cFi();
extern "C" void procClimbUpStart__9daAlink_cFv();
extern "C" void procClimbDownStartInit__9daAlink_cFs();
extern "C" void procClimbDownStart__9daAlink_cFv();
extern "C" void procClimbMoveUpDownInit__9daAlink_cFi();
extern "C" void procClimbMoveUpDown__9daAlink_cFv();
extern "C" void procClimbMoveSideInit__9daAlink_cFv();
extern "C" void procClimbMoveSide__9daAlink_cFv();
extern "C" void procClimbWaitInit__9daAlink_cFii();
extern "C" void procClimbWait__9daAlink_cFv();
extern "C" void procClimbToRoofInit__9daAlink_cFv();
extern "C" void procClimbToRoof__9daAlink_cFv();
extern "C" void getRoofHangFMoveAnmSpeed__9daAlink_cCFv();
extern "C" void getRoofHangSMoveAnmSpeed__9daAlink_cCFv();
extern "C" void setRoofHangHandOnSE__9daAlink_cFP13cBgS_PolyInfo();
extern "C" void checkRoofHangMovePos__9daAlink_cFv();
extern "C" void commonRoofHangProc__9daAlink_cFv();
extern "C" void checkNextActionRoofHang__9daAlink_cFv();
extern "C" void procRoofHangStartInit__9daAlink_cFRC13cBgS_PolyInfoRC4cXyzi();
extern "C" void procRoofHangStart__9daAlink_cFv();
extern "C" void procRoofHangWaitInit__9daAlink_cFi();
extern "C" void procRoofHangWait__9daAlink_cFv();
extern "C" void procRoofHangFrontMoveInit__9daAlink_cFv();
extern "C" void procRoofHangFrontMove__9daAlink_cFv();
extern "C" void procRoofHangSideMoveInit__9daAlink_cFv();
extern "C" void procRoofHangSideMove__9daAlink_cFv();
extern "C" void procRoofHangTurnInit__9daAlink_cFv();
extern "C" void procRoofHangTurn__9daAlink_cFv();
extern "C" void setRoofHangSwitch__9daAlink_cFv();
extern "C" void procRoofSwitchHangInit__9daAlink_cFP10fopAc_ac_c();
extern "C" void procRoofSwitchHang__9daAlink_cFv();
extern "C" void getHangPos__13daObjSwHang_cFv();
extern "C" void checkZoraWearMaskDraw__9daAlink_cFv();
extern "C" void checkAcceptUseItemInWater__9daAlink_cCFUs();
extern "C" void swimDeleteItem__9daAlink_cFv();
extern "C" void getZoraSwim__9daAlink_cCFv();
extern "C" void getSwimFrontMaxSpeed__9daAlink_cCFv();
extern "C" void getSwimMaxFallSpeed__9daAlink_cCFv();
extern "C" void checkOxygenTimer__9daAlink_cFv();
extern "C" void offOxygenTimer__9daAlink_cFv();
extern "C" void checkPossibleWaterInMode__9daAlink_cCFv();
extern "C" void setWaterInAnmRate__9daAlink_cFP16daPy_frameCtrl_cf();
extern "C" void swimBgCheck__9daAlink_cFf();
extern "C" void setSpeedAndAngleSwim__9daAlink_cFv();
extern "C" void checkNextActionSwim__9daAlink_cFv();
extern "C" void checkSwimAction__9daAlink_cFi();
extern "C" void checkSwimUpAction__9daAlink_cFv();
extern "C" void swimOutAfter__9daAlink_cFi();
extern "C" void checkSwimFall__9daAlink_cFv();
extern "C" void checkSwimOutAction__9daAlink_cFv();
extern "C" void setSwimMoveAnime__9daAlink_cFv();
extern "C" void checkSwimButtonAccept__9daAlink_cFv();
extern "C" void checkUpSwimButtonAccept__9daAlink_cFv();
extern "C" void checkSwimButtonMove__9daAlink_cFv();
extern "C" void checkZoraSwimMove__9daAlink_cFv();
extern "C" void checkSwimNeckUpDown__9daAlink_cCFv();
extern "C" void setSwimUpDownOffset__9daAlink_cFv();
extern "C" void procSwimUpInit__9daAlink_cFv();
extern "C" void procSwimUp__9daAlink_cFv();
extern "C" void procSwimWaitInit__9daAlink_cFi();
extern "C" void procSwimWait__9daAlink_cFv();
extern "C" void procSwimMoveInit__9daAlink_cFv();
extern "C" void procSwimMove__9daAlink_cFv();
extern "C" void procSwimDiveInit__9daAlink_cFv();
extern "C" void procSwimDive__9daAlink_cFv();
extern "C" void procSwimHookshotSubjectInit__9daAlink_cFv();
extern "C" void procSwimHookshotSubject__9daAlink_cFv();
extern "C" void procSwimHookshotMoveInit__9daAlink_cFv();
extern "C" void procSwimHookshotMove__9daAlink_cFv();
extern "C" void procSwimDamageInit__9daAlink_cFP12dCcD_GObjInf();
extern "C" void procSwimDamage__9daAlink_cFv();
extern "C" void procOctaIealSpitInit__9daAlink_cFv();
extern "C" void procOctaIealSpit__9daAlink_cFv();
extern "C" static void daAlink_searchIceLeaf__FP10fopAc_ac_cPv();
extern "C" void checkSnowCode__9daAlink_cCFv();
extern "C" void checkSnowCodePolygon__9daAlink_cFR13cBgS_PolyInfo();
extern "C" void checkBoardRestart__9daAlink_cFv();
extern "C" void boardCommon__9daAlink_cFi();
extern "C" void setCommonBoardAnime__9daAlink_cFi();
extern "C" void checkNextActionBoard__9daAlink_cFv();
extern "C" void checkBoardSwordTriggerAction__9daAlink_cFv();
extern "C" void commonProcBoardInit__9daAlink_cFQ29daAlink_c12daAlink_PROC();
extern "C" void getBoardRowAnmSpeed__9daAlink_cFv();
extern "C" void setBoardLandAnime__9daAlink_cFv();
extern "C" void procBoardRideInit__9daAlink_cFv();
extern "C" void procBoardRide__9daAlink_cFv();
extern "C" void procBoardWaitInit__9daAlink_cFP10fopAc_ac_c();
extern "C" void procBoardWait__9daAlink_cFv();
extern "C" void procBoardRowInit__9daAlink_cFv();
extern "C" void procBoardRow__9daAlink_cFv();
extern "C" void procBoardTurnInit__9daAlink_cFv();
extern "C" void procBoardTurn__9daAlink_cFv();
extern "C" void procBoardJumpInit__9daAlink_cFfi();
extern "C" void procBoardJump__9daAlink_cFv();
extern "C" void procBoardSubjectivityInit__9daAlink_cFv();
extern "C" void procBoardSubjectivity__9daAlink_cFv();
extern "C" void procBoardCutInit__9daAlink_cFv();
extern "C" void procBoardCut__9daAlink_cFv();
extern "C" void procBoardCutTurnInit__9daAlink_cFv();
extern "C" void procBoardCutTurn__9daAlink_cFv();
extern "C" void draw__Q29daAlink_c14hsChainShape_cFv();
extern "C" void hookshotAtHitCallBack__9daAlink_cFP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf();
extern "C" static void
daAlink_hookshotAtHitCallBack__FP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf();
extern "C" void getHookshotTopPos__9daAlink_cFv();
extern "C" void checkHookshotReturnMode__9daAlink_cCFv();
extern "C" void checkHookshotShootReturnMode__9daAlink_cCFv();
extern "C" void resetHookshotMode__9daAlink_cFv();
extern "C" void setEnemyBombHookshot__9daAlink_cFP10fopAc_ac_c();
extern "C" void checkLv7BossRoom__9daAlink_cFv();
extern "C" void checkHookshotStickBG__9daAlink_cFR13cBgS_PolyInfo();
extern "C" void cancelHookshotCarry__9daAlink_cFv();
extern "C" void changeHookshotDrawModel__9daAlink_cFv();
extern "C" void checkHookshotRoofLv7Boss__9daAlink_cFv();
extern "C" void checkChaseHookshot__9daAlink_cFv();
extern "C" void checkOctaIealSpecialCollect__9daAlink_cFv();
extern "C" void checkBossOctaIealRoom__9daAlink_cFv();
extern "C" void checkHookshotWait__9daAlink_cCFv();
extern "C" void setHookshotCatchNow__9daAlink_cFv();
extern "C" void setHookshotCarryOffset__9daAlink_cFUiPC4cXyz();
extern "C" void setHookshotModel__9daAlink_cFv();
extern "C" void setHookshotSight__9daAlink_cFv();
extern "C" void cancelHookshotShot__9daAlink_cFv();
extern "C" void cancelHookshotMove__9daAlink_cFv();
extern "C" void checkHookshotReadyMaterialOffMode__9daAlink_cCFv();
extern "C" void setHookshotReadyMaterial__9daAlink_cFv();
extern "C" void initHookshotUpperAnimeSpeed__9daAlink_cFi();
extern "C" void initHookshotReady__9daAlink_cFv();
extern "C" void setHookshotReadyAnime__9daAlink_cFv();
extern "C" void checkUpperItemActionHookshot__9daAlink_cFv();
extern "C" void checkNextActionHookshot__9daAlink_cFv();
extern "C" void setHookshotReturnEnd__9daAlink_cFv();
extern "C" void setHookshotHangMoveBGCollect__9daAlink_cFv();
extern "C" void setHookshotTopPosFly__9daAlink_cFv();
extern "C" void setHookshotPos__9daAlink_cFv();
extern "C" void setHookshotRoofWaitAnime__9daAlink_cFv();
extern "C" void setHookshotWallWaitAnime__9daAlink_cFv();
extern "C" void hookshotRoofTurn__9daAlink_cFv();
extern "C" void initHookshotRoofWaitActor__9daAlink_cFP10fopAc_ac_c();
extern "C" void checkNextHookPoint__9daAlink_cFv();
extern "C" void checkLandHookshotHang__9daAlink_cFv();
extern "C" void commonHookshotRoofWait__9daAlink_cFv();
extern "C" void commonHookshotWallWait__9daAlink_cFv();
extern "C" void procHookshotSubjectInit__9daAlink_cFv();
extern "C" void procHookshotSubject__9daAlink_cFv();
extern "C" void procHookshotMoveInit__9daAlink_cFv();
extern "C" void procHookshotMove__9daAlink_cFv();
extern "C" void procHookshotFlyInit__9daAlink_cFv();
extern "C" void procHookshotFly__9daAlink_cFv();
extern "C" void procHookshotRoofWaitInit__9daAlink_cFiP10fopAc_ac_ci();
extern "C" void procHookshotRoofWait__9daAlink_cFv();
extern "C" void procHookshotRoofShootInit__9daAlink_cFP10fopAc_ac_c();
extern "C" void procHookshotRoofShoot__9daAlink_cFv();
extern "C" void procHookshotRoofBootsInit__9daAlink_cFP10fopAc_ac_c();
extern "C" void procHookshotRoofBoots__9daAlink_cFv();
extern "C" void procHookshotWallWaitInit__9daAlink_cFisi();
extern "C" void procHookshotWallWait__9daAlink_cFv();
extern "C" void procHookshotWallShootInit__9daAlink_cFv();
extern "C" void procHookshotWallShoot__9daAlink_cFv();
extern "C" void getSpinnerGravity__9daAlink_cCFv();
extern "C" void getSpinnerMaxFallSpeed__9daAlink_cCFv();
extern "C" void getSpinnerJumpRate__9daAlink_cCFv();
extern "C" void getSpinnerRideMoveTime__9daAlink_cFv();
extern "C" void getSpinnerRideSpeedF__9daAlink_cFv();
extern "C" void getSpinnerRideDecSpeedMax__9daAlink_cCFv();
extern "C" void getSpinnerRideDecSpeedMin__9daAlink_cCFv();
extern "C" void getSpinnerRideDecSpeedRate__9daAlink_cCFv();
extern "C" void getSpinnerRideRotAngleMax__9daAlink_cCFv();
extern "C" void getSpinnerRideRotAngleMin__9daAlink_cCFv();
extern "C" void onSpinnerPathForceRemove__9daAlink_cFv();
extern "C" void checkSpinnerPathMove__9daAlink_cFv();
extern "C" void checkLv4BossRoom__9daAlink_cFv();
extern "C" void checkSpinnerTriggerAttack__9daAlink_cFv();
extern "C" void setSpinnerSyncPos__9daAlink_cFv();
extern "C" void procSpinnerReadyInit__9daAlink_cFv();
extern "C" void procSpinnerReady__9daAlink_cFv();
extern "C" void setSpinnerStatus__9daAlink_cFUcUc();
extern "C" void procSpinnerWaitInit__9daAlink_cFv();
extern "C" void procSpinnerWait__9daAlink_cFv();
extern "C" void bottleModelCallBack__9daAlink_cFv();
extern "C" static void daAlink_bottleModelCallBack__FP8J3DJointi();
extern "C" void getBottleOpenAppearItem__9daAlink_cCFv();
extern "C" void checkOilBottleItemNotGet__9daAlink_cFUs();
extern "C" void setBottleModel__9daAlink_cFUs();
extern "C" void commonBottleDrink__9daAlink_cFi();
extern "C" void makeFairy__9daAlink_cFP4cXyzUl();
extern "C" void procBottleDrinkInit__9daAlink_cFUs();
extern "C" void procBottleDrink__9daAlink_cFv();
extern "C" void procBottleOpenInit__9daAlink_cFUs();
extern "C" void procBottleOpen__9daAlink_cFv();
extern "C" void procBottleSwingInit__9daAlink_cFP10fopAc_ac_ci();
extern "C" void procBottleSwing__9daAlink_cFv();
extern "C" void procBottleGetInit__9daAlink_cFi();
extern "C" void procBottleGet__9daAlink_cFv();
extern "C" void Insect_Release__9dInsect_cFv();
extern "C" static void daAlink_searchTagKandelaar__FP10fopAc_ac_cPv();
extern "C" static void daAlink_searchTagKtOnFire__FP10fopAc_ac_cPv();
extern "C" void setKandelaarMtx__9daAlink_cFPA4_fii();
extern "C" void checkWaterInKandelaarOffset__9daAlink_cFf();
extern "C" void checkWaterInKandelaar__9daAlink_cFf();
extern "C" void offKandelaarModel__9daAlink_cFv();
extern "C" void checkUseKandelaar__9daAlink_cFi();
extern "C" void checkKandelaarSwing__9daAlink_cCFi();
extern "C" void kandelaarModelCallBack__9daAlink_cFv();
extern "C" static void daAlink_kandelaarModelCallBack__FP8J3DJointi();
extern "C" void getKandelaarFlamePos__9daAlink_cFv();
extern "C" void checkKandelaarEquipAnime__9daAlink_cCFv();
extern "C" void preKandelaarDraw__9daAlink_cFv();
extern "C" void setTevColor__11J3DTevBlockFUlPC13J3DGXColorS10();
extern "C" void setKandelaarModel__9daAlink_cFv();
extern "C" void resetOilBottleModel__9daAlink_cFv();
extern "C" void commonKandelaarPourInit__9daAlink_cFv();
extern "C" void commonKandelaarPour__9daAlink_cFi();
extern "C" void initKandelaarSwing__9daAlink_cFv();
extern "C" void procKandelaarSwingInit__9daAlink_cFv();
extern "C" void procKandelaarSwing__9daAlink_cFv();
extern "C" void procKandelaarPourInit__9daAlink_cFv();
extern "C" void procKandelaarPour__9daAlink_cFv();
extern "C" static void daAlink_searchWhistle__FP10fopAc_ac_cPv();
extern "C" static void daAlink_searchHawk__FP10fopAc_ac_cPv();
extern "C" void setGrassWhistleModel__9daAlink_cFi();
extern "C" void setHorseWhistleModel__9daAlink_cFv();
extern "C" void procGrassWhistleGetInit__9daAlink_cFv();
extern "C" void procGrassWhistleGet__9daAlink_cFv();
extern "C" void procGrassWhistleWaitInit__9daAlink_cFiiisP4cXyz();
extern "C" void procGrassWhistleWait__9daAlink_cFv();
extern "C" void procCoHorseCallWaitInit__9daAlink_cFi();
extern "C" void procCoHorseCallWait__9daAlink_cFv();
extern "C" void procHawkCatchInit__9daAlink_cFv();
extern "C" void procHawkCatch__9daAlink_cFv();
extern "C" void procHawkSubjectInit__9daAlink_cFv();
extern "C" void procHawkSubject__9daAlink_cFv();
extern "C" void getIronBallCenterPos__9daAlink_cFv();
extern "C" void getIronBallBgHit__9daAlink_cCFv();
extern "C" void checkIronBallThrowMode__9daAlink_cCFv();
extern "C" void checkIronBallThrowReturnMode__9daAlink_cCFv();
extern "C" void checkIronBallReturn__9daAlink_cCFv();
extern "C" void checkIronBallGroundStop__9daAlink_cCFv();
extern "C" void setIronBallWaitUpperAnime__9daAlink_cFi();
extern "C" void checkIronBallDelete__9daAlink_cFv();
extern "C" void setIronBallReturn__9daAlink_cFi();
extern "C" void setIronBallBgCheckPos__9daAlink_cFv();
extern "C" void setIronBallModel__9daAlink_cFv();
extern "C" void __ct__5csXyzFv();
extern "C" void setIronBallGroundVec__9daAlink_cFPC4cXyzP4cXyz();
extern "C" void setIronBallChainPos__9daAlink_cFv();
extern "C" void checkIronBallReturnChange__9daAlink_cFv();
extern "C" void setIronBallPos__9daAlink_cFv();
extern "C" void checkIronBallAnime__9daAlink_cCFv();
extern "C" void setIronBallReadyAnime__9daAlink_cFv();
extern "C" void setIronBallBaseAnime__9daAlink_cFv();
extern "C" void checkUpperItemActionIronBall__9daAlink_cFv();
extern "C" void checkNextActionIronBall__9daAlink_cFv();
extern "C" void procIronBallSubjectInit__9daAlink_cFv();
extern "C" void procIronBallSubject__9daAlink_cFv();
extern "C" void procIronBallMoveInit__9daAlink_cFv();
extern "C" void procIronBallMove__9daAlink_cFv();
extern "C" void procIronBallThrowInit__9daAlink_cFv();
extern "C" void procIronBallThrow__9daAlink_cFv();
extern "C" void procIronBallReturnInit__9daAlink_cFv();
extern "C" void procIronBallReturn__9daAlink_cFv();
extern "C" void checkEventRun__9daAlink_cCFv();
extern "C" void createNpcTks__9daAlink_cFP4cXyziUl();
extern "C" void checkSetNpcTks__9daAlink_cFP4cXyzii();
extern "C" void checkDemoAction__9daAlink_cFv();
extern "C" void checkDemoMoveMode__9daAlink_cCFUl();
extern "C" void setDemoMoveData__9daAlink_cFPUlPC4cXyz();
extern "C" void setNoDrawSwordShield__9daAlink_cFiUs();
extern "C" void setDemoData__9daAlink_cFv();
extern "C" void resetDemoBck__9daAlink_cFv();
extern "C" void endHighModel__9daAlink_cFv();
extern "C" void resetSpecialEvent__9daAlink_cFv();
extern "C" void endDemoMode__9daAlink_cFv();
extern "C" void getDemoLookActor__9daAlink_cFv();
extern "C" void checkFlyAtnWait__9daAlink_cFv();
extern "C" void setGetItemFace__9daAlink_cFUs();
extern "C" void checkGrabTalkActor__9daAlink_cFP10fopAc_ac_c();
extern "C" void setTalkStartBack__9daAlink_cFP4cXyz();
extern "C" void setShapeAngleToTalkActor__9daAlink_cFv();
extern "C" void setTalkAnime__9daAlink_cFv();
extern "C" void setTradeItemAnime__9daAlink_cFv();
extern "C" void setTradeItemOutHand__9daAlink_cFv();
extern "C" void checkEndMessage__9daAlink_cFUl();
extern "C" void setDemoRightHandIndex__9daAlink_cFUs();
extern "C" void setDemoLeftHandIndex__9daAlink_cFUs();
extern "C" void setDemoRide__9daAlink_cFUs();
extern "C" void setDemoBodyBck__9daAlink_cFP13dDemo_actor_cUs();
extern "C" void checkFinalBattle__9daAlink_cFv();
extern "C" void checkRestartDead__9daAlink_cFii();
extern "C" void setDeadRideSyncPos__9daAlink_cFv();
extern "C" void checkDeadHP__9daAlink_cFv();
extern "C" void checkDeadAction__9daAlink_cFi();
extern "C" void setHighModelBck__9daAlink_cFP13mDoExt_bckAnmUs();
extern "C" void setHighModelFaceBtk__9daAlink_cFUs();
extern "C" void setDemoBrk__9daAlink_cFPP15J3DAnmTevRegKeyP8J3DModelUs();
extern "C" void setStickAnmData__9daAlink_cFP10J3DAnmBaseiiUsi();
extern "C" static void daAlink_c_getDemoIDData__FP13dDemo_actor_cPiPiPiPUsPiPi();
extern "C" void procDemoCommon__9daAlink_cFv();
extern "C" void procCoToolDemoInit__9daAlink_cFv();
extern "C" void procCoToolDemo__9daAlink_cFv();
extern "C" void procCoTalkInit__9daAlink_cFv();
extern "C" void procCoTalk__9daAlink_cFv();
extern "C" void procCoOpenTreasureInit__9daAlink_cFv();
extern "C" void procCoOpenTreasure__9daAlink_cFv();
extern "C" void procCoUnequipInit__9daAlink_cFv();
extern "C" void procCoUnequip__9daAlink_cFv();
extern "C" void setGetSubBgm__9daAlink_cFi();
extern "C" void checkTreasureRupeeReturn__9daAlink_cCFi();
extern "C" void procCoGetItemInit__9daAlink_cFv();
extern "C" void procCoGetItem__9daAlink_cFv();
extern "C" void procCoTurnBackInit__9daAlink_cFv();
extern "C" void procCoTurnBack__9daAlink_cFv();
extern "C" void procDoorOpenInit__9daAlink_cFv();
extern "C" void procDoorOpen__9daAlink_cFv();
extern "C" void procCoLookWaitInit__9daAlink_cFv();
extern "C" void procCoLookWait__9daAlink_cFv();
extern "C" void procCoDemoPushPullWaitInit__9daAlink_cFv();
extern "C" void procCoDemoPushMoveInit__9daAlink_cFv();
extern "C" void setMonkeyMoveAnime__9daAlink_cFv();
extern "C" void procMonkeyMoveInit__9daAlink_cFv();
extern "C" void procMonkeyMove__9daAlink_cFv();
extern "C" void procDemoBoomerangCatchInit__9daAlink_cFv();
extern "C" void procDemoBoomerangCatch__9daAlink_cFv();
extern "C" void procCoDeadInit__9daAlink_cFi();
extern "C" void procCoDead__9daAlink_cFv();
extern "C" void procCoLookAroundInit__9daAlink_cFv();
extern "C" void procCoLookAround__9daAlink_cFv();
extern "C" void procBossAtnWaitInit__9daAlink_cFv();
extern "C" void procCoQuakeWaitInit__9daAlink_cFv();
extern "C" void procCoCaughtInit__9daAlink_cFv();
extern "C" void procLookUpInit__9daAlink_cFv();
extern "C" void procLookUp__9daAlink_cFv();
extern "C" void procLookUpToGetItemInit__9daAlink_cFv();
extern "C" void procLookUpToGetItem__9daAlink_cFv();
extern "C" void procHandPatInit__9daAlink_cFv();
extern "C" void procHandPat__9daAlink_cFv();
extern "C" void procCoFogDeadInit__9daAlink_cFv();
extern "C" void procCoFogDead__9daAlink_cFv();
extern "C" void procWolfSmellWaitInit__9daAlink_cFv();
extern "C" void procCoNodInit__9daAlink_cFv();
extern "C" void procCoNod__9daAlink_cFv();
extern "C" void procCoEyeAwayInit__9daAlink_cFv();
extern "C" void procCoGlareInit__9daAlink_cFv();
extern "C" void procCoGlare__9daAlink_cFv();
extern "C" void procGoatStopReadyInit__9daAlink_cFv();
extern "C" void procGoatStopReady__9daAlink_cFv();
extern "C" void procCoGetReadySitInit__9daAlink_cFv();
extern "C" void procCoGetReadySit__9daAlink_cFv();
extern "C" void procCoTwGateInit__9daAlink_cFv();
extern "C" void procCoTwGate__9daAlink_cFv();
extern "C" void procWolfSnowEscapeInit__9daAlink_cFv();
extern "C" void procWolfSnowEscape__9daAlink_cFv();
extern "C" void procZoraMoveInit__9daAlink_cFv();
extern "C" void procZoraMove__9daAlink_cFv();
extern "C" void procLookAroundTurnInit__9daAlink_cFv();
extern "C" void procLookAroundTurn__9daAlink_cFv();
extern "C" void procTradeItemOutInit__9daAlink_cFv();
extern "C" void procTradeItemOut__9daAlink_cFv();
extern "C" void checkLetterItem__9daAlink_cFi();
extern "C" void procNotUseItemInit__9daAlink_cFi();
extern "C" void procNotUseItem__9daAlink_cFv();
extern "C" void procSwordReadyInit__9daAlink_cFv();
extern "C" void procSwordReady__9daAlink_cFv();
extern "C" void setSwordPushAnime__9daAlink_cFv();
extern "C" void procSwordPushInit__9daAlink_cFv();
extern "C" void procSwordPush__9daAlink_cFv();
extern "C" void procGanonFinishInit__9daAlink_cFv();
extern "C" void procGanonFinish__9daAlink_cFv();
extern "C" void procCutFastReadyInit__9daAlink_cFv();
extern "C" void procCutFastReady__9daAlink_cFv();
extern "C" void procMasterSwordStickInit__9daAlink_cFv();
extern "C" void procMasterSwordStick__9daAlink_cFv();
extern "C" void procMasterSwordPullInit__9daAlink_cFv();
extern "C" void procMasterSwordPull__9daAlink_cFv();
extern "C" void checkLv7DungeonShop__9daAlink_cFv();
extern "C" void procDungeonWarpReadyInit__9daAlink_cFv();
extern "C" void procDungeonWarpReady__9daAlink_cFv();
extern "C" void procDungeonWarpInit__9daAlink_cFv();
extern "C" void procDungeonWarp__9daAlink_cFv();
extern "C" void procDungeonWarpSceneStartInit__9daAlink_cFv();
extern "C" void procDungeonWarpSceneStart__9daAlink_cFv();
extern "C" static void daAlink_searchPortal__FP10fopAc_ac_cPv();
extern "C" void checkAcceptWarp__9daAlink_cFv();
extern "C" void dungeonReturnWarp__9daAlink_cFv();
extern "C" void skipPortalObjWarp__9daAlink_cFv();
extern "C" void checkWarpStart__9daAlink_cFv();
extern "C" void warpModelTexScroll__9daAlink_cFv();
extern "C" void procCoWarpInit__9daAlink_cFii();
extern "C" void procCoWarp__9daAlink_cFv();
extern "C" void commonWaitTurnInit__9daAlink_cFv();
extern "C" void commonGrabPutInit__9daAlink_cFv();
extern "C" void commonLargeDamageUpInit__9daAlink_cFiiss();
extern "C" void commonFallInit__9daAlink_cFi();
extern "C" void setEmitter__9daAlink_cFPUlUsPC4cXyzPC5csXyz();
extern "C" void setEmitterPolyColor__9daAlink_cFPUlUsR13cBgS_PolyInfoPC4cXyzPC5csXyz();
extern "C" void setEmitterColor__9daAlink_cFPUlUsPC4cXyzPC5csXyz();
extern "C" void stopDrawParticle__9daAlink_cFUl();
extern "C" void setEffectFrontRollParam__9daAlink_cFv();
extern "C" void setEffectSlipParam__9daAlink_cFv();
extern "C" void setEffectRunParam__9daAlink_cFv();
extern "C" void setEffectSmallLandParam__9daAlink_cFv();
extern "C" void setEffectLandParam__9daAlink_cFv();
extern "C" void setEffectSumouParam__9daAlink_cFv();
extern "C" void setFootEffectProcType__9daAlink_cFi();
extern "C" void setWolfFootOn__9daAlink_cFi();
extern "C" void setFootMark__9daAlink_cFP4cXyzUsi();
extern "C" void setEffect__9daAlink_cFv();
extern "C" void setSumouEffect__9daAlink_cFv();
extern "C" void setWaterfallEffect__9daAlink_cFPC4cXyzPUl();
extern "C" void setWaterfallEffect__9daAlink_cFv();
extern "C" void setMagneBootsEffect__9daAlink_cFv();
extern "C" void setSwordChargeEffect__9daAlink_cFv();
extern "C" void setElecDamageEffect__9daAlink_cFv();
extern "C" void clearCutTurnEffectID__9daAlink_cFv();
extern "C" void setCutTurnEffect__9daAlink_cFv();
extern "C" void setHorseCutTurnEffect__9daAlink_cFv();
extern "C" void setCutLargeJumpLandEffect__9daAlink_cFv();
extern "C" void setBootsLightEffect__9daAlink_cFv();
extern "C" void setLightningSwordEffect__9daAlink_cFv();
extern "C" void setWolfRollAttackEffect__9daAlink_cFv();
extern "C" void setWolfDigEffect__9daAlink_cFv();
extern "C" void setWolfSwimEndEffect__9daAlink_cFPP14JPABaseEmitterPP14JPABaseEmitter();
extern "C" void setWolfLockAttackEffect__9daAlink_cFv();
extern "C" void setWolfJumpAttackEffect__9daAlink_cFv();
extern "C" void setWolfBarrierHitEffect__9daAlink_cFR11dBgS_LinChk();
extern "C" void setCutWaterDropEffect__9daAlink_cFv();
extern "C" void setWaterDropEffect__9daAlink_cFv();
extern "C" void setSwordUpColorEffect__9daAlink_cFv();
extern "C" void setSwordCutSplash__9daAlink_cFv();
extern "C" void setMetamorphoseEffectStartLink__9daAlink_cFv();
extern "C" void setMetamorphoseEffect__9daAlink_cFv();
extern "C" void setRunSplash__9daAlink_cFv();
extern "C" void execute__29dAlink_bottleWaterPcallBack_cFP14JPABaseEmitterP15JPABaseParticle();
extern "C" void resetFairyEffect__9daAlink_cFv();
extern "C" void setBottleEffect__9daAlink_cFv();
extern "C" void clearFirePointDamageEffect__9daAlink_cFi();
extern "C" void initFirePointDamageEffectAll__9daAlink_cFv();
extern "C" void initFirePointDamageEffect__9daAlink_cFPC4cXyzP12dCcD_GObjInf();
extern "C" void setFirePointDamageEffect__9daAlink_cFv();
extern "C" void setFreezeEffect__9daAlink_cFv();
extern "C" void setWoodShieldBurnEffect__9daAlink_cFv();
extern "C" void clearWoodShieldBurnEffect__9daAlink_cFv();
extern "C" void setWoodShieldBurnOutEffect__9daAlink_cFv();
extern "C" void initBlur__14daAlink_blur_cFfiPC4cXyzPC4cXyzPC4cXyz();
extern "C" static void setBezierPos__FPC4cXyzPC4cXyzPC4cXyzPC4cXyzfP4cXyz();
extern "C" void copyBlur__14daAlink_blur_cFPC4cXyzPC4cXyzPC4cXyz();
extern "C" void traceBlur__14daAlink_blur_cFPC4cXyzPC4cXyzs();
extern "C" void draw__14daAlink_blur_cFv();
extern "C" void create__20daAlink_lockCursor_cFv();
extern "C" void setAnimation__7J2DPaneFP15J2DAnmTevRegKey();
extern "C" void setAnimation__7J2DPaneFP11J2DAnmColor();
extern "C" void update__20daAlink_lockCursor_cFv();
extern "C" void draw__20daAlink_lockCursor_cFv();
extern "C" void create__15daAlink_sight_cFv();
extern "C" void draw__15daAlink_sight_cFv();
extern "C" void onLockFlg__15daAlink_sight_cFv();
extern "C" void changeCommon__9daAlink_cFv();
extern "C" void changeWolf__9daAlink_cFv();
extern "C" void changeLink__9daAlink_cFi();
extern "C" void onWolfEyeUp__9daAlink_cFv();
extern "C" void offWolfEyeUp__9daAlink_cFv();
extern "C" void wolfSenseTrigger__9daAlink_cFv();
extern "C" void setWolfSenceStatus__9daAlink_cFUc();
extern "C" void wolfClawTrigger__9daAlink_cFv();
extern "C" void setWolfDigStatus__9daAlink_cFUc();
extern "C" void checkWolfShapeReverse__9daAlink_cCFv();
extern "C" void checkWolfSideStep__9daAlink_cCFv();
extern "C" void setWolfTailAngle__9daAlink_cFv();
extern "C" void checkWolfSlowDash__9daAlink_cFv();
extern "C" void setSpeedAndAngleWolf__9daAlink_cFv();
extern "C" void setSpeedAndAngleWolfAtn__9daAlink_cFv();
extern "C" void checkWolfAtnWait__9daAlink_cFv();
extern "C" void checkUnderMove0BckNoArcWolf__9daAlink_cCFQ29daAlink_c12daAlink_WANM();
extern "C" void setBlendWolfMoveAnime__9daAlink_cFf();
extern "C" void checkWolfAtnMoveBack__9daAlink_cFs();
extern "C" void setWolfAtnMoveDirection__9daAlink_cFv();
extern "C" void setBlendWolfAtnMoveAnime__9daAlink_cFf();
extern "C" void setBlendWolfAtnBackMoveAnime__9daAlink_cFf();
extern "C" void
setDoubleAnimeWolf__9daAlink_cFfffQ29daAlink_c12daAlink_WANMQ29daAlink_c12daAlink_WANMif();
extern "C" void setSingleAnimeWolfBase__9daAlink_cFQ29daAlink_c12daAlink_WANM();
extern "C" void setSingleAnimeWolfBaseMorf__9daAlink_cFQ29daAlink_c12daAlink_WANMf();
extern "C" void setSingleAnimeWolfBaseSpeed__9daAlink_cFQ29daAlink_c12daAlink_WANMff();
extern "C" void setSingleAnimeWolf__9daAlink_cFQ29daAlink_c12daAlink_WANMffsf();
extern "C" void
setSingleAnimeWolfParam__9daAlink_cFQ29daAlink_c12daAlink_WANMPC16daAlinkHIO_anm_c();
extern "C" void checkWolfLandAction__9daAlink_cFi();
extern "C" void checkMidnaUseAbility__9daAlink_cCFv();
extern "C" void checkWolfUseAbility__9daAlink_cFv();
extern "C" void checkWolfGroundSpecialMode__9daAlink_cFv();
extern "C" void checkNextActionWolf__9daAlink_cFi();
extern "C" void wolfSideBgCheck__9daAlink_cFs();
extern "C" void checkWolfAttackReverse__9daAlink_cFi();
extern "C" void checkWolfBarrierHitReverse__9daAlink_cFv();
extern "C" void checkWolfBarrierWallHit__9daAlink_cFR13cBgS_PolyInfo();
extern "C" void wolfBgCheck__9daAlink_cFv();
extern "C" void changeWolfBlendRate__9daAlink_cFi();
extern "C" void setWolfFootMatrix__9daAlink_cFv();
extern "C" void wolfFootBgCheck__9daAlink_cFv();
extern "C" void checkWolfWaitSlipPolygon__9daAlink_cFv();
extern "C" void setWolfWaitSlip__9daAlink_cFv();
extern "C" void checkWolfAtnDoCharge__9daAlink_cFv();
extern "C" void setWolfChainPos__9daAlink_cFv();
extern "C" void setWolfAnmVoice__9daAlink_cFv();
extern "C" void procWolfServiceWaitInit__9daAlink_cFi();
extern "C" void procWolfServiceWait__9daAlink_cFv();
extern "C" void procWolfTiredWaitInit__9daAlink_cFv();
extern "C" void procWolfTiredWait__9daAlink_cFv();
extern "C" void procWolfMidnaRideShockInit__9daAlink_cFv();
extern "C" void procWolfMidnaRideShock__9daAlink_cFv();
extern "C" void procWolfWaitInit__9daAlink_cFv();
extern "C" void procWolfWait__9daAlink_cFv();
extern "C" void procWolfMoveInit__9daAlink_cFv();
extern "C" void procWolfMove__9daAlink_cFv();
extern "C" void procWolfDashInit__9daAlink_cFv();
extern "C" void procWolfDash__9daAlink_cFv();
extern "C" void procWolfDashReverseInit__9daAlink_cFi();
extern "C" void procWolfDashReverse__9daAlink_cFv();
extern "C" void procWolfAtnActorMoveInit__9daAlink_cFv();
extern "C" void procWolfAtnActorMove__9daAlink_cFv();
extern "C" void procWolfWaitTurnInit__9daAlink_cFv();
extern "C" void procWolfWaitTurn__9daAlink_cFv();
extern "C" void procWolfSideStepInit__9daAlink_cFi();
extern "C" void procWolfSideStep__9daAlink_cFv();
extern "C" void procWolfSideStepLandInit__9daAlink_cFs();
extern "C" void procWolfSideStepLand__9daAlink_cFv();
extern "C" void procWolfBackJumpInit__9daAlink_cFi();
extern "C" void procWolfBackJump__9daAlink_cFv();
extern "C" void procWolfBackJumpLandInit__9daAlink_cFss();
extern "C" void procWolfBackJumpLand__9daAlink_cFv();
extern "C" void procWolfHowlInit__9daAlink_cFi();
extern "C" void procWolfHowl__9daAlink_cFv();
extern "C" void procWolfAutoJumpInit__9daAlink_cFi();
extern "C" void procWolfAutoJump__9daAlink_cFv();
extern "C" void procWolfFallInit__9daAlink_cFif();
extern "C" void procWolfFall__9daAlink_cFv();
extern "C" void procWolfLandInit__9daAlink_cFv();
extern "C" void procWolfLand__9daAlink_cFv();
extern "C" void procWolfSitInit__9daAlink_cFi();
extern "C" void procWolfSit__9daAlink_cFv();
extern "C" void procWolfStepMoveInit__9daAlink_cFv();
extern "C" void procWolfStepMove__9daAlink_cFv();
extern "C" void procWolfSlipInit__9daAlink_cFv();
extern "C" void procWolfSlip__9daAlink_cFv();
extern "C" void procWolfSlipTurnInit__9daAlink_cFi();
extern "C" void procWolfSlipTurn__9daAlink_cFv();
extern "C" void procWolfSlipTurnLandInit__9daAlink_cFv();
extern "C" void procWolfSlipTurnLand__9daAlink_cFv();
extern "C" void procWolfSlideReadyInit__9daAlink_cFsi();
extern "C" void procWolfSlideReady__9daAlink_cFv();
extern "C" void procWolfSlideInit__9daAlink_cFsi();
extern "C" void procWolfSlide__9daAlink_cFv();
extern "C" void procWolfSlideLandInit__9daAlink_cFv();
extern "C" void procWolfSlideLand__9daAlink_cFv();
extern "C" void procWolfWaitSlipInit__9daAlink_cFv();
extern "C" void procWolfWaitSlip__9daAlink_cFv();
extern "C" void procWolfSlopeStartInit__9daAlink_cFi();
extern "C" void procWolfSlopeStart__9daAlink_cFv();
extern "C" static void daAlink_searchGoldWolf__FP10fopAc_ac_cPv();
extern "C" static void daAlink_searchWolfHowl__FP10fopAc_ac_cPv();
extern "C" void setWolfHowlNotHappen__9daAlink_cFi();
extern "C" void procWolfHowlDemoInit__9daAlink_cFv();
extern "C" void procWolfHowlDemo__9daAlink_cFv();
extern "C" void setWolfHowling__15daObj_Sekizoa_cFv();
extern "C" void checkWolfRope__9daAlink_cFv();
extern "C" void checkWolfRopeHit__9daAlink_cCFP12dCcD_GObjInfPC4cXyzi();
extern "C" void checkWolfRopeJumpHang__9daAlink_cFv();
extern "C" void getWolfRopeMoveSpeed__9daAlink_cFv();
extern "C" void setWolfRopePosY__9daAlink_cFv();
extern "C" void initWolfRopeShapeAngle__9daAlink_cFv();
extern "C" void wolfRopeSwingInc__9daAlink_cFf();
extern "C" void setWolfRopeOffsetY__9daAlink_cFi();
extern "C" void getDirectionRopeMove__9daAlink_cCFv();
extern "C" void procWolfRopeMoveInit__9daAlink_cFii();
extern "C" void procWolfRopeMove__9daAlink_cFv();
extern "C" void procWolfRopeHangInit__9daAlink_cFi();
extern "C" void procWolfRopeHang__9daAlink_cFv();
extern "C" void procWolfRopeTurnInit__9daAlink_cFv();
extern "C" void procWolfRopeTurn__9daAlink_cFv();
extern "C" void procWolfRopeStaggerInit__9daAlink_cFi();
extern "C" void procWolfRopeStagger__9daAlink_cFv();
extern "C" void procWolfRopeSubjectivityInit__9daAlink_cFv();
extern "C" void procWolfRopeSubjectivity__9daAlink_cFv();
extern "C" void getWolfTagJumpTime__9daAlink_cCFv();
extern "C" void checkMidnaLockJumpPoint__9daAlink_cCFv();
extern "C" void procWolfTagJumpInit__9daAlink_cFP10fopAc_ac_c();
extern "C" void procWolfTagJump__9daAlink_cFv();
extern "C" void procWolfTagJumpLandInit__9daAlink_cFP10fopAc_ac_c();
extern "C" void procWolfTagJumpLand__9daAlink_cFv();
extern "C" static void daAlink_searchGiant__FP10fopAc_ac_cPv();
extern "C" static void daAlink_searchGiantTalk__FP10fopAc_ac_cPv();
extern "C" void procWolfGiantPuzzleInit__9daAlink_cFv();
extern "C" void procWolfGiantPuzzle__9daAlink_cFv();
extern "C" void setWolfHangGroundY__9daAlink_cFv();
extern "C" void changeWolfHangEndProc__9daAlink_cFv();
extern "C" void procWolfHangReadyInit__9daAlink_cFv();
extern "C" void procWolfHangReady__9daAlink_cFv();
extern "C" void procWolfHangWallCatchInit__9daAlink_cFi();
extern "C" void procWolfHangWallCatch__9daAlink_cFv();
extern "C" void procWolfHangFallStartInit__9daAlink_cFP8cM3dGPla();
extern "C" void procWolfHangFallStart__9daAlink_cFv();
extern "C" void setWolfHeadDamage__9daAlink_cFv();
extern "C" void procWolfDamageInit__9daAlink_cFP12dCcD_GObjInf();
extern "C" void procWolfDamage__9daAlink_cFv();
extern "C" void procWolfLargeDamageUpInit__9daAlink_cFiiss();
extern "C" void procWolfLargeDamageUp__9daAlink_cFv();
extern "C" void procWolfLandDamageInit__9daAlink_cFi();
extern "C" void procWolfLandDamage__9daAlink_cFv();
extern "C" void setWolfScreamWaitAnime__9daAlink_cFv();
extern "C" void procWolfScreamWaitInit__9daAlink_cFv();
extern "C" void procWolfScreamWait__9daAlink_cFv();
extern "C" void getWolfLieMoveAnmSpeed__9daAlink_cFv();
extern "C" void getWolfLieMoveSpeed__9daAlink_cFv();
extern "C" void checkMidnaDisappearMode__9daAlink_cCFv();
extern "C" void checkWolfLieContinue__9daAlink_cFi();
extern "C" void checkNextActionWolfFromLie__9daAlink_cFv();
extern "C" void setWolfLieMoveVoice__9daAlink_cFi();
extern "C" void checkWolfLieCode__9daAlink_cFv();
extern "C" void procWolfLieStartInit__9daAlink_cFi();
extern "C" void procWolfLieStart__9daAlink_cFv();
extern "C" void procWolfLieMoveInit__9daAlink_cFi();
extern "C" void procWolfLieMove__9daAlink_cFv();
extern "C" void procWolfLieAutoMoveInit__9daAlink_cFiP4cXyz();
extern "C" void procWolfLieAutoMove__9daAlink_cFv();
extern "C" void setSpeedAndAngleSwimWolf__9daAlink_cFv();
extern "C" void getWolfSwimMoveAnmSpeed__9daAlink_cFv();
extern "C" void decideDoStatusSwimWolf__9daAlink_cFv();
extern "C" void procWolfSwimUpInit__9daAlink_cFv();
extern "C" void procWolfSwimUp__9daAlink_cFv();
extern "C" void procWolfSwimWaitInit__9daAlink_cFi();
extern "C" void procWolfSwimWait__9daAlink_cFv();
extern "C" void procWolfSwimMoveInit__9daAlink_cFv();
extern "C" void procWolfSwimMove__9daAlink_cFv();
extern "C" void procWolfSwimEndWaitInit__9daAlink_cFi();
extern "C" void procWolfSwimEndWait__9daAlink_cFv();
extern "C" void onWolfEnemyBiteAll__9daAlink_cFP10fopAc_ac_cQ29daPy_py_c9daPy_FLG2();
extern "C" void resetWolfEnemyBiteAll__9daAlink_cFv();
extern "C" void checkWolfEnemyThrowAction__9daAlink_cFv();
extern "C" void setWolfLockDomeModel__9daAlink_cFv();
extern "C" void setWolfBallModel__9daAlink_cFv();
extern "C" void resetWolfBallGrab__9daAlink_cFv();
extern "C" void checkWolfLockData__9daAlink_cFv();
extern "C" void checkWolfLock__9daAlink_cCFP10fopAc_ac_c();
extern "C" void cancelWolfLock__9daAlink_cFP10fopAc_ac_c();
extern "C" void getWolfLockActorEnd__9daAlink_cFv();
extern "C" void searchWolfLockEnemy__9daAlink_cFP10fopAc_ac_cPv();
extern "C" static void daAlink_searchWolfLockEnemy__FP10fopAc_ac_cPv();
extern "C" void checkWolfComboCnt__9daAlink_cFv();
extern "C" void checkWolfAttackAction__9daAlink_cFv();
extern "C" void setWolfEnemyThrowUpperAnime__9daAlink_cFQ29daAlink_c12daAlink_WANMf();
extern "C" void setWolfEnemyHangBitePos__9daAlink_cFP13fopEn_enemy_c();
extern "C" void setWolfBiteDamage__9daAlink_cFP13fopEn_enemy_c();
extern "C" void checkWolfLockAttackChargeState__9daAlink_cFv();
extern "C" void procWolfRollAttackChargeInit__9daAlink_cFv();
extern "C" void procWolfRollAttackCharge__9daAlink_cFv();
extern "C" void procWolfRollAttackMoveInit__9daAlink_cFv();
extern "C" void procWolfRollAttackMove__9daAlink_cFv();
extern "C" void procWolfJumpAttackInit__9daAlink_cFi();
extern "C" void procWolfJumpAttack__9daAlink_cFv();
extern "C" void procWolfJumpAttackKickInit__9daAlink_cFv();
extern "C" void procWolfJumpAttackKick__9daAlink_cFv();
extern "C" void procWolfJumpAttackSlideLandInit__9daAlink_cFiii();
extern "C" void procWolfJumpAttackSlideLand__9daAlink_cFv();
extern "C" void procWolfJumpAttackNormalLandInit__9daAlink_cFi();
extern "C" void procWolfJumpAttackNormalLand__9daAlink_cFv();
extern "C" void procWolfWaitAttackInit__9daAlink_cFi();
extern "C" void procWolfWaitAttack__9daAlink_cFv();
extern "C" void procWolfRollAttackInit__9daAlink_cFii();
extern "C" void procWolfRollAttack__9daAlink_cFv();
extern "C" void procWolfDownAttackInit__9daAlink_cFv();
extern "C" void procWolfDownAttack__9daAlink_cFv();
extern "C" void procWolfDownAtLandInit__9daAlink_cFP13fopEn_enemy_c();
extern "C" void procWolfDownAtLand__9daAlink_cFv();
extern "C" void procWolfDownAtMissLandInit__9daAlink_cFv();
extern "C" void procWolfDownAtMissLand__9daAlink_cFv();
extern "C" void procWolfLockAttackInit__9daAlink_cFi();
extern "C" void procWolfLockAttack__9daAlink_cFv();
extern "C" void procWolfLockAttackTurnInit__9daAlink_cFi();
extern "C" void procWolfLockAttackTurn__9daAlink_cFv();
extern "C" void procWolfAttackReverseInit__9daAlink_cFv();
extern "C" void procWolfAttackReverse__9daAlink_cFv();
extern "C" void procWolfEnemyThrowInit__9daAlink_cFi();
extern "C" void procWolfEnemyThrow__9daAlink_cFv();
extern "C" void procWolfEnemyHangBiteInit__9daAlink_cFv();
extern "C" void procWolfEnemyHangBite__9daAlink_cFv();
extern "C" void procWolfGrabUpInit__9daAlink_cFv();
extern "C" void procWolfGrabUp__9daAlink_cFv();
extern "C" void procWolfGrabPutInit__9daAlink_cFv();
extern "C" void procWolfGrabPut__9daAlink_cFv();
extern "C" void procWolfGrabThrowInit__9daAlink_cFv();
extern "C" void procWolfGrabThrow__9daAlink_cFv();
extern "C" void procWolfPushInit__9daAlink_cFv();
extern "C" void procWolfPush__9daAlink_cFv();
extern "C" static void daAlink_searchEnemyCargo__FP10fopAc_ac_cPv();
extern "C" void procWolfCargoCarryInit__9daAlink_cFv();
extern "C" void procWolfCargoCarry__9daAlink_cFv();
extern "C" void procWolfChainUpInit__9daAlink_cFv();
extern "C" void procWolfChainUp__9daAlink_cFv();
extern "C" void procWolfGanonCatchInit__9daAlink_cFv();
extern "C" void procWolfGanonCatch__9daAlink_cFv();
extern "C" void procWolfChainReadyInit__9daAlink_cFv();
extern "C" void procWolfChainReady__9daAlink_cFv();
extern "C" void procWolfChainWaitInit__9daAlink_cFv();
extern "C" void procWolfChainWait__9daAlink_cFv();
extern "C" void procWolfDigInit__9daAlink_cFv();
extern "C" void procWolfDig__9daAlink_cFv();
extern "C" void procWolfDigThroughInit__9daAlink_cFi();
extern "C" void procWolfDigThrough__9daAlink_cFv();
extern "C" void setSmellSave__9daAlink_cFv();
extern "C" void procWolfGetSmellInit__9daAlink_cFv();
extern "C" void procWolfGetSmell__9daAlink_cFv();
extern "C" void setArcName__9daAlink_cFi();
extern "C" void setShieldArcName__9daAlink_cFv();
extern "C" void setOriginalHeap__9daAlink_cFPP10JKRExpHeapUl();
extern "C" void setClothesChange__9daAlink_cFi();
extern "C" void setShieldChange__9daAlink_cFv();
extern "C" void loadModelDVD__9daAlink_cFv();
extern "C" void setShieldModel__9daAlink_cFv();
extern "C" void loadShieldModelDVD__9daAlink_cFv();
extern "C" void changeModelDataDirect__9daAlink_cFi();
extern "C" void changeModelDataDirectWolf__9daAlink_cFi();
extern "C" void initStatusWindow__9daAlink_cFv();
extern "C" void statusWindowExecute__9daAlink_cFPC4cXyzs();
extern "C" void statusWindowDraw__9daAlink_cFv();
extern "C" void resetStatusWindow__9daAlink_cFv();
extern "C" void __ct__12daAlinkHIO_cFv();
extern "C" void __dt__17daAlinkHIO_wolf_cFv();
extern "C" void __dt__16daAlinkHIO_cut_cFv();
extern "C" void __dt__12daAlinkHIO_cFv();
extern "C" void __dt__8dEyeHL_cFv();
extern "C" void __dt__18daPy_sightPacket_cFv();
extern "C" void __dt__16daPy_frameCtrl_cFv();
extern "C" void __ct__16daPy_frameCtrl_cFv();
extern "C" void __defctor__14daPy_anmHeap_cFv();
extern "C" void __dt__19mDoExt_AnmRatioPackFv();
extern "C" void __ct__19mDoExt_AnmRatioPackFv();
extern "C" void __dt__16dBgS_LinkRoofChkFv();
extern "C" void __dt__15dBgS_LinkGndChkFv();
extern "C" void __dt__13dBgS_LinkAcchFv();
extern "C" void __ct__8dCcD_CpsFv();
extern "C" void __ct__8dCcD_CylFv();
extern "C" void __dt__9cCcD_SttsFv();
extern "C" void __ct__16daPy_actorKeep_cFv();
extern "C" void onNoResetFlg2__9daPy_py_cFQ29daPy_py_c9daPy_FLG2();
extern "C" void offNoResetFlg0__9daPy_py_cFQ29daPy_py_c9daPy_FLG0();
extern "C" static void mDoAud_seStartLevel__FUlPC3VecUlSc();
extern "C" void checkEndResetFlg2__9daPy_py_cCFQ29daPy_py_c11daPy_ERFLG2();
extern "C" static void dComIfGp_setBottleStatus__FUcUc();
extern "C" void getSumouMode__9daPy_py_cCFv();
extern "C" void checkNoResetFlg3__9daPy_py_cCFQ29daPy_py_c9daPy_FLG3();
extern "C" void onCondition__11dEvt_info_cFUs();
extern "C" void __ct__8cM3dGPlaFv();
extern "C" void offCondition__11dEvt_info_cFUs();
extern "C" void checkShieldGet__9daPy_py_cFv();
extern "C" static void fopAcM_onSwitch__FPC10fopAc_ac_ci();
extern "C" void dComIfGs_isItemFirstBit__FUc(u8);
extern "C" static void dStage_stagInfo_GetSaveTbl__FP21stage_stag_info_class();
extern "C" static void dComIfGp_getStage__Fv();
extern "C" void checkEquipHeavyBoots__9daPy_py_cCFv();
extern "C" void fopAcM_GetName__FPv();
extern "C" void onNoResetFlg0__9daPy_py_cFQ29daPy_py_c9daPy_FLG0();
extern "C" void isOrderOK__14dEvt_control_cFv();
extern "C" static void dComIfGp_getEvent__Fv();
extern "C" static void dComIfGp_checkPlayerStatus0__FiUl();
extern "C" static void dComIfGp_checkPlayerStatus1__FiUl();
extern "C" void checkEndResetFlg1__9daPy_py_cCFQ29daPy_py_c11daPy_ERFLG1();
extern "C" static void dComIfGp_getEventManager__Fv();
extern "C" void offNoResetFlg1__9daPy_py_cFQ29daPy_py_c9daPy_FLG1();
extern "C" void offNoResetFlg2__9daPy_py_cFQ29daPy_py_c9daPy_FLG2();
extern "C" void setSpecialDemoType__11daPy_demo_cFv();
extern "C" void checkCommandCatch__11dEvt_info_cFv();
extern "C" void dComIfGs_isEventBit__FUs();
extern "C" void checkWolf__9daPy_py_cCFv();
extern "C" void checkSwordGet__9daPy_py_cFv();
extern "C" void checkResetFlg0__9daPy_py_cCFQ29daPy_py_c10daPy_RFLG0();
extern "C" void ChkGroundHit__9dBgS_AcchCFv();
extern "C" void checkNoResetFlg0__9daPy_py_cCFQ29daPy_py_c9daPy_FLG0();
extern "C" static void dComIfGp_getPlayerCameraID__Fi();
extern "C" static void dComIfGp_event_chkEventFlag__FUs();
extern "C" void checkCommandDoor__11dEvt_info_cFv();
extern "C" static void dComIfGp_evmng_getMyStaffId__FPCcP10fopAc_ac_ci();
extern "C" static void dComIfGp_event_runCheck__Fv();
extern "C" void checkNoResetFlg2__9daPy_py_cCFQ29daPy_py_c9daPy_FLG2();
extern "C" void checkMagneBootsOn__9daPy_py_cCFv();
extern "C" void dComIfGp_getHorseActor__Fv();
extern "C" void checkBoarSingleBattle__9daPy_py_cCFv();
extern "C" void checkEndResetFlg0__9daPy_py_cCFQ29daPy_py_c11daPy_ERFLG0();
extern "C" bool getMidnaAtnPos__9daPy_py_cCFv();
extern "C" void setMidnaMsgNum__9daPy_py_cFP10fopAc_ac_cUs();
extern "C" void getModelMtx__9daPy_py_cFv();
extern "C" void getInvMtx__9daPy_py_cFv();
extern "C" void getShadowTalkAtnPos__9daPy_py_cFv();
extern "C" void getLeftItemMatrix__9daPy_py_cFv();
extern "C" void getRightItemMatrix__9daPy_py_cFv();
extern "C" void getLeftHandMatrix__9daPy_py_cFv();
extern "C" void getRightHandMatrix__9daPy_py_cFv();
extern "C" void getLinkBackBone1Matrix__9daPy_py_cFv();
extern "C" void getWolfMouthMatrix__9daPy_py_cFv();
extern "C" void getWolfBackbone2Matrix__9daPy_py_cFv();
extern "C" bool getBottleMtx__9daPy_py_cFv();
extern "C" bool checkPlayerGuard__9daPy_py_cCFv();
extern "C" bool checkAutoJump__9daPy_py_cCFv();
extern "C" bool checkSideStep__9daPy_py_cCFv();
extern "C" bool checkWolfTriggerJump__9daPy_py_cCFv();
extern "C" bool checkGuardBreakMode__9daPy_py_cCFv();
extern "C" bool checkLv3Slide__9daPy_py_cCFv();
extern "C" bool checkWolfHowlDemoMode__9daPy_py_cCFv();
extern "C" bool checkChainBlockPushPull__9daPy_py_cFv();
extern "C" bool checkElecDamage__9daPy_py_cCFv();
extern "C" bool checkEmptyBottleSwing__9daPy_py_cCFv();
extern "C" bool checkBottleSwingMode__9daPy_py_cCFv();
extern "C" bool checkHawkWait__9daPy_py_cCFv();
extern "C" bool checkGoatThrow__9daPy_py_cCFv();
extern "C" bool checkGoatThrowAfter__9daPy_py_cCFv();
extern "C" bool checkWolfTagLockJump__9daPy_py_cCFv();
extern "C" bool checkWolfTagLockJumpLand__9daPy_py_cCFv();
extern "C" bool checkWolfRope__9daPy_py_cFv();
extern "C" bool checkWolfRopeHang__9daPy_py_cCFv();
extern "C" bool checkRollJump__9daPy_py_cCFv();
extern "C" bool checkGoronRideWait__9daPy_py_cCFv();
extern "C" bool checkWolfChain__9daPy_py_cCFv();
extern "C" bool checkWolfWait__9daPy_py_cCFv();
extern "C" bool checkWolfJumpAttack__9daPy_py_cCFv();
extern "C" bool checkWolfRSit__9daPy_py_cCFv();
extern "C" bool checkBubbleFly__9daPy_py_cCFv();
extern "C" bool checkBottleDrinkEnd__9daPy_py_cCFv();
extern "C" bool checkWolfDig__9daPy_py_cCFv();
extern "C" bool checkCutCharge__9daPy_py_cCFv();
extern "C" bool checkCutTurnCharge__9daPy_py_cCFv();
extern "C" bool checkCutLargeJumpCharge__9daPy_py_cCFv();
extern "C" bool getBokoFlamePos__9daPy_py_cFP4cXyz();
extern "C" bool checkComboCutTurn__9daPy_py_cCFv();
extern "C" bool checkClimbMove__9daPy_py_cCFv();
extern "C" bool checkGrassWhistle__9daPy_py_cCFv();
extern "C" bool checkBoarRun__9daPy_py_cCFv();
extern "C" bool checkFmChainPut__9daPy_py_cCFv();
extern "C" bool checkHorseElecDamage__9daPy_py_cCFv();
extern "C" void getBaseAnimeFrameRate__9daPy_py_cCFv();
extern "C" void getBaseAnimeFrame__9daPy_py_cCFv();
extern "C" void setAnimeFrame__9daPy_py_cFf();
extern "C" bool checkWolfLock__9daPy_py_cCFP10fopAc_ac_c();
extern "C" bool cancelWolfLock__9daPy_py_cFP10fopAc_ac_c();
extern "C" s32 getItemID__9daPy_py_cCFv();
extern "C" bool exchangeGrabActor__9daPy_py_cFP10fopAc_ac_c();
extern "C" bool setForceGrab__9daPy_py_cFP10fopAc_ac_cii();
extern "C" void setForcePutPos__9daPy_py_cFRC4cXyz();
extern "C" bool checkPlayerNoDraw__9daPy_py_cFv();
extern "C" bool checkRopeTag__9daPy_py_cFv();
extern "C" void voiceStart__9daPy_py_cFUl();
extern "C" void seStartOnlyReverb__9daPy_py_cFUl();
extern "C" void seStartOnlyReverbLevel__9daPy_py_cFUl();
extern "C" void setOutPower__9daPy_py_cFfsi();
extern "C" void setGrabCollisionOffset__9daPy_py_cFffP13cBgS_PolyInfo();
extern "C" void onMagneGrab__9daPy_py_cFff();
extern "C" bool getModelJointMtx__9daPy_py_cFUs();
extern "C" bool getHeadMtx__9daPy_py_cFv();
extern "C" bool setHookshotCarryOffset__9daPy_py_cFUiPC4cXyz();
extern "C" bool checkIronBallReturn__9daPy_py_cCFv();
extern "C" bool checkIronBallGroundStop__9daPy_py_cCFv();
extern "C" bool checkSingleBoarBattleSecondBowReady__9daPy_py_cCFv();
extern "C" bool checkPointSubWindowMode__9daPy_py_cCFv();
extern "C" void setClothesChange__9daPy_py_cFi();
extern "C" void setPlayerPosAndAngle__9daPy_py_cFPA4_f();
extern "C" void setPlayerPosAndAngle__9daPy_py_cFPC4cXyzPC5csXyz();
extern "C" void setPlayerPosAndAngle__9daPy_py_cFPC4cXyzsi();
extern "C" bool setThrowDamage__9daPy_py_cFsffiii();
extern "C" bool checkSetNpcTks__9daPy_py_cFP4cXyzii();
extern "C" bool setRollJump__9daPy_py_cFffs();
extern "C" void playerStartCollisionSE__9daPy_py_cFUlUl();
extern "C" void changeTextureAnime__9daPy_py_cFUsUsi();
extern "C" void cancelChangeTextureAnime__9daPy_py_cFv();
extern "C" void cancelDungeonWarpReadyNeck__9daPy_py_cFv();
extern "C" void onSceneChangeArea__9daPy_py_cFUcUcP10fopAc_ac_c();
extern "C" void onSceneChangeAreaJump__9daPy_py_cFUcUcP10fopAc_ac_c();
extern "C" void onSceneChangeDead__9daPy_py_cFUci();
extern "C" bool getSpinnerActor__9daPy_py_cFv();
extern "C" bool checkHorseRideNotReady__9daPy_py_cCFv();
extern "C" bool checkArrowChargeEnd__9daPy_py_cCFv();
extern "C" void getSearchBallScale__9daPy_py_cCFv();
extern "C" bool checkFastShotTime__9daPy_py_cFv();
extern "C" bool checkNoEquipItem__9daPy_py_cCFv();
extern "C" bool checkFireMaterial__9daPy_py_cCFv();
extern "C" bool checkKandelaarSwing__9daPy_py_cCFi();
extern "C" bool getBoardCutTurnOffsetAngleY__9daPy_py_cCFv();
extern "C" void getMagneHitPos__9daPy_py_cFv();
extern "C" void getMagneBootsTopVec__9daPy_py_cFv();
extern "C" bool checkUseKandelaar__9daPy_py_cFi();
extern "C" void setDkCaught__9daPy_py_cFP10fopAc_ac_c();
extern "C" void onPressedDamage__9daPy_py_cFRC4cXyzs();
extern "C" bool checkPriActorOwn__9daPy_py_cCFPC10fopAc_ac_c();
extern "C" bool onWolfEnemyBiteAll__9daPy_py_cFP10fopAc_ac_cQ29daPy_py_c9daPy_FLG2();
extern "C" bool checkWolfEnemyBiteAllOwn__9daPy_py_cCFPC10fopAc_ac_c();
extern "C" void setWolfEnemyHangBiteAngle__9daPy_py_cFs();
extern "C" void setKandelaarMtx__9daPy_py_cFPA4_fii();
extern "C" bool getStickAngleFromPlayerShape__9daPy_py_cCFPs();
extern "C" bool checkSpinnerPathMove__9daPy_py_cFv();
extern "C" bool checkSpinnerTriggerAttack__9daPy_py_cFv();
extern "C" void onSpinnerPathForceRemove__9daPy_py_cFv();
extern "C" bool getIronBallBgHit__9daPy_py_cCFv();
extern "C" bool getIronBallCenterPos__9daPy_py_cFv();
extern "C" bool checkCanoeFishingGetLeft__9daPy_py_cCFv();
extern "C" bool checkCanoeFishingGetRight__9daPy_py_cCFv();
extern "C" bool checkBeeChildDrink__9daPy_py_cCFv();
extern "C" void skipPortalObjWarp__9daPy_py_cFv();
extern "C" bool checkTreasureRupeeReturn__9daPy_py_cCFi();
extern "C" void setSumouReady__9daPy_py_cFP10fopAc_ac_c();
extern "C" bool checkAcceptDungeonWarpAlink__9daPy_py_cFi();
extern "C" bool getSumouCounter__9daPy_py_cCFv();
extern "C" bool checkSumouWithstand__9daPy_py_cCFv();
extern "C" void cancelGoronThrowEvent__9daPy_py_cFv();
extern "C" void setSumouGraspCancelCount__9daPy_py_cFi();
extern "C" void setSumouPushBackDirection__9daPy_py_cFs();
extern "C" void setSumouLoseHeadUp__9daPy_py_cFv();
extern "C" void getGiantPuzzleAimAngle__9daPy_py_cCFv();
extern "C" void setGoronSideMove__9daPy_py_cFP10fopAc_ac_c();
extern "C" void setCargoCarry__9daPy_py_cFP10fopAc_ac_c();
extern "C" bool getDpdFarFlg__9daPy_py_cCFv();
extern "C" bool getHookshotTopPos__9daPy_py_cFv();
extern "C" bool checkHookshotReturnMode__9daPy_py_cCFv();
extern "C" bool checkHookshotShootReturnMode__9daPy_py_cCFv();
extern "C" bool checkOctaIealHang__9daPy_py_cCFv();
extern "C" void cancelOctaIealHang__9daPy_py_cFv();
extern "C" void cancelDragonHangBackJump__9daPy_py_cFv();
extern "C" void setOctaIealWildHang__9daPy_py_cFv();
extern "C" bool checkDragonHangRide__9daPy_py_cCFv();
extern "C" void changeDragonActor__9daPy_py_cFP10fopAc_ac_c();
extern "C" bool getClothesChangeWaitTimer__9daPy_py_cCFv();
extern "C" bool getShieldChangeWaitTimer__9daPy_py_cCFv();
extern "C" bool getSwordChangeWaitTimer__9daPy_py_cCFv();
extern "C" bool checkMetamorphose__9daPy_py_cCFv();
extern "C" bool checkWolfDownAttackPullOut__9daPy_py_cCFv();
extern "C" bool checkBootsOrArmorHeavy__9daPy_py_cCFv();
extern "C" s32 getBottleOpenAppearItem__9daPy_py_cCFv();
extern "C" bool checkItemSwordEquip__9daPy_py_cCFv();
extern "C" void getSinkShapeOffset__9daPy_py_cCFv();
extern "C" bool checkSinkDead__9daPy_py_cCFv();
extern "C" bool checkHorseStart__9daPy_py_cFv();
extern "C" bool getWolfHowlMgrP__9daPy_py_cFv();
extern "C" bool checkWolfHowlSuccessAnime__9daPy_py_cCFv();
extern "C" bool checkCopyRodTopUse__9daPy_py_cFv();
extern "C" bool checkCopyRodEquip__9daPy_py_cCFv();
extern "C" bool checkCutJumpMode__9daPy_py_cCFv();
extern "C" void getZeldaActor__9daHorse_cFv();
extern "C" static void dComIfGp_getDoStatus__Fv();
extern "C" void __ct__4cXyzFfff(f32, f32, f32);
extern "C" static void dMeter2Info_offUseButton__Fi();
extern "C" void setLinkState__14Z2CreatureLinkFUc();
extern "C" void dComIfGs_getRupee__Fv();
extern "C" void dComIfGp_setItemRupeeCount__Fl(s32);
extern "C" static void dMeter2Info_setFloatingMessage__FUssb();
extern "C" void onForcePanic__9daMidna_cFv();
extern "C" void checkForceNormalColor__9daMidna_cCFv();
extern "C" void checkForceTiredColor__9daMidna_cCFv();
extern "C" void checkMidnaTired__9daMidna_cFv();
extern "C" void onNoServiceWait__9daMidna_cFv();
extern "C" void setControllActorData__8daCrod_cFv();
extern "C" void func_80141ACC(void* _this, fopAc_ac_c const*, daObjMovebox::Act_c::Prm_e,
                              daObjMovebox::Act_c::Prm_e);
extern "C" int func_80141AE8(u8*);
extern "C" void __sinit_d_a_alink_cpp();
extern "C" static void func_801446D4();
extern "C" static void func_801446DC();
extern "C" static void func_801446E4();
extern "C" static void func_801446EC();
extern "C" static void func_801446F4();
extern "C" static void func_801446FC();
extern "C" static void func_80144704();
extern "C" static void func_8014470C();
extern "C" static void func_80144714();
extern "C" static void func_8014471C();
extern "C" u8 const m__19daAlinkHIO_basic_c0[88];
extern "C" u8 const m__18daAlinkHIO_move_c0[88];
extern "C" u8 const m__21daAlinkHIO_atnMove_c0[84];
extern "C" u8 const m__26daAlinkHIO_noActAtnMove_c0[84];
extern "C" u8 const m__23daAlinkHIO_frontRoll_c0[112];
extern "C" u8 const m__22daAlinkHIO_backJump_c0[56];
extern "C" u8 const m__22daAlinkHIO_sideStep_c0[104];
extern "C" u8 const m__19daAlinkHIO_slide_c0[120];
extern "C" u8 const m__20daAlinkHIO_cutNmV_c0[32];
extern "C" u8 const m__20daAlinkHIO_cutNmL_c0[32];
extern "C" u8 const m__20daAlinkHIO_cutNmR_c0[32];
extern "C" u8 const m__21daAlinkHIO_cutNmSL_c0[32];
extern "C" u8 const m__21daAlinkHIO_cutNmSR_c0[32];
extern "C" u8 const m__20daAlinkHIO_cutFnL_c0[44];
extern "C" u8 const m__20daAlinkHIO_cutFnV_c0[44];
extern "C" u8 const m__20daAlinkHIO_cutFnS_c0[44];
extern "C" u8 const m__21daAlinkHIO_cutFnSl_c0[44];
extern "C" u8 const m__21daAlinkHIO_cutFnSm_c0[44];
extern "C" u8 const m__20daAlinkHIO_cutFnR_c0[44];
extern "C" u8 const m__21daAlinkHIO_cutFnJU_c0[84];
extern "C" u8 const m__21daAlinkHIO_cutJump_c0[68];
extern "C" u8 const m__21daAlinkHIO_cutTurn_c0[152];
extern "C" u8 const m__21daAlinkHIO_hoCutLA_c0[32];
extern "C" u8 const m__21daAlinkHIO_hoCutLB_c0[32];
extern "C" u8 const m__21daAlinkHIO_hoCutRA_c0[32];
extern "C" u8 const m__21daAlinkHIO_hoCutRB_c0[32];
extern "C" u8 const m__25daAlinkHIO_hoCutCharge_c0[84];
extern "C" u8 const m__20daAlinkHIO_cutDaL_c0[28];
extern "C" u8 const m__20daAlinkHIO_cutDaR_c0[28];
extern "C" u8 const m__25daAlinkHIO_cutDaCharge_c0[28];
extern "C" u8 const m__21daAlinkHIO_cutDown_c0[116];
extern "C" u8 const m__21daAlinkHIO_cutHead_c0[96];
extern "C" u8 const m__26daAlinkHIO_cutLargeJump_c0[116];
extern "C" u8 const m__17daAlinkHIO_cut_c0[156];
extern "C" u8 const m__21daAlinkHIO_gAtPush_c0[36];
extern "C" u8 const m__21daAlinkHIO_gAtKick_c0[36];
extern "C" u8 const m__22daAlinkHIO_turnMove_c0[44];
extern "C" u8 const m__19daAlinkHIO_guard_c0[128];
extern "C" u8 const m__20daAlinkHIO_crouch_c0[76];
extern "C" u8 const m__22daAlinkHIO_autoJump_c0[180];
extern "C" u8 const m__23daAlinkHIO_smallJump_c0[72];
extern "C" u8 const m__23daAlinkHIO_wallCatch_c0[84];
extern "C" u8 const m__22daAlinkHIO_wallFall_c0[40];
extern "C" u8 const m__22daAlinkHIO_wallMove_c0[20];
extern "C" u8 const m__22daAlinkHIO_wallHang_c0[28];
extern "C" u8 const m__22daAlinkHIO_pushpull_c0[60];
extern "C" u8 const m__23daAlinkHIO_damNormal_c0[100];
extern "C" u8 const m__22daAlinkHIO_damLarge_c0[188];
extern "C" u8 const m__21daAlinkHIO_damHuge_c0[188];
extern "C" u8 const m__22daAlinkHIO_damHorse_c0[44];
extern "C" u8 const m__21daAlinkHIO_damFall_c0[72];
extern "C" u8 const m__23daAlinkHIO_damCaught_c0[36];
extern "C" u8 const m__21daAlinkHIO_damSwim_c0[140];
extern "C" u8 const m__20daAlinkHIO_damage_c0[88];
extern "C" u8 const m__19daAlinkHIO_horse_c0[108];
extern "C" u8 const m__19daAlinkHIO_canoe_c0[72];
extern "C" u8 const m__17daAlinkHIO_bow_c0[112];
extern "C" u8 const m__18daAlinkHIO_boom_c0[76];
extern "C" u8 const m__18daAlinkHIO_bomb_c0[76];
extern "C" u8 const m__21daAlinkHIO_huLight_c0[28];
extern "C" u8 const m__23daAlinkHIO_kandelaar_c0[80];
extern "C" u8 const m__21daAlinkHIO_fmChain_c0[40];
extern "C" u8 const m__24daAlinkHIO_magneBoots_c0[76];
extern "C" u8 const m__20daAlinkHIO_pickUp_c0[48];
extern "C" u8 const m__19daAlinkHIO_board_c0[156];
extern "C" u8 const m__20daAlinkHIO_bottle_c0[180];
extern "C" u8 const m__22daAlinkHIO_hookshot_c0[112];
extern "C" u8 const m__21daAlinkHIO_spinner_c0[64];
extern "C" u8 const m__22daAlinkHIO_ironBall_c0[140];
extern "C" u8 const m__21daAlinkHIO_copyRod_c0[56];
extern "C" u8 const m__21daAlinkHIO_zwLight_c0[28];
extern "C" u8 const m__18daAlinkHIO_item_c0[60];
extern "C" u8 const m__20daAlinkHIO_ladder_c0[112];
extern "C" u8 const m__22daAlinkHIO_roofHang_c0[76];
extern "C" u8 const m__18daAlinkHIO_grab_c0[228];
extern "C" u8 const m__18daAlinkHIO_swim_c0[252];
extern "C" u8 const m__20daAlinkHIO_wlMove_c0[256];
extern "C" u8 const m__23daAlinkHIO_wlMoveNoP_c0[72];
extern "C" u8 const m__23daAlinkHIO_wlAtnMove_c0[56];
extern "C" u8 const m__24daAlinkHIO_wlSideStep_c0[104];
extern "C" u8 const m__24daAlinkHIO_wlBackJump_c0[56];
extern "C" u8 const m__20daAlinkHIO_wlHowl_c0[96];
extern "C" u8 const m__24daAlinkHIO_wlAutoJump_c0[124];
extern "C" u8 const m__20daAlinkHIO_wlPush_c0[20];
extern "C" u8 const m__19daAlinkHIO_wlLie_c0[76];
extern "C" u8 const m__21daAlinkHIO_wlLight_c0[28];
extern "C" u8 const m__24daAlinkHIO_wlWallHang_c0[156];
extern "C" u8 const m__25daAlinkHIO_wlDamNormal_c0[96];
extern "C" u8 const m__24daAlinkHIO_wlDamLarge_c0[108];
extern "C" u8 const m__23daAlinkHIO_wlDamHuge_c0[108];
extern "C" u8 const m__23daAlinkHIO_wlDamFall_c0[64];
extern "C" u8 const m__25daAlinkHIO_wlDamCaught_c0[16];
extern "C" u8 const m__22daAlinkHIO_wlDamage_c0[44];
extern "C" u8 const m__21daAlinkHIO_wlSlide_c0[124];
extern "C" u8 const m__20daAlinkHIO_wlRope_c0[56];
extern "C" u8 const m__22daAlinkHIO_wlAtWaLr_c0[60];
extern "C" u8 const m__22daAlinkHIO_wlAtWaSc_c0[60];
extern "C" u8 const m__22daAlinkHIO_wlAtWaTl_c0[60];
extern "C" u8 const m__22daAlinkHIO_wlAtRoll_c0[32];
extern "C" u8 const m__23daAlinkHIO_wlAtNjump_c0[60];
extern "C" u8 const m__23daAlinkHIO_wlAtCjump_c0[100];
extern "C" u8 const m__22daAlinkHIO_wlAtLand_c0[64];
extern "C" u8 const m__22daAlinkHIO_wlAtDown_c0[156];
extern "C" u8 const m__22daAlinkHIO_wlAtLock_c0[84];
extern "C" u8 const m__22daAlinkHIO_wlAtBite_c0[92];
extern "C" u8 const m__22daAlinkHIO_wlAttack_c0[56];
extern "C" u8 const m__21daAlinkHIO_wlPoint_c0[124];
extern "C" u8 const m__21daAlinkHIO_wlChain_c0[92];
extern "C" u8 const m__20daAlinkHIO_wlSwim_c0[168];
extern "C" u8 const m__20daAlinkHIO_wlGrab_c0[100];
extern "C" u8 const m__20daAlinkHIO_wlBall_c0[56];
extern "C" u8 const m__18daAlinkHIO_wolf_c0[24];
extern "C" u8 const m_mainBckShield__9daAlink_c[80];
extern "C" u8 const m_mainBckSword__9daAlink_c[20];
extern "C" u8 const m_mainBckFishing__9daAlink_c[112];
extern "C" u8 const m_anmDataTable__9daAlink_c[4968];
extern "C" void* const m_wlAnmDataTable__9daAlink_c[294];
extern "C" u8 const m_faceTexDataTable__9daAlink_c[652];
extern "C" u8 const m_handLeftOutSidePos__9daAlink_c[12];
extern "C" u8 const m_handRightOutSidePos__9daAlink_c[12];
extern "C" u8 const m_handLeftInSidePos__9daAlink_c[12];
extern "C" u8 const m_handRightInSidePos__9daAlink_c[12];
extern "C" extern char const* const d_a_d_a_alink__stringBase0;
extern "C" u8 m_procInitTable__9daAlink_c[5632];
extern "C" u8 m_demoInitTable__9daAlink_c[1140];
extern "C" u8 m_fEffParamProc__9daAlink_c[72];

//
// External References:
//

extern "C" void __dt__4cXyzFv();
extern "C" s32 getAtnActorID__9daPy_py_cCFv();
extern "C" void mDoMtx_XYZrotM__FPA4_fsss();
extern "C" void mDoMtx_ZXYrotS__FPA4_fsss();
extern "C" void mDoMtx_ZXYrotM__FPA4_fsss();
extern "C" void mDoMtx_XrotS__FPA4_fs();
extern "C" void mDoMtx_XrotM__FPA4_fs();
extern "C" void mDoMtx_YrotS__FPA4_fs();
extern "C" void mDoMtx_YrotM__FPA4_fs();
extern "C" void mDoMtx_ZrotS__FPA4_fs();
extern "C" void mDoMtx_ZrotM__FPA4_fs();
extern "C" void mDoMtx_QuatConcat__FPC10QuaternionPC10QuaternionP10Quaternion();
extern "C" void mDoMtx_MtxToRot__FPA4_CfP5csXyz();
extern "C" void transS__14mDoMtx_stack_cFRC4cXyz();
extern "C" void transM__14mDoMtx_stack_cFfff();
extern "C" void transM__14mDoMtx_stack_cFRC4cXyz();
extern "C" void scaleM__14mDoMtx_stack_cFfff();
extern "C" void ZXYrotS__14mDoMtx_stack_cFRC5csXyz();
extern "C" void ZXYrotM__14mDoMtx_stack_cFRC5csXyz();
extern "C" void quatM__14mDoMtx_stack_cFPC10Quaternion();
extern "C" void play__14mDoExt_baseAnmFv();
extern "C" void init__13mDoExt_bckAnmFP15J3DAnmTransformiifssb();
extern "C" void changeBckOnly__13mDoExt_bckAnmFP15J3DAnmTransform();
extern "C" void entry__13mDoExt_bckAnmFP12J3DModelDataf();
extern "C" void init__13mDoExt_blkAnmFP13J3DDeformDataP13J3DAnmClusteriifss();
extern "C" void mDoExt_modelEntryDL__FP8J3DModel();
extern "C" void __ct__13J3DGXColorS10Fv();
extern "C" void mDoExt_getGameHeap__Fv();
extern "C" void mDoExt_destroyExpHeap__FP10JKRExpHeap();
extern "C" void mDoExt_setCurrentHeap__FP7JKRHeap();
extern "C" void initOldFrameMorf__22mDoExt_MtxCalcOldFrameFfUsUs();
extern "C" void __ct__4cXyzFv();
extern "C" void mDoExt_J3DModel__create__FP12J3DModelDataUlUl();
extern "C" void mDoLib_project__FP3VecP3Vec();
extern "C" void mDoLib_pos2camera__FP3VecP3Vec();
extern "C" void draw__19JPAParticleCallBackFP14JPABaseEmitterP15JPABaseParticle();
extern "C" void __ct__10fopAc_ac_cFv();
extern "C" void __dt__5csXyzFv();
extern "C" void __dt__10fopAc_ac_cFv();
extern "C" void fopAc_IsActor__FPv();
extern "C" void fopAcIt_Executor__FPFPvPv_iPv();
extern "C" void fopAcIt_Judge__FPFPvPv_PvPv();
extern "C" void fopAcM_setStageLayer__FPv();
extern "C" void fopAcM_delete__FP10fopAc_ac_c();
extern "C" void fopAcM_create__FsUlPC4cXyziPC5csXyzPC4cXyzSc();
extern "C" void fopAcM_fastCreate__FsUlPC4cXyziPC5csXyzPC4cXyzScPFPv_iPv();
extern "C" void fopAcM_createChild__FsUiUlPC4cXyziPC5csXyzPC4cXyzScPFPv_i();
extern "C" void fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl();
extern "C" void fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c();
extern "C" void fopAcM_seenActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c();
extern "C" void fopAcM_searchActorDistanceXZ__FPC10fopAc_ac_cPC10fopAc_ac_c();
extern "C" void fopAcM_searchActorDistanceXZ2__FPC10fopAc_ac_cPC10fopAc_ac_c();
extern "C" void fopAcM_orderTalkEvent__FP10fopAc_ac_cP10fopAc_ac_cUsUs();
extern "C" void fopAcM_orderTalkItemBtnEvent__FUsP10fopAc_ac_cP10fopAc_ac_cUsUs();
extern "C" void fopAcM_orderDoorEvent__FP10fopAc_ac_cP10fopAc_ac_cUsUs();
extern "C" void fopAcM_orderCatchEvent__FP10fopAc_ac_cP10fopAc_ac_cUsUs();
extern "C" void fopAcM_orderOtherEvent__FP10fopAc_ac_cPCcUsUsUs();
extern "C" void fopAcM_orderOtherEvent__FP10fopAc_ac_cP10fopAc_ac_cPCcUsUsUs();
extern "C" void fopAcM_orderOtherEventId__FP10fopAc_ac_csUcUsUsUs();
extern "C" void fopAcM_orderTreasureEvent__FP10fopAc_ac_cP10fopAc_ac_cUsUs();
extern "C" void fopAcM_getTalkEventPartner__FPC10fopAc_ac_c();
extern "C" void fopAcM_getItemEventPartner__FPC10fopAc_ac_c();
extern "C" void fopAcM_getEventPartner__FPC10fopAc_ac_c();
extern "C" void fopAcM_createItemForPresentDemo__FPC4cXyziUciiPC5csXyzPC4cXyz();
extern "C" void fopAcM_createItemForSimpleDemo__FPC4cXyziiPC5csXyzPC4cXyzff();
extern "C" void fopAcM_setCarryNow__FP10fopAc_ac_ci();
extern "C" void fopAcM_cancelCarryNow__FP10fopAc_ac_c();
extern "C" void fopAcM_getWaterY__FPC4cXyzPf();
extern "C" void fpoAcM_relativePos__FPC10fopAc_ac_cPC4cXyzP4cXyz();
extern "C" void fopAcM_getWaterStream__FPC4cXyzRC13cBgS_PolyInfoP4cXyzPii();
extern "C" void __dt__8cM3dGPlaFv();
extern "C" void fopAcM_getPolygonAngle__FPC8cM3dGPlas();
extern "C" void lineCheck__11fopAcM_lc_cFPC4cXyzPC4cXyzPC10fopAc_ac_c();
extern "C" void gndCheck__11fopAcM_gc_cFPC4cXyz();
extern "C" void waterCheck__11fopAcM_wt_cFPC4cXyz();
extern "C" void onFrollCrashFlg__9daPy_py_cFUci();
extern "C" bool checkWolfDash__9daPy_py_cCFv();
extern "C" bool checkFrontRoll__9daPy_py_cCFv();
extern "C" bool checkHorseRide__9daPy_py_cCFv();
extern "C" s32 getGrabActorID__9daPy_py_cCFv();
extern "C" void fopOvlpM_IsPeek__Fv();
extern "C" void fopKyM_create__FsiP4cXyzP4cXyzPFPv_i();
extern "C" void fopKyM_createWpillar__FPC4cXyzfi();
extern "C" void fopMsgM_SearchByID__FUi();
extern "C" void fopMsgM_messageSet__FUlUl();
extern "C" void fpcM_IsCreating__FUi();
extern "C" void fpcSch_JudgeByID__FPvPv();
extern "C" void dStage_RoomCheck__FP11cBgS_GndChk();
extern "C" void dStage_changeSceneExitId__FR13cBgS_PolyInfofUlScs();
extern "C" void dStage_changeScene__FifUlScsi();
extern "C" void dStage_restartRoom__FUlUli();
extern "C" void dComIfGp_checkItemGet__FUci();
extern "C" void getLayerNo__14dComIfG_play_cFi();
extern "C" void dComIfG_resLoad__FP30request_of_phase_process_classPCcP7JKRHeap();
extern "C" void dComIfG_resDelete__FP30request_of_phase_process_classPCc();
extern "C" void dComIfGp_getReverb__Fi();
extern "C" void dComIfGp_setNextStage__FPCcsScScfUliScsii();
extern "C" void dComIfGs_isOneZoneSwitch__Fii();
extern "C" void dComIfGs_getMaxLifeGauge__Fv();
extern "C" void dComIfGp_getSelectItem__Fi();
extern "C" s32 dComIfGs_getBottleMax__Fv();
extern "C" void dComIfGp_getSelectItemNum__Fi();
extern "C" void dComIfGp_setSelectItemNum__Fis();
extern "C" void dComIfGp_addSelectItemNum__Fis();
extern "C" void
dComIfGd_setShadow__FUlScP8J3DModelP4cXyzffffR13cBgS_PolyInfoP12dKy_tevstr_csfP9_GXTexObj();
extern "C" void dComIfGs_setSelectEquipClothes__FUc();
extern "C" void dComIfGs_getWarpStageName__Fv();
extern "C" void dComIfGs_getWarpPlayerPos__Fv();
extern "C" void dComIfGs_getWarpPlayerAngleY__Fv();
extern "C" void dComIfGs_getWarpRoomNo__Fv();
extern "C" void dComIfGs_Wolf_Change_Check__Fv();
extern "C" void dComIfGs_PolyDamageOff_Check__Fv();
extern "C" void dComIfGp_TargetWarpPt_set__FUc();
extern "C" void dComIfGp_TargetWarpPt_get__Fv();
extern "C" void dComIfGp_TransportWarp_check__Fv();
extern "C" void entry__10daMirror_cFP8J3DModel();
extern "C" void checkMagnetCode__12daTagMagne_cFR13cBgS_PolyInfo();
extern "C" void getPlayerNo__11daTagMist_cFv();
extern "C" void getRupeeMax__21dSv_player_status_a_cCFv();
extern "C" void isTransformLV__21dSv_player_status_b_cCFi();
extern "C" void setItem__17dSv_player_item_cFiUc();
extern "C" void setBottleItemIn__17dSv_player_item_cFUcUc();
extern "C" void setEquipBottleItemIn__17dSv_player_item_cFUcUc();
extern "C" void setEquipBottleItemEmpty__17dSv_player_item_cFUc();
extern "C" void checkBottle__17dSv_player_item_cFUc();
extern "C" void setBaitItem__17dSv_player_item_cFUc();
extern "C" void isFirstBit__21dSv_player_get_item_cCFUc();
extern "C" void getLightDropNum__16dSv_light_drop_cCFUc();
extern "C" void isDungeonItem__12dSv_memBit_cCFi();
extern "C" void onEventBit__11dSv_event_cFUs();
extern "C" void offEventBit__11dSv_event_cFUs();
extern "C" void isEventBit__11dSv_event_cCFUs();
extern "C" void isSwitch__12dSv_danBit_cCFi();
extern "C" void setRoom__13dSv_restart_cFRC4cXyzsSc();
extern "C" void set__17dSv_turnRestart_cFRC4cXyzsScUl();
extern "C" void onSwitch__10dSv_info_cFii();
extern "C" void offSwitch__10dSv_info_cFii();
extern "C" void isSwitch__10dSv_info_cCFii();
extern "C" void __ct__9dJntCol_cFv();
extern "C" void init__9dJntCol_cFP10fopAc_ac_cPC13dJntColData_cP8J3DModeli();
extern "C" void getHitmarkPosAndAngle__9dJntCol_cCFPC4cXyzPC5csXyzP4cXyzP5csXyzi();
extern "C" void getItemNo__12daItemBase_cFv();
extern "C" void hide__12daItemBase_cFv();
extern "C" void show__12daItemBase_cFv();
extern "C" void dead__12daItemBase_cFv();
extern "C" void checkWait__10e_wb_classFv();
extern "C" void setPlayerRideNow__10e_wb_classFv();
extern "C" void setPlayerRide__10e_wb_classFv();
extern "C" void getOff__10e_wb_classFv();
extern "C" void checkDownDamage__10e_wb_classFv();
extern "C" void checkNormalRideMode__10e_wb_classCFv();
extern "C" void setRunRideMode__10e_wb_classFv();
extern "C" void getPrm_Morf__13dDemo_actor_cFv();
extern "C" void getDemoIDData__13dDemo_actor_cFPiPiPiPUsPUc();
extern "C" void getActor__14dDemo_object_cFUc();
extern "C" void setBranchId__7dDemo_cFUss();
extern "C" void onWarpMaterial__11dRes_info_cFP12J3DModelData();
extern "C" void offWarpMaterial__11dRes_info_cFP12J3DModelData();
extern "C" void setWarpSRT__11dRes_info_cFP12J3DModelDataRC4cXyzff();
extern "C" void loaderBasicBmd__11dRes_info_cFUlPv();
extern "C" void __dt__15J3DTevKColorAnmFv();
extern "C" void __ct__15J3DTevKColorAnmFv();
extern "C" void __dt__14J3DTevColorAnmFv();
extern "C" void __ct__14J3DTevColorAnmFv();
extern "C" void __dt__11J3DTexNoAnmFv();
extern "C" void __ct__11J3DTexNoAnmFv();
extern "C" void __dt__12J3DTexMtxAnmFv();
extern "C" void __ct__12J3DTexMtxAnmFv();
extern "C" void __dt__14J3DMatColorAnmFv();
extern "C" void __ct__14J3DMatColorAnmFv();
extern "C" void getResInfo__14dRes_control_cFPCcP11dRes_info_ci();
extern "C" void getRes__14dRes_control_cFPCclP11dRes_info_ci();
extern "C" void getRes__14dRes_control_cFPCcPCcP11dRes_info_ci();
extern "C" void getIDRes__14dRes_control_cFPCcUsP11dRes_info_ci();
extern "C" void reset__14dEvt_control_cFv();
extern "C" void reset__14dEvt_control_cFPv();
extern "C" void dEv_noFinishSkipProc__FPvi();
extern "C" void setSkipProc__14dEvt_control_cFPvPFPvi_ii();
extern "C" void compulsory__14dEvt_control_cFPvPCcUs();
extern "C" void convPId__14dEvt_control_cFUi();
extern "C" void setPtI_Id__14dEvt_control_cFUi();
extern "C" void setPtD__14dEvt_control_cFPv();
extern "C" void setStartDemo__18dEvent_exception_cFi();
extern "C" void setObjectArchive__16dEvent_manager_cFPc();
extern "C" void orderStartDemo__16dEvent_manager_cFv();
extern "C" void getEventIdx__16dEvent_manager_cFP10fopAc_ac_cPCcUc();
extern "C" void startCheckOld__16dEvent_manager_cFPCc();
extern "C" void getMyStaffId__16dEvent_manager_cFPCcP10fopAc_ac_ci();
extern "C" void getMyNowCutName__16dEvent_manager_cFi();
extern "C" void getMySubstanceP__16dEvent_manager_cFiPCci();
extern "C" void cutEnd__16dEvent_manager_cFi();
extern "C" void setGoal__16dEvent_manager_cFP4cXyz();
extern "C" void getGoal__16dEvent_manager_cFv();
extern "C" void getRunEventName__16dEvent_manager_cFv();
extern "C" void checkStartDemo__16dEvent_manager_cFv();
extern "C" void forceOnEventMove__Q213dPa_control_c7level_cFUl();
extern "C" void getEmitter__Q213dPa_control_c7level_cFUl();
extern "C" void setHitMark__13dPa_control_cFUsP10fopAc_ac_cPC4cXyzPC5csXyzPC4cXyzUl();
extern "C" void
setWaterRipple__13dPa_control_cFPUlR13cBgS_PolyInfoPC4cXyzfPC12dKy_tevstr_cPC4cXyzSc();
extern "C" void
set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf();
extern "C" void getPolyColor__13dPa_control_cFR13cBgS_PolyInfoiP8_GXColorP8_GXColorPUcPf();
extern "C" void
setPoly__13dPa_control_cFUsR13cBgS_PolyInfoPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyziP18dPa_levelEcallBackScPC4cXyz();
extern "C" void
set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf();
extern "C" void
setPoly__13dPa_control_cFUlUsR13cBgS_PolyInfoPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyziP18dPa_levelEcallBackScPC4cXyz();
extern "C" void setOldPosP__22dPa_hermiteEcallBack_cFPC4cXyzPC4cXyz();
extern "C" void init__7dPaPo_cFP9dBgS_Acchff();
extern "C" void setEffectCenter__7dPaPo_cFPC12dKy_tevstr_cPC4cXyzUlUlPC4cXyzPC5csXyzPC4cXyzScff();
extern "C" void
setEffectFour__8dPaPoF_cFPC12dKy_tevstr_cPC4cXyzUlUlPC4cXyzPC4cXyzPC4cXyzPC4cXyzPC4cXyzPC5csXyzPC4cXyzScff();
extern "C" void clearFourAllID__8dPaPoF_cFv();
extern "C" void dPath_GetRoomPath__Fii();
extern "C" void addReal__21dDlst_shadowControl_cFUlP8J3DModel();
extern "C" void newData__13dDlst_peekZ_cFssPUl();
extern "C" void entryZSortXluDrawList__12dDlst_list_cFP13J3DDrawBufferP9J3DPacketR4cXyz();
extern "C" void dKyw_get_AllWind_vec__FP4cXyzP4cXyzPf();
extern "C" bool getKandelaarFlamePos__9daPy_py_cFv();
extern "C" void StartShock__12dVibration_cFii4cXyz();
extern "C" void StartQuake__12dVibration_cFii4cXyz();
extern "C" void StopQuake__12dVibration_cFi();
extern "C" void GetLockonList__12dAttention_cFl();
extern "C" void getActionBtnB__12dAttention_cFv();
extern "C" void getActionBtnXY__12dAttention_cFv();
extern "C" void LockonTarget__12dAttention_cFl();
extern "C" void LockonTruth__12dAttention_cFv();
extern "C" void getActor__10dAttList_cFv();
extern "C" void convPId__10dAttHint_cFUi();
extern "C" void convPId__11dAttCatch_cFUi();
extern "C" void convPId__10dAttLook_cFUi();
extern "C" void LineCross__4cBgSFP11cBgS_LinChk();
extern "C" void GroundCross__4cBgSFP11cBgS_GndChk();
extern "C" void GetActorPointer__4cBgSCFi();
extern "C" void GetBgWBasePointer__4cBgSCFRC13cBgS_PolyInfo();
extern "C" void ChkPolySafe__4cBgSFRC13cBgS_PolyInfo();
extern "C" void GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla();
extern "C" void GetTriPnt__4cBgSCFRC13cBgS_PolyInfoP4cXyzP4cXyzP4cXyz();
extern "C" void ChkMoveBG__4dBgSFRC13cBgS_PolyInfo();
extern "C" void ChkMoveBG_NoDABg__4dBgSFRC13cBgS_PolyInfo();
extern "C" void GetExitId__4dBgSFRC13cBgS_PolyInfo();
extern "C" void GetPolyColor__4dBgSFRC13cBgS_PolyInfo();
extern "C" void GetHorseNoEntry__4dBgSFRC13cBgS_PolyInfo();
extern "C" void GetSpecialCode__4dBgSFRC13cBgS_PolyInfo();
extern "C" void GetMagnetCode__4dBgSFRC13cBgS_PolyInfo();
extern "C" void GetMonkeyBarsCode__4dBgSFRC13cBgS_PolyInfo();
extern "C" void GetWallCode__4dBgSFRC13cBgS_PolyInfo();
extern "C" void GetPolyAtt0__4dBgSFRC13cBgS_PolyInfo();
extern "C" void GetPolyAtt1__4dBgSFRC13cBgS_PolyInfo();
extern "C" void GetGroundCode__4dBgSFRC13cBgS_PolyInfo();
extern "C" void GetRoomPathId__4dBgSFRC13cBgS_PolyInfo();
extern "C" void GetGrpSoundId__4dBgSFRC13cBgS_PolyInfo();
extern "C" void GetRoomId__4dBgSFRC13cBgS_PolyInfo();
extern "C" void GetPolyAttackThrough__4dBgSFRC13cBgS_PolyInfo();
extern "C" void ChkPolyHSStick__4dBgSFRC13cBgS_PolyInfo();
extern "C" void RoofChk__4dBgSFP12dBgS_RoofChk();
extern "C" void MoveBgCrrPos__4dBgSFRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyzbb();
extern "C" void MoveBgTransPos__4dBgSFRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz();
extern "C" void
PushPullCallBack__4dBgSFRC13cBgS_PolyInfoP10fopAc_ac_csQ29dBgW_Base13PushPullLabel();
extern "C" void dBgS_CheckBWallPoly__FRC13cBgS_PolyInfo();
extern "C" void dBgS_CheckBGroundPoly__FRC13cBgS_PolyInfo();
extern "C" void dBgS_GetNY__FRC13cBgS_PolyInfo();
extern "C" void __ct__12dBgS_AcchCirFv();
extern "C" void SetWallR__12dBgS_AcchCirFf();
extern "C" void SetWall__12dBgS_AcchCirFff();
extern "C" void __dt__9dBgS_AcchFv();
extern "C" void __ct__9dBgS_AcchFv();
extern "C" void Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz();
extern "C" void Set__9dBgS_AcchFP10fopAc_ac_ciP12dBgS_AcchCir();
extern "C" void CrrPos__9dBgS_AcchFR4dBgS();
extern "C" void SetGndThinCellingOff__9dBgS_AcchFv();
extern "C" void ClrGndThinCellingOff__9dBgS_AcchFv();
extern "C" void OnWallSort__9dBgS_AcchFv();
extern "C" void __dt__12dBgS_AcchCirFv();
extern "C" bool checkPlayerFly__9daPy_py_cCFv();
extern "C" void __ct__11dBgS_GndChkFv();
extern "C" void __dt__11dBgS_GndChkFv();
extern "C" void Set__11dBgS_LinChkFPC4cXyzPC4cXyzPC10fopAc_ac_c();
extern "C" void __ct__14dBgS_ObjLinChkFv();
extern "C" void __dt__14dBgS_ObjLinChkFv();
extern "C" void __ct__15dBgS_LinkLinChkFv();
extern "C" void __dt__15dBgS_LinkLinChkFv();
extern "C" void __ct__16dBgS_ArrowLinChkFv();
extern "C" void __dt__16dBgS_ArrowLinChkFv();
extern "C" void __ct__20dBgS_BoomerangLinChkFv();
extern "C" void __dt__20dBgS_BoomerangLinChkFv();
extern "C" void __ct__15dBgS_RopeLinChkFv();
extern "C" void __dt__15dBgS_RopeLinChkFv();
extern "C" void SetObj__16dBgS_PolyPassChkFv();
extern "C" void ClrObj__16dBgS_PolyPassChkFv();
extern "C" void SetLink__16dBgS_PolyPassChkFv();
extern "C" void ClrLink__16dBgS_PolyPassChkFv();
extern "C" void SetBomb__16dBgS_PolyPassChkFv();
extern "C" void ClrBomb__16dBgS_PolyPassChkFv();
extern "C" void SetStatue__16dBgS_PolyPassChkFv();
extern "C" void ClrStatue__16dBgS_PolyPassChkFv();
extern "C" void SetIronBall__16dBgS_PolyPassChkFv();
extern "C" void __ct__12dBgS_RoofChkFv();
extern "C" void __dt__12dBgS_RoofChkFv();
extern "C" void GetAc__22dCcD_GAtTgCoCommonBaseFv();
extern "C" void __ct__10dCcD_GSttsFv();
extern "C" void Move__10dCcD_GSttsFv();
extern "C" void Init__9dCcD_SttsFiiP10fopAc_ac_c();
extern "C" void __ct__12dCcD_GObjInfFv();
extern "C" void __dt__12dCcD_GObjInfFv();
extern "C" void ChkAtHit__12dCcD_GObjInfFv();
extern "C" void ResetAtHit__12dCcD_GObjInfFv();
extern "C" void GetAtHitGObj__12dCcD_GObjInfFv();
extern "C" void ChkTgHit__12dCcD_GObjInfFv();
extern "C" void ResetTgHit__12dCcD_GObjInfFv();
extern "C" void GetTgHitGObj__12dCcD_GObjInfFv();
extern "C" void GetTgHitObjSe__12dCcD_GObjInfFv();
extern "C" void getHitSeID__12dCcD_GObjInfFUci();
extern "C" void ChkCoHit__12dCcD_GObjInfFv();
extern "C" void ResetCoHit__12dCcD_GObjInfFv();
extern "C" void Set__8dCcD_CpsFRC11dCcD_SrcCps();
extern "C" void Set__8dCcD_CylFRC11dCcD_SrcCyl();
extern "C" void StartCAt__8dCcD_CylFR4cXyz();
extern "C" void MoveCAt__8dCcD_CylFR4cXyz();
extern "C" void Set__8dCcD_SphFRC11dCcD_SrcSph();
extern "C" void StartCAt__8dCcD_SphFR4cXyz();
extern "C" void MoveCAt__8dCcD_SphFR4cXyz();
extern "C" void __dt__8dCcD_CylFv();
extern "C" void __dt__8dCcD_CpsFv();
extern "C" void Set__12dCcMassS_MngFP8cCcD_ObjUc();
extern "C" bool checkCutJumpCancelTurn__9daPy_py_cCFv();
extern "C" void StartEventCamera__9dCamera_cFiie();
extern "C" void EndEventCamera__9dCamera_cFi();
extern "C" void abs__4cXyzCFv();
extern "C" void checkMidnaRide__9daPy_py_cCFv();
extern "C" void __as__4cXyzFRC4cXyz();
extern "C" void __ct__4cXyzFRC4cXyz();
extern "C" bool checkCanoeRide__9daPy_py_cCFv();
extern "C" bool checkBoardRide__9daPy_py_cCFv();
extern "C" bool checkSpinnerRide__9daPy_py_cCFv();
extern "C" bool checkBoarRide__9daPy_py_cCFv();
extern "C" void getShadowTalkAtnPos__9daAlink_cFv();
extern "C" void execItemGet__FUc();
extern "C" void checkItemGet__FUci();
extern "C" void entry__8dEyeHL_cFP12J3DModelDataPCc();
extern "C" void remove__8dEyeHL_cFv();
extern "C" void getActorP__18daNpcT_ActorMngr_cFv();
extern "C" void daNpcF_getPlayerInfoFromPlayerList__FiiR4cXyzR5csXyz();
extern "C" void checkAnmEnd__16daPy_frameCtrl_cFv();
extern "C" void updateFrame__16daPy_frameCtrl_cFv();
extern "C" void setFrameCtrl__16daPy_frameCtrl_cFUcssff();
extern "C" void setParamData__9daPy_py_cFiiii();
extern "C" void checkFishingRodItem__9daPy_py_cFi();
extern "C" void checkBombItem__9daPy_py_cFi();
extern "C" void checkBottleItem__9daPy_py_cFi();
extern "C" void checkDrinkBottleItem__9daPy_py_cFi();
extern "C" void checkOilBottleItem__9daPy_py_cFi();
extern "C" void checkOpenBottleItem__9daPy_py_cFi();
extern "C" void checkBowItem__9daPy_py_cFi();
extern "C" void checkHookshotItem__9daPy_py_cFi();
extern "C" void checkTradeItem__9daPy_py_cFi();
extern "C" void checkDungeonWarpItem__9daPy_py_cFi();
extern "C" void setActor__16daPy_actorKeep_cFv();
extern "C" void setData__16daPy_actorKeep_cFP10fopAc_ac_c();
extern "C" void clearData__16daPy_actorKeep_cFv();
extern "C" void __ct__14daPy_anmHeap_cFUl();
extern "C" void __dt__14daPy_anmHeap_cFv();
extern "C" void mallocBuffer__14daPy_anmHeap_cFv();
extern "C" void createHeap__14daPy_anmHeap_cFQ214daPy_anmHeap_c16daAlinkHEAP_TYPE();
extern "C" void loadDataIdx__14daPy_anmHeap_cFUs();
extern "C" void loadDataPriIdx__14daPy_anmHeap_cFUs();
extern "C" void loadDataDemoRID__14daPy_anmHeap_cFUsUs();
extern "C" void setAnimeHeap__14daPy_anmHeap_cFv();
extern "C" void draw__18daPy_sightPacket_cFv();
extern "C" void setSight__18daPy_sightPacket_cFv();
extern "C" void setSightImage__18daPy_sightPacket_cFP7ResTIMG();
extern "C" void checkMasterSwordEquip__9daPy_py_cFv();
extern "C" void checkWoodShieldEquip__9daPy_py_cFv();
extern "C" void checkCarryStartLightBallA__9daPy_py_cFv();
extern "C" void checkCarryStartLightBallB__9daPy_py_cFv();
extern "C" void daPy_addCalcShort__FPsssss();
extern "C" void Start__9dCamera_cFv();
extern "C" void Stop__9dCamera_cFv();
extern "C" void ChangeModeOK__9dCamera_cFl();
extern "C" void SetTrimTypeForce__9dCamera_cFl();
extern "C" void GetCameraTypeFromCameraName__9dCamera_cFPCc();
extern "C" void GetForceLockOnActor__9dCamera_cFv();
extern "C" void dCam_getControledAngleY__FP12camera_class();
extern "C" void dCam_getBody__Fv();
extern "C" void d_GameOver_Create__FUc();
extern "C" void settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c();
extern "C" void setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c();
extern "C" void dKy_setLight_again__Fv();
extern "C" void dKy_plight_set__FP15LIGHT_INFLUENCE();
extern "C" void dKy_plight_cut__FP15LIGHT_INFLUENCE();
extern "C" void dKy_Itemgetcol_chg_on__Fv();
extern "C" void dKy_Sound_set__F4cXyziUii();
extern "C" void dKy_SordFlush_set__F4cXyzi();
extern "C" void dKy_GxFog_tevstr_set__FP12dKy_tevstr_c();
extern "C" void dKy_WolfEyeLight_set__FP4cXyzfffP8_GXColorfUcUc();
extern "C" void dKy_pol_efftype_get__FPC13cBgS_PolyInfo();
extern "C" void dKy_pol_sound_get__FPC13cBgS_PolyInfo();
extern "C" void dKy_pol_argument_get__FPC13cBgS_PolyInfo();
extern "C" void dKy_TeachWind_existence_chk__Fv();
extern "C" bool dKy_withwarp_capture_check__Fv();
extern "C" void dKy_darkworld_check__Fv();
extern "C" void dKy_shadow_mode_set__FUc();
extern "C" void dKy_shadow_mode_reset__FUc();
extern "C" void setFloatingMessage__13dMeter2Info_cFUssb();
extern "C" void onDirectUseItem__13dMeter2Info_cFi();
extern "C" void resetWarpStatus__13dMeter2Info_cFv();
extern "C" void warpInProc__13dMeter2Info_cFv();
extern "C" void warpOutProc__13dMeter2Info_cFv();
extern "C" void dMeter2Info_setShield__FUcb();
extern "C" void getStatus__12dMsgObject_cFv();
extern "C" void onMsgSend__12dMsgObject_cFv();
extern "C" void setSmellType__12dMsgObject_cFUc();
extern "C" void isHowlHearingMode__12dMsgObject_cFv();
extern "C" void __ct__10dMsgFlow_cFv();
extern "C" void __dt__10dMsgFlow_cFv();
extern "C" void init__10dMsgFlow_cFP10fopAc_ac_ciiPP10fopAc_ac_c();
extern "C" void doFlow__10dMsgFlow_cFP10fopAc_ac_cPP10fopAc_ac_ci();
extern "C" void dPaneClass_showNullPane__FP9J2DScreen();
extern "C" void ClrCcMove__9cCcD_SttsFv();
extern "C" void SetIGrp__10cCcD_ObjCoFUl();
extern "C" void SetVsGrp__10cCcD_ObjCoFUl();
extern "C" void Set__4cCcSFP8cCcD_Obj();
extern "C" void cPhs_Reset__FP30request_of_phase_process_class();
extern "C" void __pl__4cXyzCFRC3Vec();
extern "C" void __mi__4cXyzCFRC3Vec();
extern "C" void __ml__4cXyzCFf();
extern "C" void __dv__4cXyzCFf();
extern "C" void outprod__4cXyzCFRC3Vec();
extern "C" void normZP__4cXyzCFv();
extern "C" void normalize__4cXyzFv();
extern "C" void normalizeZP__4cXyzFv();
extern "C" void atan2sX_Z__4cXyzCFv();
extern "C" void atan2sY_XZ__4cXyzCFv();
extern "C" void __ct__5csXyzFsss();
extern "C" void cM_rad2s__Ff();
extern "C" void cM_atan2s__Fff();
extern "C" void cM_atan2f__Fff();
extern "C" void cM_rnd__Fv();
extern "C" void cM_rndF__Ff();
extern "C" void cM_rndFX__Ff();
extern "C" void SetPos__11cBgS_GndChkFPC4cXyz();
extern "C" void __ct__13cBgS_PolyInfoFv();
extern "C" void __dt__13cBgS_PolyInfoFv();
extern "C" void ClearPi__13cBgS_PolyInfoFv();
extern "C" void SetPolyInfo__13cBgS_PolyInfoFRC13cBgS_PolyInfo();
extern "C" void cBgW_CheckBGround__Ff();
extern "C" void cBgW_CheckBRoof__Ff();
extern "C" void cBgW_CheckBWall__Ff();
extern "C" void cM3d_Len2dSqPntAndSegLine__FffffffPfPfPf();
extern "C" void cM3d_SignedLenPlaAndPos__FPC8cM3dGPlaPC3Vec();
extern "C" void cM3d_3PlaneCrossPos__FRC8cM3dGPlaRC8cM3dGPlaRC8cM3dGPlaP3Vec();
extern "C" void __ct__8cM3dGCpsFv();
extern "C" void __dt__8cM3dGCpsFv();
extern "C" void SetC__8cM3dGCylFRC4cXyz();
extern "C" void SetH__8cM3dGCylFf();
extern "C" void SetR__8cM3dGCylFf();
extern "C" void SetStartEnd__8cM3dGLinFRC4cXyzRC4cXyz();
extern "C" void __ct__8cM3dGPlaFPC4cXyzf();
extern "C" void crossInfLin__8cM3dGPlaCFRC4cXyzRC4cXyzR4cXyz();
extern "C" void SetC__8cM3dGSphFRC4cXyz();
extern "C" void SetR__8cM3dGSphFf();
extern "C" void cLib_memCpy__FPvPCvUl();
extern "C" void cLib_addCalc__FPfffff();
extern "C" void cLib_addCalcPos__FP4cXyzRC4cXyzfff();
extern "C" void cLib_addCalcAngleS__FPsssss();
extern "C" void cLib_addCalcAngleS2__FPssss();
extern "C" void cLib_chaseUC__FPUcUcUc();
extern "C" void cLib_chaseS__FPsss();
extern "C" void cLib_chaseF__FPfff();
extern "C" void cLib_chasePos__FP4cXyzRC4cXyzf();
extern "C" void cLib_chasePosXZ__FP4cXyzRC4cXyzf();
extern "C" void cLib_chaseAngleS__FPsss();
extern "C" void cLib_targetAngleY__FPC3VecPC3Vec();
extern "C" void cLib_distanceAngleS__Fss();
extern "C" void __dt__18JPAEmitterCallBackFv();
extern "C" void __dt__19JPAParticleCallBackFv();
extern "C" void func_802807E0();
extern "C" void JPACalcKeyAnmValue__FfUsPCf();
extern "C" void
getData__Q47JStudio3stb4data22TParse_TParagraph_dataCFPQ57JStudio3stb4data22TParse_TParagraph_data5TData();
extern "C" void getAramHeap__9JASKernelFv();
extern "C" void func_802A0A8C();
extern "C" void releaseSound__14JAISoundHandleFv();
extern "C" void seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc();
extern "C" void seStartLevel__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc();
extern "C" void bgmStart__8Z2SeqMgrFUlUll();
extern "C" void subBgmStart__8Z2SeqMgrFUl();
extern "C" void subBgmStop__8Z2SeqMgrFv();
extern "C" void changeBgmStatus__8Z2SeqMgrFl();
extern "C" void changeSubBgmStatus__8Z2SeqMgrFl();
extern "C" void bgmSetSwordUsing__8Z2SeqMgrFl();
extern "C" void taktModeMute__8Z2SeqMgrFv();
extern "C" void taktModeMuteOff__8Z2SeqMgrFv();
extern "C" void deleteObject__14Z2SoundObjBaseFv();
extern "C" void __ct__16Z2SoundObjSimpleFv();
extern "C" void initAnime__10Z2CreatureFPvbff();
extern "C" void updateAnime__10Z2CreatureFff();
extern "C" void startCollisionSE__10Z2CreatureFUlUl();
extern "C" void setLinkGroupInfo__14Z2CreatureLinkFUc();
extern "C" void setLinkHp__14Z2CreatureLinkFll();
extern "C" void setLinkSwordType__14Z2CreatureLinkFll();
extern "C" void setLinkShieldType__14Z2CreatureLinkFll();
extern "C" void setLinkBootsType__14Z2CreatureLinkFl();
extern "C" void __ct__14Z2CreatureLinkFv();
extern "C" void __dt__14Z2CreatureLinkFv();
extern "C" void init__14Z2CreatureLinkFP3VecP3VecP3Vec();
extern "C" void initKantera__14Z2CreatureLinkFP3Vec();
extern "C" void deleteKantera__14Z2CreatureLinkFv();
extern "C" void setKanteraState__14Z2CreatureLinkFUc();
extern "C" void setSinkDepth__14Z2CreatureLinkFSc();
extern "C" void setRiding__14Z2CreatureLinkFb();
extern "C" void setMagnetized__14Z2CreatureLinkFb();
extern "C" void setWolfEyeOpen__14Z2CreatureLinkFb();
extern "C" void startLinkSound__14Z2CreatureLinkF10JAISoundIDUlSc();
extern "C" void startLinkSoundLevel__14Z2CreatureLinkF10JAISoundIDUlSc();
extern "C" void startLinkVoice__14Z2CreatureLinkF10JAISoundIDSc();
extern "C" void startLinkVoiceLevel__14Z2CreatureLinkF10JAISoundIDSc();
extern "C" void startLinkSwordSound__14Z2CreatureLinkF10JAISoundIDUlSc();
extern "C" void startHitItemSE__14Z2CreatureLinkFUlUlP14Z2SoundObjBasef();
extern "C" void setResumeAttack__14Z2CreatureLinkFb();
extern "C" void __ct__13Z2WolfHowlMgrFv();
extern "C" void startWolfHowlSound__13Z2WolfHowlMgrFffbf();
extern "C" void setCorrectData__13Z2WolfHowlMgrFScP14Z2WolfHowlData();
extern "C" void skipCorrectDemo__13Z2WolfHowlMgrFv();
extern "C" void freeAll__7JKRHeapFv();
extern "C" void* __nw__FUl();
extern "C" void* __nwa__FUl();
extern "C" void* __nwa__FUli();
extern "C" void __dl__FPv();
extern "C" void create__10JKRExpHeapFUlP7JKRHeapb();
extern "C" void getGlbResource__13JKRFileLoaderFPCcP13JKRFileLoader();
extern "C" void readIdxResource__10JKRArchiveFPvUlUl();
extern "C" void __ct__9J2DScreenFv();
extern "C" void setPriority__9J2DScreenFPCcUlP10JKRArchive();
extern "C" void draw__9J2DScreenFffPC14J2DGrafContext();
extern "C" void animation__9J2DScreenFv();
extern "C" void load__20J2DAnmLoaderDataBaseFPCv();
extern "C" void reinitGX__6J3DSysFv();
extern "C" bool entry__9J3DPacketFP13J3DDrawBuffer();
extern "C" void loadPreDrawSetting__8J3DShapeCFv();
extern "C" void entryImm__13J3DDrawBufferFP9J3DPacketUs();
extern "C" void diff__8J3DModelFv();
extern "C" void setDeformData__8J3DModelFP13J3DDeformDataUl();
extern "C" void calcWeightEnvelopeMtx__8J3DModelFv();
extern "C" void init__12J3DFrameCtrlFs();
extern "C" void checkPass__12J3DFrameCtrlFf();
extern "C" void searchUpdateMaterialID__16J3DAnmTexPatternFP12J3DModelData();
extern "C" void searchUpdateMaterialID__19J3DAnmTextureSRTKeyFP12J3DModelData();
extern "C" void getTevColorReg__15J3DAnmTevRegKeyCFUsP11_GXColorS10();
extern "C" void searchUpdateMaterialID__15J3DAnmTevRegKeyFP12J3DModelData();
extern "C" void initialize__14J3DMaterialAnmFv();
extern "C" void calc__14J3DMaterialAnmCFP11J3DMaterial();
extern "C" void removeTexMtxAnimator__16J3DMaterialTableFP19J3DAnmTextureSRTKey();
extern "C" void removeTevRegAnimator__16J3DMaterialTableFP15J3DAnmTevRegKey();
extern "C" void entryTexNoAnimator__16J3DMaterialTableFP16J3DAnmTexPattern();
extern "C" void entryTexMtxAnimator__16J3DMaterialTableFP19J3DAnmTextureSRTKey();
extern "C" void entryTevRegAnimator__16J3DMaterialTableFP15J3DAnmTevRegKey();
extern "C" void load__20J3DAnmLoaderDataBaseFPCv24J3DAnmLoaderDataBaseFlag();
extern "C" void JMAEulerToQuat__FsssP10Quaternion();
extern "C" void GXClearVtxDesc();
extern "C" void __register_global_object();
extern "C" void __destroy_arr();
extern "C" void __construct_array();
extern "C" void __construct_new_array();
extern "C" void __ptmf_test();
extern "C" void __ptmf_scall();
extern "C" void __cvt_fp2unsigned();
extern "C" void __save_gpr();
extern "C" void _savegpr_15();
extern "C" void _savegpr_16();
extern "C" void _savegpr_20();
extern "C" void _savegpr_21();
extern "C" void _savegpr_22();
extern "C" void _savegpr_23();
extern "C" void _savegpr_24();
extern "C" void _savegpr_25();
extern "C" void _savegpr_26();
extern "C" void _savegpr_27();
extern "C" void _savegpr_28();
extern "C" void _savegpr_29();
extern "C" void __restore_gpr();
extern "C" void _restgpr_15();
extern "C" void _restgpr_16();
extern "C" void _restgpr_20();
extern "C" void _restgpr_21();
extern "C" void _restgpr_22();
extern "C" void _restgpr_23();
extern "C" void _restgpr_24();
extern "C" void _restgpr_25();
extern "C" void _restgpr_26();
extern "C" void _restgpr_27();
extern "C" void _restgpr_28();
extern "C" void _restgpr_29();
extern "C" u8 const tempBitLabels__20dSv_event_tmp_flag_c[370 + 2 /* padding */];
extern "C" extern u8 const __ptmf_null[12 + 4 /* padding */];
extern "C" extern void* __vt__12J3DFrameCtrl[3];
extern "C" extern void* data_803A3360[11];
extern "C" extern void* __vt__19J3DMtxCalcNoAnmBase[11];
extern "C" extern void* __vt__28mDoExt_MtxCalcAnmBlendTblOld[11];
extern "C" extern void* __vt__25mDoExt_MtxCalcAnmBlendTbl[11];
extern "C" extern void* __vt__10J3DMtxCalc[11 + 1 /* padding */];
extern "C" extern void* __vt__19JPAParticleCallBack[5];
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* __vt__8cM3dGPla[3];
extern "C" extern void* __vt__14dBgS_ObjGndChk[12 + 1 /* padding */];
extern "C" extern void* __vt__12dDlst_base_c[3];
extern "C" extern void* __vt__8cM3dGCyl[3];
extern "C" extern void* __vt__8cM3dGAab[3];
extern "C" u8 saveBitLabels__16dSv_event_flag_c[1644 + 4 /* padding */];
extern "C" extern void* __vt__8cM3dGSph[3];
extern "C" extern void* __vt__22dPa_hermiteEcallBack_c[9];
extern "C" extern void* __vt__18dPa_levelEcallBack[9];
extern "C" extern void* __vt__18JPAEmitterCallBack[7];
extern "C" u8 m_typeFourData__8dPaPoF_c[60];
extern "C" u8 m_emitterFourData__8dPaPoF_c[60 + 28 /* padding */];
extern "C" extern void* __vt__8dCcD_Sph[36];
extern "C" extern void* __vt__8dCcD_Cyl[36];
extern "C" extern void* __vt__8dCcD_Cps[36];
extern "C" extern void* __vt__9dCcD_Stts[11];
extern "C" extern void* __vt__10dCcD_GStts[3];
extern "C" extern void* __vt__10cCcD_GStts[3];
extern "C" extern void* __vt__18daPy_sightPacket_c[4 + 1 /* padding */];
extern "C" extern void* __vt__12cCcD_SphAttr[25];
extern "C" extern void* __vt__12cCcD_CylAttr[25];
extern "C" extern void* __vt__12cCcD_CpsAttr[25];
extern "C" extern void* __vt__14cCcD_ShapeAttr[22];
extern "C" extern void* __vt__9cCcD_Stts[8];
extern "C" extern void* __vt__9J3DPacket[5];
extern "C" extern void* __vt__14J3DMaterialAnm[4];
extern "C" u8 m_cpadInfo__8mDoCPd_c[256];
extern "C" u8 now__14mDoMtx_stack_c[48];
extern "C" u8 mLineCheck__11fopAcM_lc_c[112];
extern "C" u8 mGndCheck__11fopAcM_gc_c[84];
extern "C" u8 mWaterCheck__11fopAcM_wt_c[84 + 4 /* padding */];
extern "C" u8 mDemoArcName__20dStage_roomControl_c[10 + 2 /* padding */];
extern "C" u8 mSimpleTexObj__21dDlst_shadowControl_c[32];
extern "C" extern u8 g_env_light[4880];
extern "C" f32 Zero__4cXyz[3];
extern "C" u8 BaseX__4cXyz[12];
extern "C" u8 BaseY__4cXyz[12];
extern "C" u8 BaseZ__4cXyz[12];
extern "C" u8 mCurrentMtx__6J3DSys[48];
extern "C" u8 sincosTable___5JMath[65536];
extern "C" u16 m_branchId__7dDemo_c[1 + 3 /* padding */];
extern "C" extern u8 data_80450B38[4];
extern "C" f32 mGroundY__11fopAcM_gc_c;
extern "C" f32 mWaterY__11fopAcM_wt_c[1 + 1 /* padding */];
extern "C" u8 m_top__12daTagHstop_c[4 + 4 /* padding */];
extern "C" u8 m_object__7dDemo_c[4];
extern "C" u8 mWaterBubblePcallBack__13dPa_control_c[4];
extern "C" u8 mParticleTracePCB__13dPa_control_c[4 + 4 /* padding */];
extern "C" extern u8 struct_80450FB8[4];
extern "C" extern u8 struct_80450FBC[4];
extern "C" u8 m_midnaActor__9daPy_py_c[4];
extern "C" extern u8 struct_8045101C[4];
extern "C" u8 Zero__5csXyz[4];
extern "C" u8 mLinkPtr__14Z2CreatureLink[4 + 4 /* padding */];
extern "C" u8 mAudioMgrPtr__10Z2AudioMgr[4 + 4 /* padding */];
extern "C" u8 sOldVcdVatCmd__8J3DShape[4];

//
// Declarations:
//

inline Z2CreatureLink* Z2GetLink() {
    return Z2CreatureLink::mLinkPtr;
}

inline u16 i_dComIfGs_getLife() {
    return g_dComIfG_gameInfo.info.getPlayer().getPlayerStatusA().getLife();
}

inline BOOL i_dComIfGs_isEventBit(u16 id) {
    return g_dComIfG_gameInfo.info.getEvent().isEventBit(id);
}

/* 8009D87C-8009D884 0981BC 0008+00 0/0 1/1 0/0 .text            getE3Zhint__9daAlink_cFv */
bool daAlink_c::getE3Zhint() {
    return false;
}

/* ############################################################################################## */
/* 80452C50-80452C58 001250 0005+03 2/2 0/0 0/0 .sdata2          l_wArcName */
SECTION_SDATA2 static char l_wArcName[8] = "Wmdl";

/* 80452C58-80452C60 001258 0005+03 2/2 0/0 0/0 .sdata2          l_bArcName */
SECTION_SDATA2 static char l_bArcName[8] = "Bmdl";

/* 80452C60-80452C68 001260 0005+03 2/2 0/0 0/0 .sdata2          l_kArcName */
SECTION_SDATA2 static char l_kArcName[8] = "Kmdl";

/* 80452C68-80452C70 001268 0005+03 2/2 0/0 0/0 .sdata2          l_zArcName */
SECTION_SDATA2 static char l_zArcName[8] = "Zmdl";

/* 80452C70-80452C78 001270 0005+03 3/3 0/0 0/0 .sdata2          l_mArcName */
SECTION_SDATA2 static char l_mArcName[8] = "Mmdl";

/* 80452C78-80452C80 001278 0006+02 1/1 0/0 0/0 .sdata2          l_hyShdArcName */
SECTION_SDATA2 static char l_hyShdArcName[8] = "HyShd";

/* 80452C80-80452C88 001280 0006+02 1/1 0/0 0/0 .sdata2          l_cWShdArcName */
SECTION_SDATA2 static char l_cWShdArcName[8] = "CWShd";

/* 80452C88-80452C90 001288 0006+02 1/1 0/0 0/0 .sdata2          l_sWShdArcName */
SECTION_SDATA2 static char l_sWShdArcName[8] = "SWShd";

/* 80452C90-80452C98 001290 0006+02 7/7 0/0 0/0 .sdata2          l_arcName */
SECTION_SDATA2 static char l_arcName[8] = "Alink";

/* 8009D884-8009D88C 0981C4 0008+00 0/0 0/0 13/13 .text            getAlinkArcName__9daAlink_cFv */
char* daAlink_c::getAlinkArcName() {
    return l_arcName;
}

/* 8009D88C-8009D8B8 0981CC 002C+00 1/1 0/0 0/0 .text
 * daAlink_tgHitCallback__FP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void daAlink_tgHitCallback(fopAc_ac_c* param_0, dCcD_GObjInf* param_1,
                                      fopAc_ac_c* param_2, dCcD_GObjInf* param_3) {
    nofralloc
#include "asm/d/a/d_a_alink/daAlink_tgHitCallback__FP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf.s"
}
#pragma pop

/* 8009D8B8-8009D8E4 0981F8 002C+00 1/1 0/0 0/0 .text
 * daAlink_coHitCallback__FP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void daAlink_coHitCallback(fopAc_ac_c* param_0, dCcD_GObjInf* param_1,
                                      fopAc_ac_c* param_2, dCcD_GObjInf* param_3) {
    nofralloc
#include "asm/d/a/d_a_alink/daAlink_coHitCallback__FP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf.s"
}
#pragma pop

/* ############################################################################################## */
/* 80450FC0-80450FC4 0004C0 0004+00 1/1 0/0 0/0 .sbss            it$36766 */
static int it;

/* 80450FC4-80450FC8 -00001 0004+00 1/1 0/0 0/0 .sbss            None */
/* 80450FC4 0001+00 data_80450FC4 None */
/* 80450FC5 0001+00 data_80450FC5 None */
/* 80450FC6 0001+00 data_80450FC6 None */
/* 80450FC7 0001+00 data_80450FC7 None */
static u8 struct_80450FC4[4];

/* 80450FC8-80450FCC -00001 0004+00 5/5 0/0 0/0 .sbss            None */
/* 80450FC8 0001+00 data_80450FC8 None */
static bool struct_80450FC8;  // sEyeMoveFlg

/* 80450FC9 0003+00 data_80450FC9 None */
static u8 sMorfFrame;

/* 80452C98-80452C9C 001298 0004+00 102/102 0/0 0/0 .sdata2          @5943 */
SECTION_SDATA2 static f32 lit_5943 = 0.5f;

/* 80452C9C-80452CA0 00129C 0004+00 23/23 0/0 0/0 .sdata2          @5944 */
SECTION_SDATA2 static f32 lit_5944 = 25.0f;

/* 80452CA0-80452CA4 0012A0 0004+00 3/3 0/0 0/0 .sdata2          @5945 */
SECTION_SDATA2 static f32 lit_5945 = -25.0f;

/* 80452CA4-80452CA8 0012A4 0004+00 121/122 0/0 0/0 .sdata2          @6021 */
SECTION_SDATA2 static f32 lit_6021 = 1.0f / 20.0f;

/* 80452CA8-80452CAC 0012A8 0004+00 1/1 0/0 0/0 .sdata2          @6022 */
SECTION_SDATA2 static f32 lit_6022 = 512.0f;

/* 80452CAC-80452CB0 0012AC 0004+00 6/6 0/0 0/0 .sdata2          @6023 */
SECTION_SDATA2 static f32 lit_6023 = 3.0f / 5.0f;

/* 80452CB0-80452CB8 0012B0 0008+00 117/117 0/0 0/0 .sdata2          @6025 */
SECTION_SDATA2 static f64 lit_6025 = 4503601774854144.0 /* cast s32 to float */;

/* 80452CB8-80452CBC 0012B8 0004+00 327/327 0/0 0/0 .sdata2          @6040 */
SECTION_SDATA2 static f32 lit_6040 = 1.0f;

/* 80452CBC-80452CC0 0012BC 0004+00 182/182 0/0 0/0 .sdata2          @6041 */
SECTION_SDATA2 static f32 lit_6041 = -1.0f;

/* 80452CC0-80452CC4 0012C0 0004+00 674/674 0/0 0/0 .sdata2          @6108 */
SECTION_SDATA2 static u8 lit_6108[4] = {
    0x00,
    0x00,
    0x00,
    0x00,
};

/* 8009D8E4-8009D90C 098224 0028+00 2/2 0/0 0/0 .text            init__16daAlink_matAnm_cFv */
void daAlink_matAnm_c::init() {
    f32 tmp_0 = FLOAT_LABEL(lit_6108);
    field_0xf4 = tmp_0;
    field_0xf8 = tmp_0;
    mNowOffsetX = tmp_0;
    mNowOffsetY = tmp_0;
    struct_80450FC8 = false;  // sEyeMoveFlg
    sMorfFrame = 0;
    mSetFlag = 0;
}

/* 8009D90C-8009DA60 09824C 0154+00 1/0 0/0 0/0 .text calc__16daAlink_matAnm_cCFP11J3DMaterial */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_matAnm_c::calc(J3DMaterial* param_0) const {
    nofralloc
#include "asm/d/a/d_a_alink/calc__16daAlink_matAnm_cCFP11J3DMaterial.s"
}
#pragma pop

/* void daAlink_matAnm_c::calc(J3DMaterial* param_0) const {
    J3DMaterialAnm::calc(param_0);

    if (!daAlink_getAlinkActorClass()->checkStatusWindowDraw()) {
        for (u32 i = 0; i < 8; i++) {
            if (getTexMtxAnm(i).getAnmFlag()) {
                J3DTexMtxInfo* info = &param_0->getTexGenBlock()->getTexMtx(i)->getTexMtxInfo();
                if (sMorfFrame != 0) {
                    if (mSetFlag == 0) {
                        f32 tmp = 1.0f / sMorfFrame;
                        info->field_0x10.field_0xc = field_0xf4 * (1.0f - tmp) +
info->field_0x10.field_0xc * tmp; info->field_0x10.field_0x10 = field_0xf8 * (1.0f - tmp) +
info->field_0x10.field_0xc * tmp;
                        //mSetFlag = 1;
                    } else {
                        info->field_0x10.field_0xc = field_0xf4;
                        info->field_0x10.field_0x10 = field_0xf8;
                    }
                }

                if (struct_80450FC8) {
                        info->field_0x10.field_0xc = mNowOffsetX;
                        info->field_0x10.field_0x10 = mNowOffsetY;
                    }



            }
        }
    }
} */

bool daAlink_c::checkStageName(const char* stage) {
    return strcmp(dComIfGp_getStartStageName(), stage) == 0;
}

/* 8009DA98-8009DB64 0983D8 00CC+00 1/1 0/0 0/0 .text
 * tgHitCallback__9daAlink_cFP10fopAc_ac_cP12dCcD_GObjInfP12dCcD_GObjInf */
void daAlink_c::tgHitCallback(fopAc_ac_c* param_0, dCcD_GObjInf* param_1, dCcD_GObjInf* param_2) {
    if (param_2->ChkAtType(0x40000)) {
        field_0x369c = *param_2->GetAtVecP();
        for (int i = 0; i < 3; i++) {
            if (param_1 == &field_0x850[i]) {
                field_0x2fb8 |= (1 << i);
                field_0x36b4 = param_0->mCurrent.mPosition;
                return;
            }
        }
    } else {
        for (int i = 0; i < 3; i++) {
            if (param_1 == &field_0x850[i]) {
                field_0x2fb8 &= ~(1 << i);
                return;
            }
        }
    }
}

/* 8009DB64-8009DC6C 0984A4 0108+00 1/1 0/0 0/0 .text
 * coHitCallback__9daAlink_cFP10fopAc_ac_cP12dCcD_GObjInf       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::coHitCallback(fopAc_ac_c* param_0, dCcD_GObjInf* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/coHitCallback__9daAlink_cFP10fopAc_ac_cP12dCcD_GObjInf.s"
}
#pragma pop

/* 8009DC6C-8009DD90 0985AC 0124+00 5/5 0/0 0/0 .text
 * setMatrixWorldAxisRot__9daAlink_cFPA4_fsssiPC4cXyz           */
void daAlink_c::setMatrixWorldAxisRot(MtxP param_0, s16 param_1, s16 param_2, s16 param_3,
                                      int param_4, cXyz const* param_5) {
    cXyz tmp;
    mDoMtx_multVecZero(param_0, &tmp);
    if (param_5 != NULL) {
        mDoMtx_stack_c::transS(*param_5);
    } else {
        mDoMtx_stack_c::transS(tmp);
    }

    concatMagneBootMtx();
    mDoMtx_stack_c::YrotM(mCollisionRot.y);
    mDoMtx_stack_c::ZXYrotM(param_1, param_2, param_3);
    mDoMtx_stack_c::YrotM(-mCollisionRot.y);
    concatMagneBootInvMtx();
    mDoMtx_stack_c::transM(-tmp.x, -tmp.y, -tmp.z);
    PSMTXConcat(mDoMtx_stack_c::get(), param_0, mDoMtx_stack_c::get());
    PSMTXCopy(mDoMtx_stack_c::get(), param_0);
    if (param_4 != 0) {
        PSMTXCopy(mDoMtx_stack_c::get(), J3DSys::mCurrentMtx);
    }
}

/* 8009DD90-8009E7B8 0986D0 0A28+00 2/2 0/0 0/0 .text            jointControll__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::jointControll(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/jointControll__9daAlink_cFi.s"
}
#pragma pop

/* 8009E7B8-8009E91C 0990F8 0164+00 1/1 0/0 0/0 .text            setUpperFront__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setUpperFront() {
    nofralloc
#include "asm/d/a/d_a_alink/setUpperFront__9daAlink_cFv.s"
}
#pragma pop

/* 8009E91C-8009EB18 09925C 01FC+00 1/1 0/0 0/0 .text            changeBlendRate__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::changeBlendRate(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/changeBlendRate__9daAlink_cFi.s"
}
#pragma pop

/* 8009EB18-8009EB58 099458 0040+00 1/1 0/0 0/0 .text            resetRootMtx__9daAlink_cFv */
void daAlink_c::resetRootMtx() {
    PSMTXCopy(mRootMtx, J3DSys::mCurrentMtx);
    field_0x2f90 = 0;
}

/* 8009EB58-8009EC28 099498 00D0+00 1/1 0/0 0/0 .text            modelCallBack__9daAlink_cFi */
#ifdef NONMATCHING
bool daAlink_c::modelCallBack(int param_0) {
    jointControll(param_0);
    if (param_0 == 0) {
        setUpperFront();
    } else if (param_0 == 0x1A) {
        bool check = false;
        if (mSpecialMode == 0 || mSpecialMode < 0x26) {
            check = true;
        }
        if (!check) {
            setFootMatrix();
        }
        setArmMatrix();
    }
    if (field_0x2fb6 != 0 &&
        (param_0 == 0 || param_0 == 10 || param_0 - 4 < 1 || param_0 == 13 || param_0 == 15)) {
        changeBlendRate(param_0);
    }
    return true;
}
#else
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm bool daAlink_c::modelCallBack(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/modelCallBack__9daAlink_cFi.s"
}
#pragma pop
#endif

/* 8009EC28-8009ECA0 099568 0078+00 1/1 0/0 0/0 .text            daAlink_modelCallBack__FP8J3DJointi
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void daAlink_modelCallBack(J3DJoint* param_0, int param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/daAlink_modelCallBack__FP8J3DJointi.s"
}
#pragma pop

/* ############################################################################################## */
/* 80452CC4-80452CC8 0012C4 0004+00 137/137 0/0 0/0 .sdata2          @6109 */
SECTION_SDATA2 static f32 lit_6109 = 3.0f;

/* 80452CC8-80452CCC 0012C8 0004+00 1/1 0/0 0/0 .sdata2          @6183 */
SECTION_SDATA2 static f32 lit_6183 = 10000000.0f;

/* 80452CCC-80452CD0 0012CC 0004+00 2/2 0/0 0/0 .sdata2          @6237 */
SECTION_SDATA2 static f32 lit_6237 = 250000.0f;

/* 80452CD0-80452CD4 0012D0 0004+00 6/6 0/0 0/0 .sdata2          @6238 */
SECTION_SDATA2 static f32 lit_6238 = 300.0f;

/* 80452CD4-80452CD8 0012D4 0004+00 1/1 0/0 0/0 .sdata2          @6398 */
SECTION_SDATA2 static f32 lit_6398 = 160000.0f;

/* 80452CD8-80452CDC 0012D8 0004+00 1/1 0/0 0/0 .sdata2          @6399 */
SECTION_SDATA2 static f32 lit_6399 = 202500.0f;

/* 80452CDC-80452CE0 0012DC 0004+00 1/1 0/0 0/0 .sdata2          @6400 */
SECTION_SDATA2 static f32 lit_6400 = 350.0f;

/* 80452CE0-80452CE8 0012E0 0004+04 59/59 0/0 0/0 .sdata2          @6845 */
SECTION_SDATA2 static f32 lit_6845[1 + 1 /* padding */] = {
    30.0f,
    /* padding */
    0.0f,
};

/* 80452CE8-80452CF0 0012E8 0008+00 84/84 0/0 0/0 .sdata2          @6846 */
SECTION_SDATA2 static f64 lit_6846 = 0.5;

/* 80452CF0-80452CF8 0012F0 0008+00 84/84 0/0 0/0 .sdata2          @6847 */
SECTION_SDATA2 static f64 lit_6847 = 3.0;

/* 80452CF8-80452D00 0012F8 0008+00 84/84 0/0 0/0 .sdata2          @6848 */
SECTION_SDATA2 static u8 lit_6848[8] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80452D00-80452D04 001300 0004+00 47/47 0/0 0/0 .sdata2          @6895 */
SECTION_SDATA2 static f32 lit_6895 = 50.0f;

/* 80452D04-80452D08 001304 0004+00 6/6 0/0 0/0 .sdata2          @6896 */
SECTION_SDATA2 static f32 lit_6896 = 130.0f;

/* 80452D08-80452D0C 001308 0004+00 1/1 0/0 0/0 .sdata2          @7174 */
SECTION_SDATA2 static f32 lit_7174 = 640000.0f;

/* 80452D0C-80452D10 00130C 0004+00 1/1 0/0 0/0 .sdata2          @7305 */
SECTION_SDATA2 static f32 lit_7305 = 27.0f / 20.0f;

/* 80452D10-80452D14 001310 0004+00 15/15 0/0 0/0 .sdata2          @7306 */
SECTION_SDATA2 static f32 lit_7306 = 70.0f;

/* 80452D14-80452D18 001314 0004+00 57/57 0/0 0/0 .sdata2          @7307 */
SECTION_SDATA2 static f32 lit_7307 = 2.0f;

/* 80452D18-80452D1C 001318 0004+00 9/9 0/0 0/0 .sdata2          @7308 */
SECTION_SDATA2 static f32 lit_7308 = 500.0f;

/* 80452D1C-80452D20 00131C 0004+00 23/23 0/0 0/0 .sdata2          @7448 */
SECTION_SDATA2 static f32 lit_7448 = 12.0f;

/* 80452D20-80452D24 001320 0004+00 11/11 0/0 0/0 .sdata2          @7449 */
SECTION_SDATA2 static f32 lit_7449 = 24.0f;

/* 80452D24-80452D28 001324 0004+00 38/38 0/0 0/0 .sdata2          @7450 */
SECTION_SDATA2 static f32 lit_7450 = 4.0f;

/* 80452D28-80452D2C 001328 0004+00 7/7 0/0 0/0 .sdata2          @7451 */
SECTION_SDATA2 static f32 lit_7451 = 26.0f;

/* 80452D2C-80452D30 00132C 0004+00 28/28 0/0 0/0 .sdata2          @7624 */
SECTION_SDATA2 static f32 lit_7624 = 1.5f;

/* 80452D30-80452D34 001330 0004+00 67/67 0/0 0/0 .sdata2          @7625 */
SECTION_SDATA2 static f32 lit_7625 = 10.0f;

/* 80452D34-80452D38 001334 0004+00 36/36 0/0 0/0 .sdata2          @7710 */
SECTION_SDATA2 static f32 lit_7710 = 9.0f;

/* 80452D38-80452D3C 001338 0004+00 5/5 0/0 0/0 .sdata2          @7807 */
SECTION_SDATA2 static f32 lit_7807 = 27.0f;

/* 80452D3C-80452D40 00133C 0004+00 82/82 0/0 0/0 .sdata2          @7808 */
SECTION_SDATA2 static f32 lit_7808 = 5.0f;

/* 80452D40-80452D44 001340 0004+00 1/1 0/0 0/0 .sdata2          @7945 */
SECTION_SDATA2 static f32 lit_7945 = 44.0f;

/* 80452D44-80452D48 001344 0004+00 27/27 0/0 0/0 .sdata2          @7977 */
SECTION_SDATA2 static f32 lit_7977 = 6.0f;

/* 80452D48-80452D4C 001348 0004+00 21/21 0/0 0/0 .sdata2          @8130 */
SECTION_SDATA2 static f32 lit_8130 = 14.0f;

/* 80452D4C-80452D50 00134C 0004+00 8/8 0/0 0/0 .sdata2          @8131 */
SECTION_SDATA2 static f32 lit_8131 = -0.5f;

/* 80452D50-80452D54 001350 0004+00 39/39 0/0 0/0 .sdata2          @8247 */
SECTION_SDATA2 static f32 lit_8247 = 100.0f;

/* 80452D54-80452D58 001354 0004+00 6/6 0/0 0/0 .sdata2          @8248 */
SECTION_SDATA2 static f32 lit_8248 = 95.0f;

/* 80452D58-80452D5C 001358 0004+00 3/3 0/0 0/0 .sdata2          @8249 */
SECTION_SDATA2 static f32 lit_8249 = 800.0f;

/* 80452D5C-80452D60 00135C 0004+00 9/9 0/0 0/0 .sdata2          @8322 */
SECTION_SDATA2 static f32 lit_8322 = 10000.0f;

/* 80452D60-80452D64 001360 0004+00 3/3 0/0 0/0 .sdata2          @8369 */
SECTION_SDATA2 static f32 lit_8369 = 37.0f;

/* 80452D64-80452D68 001364 0004+00 1/1 0/0 0/0 .sdata2          @8370 */
SECTION_SDATA2 static f32 lit_8370 = 54.0f;

/* 80452D68-80452D6C 001368 0004+00 13/13 0/0 0/0 .sdata2          @8472 */
SECTION_SDATA2 static f32 lit_8472 = 200.0f;

/* 80452D6C-80452D70 00136C 0004+00 9/9 0/0 0/0 .sdata2          @8473 */
SECTION_SDATA2 static f32 lit_8473 = -2.0f;

/* 80452D70-80452D74 001370 0004+00 3/3 0/0 0/0 .sdata2          @8501 */
SECTION_SDATA2 static f32 lit_8501 = 99.0f / 100.0f;

/* 80452D74-80452D78 001374 0004+00 21/21 0/0 0/0 .sdata2          @8502 */
SECTION_SDATA2 static f32 lit_8502 = 7.0f;

/* 80452D78-80452D7C 001378 0004+00 31/31 0/0 0/0 .sdata2          @8676 */
SECTION_SDATA2 static f32 lit_8676 = 20.0f;

/* 80452D7C-80452D80 00137C 0004+00 5/5 0/0 0/0 .sdata2          @8779 */
SECTION_SDATA2 static f32 lit_8779 = 39.0f;

/* 80452D80-80452D84 001380 0004+00 7/7 0/0 0/0 .sdata2          @8780 */
SECTION_SDATA2 static f32 lit_8780 = 36.0f;

/* 80452D84-80452D88 001384 0004+00 19/19 0/0 0/0 .sdata2          @8781 */
SECTION_SDATA2 static f32 lit_8781 = 13.0f;

/* 80452D88-80452D8C 001388 0004+00 29/29 0/0 0/0 .sdata2          @8782 */
SECTION_SDATA2 static f32 lit_8782 = 1.0f / 100.0f;

/* 80452D8C-80452D90 00138C 0004+00 23/23 0/0 0/0 .sdata2          @8783 */
SECTION_SDATA2 static f32 lit_8783 = 8.0f;

/* 80452D90-80452D94 001390 0004+00 4/4 0/0 0/0 .sdata2          @8784 */
SECTION_SDATA2 static f32 lit_8784 = 28.0f;

/* 80452D94-80452D98 001394 0004+00 10/10 0/0 0/0 .sdata2          @8785 */
SECTION_SDATA2 static f32 lit_8785 = 38.0f;

/* 80452D98-80452D9C 001398 0004+00 4/4 0/0 0/0 .sdata2          @8786 */
SECTION_SDATA2 static f32 lit_8786 = 48.0f;

/* 80452D9C-80452DA0 00139C 0004+00 4/4 0/0 0/0 .sdata2          @9053 */
SECTION_SDATA2 static f32 lit_9053 = -10.0f;

/* 80452DA0-80452DA4 0013A0 0004+00 43/43 0/0 0/0 .sdata2          @9054 */
SECTION_SDATA2 static f32 lit_9054 = 1.0f / 10.0f;

/* 80452DA4-80452DA8 0013A4 0004+00 19/19 0/0 0/0 .sdata2          @9138 */
SECTION_SDATA2 static f32 lit_9138 = -1000000000.0f;

/* 80452DA8-80452DAC 0013A8 0004+00 15/15 0/0 0/0 .sdata2          @9652 */
SECTION_SDATA2 static f32 lit_9652 = 7.0f / 10.0f;

/* 80452DAC-80452DB0 0013AC 0004+00 8/8 0/0 0/0 .sdata2          @9828 */
SECTION_SDATA2 static f32 lit_9828 = 3.1415927410125732f;

/* 80452DB0-80452DB4 0013B0 0004+00 13/13 0/0 0/0 .sdata2          @10039 */
SECTION_SDATA2 static f32 lit_10039 = 80.0f;

/* 80452DB4-80452DB8 0013B4 0004+00 14/14 0/0 0/0 .sdata2          @10040 */
SECTION_SDATA2 static f32 lit_10040 = 60.0f;

/* 80452DB8-80452DBC 0013B8 0004+00 15/15 0/0 0/0 .sdata2          @10041 */
SECTION_SDATA2 static f32 lit_10041 = 1000.0f;

/* 80452DBC-80452DC0 0013BC 0004+00 15/15 0/0 0/0 .sdata2          @10042 */
SECTION_SDATA2 static f32 lit_10042 = 35.0f;

/* 80452DC0-80452DC4 0013C0 0004+00 12/12 0/0 0/0 .sdata2          @10193 */
SECTION_SDATA2 static f32 lit_10193 = 18.0f;

/* 80452DC4-80452DC8 0013C4 0004+00 6/6 0/0 0/0 .sdata2          @10194 */
SECTION_SDATA2 static f32 lit_10194 = 29.0f;

/* 80452DC8-80452DCC 0013C8 0004+00 11/11 0/0 0/0 .sdata2          @10286 */
SECTION_SDATA2 static f32 lit_10286 = 19.0f;

/* 80452DCC-80452DD0 0013CC 0004+00 6/6 0/0 0/0 .sdata2          @10532 */
SECTION_SDATA2 static f32 lit_10532 = -50.0f;

/* 80452DD0-80452DD4 0013D0 0004+00 1/1 0/0 0/0 .sdata2          @11122 */
SECTION_SDATA2 static f32 lit_11122 = 4096.0f;

/* 80452DD4-80452DD8 0013D4 0004+00 23/23 0/0 0/0 .sdata2          @11442 */
SECTION_SDATA2 static f32 lit_11442 = 40.0f;

/* 80452DD8-80452DDC 0013D8 0004+00 10/10 0/0 0/0 .sdata2          @11470 */
SECTION_SDATA2 static f32 lit_11470 = 2.5f;

/* 80452DDC-80452DE0 0013DC 0004+00 3/3 0/0 0/0 .sdata2          @11471 */
SECTION_SDATA2 static f32 lit_11471 = 1.25f;

/* 80452DE0-80452DE4 0013E0 0004+00 17/17 0/0 0/0 .sdata2          @11673 */
SECTION_SDATA2 static f32 lit_11673 = 150.0f;

/* 80452DE4-80452DE8 0013E4 0004+00 16/16 0/0 0/0 .sdata2          @12328 */
SECTION_SDATA2 static f32 lit_12328 = 0.0010000000474974513f;

/* 80452DE8-80452DEC 0013E8 0004+00 1/1 0/0 0/0 .sdata2          @12475 */
SECTION_SDATA2 static f32 lit_12475 = 2600.0f;

/* 80452DEC-80452DF0 0013EC 0004+00 6/6 0/0 0/0 .sdata2          @13119 */
SECTION_SDATA2 static f32 lit_13119 = 3.0f / 20.0f;

/* 80452DF0-80452DF4 0013F0 0004+00 7/7 0/0 0/0 .sdata2          @13382 */
SECTION_SDATA2 static f32 lit_13382 = 21.0f;

/* 80452DF4-80452DF8 0013F4 0004+00 1/1 0/0 0/0 .sdata2          @13699 */
SECTION_SDATA2 static f32 lit_13699 = 0.9998999834060669f;

/* 80452DF8-80452DFC 0013F8 0004+00 19/19 0/0 0/0 .sdata2          @13700 */
SECTION_SDATA2 static f32 lit_13700 = 1.0f / 5.0f;

/* 80452DFC-80452E00 0013FC 0004+00 6/6 0/0 0/0 .sdata2          @13701 */
SECTION_SDATA2 static f32 lit_13701 = 2.0f / 5.0f;

/* 80452E00-80452E04 001400 0004+00 2/2 0/0 0/0 .sdata2          @13702 */
SECTION_SDATA2 static f32 lit_13702 = 1.0f / 40.0f;

/* 80452E04-80452E08 001404 0004+00 10/10 0/0 0/0 .sdata2          @13794 */
SECTION_SDATA2 static f32 lit_13794 = 16.0f;

/* 80452E08-80452E0C 001408 0004+00 10/10 0/0 0/0 .sdata2          @14064 */
SECTION_SDATA2 static f32 lit_14064 = 4.0f / 5.0f;

/* 80452E0C-80452E10 00140C 0004+00 12/12 0/0 0/0 .sdata2          @14614 */
SECTION_SDATA2 static f32 lit_14614 = -30.0f;

/* 80452E10-80452E14 001410 0004+00 2/2 0/0 0/0 .sdata2          @14615 */
SECTION_SDATA2 static f32 lit_14615 = -5.0f;

/* 80452E14-80452E18 001414 0004+00 4/4 0/0 0/0 .sdata2          @14616 */
SECTION_SDATA2 static f32 lit_14616 = -3.0f;

/* 80452E18-80452E1C 001418 0004+00 1/1 0/0 0/0 .sdata2          @14617 */
SECTION_SDATA2 static f32 lit_14617 = -4.5f;

/* 80452E1C-80452E20 00141C 0004+00 1/1 0/0 0/0 .sdata2          @14618 */
SECTION_SDATA2 static f32 lit_14618 = -33.0f;

/* 80452E20-80452E24 001420 0004+00 2/2 0/0 0/0 .sdata2          @14619 */
SECTION_SDATA2 static f32 lit_14619 = 78.0f;

/* 80452E24-80452E28 001424 0004+00 3/3 0/0 0/0 .sdata2          @14620 */
SECTION_SDATA2 static f32 lit_14620 = 42.0f;

/* 80452E28-80452E2C 001428 0004+00 16/16 0/0 0/0 .sdata2          @14621 */
SECTION_SDATA2 static f32 lit_14621 = 32.0f;

/* 80452E2C-80452E30 00142C 0004+00 1/1 0/0 0/0 .sdata2          @14622 */
SECTION_SDATA2 static f32 lit_14622 = 5461.0f;

/* 80452E30-80452E34 001430 0004+00 2/2 0/0 0/0 .sdata2          @14623 */
SECTION_SDATA2 static f32 lit_14623 = -8.0f;

/* 80452E34-80452E38 001434 0004+00 5/5 0/0 0/0 .sdata2          @14624 */
SECTION_SDATA2 static f32 lit_14624 = -15.0f;

/* 80452E38-80452E3C 001438 0004+00 2/2 0/0 0/0 .sdata2          @14625 */
SECTION_SDATA2 static f32 lit_14625 = -18.0f;

/* 80452E3C-80452E40 00143C 0004+00 1/1 0/0 0/0 .sdata2          @14626 */
SECTION_SDATA2 static f32 lit_14626 = -13.789082527160645f;

/* 80452E40-80452E44 001440 0004+00 1/1 0/0 0/0 .sdata2          @14627 */
SECTION_SDATA2 static f32 lit_14627 = -13.825372695922852f;

/* 80452E44-80452E48 001444 0004+00 5/5 0/0 0/0 .sdata2          @14760 */
SECTION_SDATA2 static f32 lit_14760 = 1.0f / 50.0f;

/* 80452E48-80452E4C 001448 0004+00 1/1 0/0 0/0 .sdata2          @14781 */
SECTION_SDATA2 static f32 lit_14781 = -1500.0f;

/* 80452E4C-80452E50 00144C 0004+00 5/5 0/0 0/0 .sdata2          @14782 */
SECTION_SDATA2 static f32 lit_14782 = 2000.0f;

/* 80452E50-80452E54 001450 0004+00 1/1 0/0 0/0 .sdata2          @14783 */
SECTION_SDATA2 static f32 lit_14783 = 3500.0f;

/* 80452E54-80452E58 001454 0004+00 4/4 0/0 0/0 .sdata2          @14784 */
SECTION_SDATA2 static f32 lit_14784 = 2500.0f;

/* 80452E58-80452E5C 001458 0004+00 2/2 0/0 0/0 .sdata2          @14785 */
SECTION_SDATA2 static f32 lit_14785 = 4000.0f;

/* 80452E5C-80452E60 00145C 0004+00 2/2 0/0 0/0 .sdata2          @14786 */
SECTION_SDATA2 static f32 lit_14786 = -5000.0f;

/* 80452E60-80452E64 001460 0004+00 2/2 0/0 0/0 .sdata2          @14787 */
SECTION_SDATA2 static f32 lit_14787 = 5000.0f;

/* 80452E64-80452E68 001464 0004+00 47/47 0/0 0/0 .sdata2          @14954 */
SECTION_SDATA2 static f32 lit_14954 = 15.0f;

/* 80452E68-80452E6C 001468 0004+00 7/7 0/0 0/0 .sdata2          @14955 */
SECTION_SDATA2 static f32 lit_14955 = 90.0f;

/* 80452E6C-80452E70 00146C 0004+00 1/1 0/0 0/0 .sdata2          @15106 */
SECTION_SDATA2 static f32 lit_15106 = 93.0f / 100.0f;

/* 80452E70-80452E74 001470 0004+00 1/1 0/0 0/0 .sdata2          @15188 */
SECTION_SDATA2 static f32 lit_15188 = 46.051204681396484f;

/* 80452E74-80452E78 001474 0004+00 5/5 0/0 0/0 .sdata2          @15341 */
SECTION_SDATA2 static f32 lit_15341 = 23.0f;

/* 80452E78-80452E7C 001478 0004+00 5/5 0/0 0/0 .sdata2          @15460 */
SECTION_SDATA2 static f32 lit_15460 = 0.004999999888241291f;

/* 80452E7C-80452E80 00147C 0004+00 2/2 0/0 0/0 .sdata2          @15808 */
SECTION_SDATA2 static f32 lit_15808 = 14400.0f;

/* 80452E80-80452E84 001480 0004+00 6/6 0/0 0/0 .sdata2          @16036 */
SECTION_SDATA2 static f32 lit_16036 = 75.0f;

/* 80452E84-80452E88 001484 0004+00 3/3 0/0 0/0 .sdata2          @16037 */
SECTION_SDATA2 static f32 lit_16037 = 129.99000549316406f;

/* 80452E88-80452E8C 001488 0004+00 2/2 0/0 0/0 .sdata2          @16038 */
SECTION_SDATA2 static f32 lit_16038 = 34.0f;

/* 80452E8C-80452E90 00148C 0004+00 1/1 0/0 0/0 .sdata2          @16066 */
SECTION_SDATA2 static f32 lit_16066 = 1000000.0f;

/* 80452E90-80452E94 001490 0004+00 2/2 0/0 0/0 .sdata2          @16067 */
SECTION_SDATA2 static f32 lit_16067 = 90000.0f;

/* 80452E94-80452E98 001494 0004+00 12/12 0/0 0/0 .sdata2          @16210 */
SECTION_SDATA2 static f32 lit_16210 = 17.0f;

/* 80452E98-80452E9C 001498 0004+00 1/1 0/0 0/0 .sdata2          @16566 */
SECTION_SDATA2 static f32 lit_16566 = 700.0f;

/* 80452E9C-80452EA0 00149C 0004+00 4/4 0/0 0/0 .sdata2          @16567 */
SECTION_SDATA2 static f32 lit_16567 = 600.0f;

/* 80452EA0-80452EA4 0014A0 0004+00 3/3 0/0 0/0 .sdata2          @16568 */
SECTION_SDATA2 static f32 lit_16568 = -100.0f;

/* 80452EA4-80452EA8 0014A4 0004+00 1/1 0/0 0/0 .sdata2          @16569 */
SECTION_SDATA2 static f32 lit_16569 = 250.0f;

/* 80452EA8-80452EAC 0014A8 0004+00 20/20 0/0 0/0 .sdata2          @16570 */
SECTION_SDATA2 static f32 lit_16570 = 3.0f / 10.0f;

/* 80452EAC-80452EB0 0014AC 0004+00 11/11 0/0 0/0 .sdata2          @16641 */
SECTION_SDATA2 static f32 lit_16641 = 0.75f;

/* 80452EB0-80452EB4 0014B0 0004+00 2/2 0/0 0/0 .sdata2          @16790 */
SECTION_SDATA2 static f32 lit_16790 = 81.0f;

/* 80452EB4-80452EB8 0014B4 0004+00 22/22 0/0 0/0 .sdata2          @17382 */
SECTION_SDATA2 static f32 lit_17382 = 11.0f;

/* 80452EB8-80452EBC 0014B8 0004+00 3/3 0/0 0/0 .sdata2          @17592 */
SECTION_SDATA2 static f32 lit_17592 = 127.0f;

/* 80452EBC-80452EC0 0014BC 0004+00 6/6 0/0 0/0 .sdata2          @17593 */
SECTION_SDATA2 static f32 lit_17593 = 65.0f;

/* 80452EC0-80452EC4 0014C0 0004+00 1/1 0/0 0/0 .sdata2          @18068 */
SECTION_SDATA2 static f32 lit_18068 = -11.0f;

/* 80452EC4-80452EC8 0014C4 0004+00 2/2 0/0 0/0 .sdata2          @18176 */
SECTION_SDATA2 static f32 lit_18176 = 230.0f;

/* 80452EC8-80452ECC 0014C8 0004+00 2/2 0/0 0/0 .sdata2          @18706 */
SECTION_SDATA2 static f32 lit_18706 = 0.0020000000949949026f;

/* 80452ECC-80452ED0 0014CC 0004+00 1/1 0/0 0/0 .sdata2          @18830 */
SECTION_SDATA2 static f32 lit_18830 = 10.0f / 3.0f;

/* 80452ED0-80452ED4 0014D0 0004+00 6/6 0/0 0/0 .sdata2          @18847 */
SECTION_SDATA2 static f32 lit_18847 = 9.0f / 10.0f;

/* 80452ED4-80452ED8 0014D4 0004+00 7/7 0/0 0/0 .sdata2          @18929 */
SECTION_SDATA2 static f32 lit_18929 = 182.04444885253906f;

/* 80452ED8-80452EDC 0014D8 0004+00 1/1 0/0 0/0 .sdata2          @18997 */
SECTION_SDATA2 static f32 lit_18997 = 125.0f;

/* 80452EDC-80452EE0 0014DC 0004+00 3/3 0/0 0/0 .sdata2          @19240 */
SECTION_SDATA2 static f32 lit_19240 = 6.0f / 5.0f;

/* 8009ECA0-8009EF38 0995E0 0298+00 1/1 0/0 0/0 .text            headModelCallBack__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::headModelCallBack(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/headModelCallBack__9daAlink_cFi.s"
}
#pragma pop

/* 8009EF38-8009EF7C 099878 0044+00 1/1 0/0 0/0 .text daAlink_headModelCallBack__FP8J3DJointi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void daAlink_headModelCallBack(J3DJoint* param_0, int param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/daAlink_headModelCallBack__FP8J3DJointi.s"
}
#pragma pop

/* 8009EF7C-8009EFF0 0998BC 0074+00 1/1 0/0 0/0 .text            wolfModelCallBack__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::wolfModelCallBack(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/wolfModelCallBack__9daAlink_cFi.s"
}
#pragma pop

/* 8009EFF0-8009F034 099930 0044+00 1/1 0/0 0/0 .text daAlink_wolfModelCallBack__FP8J3DJointi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void daAlink_wolfModelCallBack(J3DJoint* param_0, int param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/daAlink_wolfModelCallBack__FP8J3DJointi.s"
}
#pragma pop

/* ############################################################################################## */
/* 80452EE0-80452EE4 0014E0 0004+00 6/6 0/0 0/0 .sdata2          @19379 */
SECTION_SDATA2 static f32 lit_19379 = 0.25f;

/* 80452EE4-80452EE8 0014E4 0004+00 4/4 0/0 0/0 .sdata2          @19380 */
SECTION_SDATA2 static f32 lit_19380 = 46.0f;

/* 80452EE8-80452EEC 0014E8 0004+00 1/1 0/0 0/0 .sdata2          @19381 */
SECTION_SDATA2 static f32 lit_19381 = 53.0f;

/* 80452EEC-80452EF0 0014EC 0004+00 3/3 0/0 0/0 .sdata2          @19382 */
SECTION_SDATA2 static f32 lit_19382 = 41.0f;

/* 80452EF0-80452EF4 0014F0 0004+00 1/1 0/0 0/0 .sdata2          @19428 */
SECTION_SDATA2 static f32 lit_19428 = 102.0f;

/* 80452EF4-80452EF8 0014F4 0004+00 1/1 0/0 0/0 .sdata2          @19580 */
SECTION_SDATA2 static f32 lit_19580 = 360000.0f;

/* 80452EF8-80452EFC 0014F8 0004+00 1/1 0/0 0/0 .sdata2          @20303 */
SECTION_SDATA2 static f32 lit_20303 = 68.0f;

/* 80452EFC-80452F00 0014FC 0004+00 2/2 0/0 0/0 .sdata2          @20400 */
SECTION_SDATA2 static f32 lit_20400 = 256.0f;

/* 80452F00-80452F04 001500 0004+00 1/1 0/0 0/0 .sdata2          @20401 */
SECTION_SDATA2 static f32 lit_20401 = 9.999999747378752e-05f;

/* 80452F04-80452F08 001504 0004+00 2/2 0/0 0/0 .sdata2          @20402 */
SECTION_SDATA2 static f32 lit_20402 = 6.2831854820251465f;

/* 80452F08-80452F0C 001508 0004+00 4/4 0/0 0/0 .sdata2          @20495 */
SECTION_SDATA2 static f32 lit_20495 = 3000.0f;

/* 80452F0C-80452F10 00150C 0004+00 5/5 0/0 0/0 .sdata2          @20496 */
SECTION_SDATA2 static f32 lit_20496 = 1500.0f;

/* 80452F10-80452F14 001510 0004+00 1/1 0/0 0/0 .sdata2          @20790 */
SECTION_SDATA2 static f32 lit_20790 = 6.103515625e-05f;

/* 80452F14-80452F18 001514 0004+00 3/3 0/0 0/0 .sdata2          @20823 */
SECTION_SDATA2 static f32 lit_20823 = -35.0f;

/* 80452F18-80452F1C 001518 0004+00 5/5 0/0 0/0 .sdata2          @20824 */
SECTION_SDATA2 static f32 lit_20824 = 175.0f;

/* 80452F1C-80452F20 00151C 0004+00 6/6 0/0 0/0 .sdata2          @20991 */
SECTION_SDATA2 static f32 lit_20991 = 55.0f;

/* 80452F20-80452F24 001520 0004+00 1/1 0/0 0/0 .sdata2          @20992 */
SECTION_SDATA2 static f32 lit_20992 = -55.0f;

/* 80452F24-80452F28 001524 0004+00 1/1 0/0 0/0 .sdata2          @21021 */
SECTION_SDATA2 static f32 lit_21021 = -4.0f;

/* 80452F28-80452F2C 001528 0004+00 3/3 0/0 0/0 .sdata2          @21624 */
SECTION_SDATA2 static f32 lit_21624 = 32768.0f;

/* 80452F2C-80452F30 00152C 0004+00 3/3 0/0 0/0 .sdata2          @21680 */
SECTION_SDATA2 static f32 lit_21680 = 1024.0f;

/* 80452F30-80452F34 001530 0004+00 4/4 0/0 0/0 .sdata2          @21736 */
SECTION_SDATA2 static f32 lit_21736 = 45.0f;

/* 80452F34-80452F38 001534 0004+00 1/1 0/0 0/0 .sdata2          @22146 */
SECTION_SDATA2 static f32 lit_22146 = 0.18479956686496735f;

/* 80452F38-80452F3C -00001 0004+00 1/1 0/0 0/0 .sdata2          None */
SECTION_SDATA2 static u8 struct_80452F38[4] = {
    /* 80452F38 0001+00 data_80452F38 None */
    0x01,
    /* 80452F39 0003+00 data_80452F39 None */
    0x04,
    0x00,
    0x00,
};

/* 80452F3C-80452F40 00153C 0004+00 1/1 0/0 0/0 .sdata2          @22608 */
SECTION_SDATA2 static f32 lit_22608 = 9025.0f;

/* 80452F40-80452F44 001540 0004+00 1/1 0/0 0/0 .sdata2          @22609 */
SECTION_SDATA2 static f32 lit_22609 = 4900.0f;

/* 80452F44-80452F48 001544 0004+00 1/1 0/0 0/0 .sdata2          @23155 */
SECTION_SDATA2 static f32 lit_23155 = 15.5f;

/* 80452F48-80452F4C 001548 0004+00 6/6 0/0 0/0 .sdata2          @23416 */
SECTION_SDATA2 static f32 lit_23416 = 4.5f;

/* 80452F4C-80452F50 00154C 0004+00 1/1 0/0 0/0 .sdata2          @23542 */
SECTION_SDATA2 static f32 lit_23542 = 0.9986000061035156f;

/* 80452F50-80452F54 001550 0004+00 10/10 0/0 0/0 .sdata2          @23595 */
SECTION_SDATA2 static f32 lit_23595 = 120.0f;

/* 80452F54-80452F58 001554 0004+00 2/2 0/0 0/0 .sdata2          @24322 */
SECTION_SDATA2 static f32 lit_24322 = 33.0f;

/* 80452F58-80452F5C 001558 0004+00 4/4 0/0 0/0 .sdata2          @24323 */
SECTION_SDATA2 static f32 lit_24323 = 31.0f;

/* 80452F5C-80452F60 00155C 0004+00 1/1 0/0 0/0 .sdata2          @24400 */
SECTION_SDATA2 static f32 lit_24400 = 424.8800048828125f;

/* 80452F60-80452F64 001560 0004+00 1/1 0/0 0/0 .sdata2          @24401 */
SECTION_SDATA2 static f32 lit_24401 = 347.0299987792969f;

/* 80452F64-80452F68 001564 0004+00 2/2 0/0 0/0 .sdata2          @24589 */
SECTION_SDATA2 static f32 lit_24589 = 61.0f;

/* 80452F68-80452F6C 001568 0004+00 2/2 0/0 0/0 .sdata2          @24590 */
SECTION_SDATA2 static f32 lit_24590 = 59.0f;

/* 80452F6C-80452F70 00156C 0004+00 4/4 0/0 0/0 .sdata2          @24591 */
SECTION_SDATA2 static f32 lit_24591 = 51.0f;

/* 80452F70-80452F74 001570 0004+00 1/1 0/0 0/0 .sdata2          @24592 */
SECTION_SDATA2 static f32 lit_24592 = 148.0f;

/* 80452F74-80452F78 001574 0004+00 1/1 0/0 0/0 .sdata2          @24593 */
SECTION_SDATA2 static f32 lit_24593 = 136.0f;

/* 80452F78-80452F7C 001578 0004+00 1/1 0/0 0/0 .sdata2          @24594 */
SECTION_SDATA2 static f32 lit_24594 = 117.0f;

/* 80452F7C-80452F80 00157C 0004+00 1/1 0/0 0/0 .sdata2          @24595 */
SECTION_SDATA2 static f32 lit_24595 = 105.0f;

/* 80452F80-80452F84 001580 0004+00 1/1 0/0 0/0 .sdata2          @24600 */
SECTION_SDATA2 static f32 lit_24600 = 2.0f / 75.0f;

/* 80452F84-80452F88 001584 0004+00 4/4 0/0 0/0 .sdata2          @24618 */
SECTION_SDATA2 static f32 lit_24618 = 37.5f;

/* 80452F88-80452F8C 001588 0004+00 4/4 0/0 0/0 .sdata2          @24680 */
SECTION_SDATA2 static f32 lit_24680 = 5.5f;

/* 80452F8C-80452F90 00158C 0004+00 1/1 0/0 0/0 .sdata2          @24852 */
SECTION_SDATA2 static f32 lit_24852 = 187.5f;

/* 80452F90-80452F94 001590 0004+00 5/5 0/0 0/0 .sdata2          @25059 */
SECTION_SDATA2 static f32 lit_25059 = -20.0f;

/* 80452F94-80452F98 001594 0004+00 2/2 0/0 0/0 .sdata2          @25113 */
SECTION_SDATA2 static f32 lit_25113 = 110.0f;

/* 80452F98-80452F9C 001598 0004+00 2/2 0/0 0/0 .sdata2          @25684 */
SECTION_SDATA2 static f32 lit_25684 = 190.0f;

/* 80452F9C-80452FA0 00159C 0004+00 1/1 0/0 0/0 .sdata2          @25873 */
SECTION_SDATA2 static f32 lit_25873 = 0.00016276042151730508f;

/* 80452FA0-80452FA4 0015A0 0004+00 1/1 0/0 0/0 .sdata2          @25874 */
SECTION_SDATA2 static f32 lit_25874 = -0.00016276042151730508f;

/* 80452FA4-80452FA8 0015A4 0004+00 6/6 0/0 0/0 .sdata2          @25916 */
SECTION_SDATA2 static f32 lit_25916 = 214.0f;

/* 80452FA8-80452FB0 0015A8 0008+00 1/1 0/0 0/0 .sdata2          offsetAngle$25945 */
SECTION_SDATA2 static u8 offsetAngle[8] = {
    0x00, 0x00, 0x80, 0x00, 0x40, 0x00, 0xC0, 0x00,
};

/* 80452FB0-80452FB4 0015B0 0004+00 1/1 0/0 0/0 .sdata2          @26233 */
SECTION_SDATA2 static f32 lit_26233 = 1.0f / 12.0f;

/* 80452FB4-80452FB8 0015B4 0004+00 1/1 0/0 0/0 .sdata2          @26275 */
SECTION_SDATA2 static f32 lit_26275 = -8.899365425109863f;

/* 80452FB8-80452FBC 0015B8 0004+00 1/1 0/0 0/0 .sdata2          @26276 */
SECTION_SDATA2 static f32 lit_26276 = 18.5f;

/* 80452FBC-80452FC0 0015BC 0004+00 1/1 0/0 0/0 .sdata2          @26297 */
SECTION_SDATA2 static f32 lit_26297 = 17.798730850219727f;

/* 80452FC0-80452FC4 0015C0 0004+00 2/2 0/0 0/0 .sdata2          @26816 */
SECTION_SDATA2 static f32 lit_26816 = 22500.0f;

/* 80452FC4-80452FC8 0015C4 0004+00 1/1 0/0 0/0 .sdata2          @26817 */
SECTION_SDATA2 static f32 lit_26817 = 16384.0f;

/* 80452FC8-80452FCC 0015C8 0004+00 1/1 0/0 0/0 .sdata2          @26818 */
SECTION_SDATA2 static f32 lit_26818 = 6144.0f;

/* 80452FCC-80452FD0 0015CC 0004+00 1/1 0/0 0/0 .sdata2          @26819 */
SECTION_SDATA2 static f32 lit_26819 = 8192.0f;

/* 80452FD0-80452FD4 0015D0 0004+00 2/2 0/0 0/0 .sdata2          @27005 */
SECTION_SDATA2 static f32 lit_27005 = -65.0f;

/* 80452FD4-80452FD8 0015D4 0004+00 1/1 0/0 0/0 .sdata2          @27418 */
SECTION_SDATA2 static f32 lit_27418 = 13653.0f;

/* 80452FD8-80452FDC 0015D8 0004+00 1/1 0/0 0/0 .sdata2          @27476 */
SECTION_SDATA2 static f32 lit_27476 = 2330.0f;

/* 80452FDC-80452FE0 0015DC 0004+00 7/7 0/0 0/0 .sdata2          @27477 */
SECTION_SDATA2 static f32 lit_27477 = 17.0f / 20.0f;

/* 80452FE0-80452FE4 0015E0 0004+00 2/2 0/0 0/0 .sdata2          @28016 */
SECTION_SDATA2 static f32 lit_28016 = -45.0f;

/* 80452FE4-80452FE8 0015E4 0004+00 1/1 0/0 0/0 .sdata2          @28017 */
SECTION_SDATA2 static f32 lit_28017 = 145.0f;

/* 80452FE8-80452FEC 0015E8 0004+00 1/1 0/0 0/0 .sdata2          @28045 */
SECTION_SDATA2 static f32 lit_28045 = -34.0f;

/* 80452FEC-80452FF0 0015EC 0004+00 1/1 0/0 0/0 .sdata2          @28285 */
SECTION_SDATA2 static f32 lit_28285 = 910.0f;

/* 80452FF0-80452FF4 0015F0 0004+00 2/2 0/0 0/0 .sdata2          @28286 */
SECTION_SDATA2 static f32 lit_28286 = 7.0f / 20.0f;

/* 80452FF4-80452FF8 0015F4 0004+00 1/1 0/0 0/0 .sdata2          @28287 */
SECTION_SDATA2 static f32 lit_28287 = 1.5707963705062866f;

/* 80452FF8-80452FFC 0015F8 0004+00 1/1 0/0 0/0 .sdata2          @28405 */
SECTION_SDATA2 static f32 lit_28405 = 1.0f / 48.0f;

/* 80452FFC-80453000 0015FC 0004+00 2/2 0/0 0/0 .sdata2          @30372 */
SECTION_SDATA2 static f32 lit_30372 = 400.0f;

/* 80453000-80453004 001600 0004+00 4/4 0/0 0/0 .sdata2          @30895 */
SECTION_SDATA2 static f32 lit_30895 = 6.5f;

/* 80453004-80453008 001604 0004+00 1/1 0/0 0/0 .sdata2          @31530 */
SECTION_SDATA2 static f32 lit_31530 = 384.0f;

/* 80453008-80453010 001608 0008+00 5/5 0/0 0/0 .sdata2          @32072 */
SECTION_SDATA2 static f64 lit_32072 = 4503599627370496.0 /* cast u32 to float */;

/* 80453010-80453014 001610 0004+00 1/1 0/0 0/0 .sdata2          @32830 */
SECTION_SDATA2 static f32 lit_32830 = 608.0f;

/* 80453014-80453018 001614 0004+00 1/1 0/0 0/0 .sdata2          @32831 */
SECTION_SDATA2 static f32 lit_32831 = 448.0f;

/* 80453018-8045301C 001618 0004+00 1/1 0/0 0/0 .sdata2          @32832 */
SECTION_SDATA2 static f32 lit_32832 = -1.0f / 100.0f;

/* 8045301C-80453020 00161C 0004+00 1/1 0/0 0/0 .sdata2          @32833 */
SECTION_SDATA2 static f32 lit_32833 = 16777215.0f;

/* 80453020-80453024 001620 0004+00 1/1 0/0 0/0 .sdata2          grassWhistleIdx$33097 */
SECTION_SDATA2 static u8 grassWhistleIdx[4] = {
    0x00,
    0x03,
    0x00,
    0x03,
};

/* 80453024-80453028 001624 0004+00 1/1 0/0 0/0 .sdata2          @33587 */
SECTION_SDATA2 static f32 lit_33587 = 64.0f;

/* 80453028-8045302C 001628 0004+00 1/1 0/0 0/0 .sdata2          @34189 */
SECTION_SDATA2 static f32 lit_34189 = -16384.0f;

/* 8045302C-80453030 00162C 0004+00 3/3 0/0 0/0 .sdata2          @34190 */
SECTION_SDATA2 static f32 lit_34190 = 14336.0f;

/* 80453030-80453034 001630 0004+00 1/1 0/0 0/0 .sdata2          @34772 */
SECTION_SDATA2 static f32 lit_34772 = -6.0f;

/* 80453034-80453038 001634 0004+00 1/1 0/0 0/0 .sdata2          @34773 */
SECTION_SDATA2 static f32 lit_34773 = -18.0f / 5.0f;

/* 80453038-8045303C 001638 0004+00 1/1 0/0 0/0 .sdata2          @34774 */
SECTION_SDATA2 static f32 lit_34774 = -35.29999923706055f;

/* 8045303C-80453040 00163C 0004+00 1/1 0/0 0/0 .sdata2          @34775 */
SECTION_SDATA2 static f32 lit_34775 = -9.5f;

/* 80453040-80453044 001640 0004+00 1/1 0/0 0/0 .sdata2          @34776 */
SECTION_SDATA2 static f32 lit_34776 = -16.0f;

/* 80453044-80453048 001644 0004+00 1/1 0/0 0/0 .sdata2          @34777 */
SECTION_SDATA2 static f32 lit_34777 = 65536.0f;

/* 80453048-8045304C 001648 0004+00 1/1 0/0 0/0 .sdata2          @34778 */
SECTION_SDATA2 static f32 lit_34778 = 5.0f / 3.0f;

/* 8045304C-80453050 00164C 0004+00 1/1 0/0 0/0 .sdata2          @34779 */
SECTION_SDATA2 static f32 lit_34779 = -1.0f / 5.0f;

/* 80453050-80453054 001650 0004+00 3/3 0/0 0/0 .sdata2          @34957 */
SECTION_SDATA2 static f32 lit_34957 = 22.0f;

/* 80453054-80453058 001654 0004+00 1/1 0/0 0/0 .sdata2          @35610 */
SECTION_SDATA2 static f32 lit_35610 = 0.3500000238418579f;

/* 80453058-8045305C 001658 0004+00 4/4 0/0 0/0 .sdata2          @37152 */
SECTION_SDATA2 static f32 lit_37152 = 3.5f;

/* 8045305C-80453060 00165C 0004+00 1/1 0/0 0/0 .sdata2          @37322 */
SECTION_SDATA2 static f32 lit_37322 = 111.0f;

/* 80453060-80453064 001660 0004+00 1/1 0/0 0/0 .sdata2          @37323 */
SECTION_SDATA2 static f32 lit_37323 = 88.0f;

/* 80453064-80453068 001664 0004+00 1/1 0/0 0/0 .sdata2          @37527 */
SECTION_SDATA2 static f32 lit_37527 = 1.0f / 9.0f;

/* 80453068-8045306C 001668 0004+00 3/3 0/0 0/0 .sdata2          @37528 */
SECTION_SDATA2 static f32 lit_37528 = 1.0f / 7.0f;

/* 8045306C-80453070 00166C 0004+00 1/1 0/0 0/0 .sdata2          @37749 */
SECTION_SDATA2 static f32 lit_37749 = 35.0f / 9.0f;

/* 80453070-80453074 001670 0004+00 2/2 0/0 0/0 .sdata2          @38059 */
SECTION_SDATA2 static f32 lit_38059 = 19.0f / 50.0f;

/* 80453074-80453078 001674 0004+00 1/1 0/0 0/0 .sdata2          @38175 */
SECTION_SDATA2 static f32 lit_38175 = 101.0f;

/* 80453078-8045307C 001678 0004+00 1/1 0/0 0/0 .sdata2          @38176 */
SECTION_SDATA2 static f32 lit_38176 = 122.0f;

/* 8045307C-80453080 00167C 0004+00 1/1 0/0 0/0 .sdata2          @38177 */
SECTION_SDATA2 static f32 lit_38177 = 114.0f;

/* 80453080-80453084 001680 0004+00 1/1 0/0 0/0 .sdata2          @38624 */
SECTION_SDATA2 static f32 lit_38624 = -90.0f;

/* 80453084-80453088 001684 0004+00 1/1 0/0 0/0 .sdata2          @39330 */
SECTION_SDATA2 static f32 lit_39330 = 3.0f / 50.0f;

/* 80453088-8045308C 001688 0004+00 1/1 0/0 0/0 .sdata2          @40561 */
SECTION_SDATA2 static f32 lit_40561 = 0.0625f;

/* 8045308C-80453090 00168C 0004+00 1/1 0/0 0/0 .sdata2          @40562 */
SECTION_SDATA2 static f32 lit_40562 = 205.0f;

/* 80453090-80453094 001690 0004+00 1/1 0/0 0/0 .sdata2          @40716 */
SECTION_SDATA2 static f32 lit_40716 = 84.0f;

/* 80453094-8045309C 001694 0006+02 1/1 0/0 0/0 .sdata2          effName$40765 */
SECTION_SDATA2 static u8 effName_40765[6 + 2 /* padding */] = {
    0x04,
    0x07,
    0x04,
    0x08,
    0x04,
    0x09,
    /* padding */
    0x00,
    0x00,
};

/* 8045309C-804530A4 00169C 0006+02 1/1 0/0 0/0 .sdata2          effName0$40950 */
SECTION_SDATA2 static u8 effName0[6 + 2 /* padding */] = {
    0x86,
    0x7D,
    0x86,
    0x7E,
    0x86,
    0x7F,
    /* padding */
    0x00,
    0x00,
};

/* 804530A4-804530AC 0016A4 0006+02 1/1 0/0 0/0 .sdata2          effName1$40951 */
SECTION_SDATA2 static u8 effName1[6 + 2 /* padding */] = {
    0x89,
    0x81,
    0x89,
    0x82,
    0x89,
    0x83,
    /* padding */
    0x00,
    0x00,
};

/* 804530AC-804530B0 0016AC 0004+00 1/1 0/0 0/0 .sdata2          effNameNormal$41086 */
SECTION_SDATA2 static u8 effNameNormal[4] = {
    0x01,
    0x59,
    0x01,
    0x5A,
};

/* 804530B0-804530B8 0016B0 0008+00 1/1 0/0 0/0 .sdata2          effNameLight$41091 */
SECTION_SDATA2 static u8 effNameLight[8] = {
    0x0A, 0x28, 0x0A, 0x29, 0x0A, 0x2A, 0x0A, 0x2B,
};

/* 804530B8-804530BC 0016B8 0004+00 1/1 0/0 0/0 .sdata2          effNameWater$41101 */
SECTION_SDATA2 static u8 effNameWater[4] = {
    0x0C,
    0x52,
    0x0C,
    0x53,
};

/* 804530BC-804530C0 0016BC 0004+00 1/1 0/0 0/0 .sdata2          @41180 */
SECTION_SDATA2 static f32 lit_41180 = 0.005493247881531715f;

/* 804530C0-804530C8 0016C0 0008+00 1/1 0/0 0/0 .sdata2          jointID$41285 */
SECTION_SDATA2 static u8 jointID[8] = {
    0x00, 0x14, 0x00, 0x13, 0x00, 0x18, 0x00, 0x19,
};

/* 804530C8-804530D0 0016C8 0008+00 1/1 0/0 0/0 .sdata2          effName$41286 */
SECTION_SDATA2 static u8 effName_41286[8] = {
    0x88, 0xE1, 0x88, 0xE2, 0x88, 0xE3, 0x88, 0xE4,
};

/* 804530D0-804530D8 0016D0 0006+02 1/1 0/0 0/0 .sdata2          effName$41312 */
SECTION_SDATA2 static u8 effName_41312[6 + 2 /* padding */] = {
    0x0A,
    0x58,
    0x0A,
    0x59,
    0x0B,
    0x9D,
    /* padding */
    0x00,
    0x00,
};

/* 804530D8-804530E0 0016D8 0006+02 1/1 0/0 0/0 .sdata2          name0$41422 */
SECTION_SDATA2 static u8 name0[6 + 2 /* padding */] = {
    0x02,
    0xA3,
    0x83,
    0xA2,
    0x88,
    0x4F,
    /* padding */
    0x00,
    0x00,
};

/* 804530E0-804530E8 0016E0 0006+02 1/1 0/0 0/0 .sdata2          name1$41423 */
SECTION_SDATA2 static u8 name1[6 + 2 /* padding */] = {
    0x02,
    0xA3,
    0x83,
    0xA3,
    0x88,
    0x50,
    /* padding */
    0x00,
    0x00,
};

/* 804530E8-804530F0 0016E8 0006+02 1/1 0/0 0/0 .sdata2          effID$41443 */
SECTION_SDATA2 static u8 effID[6 + 2 /* padding */] = {
    0x02,
    0x44,
    0x02,
    0x45,
    0x02,
    0x46,
    /* padding */
    0x00,
    0x00,
};

/* 804530F0-804530F4 0016F0 0004+00 1/1 0/0 0/0 .sdata2          normalNameID$41521 */
SECTION_SDATA2 static u8 normalNameID[4] = {
    0x83,
    0x90,
    0x83,
    0x91,
};

/* 804530F4-804530F8 0016F4 0004+00 1/1 0/0 0/0 .sdata2          ganonNameID$41522 */
SECTION_SDATA2 static u8 ganonNameID[4] = {
    0x8C,
    0x2A,
    0x8C,
    0x2B,
};

/* 804530F8-80453100 0016F8 0008+00 1/1 0/0 0/0 .sdata2          effDataTable$41650 */
SECTION_SDATA2 static u8 effDataTable[8] = {
    0x02, 0xA5, 0x02, 0xA6, 0x02, 0xA7, 0x02, 0xA8,
};

/* 80453100-80453104 001700 0004+00 4/4 0/0 0/0 .sdata2          @41718 */
SECTION_SDATA2 static f32 lit_41718 = 13.0f / 20.0f;

/* 80453104-8045310C 001704 0008+00 1/1 0/0 0/0 .sdata2          cutSplashName$41756 */
SECTION_SDATA2 static u8 cutSplashName[8] = {
    0x01, 0xB8, 0x01, 0xB9, 0x01, 0xBA, 0x01, 0xBB,
};

/* 8045310C-80453110 00170C 0004+00 1/1 0/0 0/0 .sdata2          effName$42224 */
SECTION_SDATA2 static u8 effName_42224[4] = {
    0x88,
    0x18,
    0x88,
    0x19,
};

/* 80453110-80453114 001710 0004+00 1/1 0/0 0/0 .sdata2          effName$42309 */
SECTION_SDATA2 static u8 effName_42309[4] = {
    0x08,
    0x14,
    0x08,
    0x15,
};

/* 80453114-80453118 001714 0004+00 1/1 0/0 0/0 .sdata2          effName$42340 */
SECTION_SDATA2 static u8 effName_42340[4] = {
    0x08,
    0x16,
    0x08,
    0x17,
};

/* 80453118-8045311C 001718 0004+00 4/4 0/0 0/0 .sdata2          @42493 */
SECTION_SDATA2 static f32 lit_42493 = -60.0f;

/* 8045311C-80453120 00171C 0004+00 2/2 0/0 0/0 .sdata2          @42622 */
SECTION_SDATA2 static f32 lit_42622 = -29.0f;

/* 80453120-80453124 001720 0004+00 1/1 0/0 0/0 .sdata2          @42685 */
SECTION_SDATA2 static f32 lit_42685 = 1.0f / 6.0f;

/* 80453124-80453128 001724 0004+00 1/1 0/0 0/0 .sdata2          @42686 */
SECTION_SDATA2 static f32 lit_42686 = 0.00390625f;

/* 80453128-8045312C 001728 0004+00 1/1 0/0 0/0 .sdata2          @42687 */
SECTION_SDATA2 static f32 lit_42687 = 2.6179938316345215f;

/* 8045312C-80453130 00172C 0004+00 1/1 0/0 0/0 .sdata2          @42688 */
SECTION_SDATA2 static f32 lit_42688 = 0.5235987901687622f;

/* 80453130-80453134 001730 0004+00 1/1 0/0 0/0 .sdata2          @42933 */
SECTION_SDATA2 static f32 lit_42933 = 115.0f;

/* 80453134-80453138 001734 0004+00 1/1 0/0 0/0 .sdata2          @42934 */
SECTION_SDATA2 static f32 lit_42934 = -130.0f;

/* 80453138-8045313C 001738 0004+00 1/1 0/0 0/0 .sdata2          @43529 */
SECTION_SDATA2 static f32 lit_43529 = 180.0f;

/* 8045313C-80453140 00173C 0004+00 2/2 0/0 0/0 .sdata2          @43530 */
SECTION_SDATA2 static f32 lit_43530 = -120.0f;

/* 80453140-80453144 001740 0004+00 2/2 0/0 0/0 .sdata2          @43531 */
SECTION_SDATA2 static f32 lit_43531 = -200.0f;

/* 80453144-80453148 001744 0004+00 1/1 0/0 0/0 .sdata2          @44003 */
SECTION_SDATA2 static f32 lit_44003 = -0.3826834261417389f;

/* 80453148-8045314C 001748 0004+00 1/1 0/0 0/0 .sdata2          @44004 */
SECTION_SDATA2 static f32 lit_44004 = -0.1736481785774231f;

/* 8045314C-80453150 00174C 0004+00 1/1 0/0 0/0 .sdata2          fFootJoint$44785 */
SECTION_SDATA2 static u8 fFootJoint[4] = {
    0x00,
    0x10,
    0x00,
    0x15,
};

/* 80453150-80453154 001750 0004+00 1/1 0/0 0/0 .sdata2          bFootJoint$44786 */
SECTION_SDATA2 static u8 bFootJoint[4] = {
    0x00,
    0x1C,
    0x00,
    0x21,
};

/* 80453154-80453158 001754 0004+00 1/1 0/0 0/0 .sdata2          @45401 */
SECTION_SDATA2 static f32 lit_45401 = 165.0f;

/* 80453158-8045315C 001758 0004+00 2/2 0/0 0/0 .sdata2          @45501 */
SECTION_SDATA2 static f32 lit_45501 = -1000.0f;

/* 8045315C-80453160 00175C 0004+00 1/1 0/0 0/0 .sdata2          @45756 */
SECTION_SDATA2 static f32 lit_45756 = -1.5f;

/* 80453160-80453164 001760 0004+00 1/1 0/0 0/0 .sdata2          @46081 */
SECTION_SDATA2 static f32 lit_46081 = 16.5f;

/* 80453164-80453168 001764 0004+00 3/3 0/0 0/0 .sdata2          @46462 */
SECTION_SDATA2 static f32 lit_46462 = 56.0f;

/* 80453168-8045316C 001768 0004+00 1/1 0/0 0/0 .sdata2          @47052 */
SECTION_SDATA2 static f32 lit_47052 = 9000000.0f;

/* 8045316C-80453170 00176C 0004+00 1/1 0/0 0/0 .sdata2          @47417 */
SECTION_SDATA2 static f32 lit_47417 = -6144.0f;

/* 80453170-80453174 001770 0004+00 3/3 0/0 0/0 .sdata2          @47597 */
SECTION_SDATA2 static f32 lit_47597 = 13.5f;

/* 80453174-80453178 001774 0004+00 1/1 0/0 0/0 .sdata2          @47598 */
SECTION_SDATA2 static f32 lit_47598 = 0.2327105700969696f;

/* 80453178-8045317C 001778 0004+00 1/1 0/0 0/0 .sdata2          @47725 */
SECTION_SDATA2 static f32 lit_47725 = 3072.0f;

/* 8045317C-80453180 00177C 0004+00 1/1 0/0 0/0 .sdata2          @47726 */
SECTION_SDATA2 static f32 lit_47726 = 1536.0f;

/* 80453180-80453184 001780 0004+00 2/2 0/0 0/0 .sdata2          @48076 */
SECTION_SDATA2 static f32 lit_48076 = 85.0f;

/* 80453184-80453188 001784 0004+00 2/2 0/0 0/0 .sdata2          @48077 */
SECTION_SDATA2 static f32 lit_48077 = 12.5f;

/* 80453188-8045318C 001788 0004+00 2/2 0/0 0/0 .sdata2          @48078 */
SECTION_SDATA2 static f32 lit_48078 = 14.5f;

/* 8045318C-80453190 00178C 0004+00 1/1 0/0 0/0 .sdata2          @48504 */
SECTION_SDATA2 static f32 lit_48504 = 86.0f;

/* 80453190-80453194 001790 0004+00 1/1 0/0 0/0 .sdata2          @48505 */
SECTION_SDATA2 static f32 lit_48505 = 71.0f;

/* 80453194-80453198 001794 0004+00 1/1 0/0 0/0 .sdata2          @48506 */
SECTION_SDATA2 static f32 lit_48506 = 63.0f;

/* 80453198-8045319C 001798 0004+00 1/1 0/0 0/0 .sdata2          @49124 */
SECTION_SDATA2 static f32 lit_49124 = 40000.0f;

/* 8045319C-804531A0 00179C 0004+00 1/1 0/0 0/0 .sdata2          @49395 */
SECTION_SDATA2 static f32 lit_49395 = 0.33864477276802063f;

/* 804531A0-804531A4 0017A0 0004+00 1/1 0/0 0/0 .sdata2          @49396 */
SECTION_SDATA2 static f32 lit_49396 = -29.525135040283203f;

/* 804531A4-804531A8 0017A4 0004+00 1/1 0/0 0/0 .sdata2          @49938 */
SECTION_SDATA2 static f32 lit_49938 = 0.20943951606750488f;

/* 804531A8-804531AC 0017A8 0004+00 1/1 0/0 0/0 .sdata2          @49992 */
SECTION_SDATA2 static f32 lit_49992 = 20.5f;

/* 804531AC-804531B0 0017AC 0004+00 1/1 0/0 0/0 .sdata2          @50951 */
SECTION_SDATA2 static f32 lit_50951 = 135.0f;

/* 804531B0-804531B4 0017B0 0004+00 1/1 0/0 0/0 .sdata2          @51575 */
SECTION_SDATA2 static f32 lit_51575 = 155.0f;

/* 804531B4-804531B8 0017B4 0004+00 4/4 0/0 0/0 .sdata2          @52234 */
SECTION_SDATA2 static f32 lit_52234 = 7.5f;

/* 804531B8-804531BC 0017B8 0004+00 1/1 0/0 0/0 .sdata2          @52470 */
SECTION_SDATA2 static f32 lit_52470 = 17.5f;

/* 804531BC-804531C0 0017BC 0004+00 1/1 0/0 0/0 .sdata2          @52534 */
SECTION_SDATA2 static f32 lit_52534 = -9.0f;

/* 804531C0-804531C4 0017C0 0004+00 1/1 0/0 0/0 .sdata2          @52535 */
SECTION_SDATA2 static f32 lit_52535 = -17.0f;

/* 804531C4-804531C8 0017C4 0004+00 2/2 0/0 0/0 .sdata2          @52536 */
SECTION_SDATA2 static f32 lit_52536 = -7.0f;

/* 804531C8-804531CC 0017C8 0004+00 1/1 0/0 0/0 .sdata2          @52882 */
SECTION_SDATA2 static f32 lit_52882 = 94.0f;

/* 804531CC-804531D0 0017CC 0004+00 2/2 0/0 0/0 .sdata2          @52883 */
SECTION_SDATA2 static f32 lit_52883 = 97.0f;

/* 804531D0-804531D4 0017D0 0004+00 1/1 0/0 0/0 .sdata2          @52884 */
SECTION_SDATA2 static f32 lit_52884 = 19.0f / 20.0f;

/* 804531D4-804531D8 0017D4 0004+00 1/1 0/0 0/0 .sdata2          @53012 */
SECTION_SDATA2 static f32 lit_53012 = 66.0f;

/* 804531D8-804531E0 0017D8 0008+00 1/1 0/0 0/0 .sdata2          snowID$53110 */
SECTION_SDATA2 static u8 snowID[8] = {
    0x88, 0x4D, 0x88, 0x4E, 0x88, 0x51, 0x88, 0x52,
};

/* 804531E0-804531E8 0017E0 0008+00 1/1 0/0 0/0 .sdata2          smokeID$53111 */
SECTION_SDATA2 static u8 smokeID[8] = {
    0x83, 0xA0, 0x83, 0xA1, 0x83, 0xA4, 0x83, 0xA5,
};

/* 804531E8-804531F0 0017E8 0008+00 1/1 0/0 0/0 .sdata2          waterColor$53845 */
SECTION_SDATA2 static u8 waterColor[8] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 804531F0-804531F4 0017F0 0004+00 1/1 0/0 0/0 .sdata2          @55047 */
SECTION_SDATA2 static f32 lit_55047 = 77.0f;

/* 804531F4-804531F8 0017F4 0004+00 1/1 0/0 0/0 .sdata2          @55048 */
SECTION_SDATA2 static f32 lit_55048 = 4060.0f;

/* 8009F034-8009FFF8 099974 0FC4+00 1/1 0/0 0/0 .text            setHatAngle__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setHatAngle() {
    nofralloc
#include "asm/d/a/d_a_alink/setHatAngle__9daAlink_cFv.s"
}
#pragma pop

/* 8009FFF8-800A002C 09A938 0034+00 1/1 0/0 0/0 .text            calcHairAngle__9daAlink_cFPs */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::calcHairAngle(s16* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/calcHairAngle__9daAlink_cFPs.s"
}
#pragma pop

/* ############################################################################################## */
/* 804531F8-804531FC 0017F8 0004+00 2/2 0/0 0/0 .sdata2          @55145 */
SECTION_SDATA2 static f32 lit_55145 = 1.0f / 30.0f;

/* 804531FC-80453200 0017FC 0004+00 1/1 0/0 0/0 .sdata2          @55146 */
SECTION_SDATA2 static f32 lit_55146 = 6000.0f;

/* 80453200-80453204 001800 0004+00 1/1 0/0 0/0 .sdata2          @55147 */
SECTION_SDATA2 static f32 lit_55147 = 8000.0f;

/* 80453204-80453208 001804 0004+00 1/1 0/0 0/0 .sdata2          @55148 */
SECTION_SDATA2 static f32 lit_55148 = 7000.0f;

/* 80453208-8045320C 001808 0004+00 1/1 0/0 0/0 .sdata2          @55149 */
SECTION_SDATA2 static f32 lit_55149 = -9000.0f;

/* 8045320C-80453210 00180C 0004+00 1/1 0/0 0/0 .sdata2          @55150 */
SECTION_SDATA2 static f32 lit_55150 = -15000.0f;

/* 80453210-80453214 001810 0004+00 1/1 0/0 0/0 .sdata2          @55151 */
SECTION_SDATA2 static f32 lit_55151 = -7000.0f;

/* 800A002C-800A0744 09A96C 0718+00 1/1 0/0 0/0 .text            setHairAngle__9daAlink_cFP4cXyzff
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setHairAngle(cXyz* param_0, f32 param_1, f32 param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/setHairAngle__9daAlink_cFP4cXyzff.s"
}
#pragma pop

/* 800A0744-800A07D8 09B084 0094+00 0/0 1/1 0/0 .text setLookPosFromOut__9daAlink_cFP4cXyz */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setLookPosFromOut(cXyz* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setLookPosFromOut__9daAlink_cFP4cXyz.s"
}
#pragma pop

/* ############################################################################################## */
/* 8038D658-8038D664 019CB8 000C+00 69/69 0/0 0/0 .rodata          @3757 */
SECTION_RODATA static u8 const lit_3757[12] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x8038D658, &lit_3757);

/* 8038D664-8038D6BC 019CC4 0058+00 41/50 0/0 0/0 .rodata          m__19daAlinkHIO_basic_c0 */
daAlinkHIO_basic_c1 const daAlinkHIO_basic_c0::m = {
    false, 20000, -10000, 8000,   1,     30,    400,   600,   16384, 1.0f, 4.0f, 0.7f,   3.0f,
    60.0f, 85.0f, 300.0f, 200.0f, 20.0f, 30.0f, 23.0f, 41.0f, 0.7f,  0.5f, 0.7f, 400.0f, 5000.0f};

/* 8038D6BC-8038D714 019D1C 0058+00 34/47 0/0 0/0 .rodata          m__18daAlinkHIO_move_c0 */
daAlinkHIO_move_c1 const daAlinkHIO_move_c0::m = {{11, 0.7f, 3.0f, 4.0f, 12.0f},
                                                  4500,
                                                  100,
                                                  5,
                                                  1.0f,
                                                  0.75f,
                                                  1.5f,
                                                  0.4f,
                                                  0.8f,
                                                  23.0f,
                                                  1.9f,
                                                  2.2f,
                                                  0.6f,
                                                  1.1f,
                                                  1.5f,
                                                  0.99f,
                                                  3.0f,
                                                  0.7f,
                                                  0.4f};

/* 8038D714-8038D768 019D74 0054+00 10/16 0/0 0/0 .rodata          m__21daAlinkHIO_atnMove_c0 */
daAlinkHIO_atnMove_c1 const daAlinkHIO_atnMove_c0::m = {
    3000, 2000, 6,     1.2f, 1.1f,  1.5f, 0.5f, 0.6f, 13.0f, 6.0f, 7.5f,
    0.7f, 1.4f, 0.25f, 0.7f, 15.0f, 2.5f, 8.0f, 0.5f, 0.4f,  1.0f, 1.3f};

/* 8038D768-8038D7BC 019DC8 0054+00 3/9 0/0 0/0 .rodata          m__26daAlinkHIO_noActAtnMove_c0 */
SECTION_RODATA u8 const daAlinkHIO_noActAtnMove_c0::m[84] = {
    0x0B, 0xB8, 0x07, 0xD0, 0x00, 0x06, 0x00, 0x00, 0x3F, 0x66, 0x66, 0x66, 0x3F, 0x8C,
    0xCC, 0xCD, 0x3F, 0xA6, 0x66, 0x66, 0x3F, 0x00, 0x00, 0x00, 0x3F, 0x19, 0x99, 0x9A,
    0x41, 0x50, 0x00, 0x00, 0x40, 0xC0, 0x00, 0x00, 0x40, 0xF0, 0x00, 0x00, 0x3F, 0x33,
    0x33, 0x33, 0x3F, 0xA6, 0x66, 0x66, 0x3E, 0x80, 0x00, 0x00, 0x3F, 0x33, 0x33, 0x33,
    0x41, 0x50, 0x00, 0x00, 0x40, 0x20, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0x3E, 0xB3,
    0x33, 0x33, 0x3E, 0xCC, 0xCC, 0xCD, 0x3D, 0xCC, 0xCC, 0xCD, 0x40, 0x13, 0x33, 0x33,
};
COMPILER_STRIP_GATE(0x8038D768, &daAlinkHIO_noActAtnMove_c0::m);

/* 8038D7BC-8038D82C 019E1C 0070+00 5/7 0/0 0/0 .rodata          m__23daAlinkHIO_frontRoll_c0 */
daAlinkHIO_frontRoll_c1 const daAlinkHIO_frontRoll_c0::m = {
    {29, 1.1f, 0.0f, 3.0f, 22.0f},
    {29, 0.8f, 3.0f, 2.0f, 25.0f},
    {33, 1.2f, 0.0f, 1.0f, 25.0f},
    10000,
    5,
    1000,
    100,
    3.0f,
    1.3f,
    25.0f,
    10.0f,
    3.0f,
    15.0f,
    10.0f,
    12.0f,
    9.0f,
    19.0f,
    60.0f,
};

/* 8038D82C-8038D864 019E8C 0038+00 5/5 0/0 0/0 .rodata          m__22daAlinkHIO_backJump_c0 */
daAlinkHIO_backJump_c1 const daAlinkHIO_backJump_c0::m = {
    {9, 0.7f, 0.0f, 2.0f, 12.0f}, {17, 1.0f, 2.0f, 2.0f, 3.0f}, 24.0f, 10.0f, 100.0f, 10.0f,
};

/* 8038D864-8038D8CC 019EC4 0068+00 3/3 0/0 0/0 .rodata          m__22daAlinkHIO_sideStep_c0 */
daAlinkHIO_sideStep_c1 const daAlinkHIO_sideStep_c0::m = {
    {5, 1.1f, 1.0f, 3.0f, 6.0f},
    {9, 1.0f, 0.0f, 3.0f, 2.0f},
    {6, 1.0f, 0.0f, 3.0f, 7.0f},
    {9, 1.1f, 0.0f, 3.0f, 4.0f},
    28.0f,
    22.0f,
    25.0f,
    20.0f,
    100.0f,
    10.0f,
};

/* 8038D8CC-8038D944 019F2C 0078+00 5/10 0/0 0/0 .rodata          m__19daAlinkHIO_slide_c0 */
daAlinkHIO_slide_c1 const daAlinkHIO_slide_c0::m = {
    {14, 0.75f, 0.0f, 5.0f, 15.0f},
    {6, 0.9f, 0.0f, 3.0f, 7.0f},
    {15, 1.0f, 0.0f, 3.0f, 9.0f},
    {20, 1.0f, 0.0f, 3.0f, 16.0f},
    40.0f,
    3.0f,
    50.0f,
    27.0f,
    0.2f,
    12.0f,
    50.0f,
    3.0f,
    33.0f,
    1.2f,
};

/* 8038D944-8038D964 019FA4 0020+00 0/1 0/0 0/0 .rodata          m__20daAlinkHIO_cutNmV_c0 */
#pragma push
#pragma force_active on
SECTION_RODATA u8 const daAlinkHIO_cutNmV_c0::m[32] = {
    0x00, 0x1B, 0x00, 0x00, 0x3F, 0x99, 0x99, 0x9A, 0x40, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
    0x41, 0x80, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00, 0x41, 0x20, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x8038D944, &daAlinkHIO_cutNmV_c0::m);
#pragma pop

/* 8038D964-8038D984 019FC4 0020+00 0/1 0/0 0/0 .rodata          m__20daAlinkHIO_cutNmL_c0 */
#pragma push
#pragma force_active on
SECTION_RODATA u8 const daAlinkHIO_cutNmL_c0::m[32] = {
    0x00, 0x1B, 0x00, 0x00, 0x3F, 0x99, 0x99, 0x9A, 0x40, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
    0x41, 0x80, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x40, 0xE0, 0x00, 0x00, 0x41, 0x50, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x8038D964, &daAlinkHIO_cutNmL_c0::m);
#pragma pop

/* 8038D984-8038D9A4 019FE4 0020+00 0/1 0/0 0/0 .rodata          m__20daAlinkHIO_cutNmR_c0 */
#pragma push
#pragma force_active on
SECTION_RODATA u8 const daAlinkHIO_cutNmR_c0::m[32] = {
    0x00, 0x1B, 0x00, 0x00, 0x3F, 0x99, 0x99, 0x9A, 0x40, 0x40, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00,
    0x41, 0x80, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x40, 0xE0, 0x00, 0x00, 0x41, 0x48, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x8038D984, &daAlinkHIO_cutNmR_c0::m);
#pragma pop

/* 8038D9A4-8038D9C4 01A004 0020+00 0/1 0/0 0/0 .rodata          m__21daAlinkHIO_cutNmSL_c0 */
#pragma push
#pragma force_active on
SECTION_RODATA u8 const daAlinkHIO_cutNmSL_c0::m[32] = {
    0x00, 0x1F, 0x00, 0x00, 0x3F, 0x8C, 0xCC, 0xCD, 0x40, 0x40, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00,
    0x41, 0x88, 0x00, 0x00, 0x41, 0x20, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x41, 0x20, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x8038D9A4, &daAlinkHIO_cutNmSL_c0::m);
#pragma pop

/* 8038D9C4-8038D9E4 01A024 0020+00 0/1 0/0 0/0 .rodata          m__21daAlinkHIO_cutNmSR_c0 */
#pragma push
#pragma force_active on
SECTION_RODATA u8 const daAlinkHIO_cutNmSR_c0::m[32] = {
    0x00, 0x1B, 0x00, 0x00, 0x3F, 0x8C, 0xCC, 0xCD, 0x40, 0x80, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00,
    0x41, 0x88, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x41, 0x20, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x8038D9C4, &daAlinkHIO_cutNmSR_c0::m);
#pragma pop

/* 8038D9E4-8038DA10 01A044 002C+00 0/1 0/0 0/0 .rodata          m__20daAlinkHIO_cutFnL_c0 */
#pragma push
#pragma force_active on
SECTION_RODATA u8 const daAlinkHIO_cutFnL_c0::m[44] = {
    0x00, 0x1D, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00,
    0x00, 0x41, 0xD8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00, 0x40, 0xE0,
    0x00, 0x00, 0x41, 0x40, 0x00, 0x00, 0x41, 0xA8, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x8038D9E4, &daAlinkHIO_cutFnL_c0::m);
#pragma pop

/* 8038DA10-8038DA3C 01A070 002C+00 0/1 0/0 0/0 .rodata          m__20daAlinkHIO_cutFnV_c0 */
#pragma push
#pragma force_active on
SECTION_RODATA u8 const daAlinkHIO_cutFnV_c0::m[44] = {
    0x00, 0x21, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00,
    0x00, 0x41, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00, 0x40, 0xA0,
    0x00, 0x00, 0x41, 0x30, 0x00, 0x00, 0x41, 0x88, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x8038DA10, &daAlinkHIO_cutFnV_c0::m);
#pragma pop

/* 8038DA3C-8038DA68 01A09C 002C+00 0/1 0/0 0/0 .rodata          m__20daAlinkHIO_cutFnS_c0 */
#pragma push
#pragma force_active on
SECTION_RODATA u8 const daAlinkHIO_cutFnS_c0::m[44] = {
    0x00, 0x1F, 0x00, 0x00, 0x3F, 0x8C, 0xCC, 0xCD, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00,
    0x00, 0x41, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x41, 0x20, 0x00, 0x00, 0x41, 0x20,
    0x00, 0x00, 0x41, 0x88, 0x00, 0x00, 0x41, 0xB8, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x8038DA3C, &daAlinkHIO_cutFnS_c0::m);
#pragma pop

/* 8038DA68-8038DA94 01A0C8 002C+00 0/1 0/0 0/0 .rodata          m__21daAlinkHIO_cutFnSl_c0 */
#pragma push
#pragma force_active on
SECTION_RODATA u8 const daAlinkHIO_cutFnSl_c0::m[44] = {
    0x00, 0x21, 0x00, 0x00, 0x3F, 0x66, 0x66, 0x66, 0x40, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00,
    0x00, 0x41, 0xC8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x41, 0x70, 0x00, 0x00, 0x40, 0xC0,
    0x00, 0x00, 0x41, 0x50, 0x00, 0x00, 0x41, 0xA8, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x8038DA68, &daAlinkHIO_cutFnSl_c0::m);
#pragma pop

/* 8038DA94-8038DAC0 01A0F4 002C+00 0/1 0/0 0/0 .rodata          m__21daAlinkHIO_cutFnSm_c0 */
#pragma push
#pragma force_active on
SECTION_RODATA u8 const daAlinkHIO_cutFnSm_c0::m[44] = {
    0x00, 0x1F, 0x00, 0x00, 0x3F, 0x66, 0x66, 0x66, 0x40, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00,
    0x00, 0x41, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x40, 0xA0, 0x00, 0x00, 0x41, 0x20,
    0x00, 0x00, 0x41, 0x88, 0x00, 0x00, 0x41, 0xC0, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x8038DA94, &daAlinkHIO_cutFnSm_c0::m);
#pragma pop

/* 8038DAC0-8038DAEC 01A120 002C+00 0/1 0/0 0/0 .rodata          m__20daAlinkHIO_cutFnR_c0 */
#pragma push
#pragma force_active on
SECTION_RODATA u8 const daAlinkHIO_cutFnR_c0::m[44] = {
    0x00, 0x22, 0x00, 0x00, 0x3F, 0x8C, 0xCC, 0xCD, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00,
    0x00, 0x41, 0xC8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00, 0x41, 0x00,
    0x00, 0x00, 0x41, 0x60, 0x00, 0x00, 0x41, 0x88, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x8038DAC0, &daAlinkHIO_cutFnR_c0::m);
#pragma pop

/* 8038DAEC-8038DB40 01A14C 0054+00 3/4 0/0 0/0 .rodata          m__21daAlinkHIO_cutFnJU_c0 */
SECTION_RODATA u8 const daAlinkHIO_cutFnJU_c0::m[84] = {
    0x00, 0x13, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00, 0x40, 0x00,
    0x00, 0x00, 0x41, 0xA0, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x3F, 0x8C, 0xCC, 0xCD,
    0x40, 0x00, 0x00, 0x00, 0x40, 0x80, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0x42, 0x04, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
    0x41, 0x60, 0x00, 0x00, 0x40, 0xC0, 0x00, 0x00, 0x40, 0xC0, 0x00, 0x00, 0x43, 0x48,
    0x00, 0x00, 0x41, 0x20, 0x00, 0x00, 0x43, 0x16, 0x00, 0x00, 0x42, 0xA0, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x8038DAEC, &daAlinkHIO_cutFnJU_c0::m);

/* 8038DB40-8038DB84 01A1A0 0044+00 4/4 0/0 0/0 .rodata          m__21daAlinkHIO_cutJump_c0 */
daAlinkHIO_cutJump_c1 const daAlinkHIO_cutJump_c0::m = {
    {17, 1.1f, 0.0f, 2.0f, 18.0f},
    {29, 1.0f, 2.0f, 0.0f, 9.0f},
    25.0f,
    27.0f,
    15.0f,
    13.0f,
    13.0f,
    1.0f,
    3.0f,
};

/* 8038DB84-8038DC1C 01A1E4 0098+00 5/6 0/0 0/0 .rodata          m__21daAlinkHIO_cutTurn_c0 */
SECTION_RODATA u8 const daAlinkHIO_cutTurn_c0::m[152] = {
    0x00, 0x2F, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00,
    0x41, 0xE0, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x3F, 0x0C, 0xCC, 0xCD, 0x00, 0x00, 0x00, 0x00,
    0x40, 0x40, 0x00, 0x00, 0x41, 0x20, 0x00, 0x00, 0x00, 0x2A, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00,
    0x40, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x41, 0xD8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x40, 0xE0, 0x00, 0x00, 0x40, 0xC0, 0x00, 0x00, 0x41, 0xB0, 0x00, 0x00, 0x3F, 0x19, 0x99, 0x9A,
    0x40, 0x40, 0x00, 0x00, 0x3F, 0x19, 0x99, 0x9A, 0x40, 0x40, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00,
    0x3F, 0x99, 0x99, 0x9A, 0x3F, 0x80, 0x00, 0x00, 0x41, 0x20, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00,
    0x43, 0x82, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00, 0x40, 0xE0, 0x00, 0x00, 0x41, 0xC0, 0x00, 0x00,
    0x40, 0xA0, 0x00, 0x00, 0x41, 0xA0, 0x00, 0x00, 0x43, 0xC8, 0x00, 0x00, 0x42, 0x0C, 0x00, 0x00,
    0x43, 0xC8, 0x00, 0x00, 0x42, 0x0C, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x8038DB84, &daAlinkHIO_cutTurn_c0::m);

/* 8038DC1C-8038DC3C 01A27C 0020+00 0/1 0/0 0/0 .rodata          m__21daAlinkHIO_hoCutLA_c0 */
#pragma push
#pragma force_active on
SECTION_RODATA u8 const daAlinkHIO_hoCutLA_c0::m[32] = {
    0x00, 0x15, 0x00, 0x00, 0x3F, 0x66, 0x66, 0x66, 0x3F, 0x80, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
    0x41, 0x60, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0xC0, 0x00, 0x00, 0x40, 0xC0, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x8038DC1C, &daAlinkHIO_hoCutLA_c0::m);
#pragma pop

/* 8038DC3C-8038DC5C 01A29C 0020+00 0/1 0/0 0/0 .rodata          m__21daAlinkHIO_hoCutLB_c0 */
#pragma push
#pragma force_active on
SECTION_RODATA u8 const daAlinkHIO_hoCutLB_c0::m[32] = {
    0x00, 0x18, 0x00, 0x00, 0x3F, 0x66, 0x66, 0x66, 0x40, 0x80, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
    0x41, 0x80, 0x00, 0x00, 0x40, 0xE0, 0x00, 0x00, 0x41, 0x50, 0x00, 0x00, 0x40, 0xC0, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x8038DC3C, &daAlinkHIO_hoCutLB_c0::m);
#pragma pop

/* 8038DC5C-8038DC7C 01A2BC 0020+00 0/1 0/0 0/0 .rodata          m__21daAlinkHIO_hoCutRA_c0 */
#pragma push
#pragma force_active on
SECTION_RODATA u8 const daAlinkHIO_hoCutRA_c0::m[32] = {
    0x00, 0x18, 0x00, 0x00, 0x3F, 0x73, 0x33, 0x33, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
    0x41, 0x50, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0xC0, 0x00, 0x00, 0x40, 0xC0, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x8038DC5C, &daAlinkHIO_hoCutRA_c0::m);
#pragma pop

/* 8038DC7C-8038DC9C 01A2DC 0020+00 0/1 0/0 0/0 .rodata          m__21daAlinkHIO_hoCutRB_c0 */
#pragma push
#pragma force_active on
SECTION_RODATA u8 const daAlinkHIO_hoCutRB_c0::m[32] = {
    0x00, 0x0B, 0x00, 0x00, 0x3F, 0x66, 0x66, 0x66, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
    0x41, 0x20, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x41, 0x30, 0x00, 0x00, 0x40, 0xC0, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x8038DC7C, &daAlinkHIO_hoCutRB_c0::m);
#pragma pop

/* 8038DC9C-8038DCF0 01A2FC 0054+00 3/3 0/0 0/0 .rodata          m__25daAlinkHIO_hoCutCharge_c0 */
SECTION_RODATA u8 const daAlinkHIO_hoCutCharge_c0::m[84] = {
    0x00, 0x06, 0x00, 0x00, 0x3E, 0xE6, 0x66, 0x66, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40,
    0x00, 0x00, 0x40, 0xE0, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00,
    0x40, 0x40, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x41, 0xB0, 0x00, 0x00, 0x00, 0x31,
    0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
    0x41, 0xD8, 0x00, 0x00, 0x00, 0x04, 0x00, 0x05, 0x41, 0x00, 0x00, 0x00, 0x41, 0x70,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0xC8, 0x00, 0x00, 0x43, 0x96, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x8038DC9C, &daAlinkHIO_hoCutCharge_c0::m);

/* 8038DCF0-8038DD0C 01A350 001C+00 0/3 0/0 0/0 .rodata          m__20daAlinkHIO_cutDaL_c0 */
#pragma push
#pragma force_active on
SECTION_RODATA u8 const daAlinkHIO_cutDaL_c0::m[28] = {
    0x00, 0x0C, 0x00, 0x00, 0x3F, 0x4C, 0xCC, 0xCD, 0x3F, 0x80, 0x00, 0x00, 0x40, 0x40,
    0x00, 0x00, 0x41, 0x20, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0xC0, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x8038DCF0, &daAlinkHIO_cutDaL_c0::m);
#pragma pop

/* 8038DD0C-8038DD28 01A36C 001C+00 0/3 0/0 0/0 .rodata          m__20daAlinkHIO_cutDaR_c0 */
#pragma push
#pragma force_active on
SECTION_RODATA u8 const daAlinkHIO_cutDaR_c0::m[28] = {
    0x00, 0x0E, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0xA0,
    0x00, 0x00, 0x41, 0x30, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0xC0, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x8038DD0C, &daAlinkHIO_cutDaR_c0::m);
#pragma pop

/* 8038DD28-8038DD44 01A388 001C+00 0/3 0/0 0/0 .rodata          m__25daAlinkHIO_cutDaCharge_c0 */
#pragma push
#pragma force_active on
SECTION_RODATA u8 const daAlinkHIO_cutDaCharge_c0::m[28] = {
    0x00, 0x0E, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40,
    0x00, 0x00, 0x41, 0x70, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x8038DD28, &daAlinkHIO_cutDaCharge_c0::m);
#pragma pop

/* 8038DD44-8038DDB8 01A3A4 0074+00 5/5 0/0 0/0 .rodata          m__21daAlinkHIO_cutDown_c0 */
SECTION_RODATA u8 const daAlinkHIO_cutDown_c0::m[116] = {
    0x00, 0x08, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00,
    0x00, 0x41, 0x10, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x41, 0x10, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x3F,
    0xA6, 0x66, 0x66, 0x3F, 0x80, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x41, 0x88, 0x00, 0x00,
    0x00, 0x49, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00,
    0x00, 0x42, 0x8C, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x3F, 0x59, 0x99, 0x9A, 0x00, 0x00,
    0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x41, 0x40, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x06, 0x42,
    0x20, 0x00, 0x00, 0x41, 0xA0, 0x00, 0x00, 0x41, 0x20, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x8038DD44, &daAlinkHIO_cutDown_c0::m);

/* 8038DDB8-8038DE18 01A418 0060+00 4/4 0/0 0/0 .rodata          m__21daAlinkHIO_cutHead_c0 */
SECTION_RODATA u8 const daAlinkHIO_cutHead_c0::m[96] = {
    0x00, 0x08, 0x00, 0x00, 0x3F, 0x66, 0x66, 0x66, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00,
    0x41, 0x10, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x40, 0x00, 0x00, 0x00, 0x41, 0xB0, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x3F, 0x99, 0x99, 0x9A,
    0x3F, 0x80, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x41, 0x20, 0x00, 0x00, 0xC0, 0x80, 0x00, 0x00,
    0x43, 0x96, 0x00, 0x00, 0x43, 0xC8, 0x00, 0x00, 0x41, 0x20, 0x00, 0x00, 0x41, 0x40, 0x00, 0x00,
    0x40, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0x42, 0x70, 0x00, 0x00, 0x3F, 0xCC, 0xCC, 0xCD,
};
COMPILER_STRIP_GATE(0x8038DDB8, &daAlinkHIO_cutHead_c0::m);

/* 8038DE18-8038DE8C 01A478 0074+00 5/5 0/0 0/0 .rodata          m__26daAlinkHIO_cutLargeJump_c0 */
daAlinkHIO_cutLargeJump_c1 const daAlinkHIO_cutLargeJump_c0::m = {
    {29, 1.3f, 0.0f, 3.0f, 30.0f},
    {6, 1.0f, 0.0f, 3.0f, 7.0f},
    {16, 1.0f, 0.0f, 2.0f, 17.0f},
    {35, 1.25f, 0.0f, 0.0f, 22.0f},
    20.0f,
    33.0f,
    2.0f,
    6.0f,
    13.0f,
    0.0f,
    10.0f,
    250.0f,
    5.0f,
};

/* 8038DE8C-8038DF28 01A4EC 009C+00 21/30 0/0 0/0 .rodata          m__17daAlinkHIO_cut_c0 */
daAlinkHIO_cut_c1 const daAlinkHIO_cut_c0::m = {
    {18, -1.100f, 0.0f, 3.0f, -1.0f},
    {22, 0.9f, 0.0f, 3.0f, 23.0f},
    {45, 1.0f, 0.0f, 3.0f, 15.0f},
    {47, 1.0f, 0.0f, 5.0f, 27.0f},
    0,
    1,
    15,
    8,
    10,
    90,
    75,
    4000,
    -4000,
    30,
    12.0f,
    1.250f,
    1.0f,
    1.0f,
    1.6f,
    45.0f,
    1.65f,
    65.0f,
    1.21f,
    35.0f,
    2.3f,
    2.2f,
    65.0f,
    0.0f,
};

/* 8038DF28-8038DF4C 01A588 0024+00 1/1 0/0 0/0 .rodata          m__21daAlinkHIO_gAtPush_c0 */
SECTION_RODATA u8 const daAlinkHIO_gAtPush_c0::m[36] = {
    0x00, 0x0E, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00,
    0x40, 0xA0, 0x00, 0x00, 0x41, 0x90, 0x00, 0x00, 0x41, 0x60, 0x00, 0x00,
    0x3F, 0x80, 0x00, 0x00, 0x41, 0x40, 0x00, 0x00, 0x41, 0x60, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x8038DF28, &daAlinkHIO_gAtPush_c0::m);

/* 8038DF4C-8038DF70 01A5AC 0024+00 0/0 0/0 0/0 .rodata          m__21daAlinkHIO_gAtKick_c0 */
#pragma push
#pragma force_active on
SECTION_RODATA u8 const daAlinkHIO_gAtKick_c0::m[36] = {
    0x00, 0x15, 0x00, 0x00, 0x3F, 0x99, 0x99, 0x9A, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x41, 0xB0, 0x00, 0x00, 0x41, 0x20, 0x00, 0x00,
    0x40, 0xC0, 0x00, 0x00, 0x41, 0x30, 0x00, 0x00, 0x41, 0x90, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x8038DF4C, &daAlinkHIO_gAtKick_c0::m);
#pragma pop

/* 8038DF70-8038DF9C 01A5D0 002C+00 4/4 0/0 0/0 .rodata          m__22daAlinkHIO_turnMove_c0 */
daAlinkHIO_turnMove_c1 const daAlinkHIO_turnMove_c0::m = {
    {27, 1.0f, 0.0f, 3.0f, 22.0f}, 5, 2500, 200, 1000, 1.1f, 19.0f, 1.5f, 25.0f,
};

/* 8038DF9C-8038E01C 01A5FC 0080+00 6/7 0/0 0/0 .rodata          m__19daAlinkHIO_guard_c0 */
SECTION_RODATA u8 const daAlinkHIO_guard_c0::m[128] = {
    0x00, 0x0B, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x41, 0x40, 0x00, 0x00, 0x00, 0x0B, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x41, 0x40, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x41, 0xA0, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00,
    0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x41, 0xE0, 0x00, 0x00,
    0x1F, 0x40, 0x13, 0x88, 0x00, 0x00, 0x1F, 0x40, 0x0F, 0xA0, 0x00, 0x00, 0x40, 0x20, 0x00, 0x00,
    0x40, 0x40, 0x00, 0x00, 0x41, 0x60, 0x00, 0x00, 0x41, 0xA0, 0x00, 0x00, 0x41, 0xD0, 0x00, 0x00,
    0x42, 0xA0, 0x00, 0x00, 0x42, 0x70, 0x00, 0x00, 0x42, 0x20, 0x00, 0x00, 0x41, 0x90, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x8038DF9C, &daAlinkHIO_guard_c0::m);

/* 8038E01C-8038E068 01A67C 004C+00 8/9 0/0 0/0 .rodata          m__20daAlinkHIO_crouch_c0 */
SECTION_RODATA u8 const daAlinkHIO_crouch_c0::m[76] = {
    0x00, 0x09, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00,
    0x41, 0x20, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0xBF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x40, 0x40, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x05, 0x01, 0xF4, 0x00, 0x32, 0x00, 0x00,
    0x3F, 0x80, 0x00, 0x00, 0x40, 0x80, 0x00, 0x00, 0x40, 0x80, 0x00, 0x00, 0x40, 0x80, 0x00, 0x00,
    0x40, 0x00, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x8038E01C, &daAlinkHIO_crouch_c0::m);

/* 8038E068-8038E11C 01A6C8 00B4+00 26/32 0/0 0/0 .rodata          m__22daAlinkHIO_autoJump_c0 */
daAlinkHIO_autoJump_c1 const daAlinkHIO_autoJump_c0::m = {
    {6, 1.2f, 3.0f, 6.0f, 7.0f},
    {7, 0.9f, 1.0f, 0.0f, 5.0f},
    {4, 0.75f, 0.0f, 2.0f, 5.0f},
    {10, 0.6f, 0.0f, 2.0f, 11.0f},
    1,
    9158,
    12287,
    8,
    16384,
    10.0f,
    10.0f,
    1.3f,
    5.0f,
    10.0f,
    3.0f,
    -3.4f,
    -200.0f,
    26.0f,
    3.0f,
    4.0f,
    10.0f,
    1.0f,
    170.0f,
    100.0f,
    20.0f,
    30.0f,
    20.0f,
    -3.4f,
    14.0f,
    -5.0f,
    23.0f,
};

/* 8038E11C-8038E164 01A77C 0048+00 7/7 0/0 0/0 .rodata          m__23daAlinkHIO_smallJump_c0 */
SECTION_RODATA u8 const daAlinkHIO_smallJump_c0::m[72] = {
    0x00, 0x08, 0x00, 0x00, 0x3F, 0x19, 0x99, 0x9A, 0x40, 0x40, 0x00, 0x00, 0x40, 0x40, 0x00,
    0x00, 0x41, 0x10, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0xC0, 0x00, 0x00, 0x00, 0x1D, 0x00, 0x00, 0x3F,
    0x59, 0x99, 0x9A, 0x00, 0x00, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00, 0x40, 0xC0, 0x00, 0x00,
    0x40, 0xC0, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x40, 0xE0, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x8038E11C, &daAlinkHIO_smallJump_c0::m);

/* 8038E164-8038E1B8 01A7C4 0054+00 15/15 0/0 0/0 .rodata          m__23daAlinkHIO_wallCatch_c0 */
SECTION_RODATA u8 const daAlinkHIO_wallCatch_c0::m[84] = {
    0x00, 0x13, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40,
    0x00, 0x00, 0x41, 0x20, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0x00, 0x1D,
    0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00,
    0x41, 0xD0, 0x00, 0x00, 0x00, 0x0D, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x3F, 0x80,
    0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x41, 0x60, 0x00, 0x00, 0x40, 0x80, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x8038E164, &daAlinkHIO_wallCatch_c0::m);

/* 8038E1B8-8038E1E0 01A818 0028+00 4/4 0/0 0/0 .rodata          m__22daAlinkHIO_wallFall_c0 */
SECTION_RODATA u8 const daAlinkHIO_wallFall_c0::m[40] = {
    0x00, 0x16, 0x00, 0x00, 0x3F, 0x4C, 0xCC, 0xCD, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40,
    0x00, 0x00, 0x41, 0xB8, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x41, 0x50, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x8038E1B8, &daAlinkHIO_wallFall_c0::m);

/* 8038E1E0-8038E1F4 01A840 0014+00 2/2 0/0 0/0 .rodata          m__22daAlinkHIO_wallMove_c0 */
daAlinkHIO_wallMove_c1 const daAlinkHIO_wallMove_c0::m = {0.8f, 1.1f, 3.0f, 2.0f, 3.0f};

/* 8038E1F4-8038E210 01A854 001C+00 2/5 0/0 0/0 .rodata          m__22daAlinkHIO_wallHang_c0 */
SECTION_RODATA u8 const daAlinkHIO_wallHang_c0::m[28] = {
    0x00, 0x02, 0x00, 0x03, 0x42, 0x48, 0x00, 0x00, 0x42, 0xC8, 0x00, 0x00, 0x43, 0x16,
    0x00, 0x00, 0x43, 0x48, 0x00, 0x00, 0x43, 0x7A, 0x00, 0x00, 0x43, 0x48, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x8038E1F4, &daAlinkHIO_wallHang_c0::m);

/* 8038E210-8038E24C 01A870 003C+00 7/7 0/0 0/0 .rodata          m__22daAlinkHIO_pushpull_c0 */
SECTION_RODATA u8 const daAlinkHIO_pushpull_c0::m[60] = {
    0x00, 0x00, 0x00, 0x78, 0x00, 0x07, 0x00, 0x3C, 0x00, 0x50, 0x00, 0x28, 0x00, 0x02, 0x00,
    0x40, 0x3F, 0x80, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x40, 0x40,
    0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x3E,
    0x80, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x3E, 0x19, 0x99, 0x9A, 0x3F, 0x40, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x8038E210, &daAlinkHIO_pushpull_c0::m);

/* 8038E24C-8038E2B0 01A8AC 0064+00 1/3 0/0 0/0 .rodata          m__23daAlinkHIO_damNormal_c0 */
SECTION_RODATA u8 const daAlinkHIO_damNormal_c0::m[100] = {
    0x00, 0x16, 0x00, 0x00, 0x40, 0x13, 0x33, 0x33, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00,
    0x00, 0x41, 0xA0, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x40, 0x13, 0x33, 0x33, 0x00, 0x00,
    0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x41, 0x88, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x40,
    0x13, 0x33, 0x33, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x41, 0x88, 0x00, 0x00,
    0x00, 0x13, 0x00, 0x00, 0x40, 0x13, 0x33, 0x33, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00,
    0x00, 0x41, 0x88, 0x00, 0x00, 0x07, 0xD0, 0x13, 0x88, 0x41, 0x20, 0x00, 0x00, 0x3C, 0xA3,
    0xD7, 0x0A, 0x3F, 0x80, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x8038E24C, &daAlinkHIO_damNormal_c0::m);

/* 8038E2B0-8038E36C 01A910 00BC+00 2/4 0/0 0/0 .rodata          m__22daAlinkHIO_damLarge_c0 */
SECTION_RODATA u8 const daAlinkHIO_damLarge_c0::m[188] = {
    0x00, 0x31, 0x00, 0x00, 0x3F, 0x4C, 0xCC, 0xCD, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00,
    0x42, 0x20, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x40, 0x40, 0x00, 0x00, 0x42, 0x48, 0x00, 0x00, 0x00, 0x27, 0x00, 0x00, 0x3F, 0x4C, 0xCC, 0xCD,
    0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x42, 0x04, 0x00, 0x00, 0x00, 0x27, 0x00, 0x00,
    0x3F, 0x4C, 0xCC, 0xCD, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x42, 0x04, 0x00, 0x00,
    0x00, 0x02, 0x00, 0x00, 0x3F, 0x4C, 0xCC, 0xCD, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00,
    0x42, 0x48, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x3F, 0x80, 0x00, 0x00, 0x42, 0x20, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x42, 0x20, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00,
    0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x42, 0x20, 0x00, 0x00,
    0x05, 0x14, 0x00, 0x00, 0xC0, 0xA0, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x41, 0xA0, 0x00, 0x00,
    0x41, 0xF0, 0x00, 0x00, 0x41, 0x70, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x8038E2B0, &daAlinkHIO_damLarge_c0::m);

/* 8038E36C-8038E428 01A9CC 00BC+00 1/3 0/0 0/0 .rodata          m__21daAlinkHIO_damHuge_c0 */
SECTION_RODATA u8 const daAlinkHIO_damHuge_c0::m[188] = {
    0x00, 0x31, 0x00, 0x00, 0x3F, 0x4C, 0xCC, 0xCD, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00,
    0x42, 0x20, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x3F, 0x4C, 0xCC, 0xCD, 0x00, 0x00, 0x00, 0x00,
    0x40, 0x40, 0x00, 0x00, 0x42, 0x48, 0x00, 0x00, 0x00, 0x27, 0x00, 0x00, 0x3F, 0x4C, 0xCC, 0xCD,
    0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x42, 0x04, 0x00, 0x00, 0x00, 0x27, 0x00, 0x00,
    0x3F, 0x4C, 0xCC, 0xCD, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x42, 0x04, 0x00, 0x00,
    0x00, 0x02, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00,
    0x42, 0x48, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x3F, 0x80, 0x00, 0x00, 0x42, 0x20, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x42, 0x20, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00,
    0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x42, 0x20, 0x00, 0x00,
    0x07, 0xD0, 0x00, 0x00, 0xC0, 0xF0, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x42, 0xA0, 0x00, 0x00,
    0x42, 0x20, 0x00, 0x00, 0x41, 0x70, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x8038E36C, &daAlinkHIO_damHuge_c0::m);

/* 8038E428-8038E454 01AA88 002C+00 1/1 0/0 0/0 .rodata          m__22daAlinkHIO_damHorse_c0 */
SECTION_RODATA u8 const daAlinkHIO_damHorse_c0::m[44] = {
    0x00, 0x09, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00,
    0x00, 0x41, 0x20, 0x00, 0x00, 0x00, 0x0B, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x41, 0x40, 0x00, 0x00, 0x09, 0xC4, 0x13, 0x88,
};
COMPILER_STRIP_GATE(0x8038E428, &daAlinkHIO_damHorse_c0::m);

/* 8038E454-8038E49C 01AAB4 0048+00 9/9 0/0 0/0 .rodata          m__21daAlinkHIO_damFall_c0 */
SECTION_RODATA u8 const daAlinkHIO_damFall_c0::m[72] = {
    0x00, 0x0B, 0x00, 0x00, 0x3F, 0x99, 0x99, 0x9A, 0x40, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00,
    0x00, 0x41, 0x40, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x3F, 0x4C, 0xCC, 0xCD, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x40, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x19, 0x40,
    0x80, 0x00, 0x00, 0x41, 0xF0, 0x00, 0x00, 0x41, 0xA0, 0x00, 0x00, 0x42, 0x70, 0x00, 0x00,
    0x40, 0x80, 0x00, 0x00, 0x41, 0x20, 0x00, 0x00, 0x41, 0x70, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x8038E454, &daAlinkHIO_damFall_c0::m);

/* 8038E49C-8038E4C0 01AAFC 0024+00 6/7 0/0 0/0 .rodata          m__23daAlinkHIO_damCaught_c0 */
SECTION_RODATA u8 const daAlinkHIO_damCaught_c0::m[36] = {
    0x00, 0x3B, 0x00, 0x00, 0x3F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x40, 0x40, 0x00, 0x00, 0x42, 0x0C, 0x00, 0x00, 0x01, 0x2C, 0x00, 0x05,
    0x3F, 0x33, 0x33, 0x33, 0x40, 0x40, 0x00, 0x00, 0x3F, 0xA6, 0x66, 0x66,
};
COMPILER_STRIP_GATE(0x8038E49C, &daAlinkHIO_damCaught_c0::m);

/* 8038E4C0-8038E54C 01AB20 008C+00 1/2 0/0 0/0 .rodata          m__21daAlinkHIO_damSwim_c0 */
SECTION_RODATA u8 const daAlinkHIO_damSwim_c0::m[140] = {
    0x00, 0x16, 0x00, 0x00, 0x3F, 0x99, 0x99, 0x9A, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00,
    0x41, 0x90, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x40, 0x40, 0x00, 0x00, 0x41, 0x70, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x3F, 0x99, 0x99, 0x9A,
    0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x41, 0x70, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00,
    0x3F, 0x99, 0x99, 0x9A, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x41, 0x70, 0x00, 0x00,
    0x00, 0x0A, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00,
    0x41, 0x30, 0x00, 0x00, 0x00, 0x0B, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x40, 0x40, 0x00, 0x00, 0x41, 0x40, 0x00, 0x00, 0x05, 0xDC, 0x0F, 0xA0, 0x41, 0x00, 0x00, 0x00,
    0x3C, 0xA3, 0xD7, 0x0A, 0x3E, 0x80, 0x00, 0x00, 0x41, 0x70, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x8038E4C0, &daAlinkHIO_damSwim_c0::m);

/* 8038E54C-8038E5A4 01ABAC 0058+00 10/12 0/0 0/0 .rodata          m__20daAlinkHIO_damage_c0 */
SECTION_RODATA u8 const daAlinkHIO_damage_c0::m[88] = {
    0x00, 0x0E, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00,
    0x00, 0x41, 0x70, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x41, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x00,
    0x1E, 0x00, 0x0A, 0x00, 0x03, 0x00, 0x07, 0x00, 0x0A, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x00,
    0x1E, 0x00, 0x28, 0x00, 0x00, 0x3F, 0x33, 0x33, 0x33, 0x42, 0x0C, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x8038E54C, &daAlinkHIO_damage_c0::m);

/* 8038E5A4-8038E610 01AC04 006C+00 7/8 0/0 0/0 .rodata          m__19daAlinkHIO_horse_c0 */
daAlinkHIO_horse_c1 const daAlinkHIO_horse_c0::m = {
    {18, 1.2f, 0.0f, 5.0f, 19.0f},
    {22, 1.2f, 0.0f, 3.0f, 23.0f},
    {43, 1.45f, 3.0f, 3.0f, 44.0f},
    {18, 1.2f, 0.0f, 3.0f, 23.0f},
    100,
    32767,
    30,
    25,
    5500,
    -13000,
    1.2f,
    8.0f,
    8.0f,
    5.0f,
};

/* 800A07D8-800A0868 09B118 0090+00 2/2 0/0 0/0 .text checkAttentionPosAngle__9daAlink_cFP4cXyz */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkAttentionPosAngle(cXyz* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkAttentionPosAngle__9daAlink_cFP4cXyz.s"
}
#pragma pop

/* 800A0868-800A093C 09B1A8 00D4+00 1/1 0/0 0/0 .text
 * checkActorPosAngle__9daAlink_cFP10fopAc_ac_cPP4cXyz          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkActorPosAngle(fopAc_ac_c* param_0, cXyz** param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/checkActorPosAngle__9daAlink_cFP10fopAc_ac_cPP4cXyz.s"
}
#pragma pop

/* 800A093C-800A142C 09B27C 0AF0+00 1/1 0/0 0/0 .text            getNeckAimPos__9daAlink_cFP4cXyzPii
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getNeckAimPos(cXyz* param_0, int* param_1, int param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/getNeckAimPos__9daAlink_cFP4cXyzPii.s"
}
#pragma pop

/* ############################################################################################## */
/* 8038E610-8038E658 01AC70 0048+00 11/11 0/0 0/0 .rodata          m__19daAlinkHIO_canoe_c0 */
SECTION_RODATA u8 const daAlinkHIO_canoe_c0::m[72] = {
    0x00, 0x17, 0x00, 0x00, 0x3F, 0xA6, 0x66, 0x66, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00,
    0x00, 0x41, 0xC0, 0x00, 0x00, 0x00, 0x96, 0x01, 0x68, 0x3F, 0x80, 0x00, 0x00, 0x3F, 0xC0,
    0x00, 0x00, 0x41, 0x10, 0x00, 0x00, 0x41, 0x70, 0x00, 0x00, 0x3E, 0x4C, 0xCC, 0xCD, 0x3F,
    0xC0, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0xC0, 0x00, 0x00, 0x41, 0x20, 0x00, 0x00,
    0x42, 0x20, 0x00, 0x00, 0x41, 0xF0, 0x00, 0x00, 0x3E, 0x4C, 0xCC, 0xCD,
};
COMPILER_STRIP_GATE(0x8038E610, &daAlinkHIO_canoe_c0::m);

/* 8038E658-8038E6C8 01ACB8 0070+00 9/9 0/0 0/0 .rodata          m__17daAlinkHIO_bow_c0 */
daAlinkHIO_bow_c1 const daAlinkHIO_bow_c0::m = {
    {9, 1.0f, 0.0f, 3.0f, 5.0f},
    {6, 1.0f, 0.0f, 3.0f, 7.0f},
    10,
    30,
    70,
    5.0f,
    300.0f,
    5000.0f,
    800.0f,
    9000.0f,
    50.0f,
    200.0f,
    3000.0f,
    230.0f,
    3500.0f,
    600.0f,
    9000.0f,
    1000.0f,
    4000.0f,
    250.0f,
    800.0f,
};

/* 8038E6C8-8038E714 01AD28 004C+00 22/23 0/0 0/0 .rodata          m__18daAlinkHIO_boom_c0 */
daAlinkHIO_boom_c1 const daAlinkHIO_boom_c0::m = {
    {21, 0.9f, 3.0f, 2.0f, 22.0f},
    {25, 1.0f, 3.0f, 1.0f, 10.0f},
    40,
    0,
    1.0f,
    3.0f,
    60.0f,
    60.0f,
    2000.0f,
    3000.0f,
    3000.0f,
    40.0f,
};

/* 8038E714-8038E760 01AD74 004C+00 14/14 0/0 0/0 .rodata          m__18daAlinkHIO_bomb_c0 */
daAlinkHIO_bomb_c1 const daAlinkHIO_bomb_c0::m = {
    160,  50,    50,    -4.2f, -100.0f, 0.350f, 2.0f,  20.0f, 1.3f,  225.0f,
    0.0f, -0.8f, -7.0f, 26.0f, 33.0f,   10.0f,  15.0f, 40.0f, 15.0f, 300.0f};

/* 8038E760-8038E77C 01ADC0 001C+00 0/1 0/0 0/0 .rodata          m__21daAlinkHIO_huLight_c0 */
#pragma push
#pragma force_active on
SECTION_RODATA u8 const daAlinkHIO_huLight_c0::m[28] = {
    0x00, 0x03, 0x00, 0x00, 0x00, 0xB5, 0x00, 0x70, 0x00, 0x28, 0xFF, 0xBA, 0x3F, 0x80,
    0x00, 0x00, 0x42, 0x48, 0x00, 0x00, 0x43, 0xAF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x8038E760, &daAlinkHIO_huLight_c0::m);
#pragma pop

/* 8038E77C-8038E7CC 01ADDC 0050+00 7/8 0/0 0/0 .rodata          m__23daAlinkHIO_kandelaar_c0 */
SECTION_RODATA u8 const daAlinkHIO_kandelaar_c0::m[80] = {
    0x00, 0x1E, 0x00, 0x00, 0x3F, 0x8C, 0xCC, 0xCD, 0x40, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00,
    0x41, 0x88, 0x00, 0x00, 0x00, 0x0B, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x40, 0x40, 0x00, 0x00, 0x41, 0x40, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x41, 0x90, 0x00, 0x00, 0x00, 0x50, 0x00, 0x28,
    0x00, 0x14, 0x00, 0x28, 0x00, 0x1E, 0x00, 0x0A, 0x00, 0x03, 0x00, 0xC8, 0x3F, 0x00, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x8038E77C, &daAlinkHIO_kandelaar_c0::m);

/* 8038E7CC-8038E7F4 01AE2C 0028+00 2/2 0/0 0/0 .rodata          m__21daAlinkHIO_fmChain_c0 */
SECTION_RODATA u8 const daAlinkHIO_fmChain_c0::m[40] = {
    0x00, 0x14, 0x00, 0x00, 0x3F, 0x99, 0x99, 0x9A, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40,
    0x00, 0x00, 0x41, 0x80, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0xBF, 0x8C, 0xCC, 0xCD,
    0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x8038E7CC, &daAlinkHIO_fmChain_c0::m);

/* 8038E7F4-8038E840 01AE54 004C+00 17/21 0/0 0/0 .rodata          m__24daAlinkHIO_magneBoots_c0 */
daAlinkHIO_magneBoots_c1 const daAlinkHIO_magneBoots_c0::m = {
    {29, 1.1f, 0.0f, 3.0f, 23.0f},
    0.4f,
    1.0f,
    1.8f,
    0.7f,
    0.75f,
    0.45,
    0.6f,
    50.0f,
    10.0f,
    0.35f,
    0.3f,
    0.7f,
    0.8f,
    0.7f,
};

/* 8038E840-8038E870 01AEA0 0030+00 6/6 0/0 0/0 .rodata          m__20daAlinkHIO_pickUp_c0 */
SECTION_RODATA u8 const daAlinkHIO_pickUp_c0::m[48] = {
    0x00, 0x12, 0x00, 0x00, 0x3F, 0x66, 0x66, 0x66, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
    0x41, 0x50, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0xBF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x3F, 0x80, 0x00, 0x00, 0x40, 0x80, 0x00, 0x00, 0x41, 0xF0, 0x00, 0x00, 0x41, 0xF0, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x8038E840, &daAlinkHIO_pickUp_c0::m);

/* 8038E870-8038E90C 01AED0 009C+00 16/17 0/0 0/0 .rodata          m__19daAlinkHIO_board_c0 */
daAlinkHIO_board_c1 const daAlinkHIO_board_c0::m = {
    {9, 2.5f, 0.0f, 3.0f, 10.0f},
    {14, 0.7f, 0.0f, 8.0f, 15.0f},
    {24, 1.6f, 5.0f, 5.0f, 25.0f},
    {24, 0.8f, 0.0f, 3.0f, 25.0f},
    70.0f,
    4.0f,
    22.0f,
    35.0f,
    1.0f,
    4.0f,
    1.0f,
    3.0f,
    2.0f,
    30.0f,
    0.9f,
    55.0f,
    4.0f,
    3.0f,
    1.0f,
    20.0f,
    24.0f,
    35.0f,
    50.0f,
};

/* 8038E90C-8038E9C0 01AF6C 00B4+00 12/12 0/0 0/0 .rodata          m__20daAlinkHIO_bottle_c0 */
daAlinkHIO_bottle_c1 const daAlinkHIO_bottle_c0::m = {
    {56, 1.15f, 0.0f, 3.0f, 57.0f}, {39, 1.2f, 0.0f, 3.0f, 40.0f}, {44, 1.2f, 0.0f, 3.0f, 50.0f},
    {54, 1.1f, 0.0f, 3.0f, 55.0f},  {24, 1.0f, 0.0f, 3.0f, 25.0f}, {12, 0.6f, 1.0f, 3.0f, 10.0f},
    {47, 1.0f, 0.0f, 3.0f, 48.0f},  {86, 1.0f, 0.0f, 3.0f, 87.0f}, {29, 1.2f, 0.0f, 3.0f, 30.0f},
};

/* 8038E9C0-8038EA30 01B020 0070+00 15/16 0/0 0/0 .rodata          m__22daAlinkHIO_hookshot_c0 */
daAlinkHIO_hookshot_c1 const daAlinkHIO_hookshot_c0::m = {
    {12, 1.0f, 0.0f, 0.0f, 13.0f},
    {39, 1.0f, 0.0f, 1.0f, 11.0f},
    {28, 1.0f, 0.0f, 2.0f, 7.0f},
    0.0f,
    1.0f,
    3.0f,
    2000.0f,
    100.0f,
    150.0f,
    60.0f,
    5.0f,
    13.0f,
    3000.0f,
    150.0f,
    225.0f,
    90.0f,
};

/* 8038EA30-8038EA70 01B090 0040+00 10/10 0/0 0/0 .rodata          m__21daAlinkHIO_spinner_c0 */
daAlinkHIO_spinner_c1 const daAlinkHIO_spinner_c0::m = {
    {21, 0.8f, 0.0f, 3.0f, 13.0f},
    30,
    15,
    360,
    360,
    150,
    -3.7f,
    -50.0f,
    0.9f,
    26.0f,
    0.5f,
    0.1f,
    0.01f,
    60.0f,
};

/* 8038EA70-8038EAFC 01B0D0 008C+00 10/12 0/0 0/0 .rodata          m__22daAlinkHIO_ironBall_c0 */
SECTION_RODATA u8 const daAlinkHIO_ironBall_c0::m[140] = {
    0x00, 0x13, 0x00, 0x00, 0x3F, 0x8C, 0xCC, 0xCD, 0x40, 0xA0, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
    0x41, 0x70, 0x00, 0x00, 0x00, 0x05, 0x00, 0x05, 0x3F, 0x80, 0x00, 0x00, 0x3F, 0xD9, 0x99, 0x9A,
    0x40, 0x40, 0x00, 0x00, 0x3F, 0xC0, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x3F, 0xCC, 0xCC, 0xCD,
    0x40, 0x40, 0x00, 0x00, 0x3F, 0xD9, 0x99, 0x9A, 0x40, 0x40, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00,
    0x40, 0x00, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x00, 0xC0, 0x40, 0x00, 0x00, 0x40, 0xE0, 0x00, 0x00,
    0x3F, 0x00, 0x00, 0x00, 0x41, 0xF0, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00, 0xBF, 0x00, 0x00, 0x00,
    0xC0, 0xB0, 0x00, 0x00, 0xBF, 0x00, 0x00, 0x00, 0xC3, 0x16, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00,
    0x42, 0x70, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00, 0xC0, 0x40, 0x00, 0x00, 0x42, 0xA0, 0x00, 0x00,
    0x3F, 0x80, 0x00, 0x00, 0x3F, 0xC0, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x8038EA70, &daAlinkHIO_ironBall_c0::m);

/* 8038EAFC-8038EB34 01B15C 0038+00 4/4 0/0 0/0 .rodata          m__21daAlinkHIO_copyRod_c0 */
daAlinkHIO_copyRod_c1 const daAlinkHIO_copyRod_c0::m = {
    19, 1.0f, 0.0f, 3.0f, 14.0f, 39, 1.0f, 0.0f, 3.0f, 30.0f, 80.0f, 1500.0f, 100.0f, 2000.0f,
};

/* 8038EB34-8038EB50 01B194 001C+00 0/0 0/0 0/0 .rodata          m__21daAlinkHIO_zwLight_c0 */
#pragma push
#pragma force_active on
daAlinkHIO_zwLight_c1 const daAlinkHIO_zwLight_c0::m = {
    771, 0, 182, 225, 243, -87, 1.0f, 70.75195f, 131.83594f, 0.0f,
};
COMPILER_STRIP_GATE(0x8038EB34, &daAlinkHIO_zwLight_c0::m);
#pragma pop

/* 8038EB50-8038EB8C 01B1B0 003C+00 3/3 0/0 0/0 .rodata          m__18daAlinkHIO_item_c0 */
daAlinkHIO_item_c1 const daAlinkHIO_item_c0::m = {
    {12, 1.0f, 0.0f, 3.0f, 13.0f},
    {14, 1.0f, 0.0f, 3.0f, 15.0f},
    15,
    10000,
    -13000,
    6000,
    -9000,
    1.3f,
    1.3f,
};

/* 8038EB8C-8038EBFC 01B1EC 0070+00 14/14 0/0 0/0 .rodata          m__20daAlinkHIO_ladder_c0 */
daAlinkHIO_ladder_c1 const daAlinkHIO_ladder_c0::m = {
    {13, 0.8f, 2.0f, 3.0f, 10.0f},
    {47, 1.25f, 0.0f, 2.0f, 48.0f},
    0.8f,
    5.0f,
    1.0f,
    0.0f,
    1.0f,
    5.0f,
    1.2f,
    0.0f,
    0.4f,
    0.9f,
    2.0f,
    18.0f,
    40.0f,
    0.8f,
    1.15f,
    0.9f,
    1.35f,
    80.0f,
};

/* 8038EBFC-8038EC48 01B25C 004C+00 11/11 0/0 0/0 .rodata          m__22daAlinkHIO_roofHang_c0 */
SECTION_RODATA u8 const daAlinkHIO_roofHang_c0::m[76] = {
    0x00, 0x22, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00,
    0x41, 0xA0, 0x00, 0x00, 0x00, 0x04, 0x00, 0x64, 0x09, 0x60, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00,
    0x40, 0xA0, 0x00, 0x00, 0x3F, 0x4C, 0xCC, 0xCD, 0x3F, 0x80, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00,
    0x41, 0x20, 0x00, 0x00, 0x41, 0x50, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x3F, 0x8C, 0xCC, 0xCD,
    0x40, 0x40, 0x00, 0x00, 0x3F, 0x66, 0x66, 0x66, 0x40, 0x40, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x8038EBFC, &daAlinkHIO_roofHang_c0::m);

/* 8038EC48-8038ED2C 01B2A8 00E4+00 10/11 0/0 0/0 .rodata          m__18daAlinkHIO_grab_c0 */
SECTION_RODATA u8 const daAlinkHIO_grab_c0::m[228] = {
    0x00, 0x04, 0x00, 0x00, 0x3F, 0x66, 0x66, 0x66, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00,
    0x40, 0xA0, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x3F, 0x26, 0x66, 0x66, 0x00, 0x00, 0x00, 0x00,
    0x40, 0x40, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0xBF, 0x4C, 0xCC, 0xCD,
    0x3F, 0x80, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x27, 0x00, 0x00,
    0x3F, 0x66, 0x66, 0x66, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x41, 0x88, 0x00, 0x00,
    0x00, 0x09, 0x00, 0x00, 0xBF, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
    0xBF, 0x80, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x40, 0xC0, 0x00, 0x00,
    0x40, 0xA0, 0x00, 0x00, 0x41, 0x30, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x3F, 0x66, 0x66, 0x66,
    0x40, 0x00, 0x00, 0x00, 0x40, 0x80, 0x00, 0x00, 0x41, 0x20, 0x00, 0x00, 0x00, 0x27, 0x00, 0x00,
    0x3F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x42, 0x20, 0x00, 0x00,
    0x00, 0x1E, 0x00, 0x00, 0xBF, 0xA6, 0x66, 0x66, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00,
    0x41, 0x20, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x3F, 0x0C, 0xCC, 0xCD, 0x00, 0x00, 0x00, 0x00,
    0x40, 0x40, 0x00, 0x00, 0x41, 0x20, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x3F, 0x4C, 0xCC, 0xCD,
    0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x42, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F,
    0x3F, 0x0C, 0xCC, 0xCD,
};
COMPILER_STRIP_GATE(0x8038EC48, &daAlinkHIO_grab_c0::m);

/* 8038ED2C-8038EE28 01B38C 00FC+00 21/30 0/0 0/0 .rodata          m__18daAlinkHIO_swim_c0 */
daAlinkHIO_swim_c1 const daAlinkHIO_swim_c0::m = {
    {25, 1.0f, 0.0f, 3.0f, -1.0f},
    {23, 1.0f, 0.0f, 3.0f, 24.0f},
    {12, 2.0f, 0.0f, 10.0f, 24.0f},
    {37, 1.0f, 3.0f, 5.0f, 38.0f},
    15,
    800,
    5000,
    15,
    200,
    5000,
    90,
    50,
    140.0f,
    50.0f,
    8.0f,
    8.0f,
    6.0f,
    12.0f,
    8.0f,
    5.0f,
    0.5f,
    -7.0f,
    6.0f,
    0.2f,
    0.8f,
    15.0f,
    3.5f,
    0.5f,
    1.0f,
    0.5f,
    1.3f,
    0.5f,
    1.3f,
    0.4f,
    0.6f,
    15.0f,
    37.5f,
    -37.5f,
    3.0f,
    -4.0f,
    -20.0f,
    250.0f,
    0.0f,
    10.0f,
    0.9f,
    -0.7f,
    0.6f,
    13.0f,
    0.3f,
    0.5f,
    1.3f,
};

/* 8038EE28-8038EF28 01B488 0100+00 32/41 0/0 0/0 .rodata          m__20daAlinkHIO_wlMove_c0 */
daAlinkHIO_wlMove_c1 const daAlinkHIO_wlMove_c0::m = {
    {14, 1.0f, 0.0f, 3.0f, 15.0f},
    {14, 1.0f, 0.0f, 3.0f, 12.0f},
    {8, 1.0f, 0.0f, 1.0f, 20.0f},
    {41, 1.0f, 0.0f, 3.0f, 20.0f},
    9000,
    100,
    5,
    90,
    50,
    60,
    50,
    45,
    50,
    40.0f,
    4.0f,
    3.0f,
    1.6f,
    1.1f,
    2.2f,
    1.2f,
    1.3f,
    0.1f,
    0.4f,
    0.4f,
    0.5f,
    5.0f,
    5.0f,
    0.3f,
    0.85f,
    0.9f,
    2.5f,
    40.0f,
    5.0f,
    22.0f,
    1.0f,
    5.0f,
    100.0f,
    10.0f,
    45.0f,
    1.3f,
    6.0f,
    65.0f,
    20.0f,
    15.0f,
    33.0f,
    35.0f,
    1.2f,
    3.0f,
    25.0f,
    35.0f,
    1.1f,
    0.5f,
};

/* 8038EF28-8038EF70 01B588 0048+00 19/27 0/0 0/0 .rodata          m__23daAlinkHIO_wlMoveNoP_c0 */
daAlinkHIO_wlMoveNoP_c1 const daAlinkHIO_wlMoveNoP_c0::m = {
    9000, 100,  5,    25.0f, 3.0f, 1.8f,  1.0f, 0.8f, 2.2f,  1.1f,
    0.1f, 0.6f, 0.6f, 5.0f,  0.5f, 0.85f, 0.9f, 2.5f, 30.0f,
};

/* 8038EF70-8038EFA8 01B5D0 0038+00 3/6 0/0 0/0 .rodata          m__23daAlinkHIO_wlAtnMove_c0 */
daAlinkHIO_wlAtnMove_c1 const daAlinkHIO_wlAtnMove_c0::m = {
    9000, 100, 3, 0.8f, 1.8f, 0.2f, 0.6f, 18.0f, 2.0f, 2.0f, 1.7f, 0.4f, 12.0f, 3.0f, 2.0f,
};

/* 8038EFA8-8038F010 01B608 0068+00 3/3 0/0 0/0 .rodata          m__24daAlinkHIO_wlSideStep_c0 */
daAlinkHIO_wlSideStep_c1 const daAlinkHIO_wlSideStep_c0::m = {
    {5, 1.0f, 0.0f, 3.0f, 6.0f},
    {23, 1.0f, 1.0f, 2.0f, 2.0f},
    {4, 0.9f, 0.0f, 3.0f, 5.0f},
    {23, 1.0f, 1.0f, 2.0f, 3.0f},
    33.0f,
    23.0f,
    30.0f,
    22.0f,
    100.0f,
    10.0f,
};

/* 8038F010-8038F048 01B670 0038+00 3/4 0/0 0/0 .rodata          m__24daAlinkHIO_wlBackJump_c0 */
daAlinkHIO_wlBackJump_c1 const daAlinkHIO_wlBackJump_c0::m = {
    {11, 0.8f, 0.0f, 2.0f, 12.0f}, {28, 1.0f, 0.0f, 3.0f, 1.0f}, 30.0f, 20.0f, 100.0f, 10.0f,
};

/* 8038F048-8038F0A8 01B6A8 0060+00 2/2 0/0 0/0 .rodata          m__20daAlinkHIO_wlHowl_c0 */
daAlinkHIO_wlHowl_c1 const daAlinkHIO_wlHowl_c0::m = {
    {49, 1.0f, 0.0f, 3.0f, 40.0f},
    {71, 1.0f, 0.0f, 3.0f, 72.0f},
    {14, 1.3f, 1.0f, 3.0f, 11.0f},
    {17, 0.9f, 0.0f, 3.0f, 18.0f},
    3.0f,
    8.0f,
    1.7f,
    0.7f,
};

/* 8038F0A8-8038F124 01B708 007C+00 8/13 0/0 0/0 .rodata          m__24daAlinkHIO_wlAutoJump_c0 */
daAlinkHIO_wlAutoJump_c1 const daAlinkHIO_wlAutoJump_c0::m = {{3, 1.2f, 1.0f, 2.0f, 4.0f},
                                                              {24, 1.0f, 1.0f, 2.0f, 2.0f},
                                                              {5, 0.5f, 2.0f, 5.0f, 7.0f},
                                                              1,
                                                              0,
                                                              7500,
                                                              8200,
                                                              10.0f,
                                                              10.0f,
                                                              1.1f,
                                                              10.0f,
                                                              5.0f,
                                                              -3.6f,
                                                              -100.0f,
                                                              1.2f,
                                                              10.0f,
                                                              10.0f,
                                                              1.02f,
                                                              38.0f,
                                                              31.0f,
                                                              100.0f};

/* 8038F124-8038F138 01B784 0014+00 4/4 0/0 0/0 .rodata          m__20daAlinkHIO_wlPush_c0 */
daAlinkHIO_wlPush_c1 const daAlinkHIO_wlPush_c0::m = {
    1.0f, 3.0f, 1.0f, 3.0f, 0.75f,
};

/* 8038F138-8038F184 01B798 004C+00 13/15 0/0 0/0 .rodata          m__19daAlinkHIO_wlLie_c0 */
daAlinkHIO_wlLie_c1 const daAlinkHIO_wlLie_c0::m = {
    {14, 1.5f, 0.0f, 3.0f, 10.0f},
    {11, 1.5f, 3.0f, 3.0f, 8.0f},
    5,
    500,
    50,
    3.0f,
    8.0f,
    1.7f,
    0.7f,
    5.0f,
    0.8f,
    3.0f,
};

/* 8038F184-8038F1A0 01B7E4 001C+00 0/1 0/0 0/0 .rodata          m__21daAlinkHIO_wlLight_c0 */
#pragma push
#pragma force_active on
daAlinkHIO_wlLight_c1 const daAlinkHIO_wlLight_c0::m = {
    515, 0, 120, 120, 120, -30, 3.0f, 20.0f, 512.0f, -638.0f,
};
#pragma pop

/* 8038F1A0-8038F23C 01B800 009C+00 9/11 0/0 0/0 .rodata          m__24daAlinkHIO_wlWallHang_c0 */
daAlinkHIO_wlWallHang_c1 const daAlinkHIO_wlWallHang_c0::m = {
    {13, 1.2f, 8.0f, 2.0f, 14.0f},
    {39, 1.1f, 0.0f, 3.0f, 31.0f},
    {39, 1.0f, 0.0f, 5.0f, 40.0f},
    {5, 1.0f, 0.0f, 3.0f, 6.0f},
    {6, 1.0f, 0.0f, 3.0f, 7.0f},
    {16, 1.0f, 0.0f, 3.0f, 10.0f},
    50.0f,
    100.0f,
    200.0f,
    250.0f,
    100.0f,
    17.0f,
    15.0f,
    10.0f,
    10.0f,
};

/* 8038F23C-8038F29C 01B89C 0060+00 2/3 0/0 0/0 .rodata          m__25daAlinkHIO_wlDamNormal_c0 */
daAlinkHIO_wlDamNormal_c1 const daAlinkHIO_wlDamNormal_c0::m = {
    {9, 1.0f, 0.0f, 0.0f, 8.0f},
    {9, 1.0f, 0.0f, 0.0f, 8.0f},
    {9, 1.0f, 0.0f, 0.0f, 8.0f},
    {9, 1.0f, 0.0f, 0.0f, 8.0f},
    10.0f,
    0.01f,
    1.0f,
    0.25f,
};

/* 8038F29C-8038F308 01B8FC 006C+00 2/4 0/0 0/0 .rodata          m__24daAlinkHIO_wlDamLarge_c0 */
daAlinkHIO_wlDamLarge_c1 const daAlinkHIO_wlDamLarge_c0::m = {
    {49, 1.0f, 0.0f, 3.0f, 40.0f},
    {39, 1.0f, 0.0f, 3.0f, 35.0f},
    {34, 1.1f, 0.0f, 3.0f, 32.0f},
    {34, 1.1f, 0.0f, 3.0f, 32.0f},
    1300,
    -5.2f,
    3.0f,
    10.0f,
    15.0f,
    15.0f,
    0.5f,
};

/* 8038F308-8038F374 01B968 006C+00 0/2 0/0 0/0 .rodata          m__23daAlinkHIO_wlDamHuge_c0 */
#pragma push
#pragma force_active on
daAlinkHIO_wlDamHuge_c1 const daAlinkHIO_wlDamHuge_c0::m = {
    {49, 1.1f, 0.0f, 3.0f, 40.0f},
    {39, 1.1f, 0.0f, 3.0f, 35.0f},
    {34, 1.2f, 0.0f, 3.0f, 30.0f},
    {34, 1.2f, 0.0f, 3.0f, 30.0f},
    2000,
    -7.5f,
    3.0f,
    85.0f,
    45.0f,
    15.0f,
    0.5f,
};
#pragma pop

/* 8038F374-8038F3B4 01B9D4 0040+00 6/6 0/0 0/0 .rodata          m__23daAlinkHIO_wlDamFall_c0 */
daAlinkHIO_wlDamFall_c1 const daAlinkHIO_wlDamFall_c0::m = {
    {11, 1.0f, 0.0f, 3.0f, 12.0f},
    {17, 0.8f, 0.0f, 0.0f, 12.0f},
    15,
    35,
    40.0f,
    60.0f,
    3.0f,
    1.0f,
    15.0f,
};

/* 8038F3B4-8038F3C4 01BA14 0010+00 1/1 0/0 0/0 .rodata          m__25daAlinkHIO_wlDamCaught_c0 */
daAlinkHIO_wlDamCaught_c1 const daAlinkHIO_wlDamCaught_c0::m = {
    300, 5, 1.2f, 3.0f, 1.5f,
};

/* 8038F3C4-8038F3F0 01BA24 002C+00 3/4 0/0 0/0 .rodata          m__22daAlinkHIO_wlDamage_c0 */
daAlinkHIO_wlDamage_c1 const daAlinkHIO_wlDamage_c0::m = {
    {9, 1.1f, 0.0f, 3.0f, 10.0f},
    {9, 1.1f, 0.0f, 3.0f, 7.0f},
    0.7f,
};

/* 8038F3F0-8038F46C 01BA50 007C+00 10/14 0/0 0/0 .rodata          m__21daAlinkHIO_wlSlide_c0 */
daAlinkHIO_wlSlide_c1 const daAlinkHIO_wlSlide_c0::m = {
    {20, 1.25f, 0.0f, 3.0f, 25.0f},
    {7, 1.0f, 0.0f, 3.0f, 8.0f},
    {14, 1.0f, 0.0f, 3.0f, 15.0f},
    {29, 1.0f, 0.0f, 3.0f, 27.0f},
    512,
    64,
    35.0f,
    3.0f,
    50.0f,
    35.0f,
    2.6f,
    18.0f,
    2.1f,
    10.0f,
    0.7f,
    30.0f,
};

/* 8038F46C-8038F4A4 01BACC 0038+00 7/7 0/0 0/0 .rodata          m__20daAlinkHIO_wlRope_c0 */
daAlinkHIO_wlRope_c1 const daAlinkHIO_wlRope_c0::m = {
    {16, 1.0f, 0.0f, 3.0f, 17.0f}, 90, 30, 0.5f, 1.2f, 3.0f, 15.0f, 1.0f, 3.0f, 3.0f, 0.8f,
};

/* 8038F4A4-8038F4E0 01BB04 003C+00 0/1 0/0 0/0 .rodata          m__22daAlinkHIO_wlAtWaLr_c0 */
#pragma push
#pragma force_active on
daAlinkHIO_wlAtWaLr_c1 const daAlinkHIO_wlAtWaLr_c0::m = {
    {41, 0.9f, 4.0f, 3.0f, 16.0f},
    5,
    3,
    0.0f,
    10.0f,
    4.0f,
    11.0f,
    18.0f,
    5.0f,
    70.0f,
    70.0f,
    150.0f,
};
#pragma pop

/* 8038F4E0-8038F51C 01BB40 003C+00 0/1 0/0 0/0 .rodata          m__22daAlinkHIO_wlAtWaSc_c0 */
#pragma push
#pragma force_active on
daAlinkHIO_wlAtWaSc_c1 const daAlinkHIO_wlAtWaSc_c0::m = {
    {15, 0.9f, 0.0f, 3.0f, 15.0f},
    5,
    5,
    10.0f,
    3.0f,
    5.0f,
    11.0f,
    18.0f,
    0.0f,
    100.0f,
    85.0f,
    150.0f,
};
#pragma pop

/* 8038F51C-8038F558 01BB7C 003C+00 0/1 0/0 0/0 .rodata          m__22daAlinkHIO_wlAtWaTl_c0 */
#pragma push
#pragma force_active on
daAlinkHIO_wlAtWaTl_c1 const daAlinkHIO_wlAtWaTl_c0::m = {
    {42, 1.05f, 3.0f, 3.0f, 28.0f},
    0,
    3,
    10.0f,
    5.0f,
    10.0f,
    14.0f,
    25.0f,
    0.0f,
    40.0f,
    150.0f,
    100.0f,
};
#pragma pop

/* 8038F558-8038F578 01BBB8 0020+00 2/2 0/0 0/0 .rodata          m__22daAlinkHIO_wlAtRoll_c0 */
daAlinkHIO_wlAtRoll_c1 const daAlinkHIO_wlAtRoll_c0::m = {
    {40, 1.0f, 4.0f, 3.0f, 23.0f},
    250.0f,
    20.0f,
    0.0f,
};

/* 8038F578-8038F5B4 01BBD8 003C+00 3/5 0/0 0/0 .rodata          m__23daAlinkHIO_wlAtNjump_c0 */
daAlinkHIO_wlAtNjump_c1 const daAlinkHIO_wlAtNjump_c0::m = {
    {6, 1.0f, 4.0f, 3.0f, 7.0f},
    30.0f,
    40.0f,
    23.0f,
    17.0f,
    0.8f,
    2.0f,
    80.0f,
    60.0f,
    120.0f,
    10.0f,
};

/* 8038F5B4-8038F618 01BC14 0064+00 1/4 0/0 0/0 .rodata          m__23daAlinkHIO_wlAtCjump_c0 */
SECTION_RODATA u8 const daAlinkHIO_wlAtCjump_c0::m[100] = {
    0x00, 0x03, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00,
    0x00, 0x40, 0x80, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x3F, 0x99, 0x99, 0x9A, 0x40, 0x00,
    0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0x41, 0xD0, 0x00, 0x00, 0x42,
    0x34, 0x00, 0x00, 0x42, 0x0C, 0x00, 0x00, 0x41, 0xA0, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00,
    0x40, 0x40, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00, 0x3F, 0x4C, 0xCC, 0xCD, 0x42, 0xA0, 0x00,
    0x00, 0x42, 0x70, 0x00, 0x00, 0x42, 0xF0, 0x00, 0x00, 0x41, 0xD0, 0x00, 0x00, 0x3F, 0x00,
    0x00, 0x00, 0x41, 0x20, 0x00, 0x00, 0x3D, 0xCC, 0xCC, 0xCD,
};
COMPILER_STRIP_GATE(0x8038F5B4, &daAlinkHIO_wlAtCjump_c0::m);

/* 8038F618-8038F658 01BC78 0040+00 4/4 0/0 0/0 .rodata          m__22daAlinkHIO_wlAtLand_c0 */
daAlinkHIO_wlAtLand_c1 const daAlinkHIO_wlAtLand_c0::m = {
    {19, 0.9f, 0.0f, 2.0f, 2.0f},
    {14, 1.0f, 0.0f, 3.0f, 1.0f},
    {19, 1.1f, 0.0f, 2.0f, 1.0f},
    2.0f,
};

/* 8038F658-8038F6F4 01BCB8 009C+00 6/7 0/0 0/0 .rodata          m__22daAlinkHIO_wlAtDown_c0 */
SECTION_RODATA u8 const daAlinkHIO_wlAtDown_c0::m[156] = {
    0x00, 0x03, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00,
    0x40, 0x80, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x40, 0x40, 0x00, 0x00, 0x41, 0x88, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x41, 0xB0, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00,
    0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x42, 0x48, 0x00, 0x00,
    0x00, 0x0B, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00,
    0x41, 0x40, 0x00, 0x00, 0x00, 0x54, 0x00, 0x00, 0x3F, 0x59, 0x99, 0x9A, 0x00, 0x00, 0x00, 0x00,
    0x40, 0x40, 0x00, 0x00, 0x42, 0x70, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x41, 0x10, 0x00, 0x00, 0x00, 0x28, 0x00, 0x03,
    0x42, 0x34, 0x00, 0x00, 0x41, 0x50, 0x00, 0x00, 0x41, 0x50, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x8038F658, &daAlinkHIO_wlAtDown_c0::m);

/* 8038F6F4-8038F748 01BD54 0054+00 6/6 0/0 0/0 .rodata          m__22daAlinkHIO_wlAtLock_c0 */
daAlinkHIO_wlAtLock_c1 const daAlinkHIO_wlAtLock_c0::m = {
    {6, 3.0f, 0.0f, 3.0f, 15.0f},
    {6, 2.0f, 0.0f, 2.0f, 20.0f},
    {120, 100.0f, 550.0f, 25.0f, 85.0f},
    80.0f,
    60.0f,
    120.0f,
    -8.0f,
    700.0f,
    1000.0f,
};

/* 8038F748-8038F7A4 01BDA8 005C+00 5/5 0/0 0/0 .rodata          m__22daAlinkHIO_wlAtBite_c0 */
SECTION_RODATA u8 const daAlinkHIO_wlAtBite_c0::m[92] = {
    0x00, 0x05, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x40, 0xC0, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x3F, 0xCC, 0xCC, 0xCD, 0x00, 0x00, 0x00, 0x00,
    0x40, 0x40, 0x00, 0x00, 0x42, 0x00, 0x00, 0x00, 0x00, 0x19, 0x00, 0x0F, 0x3F, 0x99, 0x99, 0x9A,
    0x40, 0x40, 0x00, 0x00, 0x41, 0xA0, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x3F, 0xA6, 0x66, 0x66,
    0x3F, 0xA6, 0x66, 0x66, 0x40, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x3E, 0x42, 0x8F, 0x5C,
    0x3E, 0x42, 0x8F, 0x5C, 0x3C, 0xA3, 0xD7, 0x0A, 0x3C, 0xA3, 0xD7, 0x0A,
};
COMPILER_STRIP_GATE(0x8038F748, &daAlinkHIO_wlAtBite_c0::m);

/* 8038F7A4-8038F7DC 01BE04 0038+00 7/10 0/0 0/0 .rodata          m__22daAlinkHIO_wlAttack_c0 */
daAlinkHIO_wlAttack_c1 const daAlinkHIO_wlAttack_c0::m = {
    {59, 1.2f, 0.0f, 2.0f, 5.0f}, 15, 5, 100.0f, 10.0f, 5.0f, 230.0f, 10.0f, 12.0f, 35.0f, 30.0f};

/* 8038F7DC-8038F858 01BE3C 007C+00 5/5 0/0 0/0 .rodata          m__21daAlinkHIO_wlPoint_c0 */
daAlinkHIO_wlPoint_c1 const daAlinkHIO_wlPoint_c0::m = {
    {6, 0.9f, 2.0f, 3.0f, 7.0f},
    {7, 1.0f, 0.0f, 3.0f, 8.0f},
    {11, 0.75f, 0.0f, 3.0f, 5.0f},
    {14, 1.0f, 0.0f, 3.0f, 3.0f},
    {20, 1.0f, 3.0f, 5.0f, 50.0f},
    45.0f,
    65.0f,
    15.0f,
    0.5f,
    0.5f,
    0.2f,
};

/* 8038F858-8038F8B4 01BEB8 005C+00 6/6 0/0 0/0 .rodata          m__21daAlinkHIO_wlChain_c0 */
daAlinkHIO_wlChain_c1 const daAlinkHIO_wlChain_c0::m = {
    {39, 1.0f, 0.0f, 3.0f, 40.0f},
    {81, 1.0f, 0.0f, 3.0f, 82.0f},
    {47, 1.0f, 0.0f, 0.0f, 48.0f},
    20,
    5,
    1.0f,
    3.0f,
    1.0f,
    3.0f,
    15.1f,
    1.0f,
    5.0f,
};

/* 8038F8B4-8038F95C 01BF14 00A8+00 16/24 0/0 0/0 .rodata          m__20daAlinkHIO_wlSwim_c0 */
daAlinkHIO_wlSwim_c1 const daAlinkHIO_wlSwim_c0::m = {
    {25, 0.9f, 0.0f, 5.0f, -1.0f},
    {45, 1.0f, 0.0f, 3.0f, 20.0f},
    {28, 1.1f, 0.0f, 1.0f, 32.0f},
    5,
    1000,
    1600,
    5,
    2500,
    1024,
    90.0f,
    50.0f,
    20.0f,
    0.35f,
    -10.0f,
    10.0f,
    1.5f,
    1.4f,
    10.0f,
    3.5f,
    0.5f,
    1.5f,
    5.0f,
    37.5f,
    9.0f,
    0.25f,
    1.0f,
    0.4f,
    1.2f,
    -37.5f,
    8.0f,
    0.2f,
    -7.0f,
    7.0f,
};

/* 8038F95C-8038F9C0 01BFBC 0064+00 6/6 0/0 0/0 .rodata          m__20daAlinkHIO_wlGrab_c0 */
daAlinkHIO_wlGrab_c1 const daAlinkHIO_wlGrab_c0::m = {
    {20, 1.5f, 0.0f, 3.0f, 15.0f},  {20, -1.3f, 0.0f, 3.0f, 5.0f}, {14, 1.0f, 0.0f, 3.0f, 15.0f},
    {14, -1.0f, 0.0f, 3.0f, -1.0f}, {19, 1.3f, 4.0f, 3.0f, 15.0f},
};

/* 8038F9C0-8038F9F8 01C020 0038+00 0/0 0/0 0/0 .rodata          m__20daAlinkHIO_wlBall_c0 */
#pragma push
#pragma force_active on
daAlinkHIO_wlBall_c1 const daAlinkHIO_wlBall_c0::m = {
    {64, 1.0f, 0.0f, 3.0f, 35.0f}, {54, 1.0f, 0.0f, 3.0f, 55.0f}, 60, -5.0f, 60.0f, 20.0f,
};
#pragma pop

/* 8038F9F8-8038FA10 01C058 0018+00 5/6 0/0 0/0 .rodata          m__18daAlinkHIO_wolf_c0 */
daAlinkHIO_wolf_c1 const daAlinkHIO_wolf_c0::m = {
    13000, -10000, 8000, 4000, -2000, 8000, 150, 5, 35, 60, 0.7f,
};

/* 800A142C-800A1AEC 09BD6C 06C0+00 1/1 0/0 0/0 .text getNeckAimAngle__9daAlink_cFP4cXyzPsPsPsPs
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getNeckAimAngle(cXyz* param_0, s16* param_1, s16* param_2, s16* param_3,
                                    s16* param_4) {
    nofralloc
#include "asm/d/a/d_a_alink/getNeckAimAngle__9daAlink_cFP4cXyzPsPsPsPs.s"
}
#pragma pop

/* ############################################################################################## */
/* 80453214-80453218 001814 0004+00 1/1 0/0 0/0 .sdata2          @55845 */
SECTION_SDATA2 static f32 lit_55845 = 0.0001220703125f;

/* 80453218-8045321C 001818 0004+00 1/1 0/0 0/0 .sdata2          @55846 */
SECTION_SDATA2 static f32 lit_55846 = 0.000244140625f;

/* 8045321C-80453220 00181C 0004+00 2/2 0/0 0/0 .sdata2          @55847 */
SECTION_SDATA2 static f32 lit_55847 = 3.0f / 100.0f;

/* 80453220-80453224 001820 0004+00 1/1 0/0 0/0 .sdata2          @55848 */
SECTION_SDATA2 static f32 lit_55848 = 2.0f / 25.0f;

/* 800A1AEC-800A1F90 09C42C 04A4+00 1/1 0/0 0/0 .text            setEyeMove__9daAlink_cFP4cXyzss */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setEyeMove(cXyz* param_0, s16 param_1, s16 param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/setEyeMove__9daAlink_cFP4cXyzss.s"
}
#pragma pop

/* 800A1F90-800A2160 09C8D0 01D0+00 1/1 0/0 0/0 .text            setNeckAngle__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setNeckAngle() {
    nofralloc
#include "asm/d/a/d_a_alink/setNeckAngle__9daAlink_cFv.s"
}
#pragma pop

/* 800A2160-800A2198 09CAA0 0038+00 1/0 0/0 0/0 .text getStickAngleFromPlayerShape__9daAlink_cCFPs
 */
bool daAlink_c::getStickAngleFromPlayerShape(s16* param_0) const {
    // inline uses literal
    // if (checkInputOnR()) {
    if (field_0x33ac > lit_6021) {
        *param_0 = field_0x2fe2 - mCollisionRot.y;
        return true;
    }
    *param_0 = 0;
    return false;
}

/* 800A2198-800A21E0 09CAD8 0048+00 42/42 0/0 0/0 .text commonLineCheck__9daAlink_cFP4cXyzP4cXyz
 */
bool daAlink_c::commonLineCheck(cXyz* param_0, cXyz* param_1) {
    mLinkLinChk.Set(param_0, param_1, this);
    return dComIfG_Bgsp().LineCross(&mLinkLinChk);
}

/* 800A21E0-800A2280 09CB20 00A0+00 18/18 0/0 2/2 .text
 * getMoveBGActorName__9daAlink_cFR13cBgS_PolyInfoi             */
s16 daAlink_c::getMoveBGActorName(cBgS_PolyInfo& param_0, int param_1) {
    if ((param_1 != 0 || dComIfG_Bgsp().ChkPolySafe(param_0)) &&
        dComIfG_Bgsp().ChkMoveBG_NoDABg(param_0) && dComIfG_Bgsp().GetActorPointer(param_0)) {
        return fopAcM_GetName(dComIfG_Bgsp().GetActorPointer(param_0));
    }
    return 0xFD;
}

/* 800A2280-800A22E8 09CBC0 0068+00 2/2 0/0 0/0 .text            checkGoronRide__9daAlink_cFv */
fopAc_ac_c* daAlink_c::checkGoronRide() {
    if (mLinkAcch.ChkGroundHit() && getMoveBGActorName(mLinkAcch.m_gnd, 0) == 0x21) {
        return dComIfG_Bgsp().GetActorPointer(mLinkAcch.m_gnd);
    }
    return NULL;
}

/* ############################################################################################## */
/* 80453224-80453228 001824 0004+00 1/1 0/0 0/0 .sdata2          @56018 */
SECTION_SDATA2 static f32 lit_56018 = -3.8999998569488525f;

/* 800A22E8-800A2710 09CC28 0428+00 1/1 0/0 0/0 .text            setMoveSlantAngle__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setMoveSlantAngle() {
    nofralloc
#include "asm/d/a/d_a_alink/setMoveSlantAngle__9daAlink_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 8038FA10-8038FA20 01C070 0010+00 0/0 0/0 0/0 .rodata          l_worldChangeEventName */
#pragma push
#pragma force_active on
SECTION_RODATA static char const l_worldChangeEventName[16] = "WORLD_CHANGE_IN";
COMPILER_STRIP_GATE(0x8038FA10, &l_worldChangeEventName);
#pragma pop

/* 8038FA20-8038FA38 01C080 0015+03 0/0 0/0 0/0 .rodata          l_wolfWorldChangeEventName */
#pragma push
#pragma force_active on
SECTION_RODATA static char const l_wolfWorldChangeEventName[24] = "WOLF_WORLD_CHANGE_IN";
COMPILER_STRIP_GATE(0x8038FA20, &l_wolfWorldChangeEventName);
#pragma pop

/* 8038FA38-8038FA48 01C098 0010+00 0/1 0/0 0/0 .rodata          l_defaultGetEventName */
#pragma push
#pragma force_active on
SECTION_RODATA static char const l_defaultGetEventName[16] = "DEFAULT_GETITEM";
COMPILER_STRIP_GATE(0x8038FA38, &l_defaultGetEventName);
#pragma pop

/* 8038FA48-8038FA54 01C0A8 000C+00 0/0 0/0 0/0 .rodata          l_crawlStartFrontOffset */
#pragma push
#pragma force_active on
SECTION_RODATA static float const l_crawlStartFrontOffset[3] = {0.0f, 30.0f, 112.0f};
COMPILER_STRIP_GATE(0x8038FA48, &l_crawlStartFrontOffset);
#pragma pop

/* 8038FA54-8038FA60 01C0B4 000C+00 1/2 0/0 0/0 .rodata          l_crawlFrontOffset */
SECTION_RODATA static u8 const l_crawlFrontOffset[12] = {
    0x00, 0x00, 0x00, 0x00, 0x41, 0xF0, 0x00, 0x00, 0x42, 0xA0, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x8038FA54, &l_crawlFrontOffset);

/* 8038FA60-8038FA6C 01C0C0 000C+00 0/1 0/0 0/0 .rodata          l_crawlBackOffset */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const l_crawlBackOffset[12] = {
    0x00, 0x00, 0x00, 0x00, 0x41, 0xF0, 0x00, 0x00, 0xC1, 0xF0, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x8038FA60, &l_crawlBackOffset);
#pragma pop

/* 8038FA6C-8038FA78 01C0CC 000C+00 1/1 0/0 0/0 .rodata          l_crawlTopOffset */
SECTION_RODATA static u8 const l_crawlTopOffset[12] = {
    0x00, 0x00, 0x00, 0x00, 0x41, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x8038FA6C, &l_crawlTopOffset);

/* 8038FA78-8038FA84 01C0D8 000C+00 1/2 0/0 0/0 .rodata          l_crawlFrontUpOffset */
SECTION_RODATA static u8 const l_crawlFrontUpOffset[12] = {
    0x00, 0x00, 0x00, 0x00, 0x42, 0xA0, 0x00, 0x00, 0x42, 0xA0, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x8038FA78, &l_crawlFrontUpOffset);

/* 8038FA84-8038FA90 01C0E4 000C+00 0/1 0/0 0/0 .rodata          l_wolfLieFrontUpOffset */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const l_wolfLieFrontUpOffset[12] = {
    0x00, 0x00, 0x00, 0x00, 0x42, 0x96, 0x00, 0x00, 0x42, 0xC8, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x8038FA84, &l_wolfLieFrontUpOffset);
#pragma pop

/* 8038FA90-8038FA9C 01C0F0 000C+00 1/2 0/0 0/0 .rodata          l_crawlBackUpOffset */
SECTION_RODATA static u8 const l_crawlBackUpOffset[12] = {
    0x00, 0x00, 0x00, 0x00, 0x42, 0xA0, 0x00, 0x00, 0xC1, 0xF0, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x8038FA90, &l_crawlBackUpOffset);

/* 8038FA9C-8038FAA8 01C0FC 000C+00 0/1 0/0 0/0 .rodata          l_wolfLieBackUpOffset */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const l_wolfLieBackUpOffset[12] = {
    0x00, 0x00, 0x00, 0x00, 0x42, 0x96, 0x00, 0x00, 0xC2, 0x8C, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x8038FA9C, &l_wolfLieBackUpOffset);
#pragma pop

/* 8038FAA8-8038FAB4 01C108 000C+00 0/1 0/0 0/0 .rodata          l_crawlStandUpOffset */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const l_crawlStandUpOffset[12] = {
    0x00, 0x00, 0x00, 0x00, 0x42, 0xA0, 0x00, 0x00, 0xC1, 0xF0, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x8038FAA8, &l_crawlStandUpOffset);
#pragma pop

/* 8038FAB4-8038FAC0 01C114 000C+00 0/1 0/0 0/0 .rodata          l_wolfLieStandUpOffset */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const l_wolfLieStandUpOffset[12] = {
    0x00, 0x00, 0x00, 0x00, 0x42, 0xA0, 0x00, 0x00, 0xC2, 0x8C, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x8038FAB4, &l_wolfLieStandUpOffset);
#pragma pop

/* 8038FAC0-8038FACC 01C120 000C+00 1/2 0/0 0/0 .rodata          l_crawlTopUpOffset */
SECTION_RODATA static u8 const l_crawlTopUpOffset[12] = {
    0x00, 0x00, 0x00, 0x00, 0x42, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x8038FAC0, &l_crawlTopUpOffset);

/* 8038FACC-8038FAD8 01C12C 000C+00 0/1 0/0 0/0 .rodata          l_wolfLieTopUpOffset */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const l_wolfLieTopUpOffset[12] = {
    0x00, 0x00, 0x00, 0x00, 0x42, 0x96, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x8038FACC, &l_wolfLieTopUpOffset);
#pragma pop

/* 8038FAD8-8038FAE4 01C138 000C+00 0/1 0/0 0/0 .rodata          l_crawlSideOffset */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const l_crawlSideOffset[12] = {
    0x42, 0x5C, 0x00, 0x00, 0x42, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x8038FAD8, &l_crawlSideOffset);
#pragma pop

/* 8038FAE4-8038FAF0 01C144 000C+00 0/1 0/0 0/0 .rodata          l_wolfLieSideOffset */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const l_wolfLieSideOffset[12] = {
    0x42, 0x5C, 0x00, 0x00, 0x42, 0x96, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x8038FAE4, &l_wolfLieSideOffset);
#pragma pop

/* 8038FAF0-8038FAFC 01C150 000C+00 0/1 0/0 0/0 .rodata          l_crawlLSideOffset */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const l_crawlLSideOffset[12] = {
    0x42, 0x5C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x8038FAF0, &l_crawlLSideOffset);
#pragma pop

/* 8038FAFC-8038FB08 01C15C 000C+00 0/1 0/0 0/0 .rodata          l_crawlRSideOffset */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const l_crawlRSideOffset[12] = {
    0xC2, 0x5C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x8038FAFC, &l_crawlRSideOffset);
#pragma pop

/* 8038FB08-8038FB14 01C168 000C+00 0/1 0/0 0/0 .rodata          l_crawlLSideFrontOffset */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const l_crawlLSideFrontOffset[12] = {
    0x42, 0x5C, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00, 0x42, 0xA0, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x8038FB08, &l_crawlLSideFrontOffset);
#pragma pop

/* 8038FB14-8038FB20 01C174 000C+00 0/1 0/0 0/0 .rodata          l_crawlRSideFrontOffset */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const l_crawlRSideFrontOffset[12] = {
    0xC2, 0x5C, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00, 0x42, 0xA0, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x8038FB14, &l_crawlRSideFrontOffset);
#pragma pop

/* 8038FB20-8038FB2C 01C180 000C+00 0/2 0/0 0/0 .rodata          l_crawlMinSideOffset */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const l_crawlMinSideOffset[12] = {
    0x42, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x8038FB20, &l_crawlMinSideOffset);
#pragma pop

/* 8038FB2C-8038FB38 01C18C 000C+00 0/2 0/0 0/0 .rodata          l_swordTopLocalN */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const l_swordTopLocalN[12] = {
    0x42, 0xC8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x8038FB2C, &l_swordTopLocalN);
#pragma pop

/* 8038FB38-8038FB44 01C198 000C+00 0/2 0/0 0/0 .rodata          l_swordTopLocalM */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const l_swordTopLocalM[12] = {
    0x42, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x8038FB38, &l_swordTopLocalM);
#pragma pop

/* 8038FB44-8038FB50 01C1A4 000C+00 1/2 0/0 0/0 .rodata          l_ironBallChainVec */
SECTION_RODATA static u8 const l_ironBallChainVec[12] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x20, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x8038FB44, &l_ironBallChainVec);

/* 8038FB50-8038FB5C 01C1B0 000C+00 1/2 0/0 0/0 .rodata          l_ironBallCenterVec */
SECTION_RODATA static u8 const l_ironBallCenterVec[12] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0x28, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x8038FB50, &l_ironBallCenterVec);

/* 8038FB5C-8038FBBC 01C1BC 0060+00 1/2 0/0 0/0 .rodata          l_wolfFootOnFrame */
SECTION_RODATA static u8 const l_wolfFootOnFrame[96] = {
    0x00, 0x00, 0x00, 0x00, 0x41, 0x80, 0x00, 0x00, 0x41, 0x98, 0x00, 0x00, 0x40, 0xC0, 0x00, 0x00,
    0x41, 0x20, 0x00, 0x00, 0x41, 0x40, 0x00, 0x00, 0x40, 0xE0, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x41, 0xA0, 0x00, 0x00, 0x41, 0xD8, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
    0x41, 0x88, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0xC0, 0x00, 0x00, 0x41, 0x30, 0x00, 0x00,
    0x41, 0xC0, 0x00, 0x00, 0x42, 0x00, 0x00, 0x00, 0x41, 0x40, 0x00, 0x00, 0x41, 0xD0, 0x00, 0x00,
    0x42, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0x30, 0x00, 0x00, 0x42, 0x68, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x8038FB5C, &l_wolfFootOnFrame);

/* 8038FBBC-8038FBD4 01C21C 0018+00 1/1 0/0 0/0 .rodata          l_insectNameList */
SECTION_RODATA static s16 const l_insectNameList[12] = {
    0x0140, 0x0141, 0x0142, 0x0149, 0x0143, 0x0144, 0x0145, 0x0146, 0x014B, 0x014A, 0x0147, 0x0148,
};
COMPILER_STRIP_GATE(0x8038FBBC, &l_insectNameList);

/* 8038FBD4-8038FC24 01C234 0050+00 0/1 0/0 0/0 .rodata          m_mainBckShield__9daAlink_c */
#pragma push
#pragma force_active on
SECTION_RODATA u8 const daAlink_c::m_mainBckShield[80] = {
    0x00, 0x25, 0x00, 0x25, 0x00, 0x23, 0x00, 0x23, 0x00, 0x12, 0x00, 0x1B, 0x00, 0x10, 0x00, 0x1B,
    0x00, 0x21, 0x00, 0x21, 0x00, 0x1E, 0x00, 0x1E, 0x00, 0x3C, 0x00, 0x3C, 0x00, 0x2C, 0x00, 0x2C,
    0x00, 0x3E, 0x00, 0x3E, 0x00, 0x2E, 0x00, 0x2E, 0x00, 0x30, 0x00, 0x30, 0x00, 0x28, 0x00, 0x28,
    0x00, 0x32, 0x00, 0x32, 0x00, 0x2A, 0x00, 0x2A, 0x02, 0x74, 0x00, 0x1B, 0x00, 0x20, 0x00, 0x1B,
    0x00, 0x1B, 0x00, 0x1B, 0x00, 0x26, 0x00, 0x26, 0x02, 0x77, 0x00, 0x1B, 0x00, 0xCD, 0x00, 0x1B,
};
COMPILER_STRIP_GATE(0x8038FBD4, &daAlink_c::m_mainBckShield);
#pragma pop

/* 8038FC24-8038FC38 01C284 0014+00 0/1 0/0 0/0 .rodata          m_mainBckSword__9daAlink_c */
#pragma push
#pragma force_active on
SECTION_RODATA u8 const daAlink_c::m_mainBckSword[20] = {
    0x00, 0x1A, 0x00, 0x1A, 0x00, 0x1C, 0x00, 0x1C, 0x02, 0x77,
    0x02, 0x77, 0x00, 0xCD, 0x00, 0xCD, 0x02, 0x43, 0x02, 0x44,
};
COMPILER_STRIP_GATE(0x8038FC24, &daAlink_c::m_mainBckSword);
#pragma pop

/* 8038FC38-8038FCA8 01C298 0070+00 0/1 0/0 0/0 .rodata          m_mainBckFishing__9daAlink_c */
#pragma push
#pragma force_active on
SECTION_RODATA u8 const daAlink_c::m_mainBckFishing[112] = {
    0x00, 0x25, 0x02, 0x73, 0x00, 0x23, 0x00, 0xC8, 0x00, 0x12, 0x02, 0x73, 0x00, 0x10, 0x00, 0xC8,
    0x00, 0x21, 0x02, 0x73, 0x00, 0x1E, 0x00, 0xC8, 0x00, 0x3C, 0x02, 0x73, 0x00, 0x2C, 0x02, 0x73,
    0x00, 0x3E, 0x02, 0x73, 0x00, 0x2E, 0x02, 0x73, 0x00, 0x30, 0x00, 0xC8, 0x00, 0x28, 0x00, 0xC8,
    0x00, 0x32, 0x00, 0xC8, 0x00, 0x2A, 0x00, 0xC8, 0x02, 0x74, 0x02, 0x73, 0x00, 0x20, 0x02, 0x73,
    0x00, 0x1A, 0x02, 0x73, 0x00, 0x1C, 0x02, 0x73, 0x02, 0x77, 0x02, 0x73, 0x00, 0xCD, 0x00, 0xC8,
    0x02, 0x43, 0x02, 0x44, 0x02, 0x33, 0x02, 0x73, 0x02, 0x34, 0x02, 0x73, 0x02, 0x33, 0x02, 0x73,
    0x02, 0x34, 0x02, 0x73, 0x02, 0x6A, 0x02, 0x73, 0x02, 0x56, 0x02, 0x73, 0x02, 0x57, 0x02, 0x73,
};
COMPILER_STRIP_GATE(0x8038FC38, &daAlink_c::m_mainBckFishing);
#pragma pop

/* 8038FCA8-80391010 01C308 1368+00 3/4 0/0 0/0 .rodata          m_anmDataTable__9daAlink_c */
daAlink_AnmData const daAlink_c::m_anmDataTable[414] = {
    {37, 36, 254, 254, 0, 232, 0},
    {35, 34, 254, 254, 0, 232, 0},
    {18, 18, 254, 254, 0, 232, 0},
    {16, 16, 254, 254, 0, 232, 0},
    {33, 31, 254, 254, 0, 232, 0},
    {30, 29, 254, 254, 0, 232, 0},
    {60, 59, 4, 10, 0, 232, 0},
    {44, 43, 4, 10, 0, 232, 0},
    {62, 61, 4, 10, 0, 232, 0},
    {46, 45, 4, 10, 0, 232, 0},
    {48, 47, 4, 10, 0, 232, 0},
    {40, 39, 4, 10, 0, 232, 0},
    {50, 49, 4, 10, 0, 232, 0},
    {42, 41, 4, 10, 0, 232, 0},
    {628, 628, 254, 254, 0, 232, 0},
    {32, 26, 254, 254, 0, 0, 0},
    {26, 14, 254, 254, 0, 232, 0},
    {28, 14, 254, 254, 0, 232, 0},
    {631, 631, 4, 10, 0, 0, 0},
    {205, 197, 4, 10, 0, 232, 0},
    {579, 579, 254, 254, 0, 345, 0},
    {563, 563, 4, 10, 0, 0, 0},
    {564, 564, 4, 10, 0, 0, 0},
    {563, 604, 4, 10, 0, 0, 0},
    {564, 604, 4, 10, 0, 0, 0},
    {618, 618, 4, 10, 0, 0, 0},
    {598, 598, 1, 6, 0, 232, 0},
    {599, 599, 1, 6, 0, 351, 0},
    {198, 198, 1, 6, 0, 232, 0},
    {54, 54, 254, 254, 0, 328, 0},
    {56, 56, 254, 254, 0, 328, 0},
    {53, 53, 1, 6, 0, 232, 0},
    {55, 55, 1, 6, 0, 232, 0},
    {52, 52, 254, 254, 0, 328, 0},
    {51, 51, 1, 6, 0, 232, 0},
    {519, 519, 254, 254, 0, 328, 0},
    {521, 521, 254, 254, 0, 223, 0},
    {520, 520, 1, 6, 38, 335, 0},
    {518, 518, 4, 10, 0, 328, 0},
    {517, 517, 4, 10, 0, 232, 0},
    {559, 559, 254, 254, 0, 232, 0},
    {123, 123, 254, 254, 0, 0, 0},
    {126, 126, 254, 6, 0, 232, 0},
    {19, 19, 254, 6, 0, 232, 0},
    {21, 21, 254, 6, 0, 232, 0},
    {124, 124, 254, 6, 0, 232, 0},
    {23, 23, 254, 6, 0, 232, 0},
    {24, 24, 254, 6, 0, 232, 0},
    {20, 20, 1, 6, 125, 233, 0},
    {421, 421, 254, 254, 0, 327, 0},
    {419, 419, 254, 254, 0, 327, 0},
    {420, 420, 254, 254, 0, 223, 0},
    {436, 436, 254, 254, 0, 223, 0},
    {437, 437, 254, 254, 0, 223, 0},
    {617, 617, 254, 254, 0, 223, 0},
    {503, 503, 254, 254, 10, 333, 0},
    {502, 502, 254, 254, 4, 232, 0},
    {501, 501, 254, 254, 4, 232, 0},
    {500, 500, 0, 5, 11, 332, 0},
    {499, 499, 254, 254, 0, 232, 0},
    {498, 498, 0, 5, 0, 232, 0},
    {510, 510, 254, 254, 0, 223, 0},
    {511, 511, 254, 254, 0, 223, 0},
    {509, 509, 254, 254, 0, 223, 0},
    {225, 225, 4, 10, 0, 223, 0},
    {226, 226, 4, 10, 0, 223, 0},
    {565, 565, 4, 5, 0, 232, 0},
    {566, 566, 4, 5, 0, 232, 0},
    {562, 562, 4, 5, 0, 232, 0},
    {418, 418, 4, 5, 0, 232, 0},
    {416, 416, 4, 5, 0, 232, 0},
    {417, 417, 4, 5, 0, 232, 0},
    {614, 614, 4, 5, 0, 0, 0},
    {629, 629, 4, 5, 0, 0, 0},
    {630, 630, 4, 5, 0, 0, 0},
    {202, 202, 4, 5, 0, 232, 0},
    {203, 203, 4, 5, 0, 232, 0},
    {781, 614, 4, 5, 0, 0, 0},
    {221, 221, 4, 5, 0, 258, 0},
    {435, 435, 4, 5, 0, 261, 0},
    {149, 149, 100, 5, 36, 272, 0},
    {568, 568, 4, 5, 55, 338, 0},
    {569, 569, 4, 5, 56, 0, 0},
    {214, 214, 4, 10, 88, 300, 0},
    {587, 587, 4, 5, 37, 0, 0},
    {613, 613, 4, 5, 0, 232, 0},
    {560, 560, 4, 5, 109, 336, 0},
    {561, 561, 4, 5, 109, 336, 0},
    {373, 373, 4, 5, 110, 321, 0},
    {374, 374, 4, 5, 110, 321, 0},
    {588, 588, 4, 5, 114, 0, 0},
    {589, 589, 4, 5, 115, 0, 0},
    {512, 512, 254, 254, 0, 223, 0},
    {513, 513, 254, 254, 0, 223, 0},
    {227, 227, 4, 10, 0, 223, 0},
    {228, 228, 4, 10, 0, 223, 0},
    {624, 624, 254, 254, 16, 357, 0},
    {623, 623, 4, 5, 17, 356, 0},
    {127, 127, 100, 6, 46, 259, 0},
    {153, 153, 0, 6, 47, 275, 0},
    {154, 154, 0, 6, 48, 276, 0},
    {143, 143, 100, 6, 49, 267, 0},
    {144, 144, 100, 6, 49, 267, 0},
    {132, 132, 100, 6, 50, 262, 0},
    {133, 133, 100, 6, 51, 263, 0},
    {134, 134, 100, 5, 0, 261, 0},
    {138, 138, 0, 5, 0, 223, 0},
    {137, 137, 100, 5, 0, 223, 0},
    {139, 139, 100, 5, 52, 264, 0},
    {136, 136, 0, 5, 0, 223, 0},
    {135, 135, 100, 5, 0, 223, 0},
    {155, 155, 0, 6, 89, 277, 0},
    {156, 156, 0, 6, 89, 277, 0},
    {152, 152, 100, 6, 60, 274, 0},
    {151, 151, 100, 6, 61, 273, 0},
    {159, 159, 100, 6, 58, 280, 0},
    {158, 158, 100, 6, 59, 279, 0},
    {164, 164, 0, 6, 0, 232, 0},
    {165, 165, 100, 6, 0, 232, 0},
    {166, 166, 100, 6, 0, 232, 0},
    {170, 170, 0, 5, 0, 261, 0},
    {167, 167, 0, 5, 90, 285, 0},
    {168, 168, 0, 5, 0, 286, 0},
    {169, 169, 100, 5, 18, 287, 0},
    {142, 142, 0, 6, 127, 266, 0},
    {140, 140, 0, 6, 128, 265, 0},
    {141, 141, 0, 6, 0, 232, 0},
    {174, 174, 1, 6, 39, 234, 0},
    {172, 172, 1, 6, 39, 234, 0},
    {189, 189, 1, 6, 39, 234, 0},
    {190, 190, 1, 6, 39, 234, 0},
    {178, 178, 254, 254, 40, 248, 0},
    {175, 175, 254, 254, 40, 248, 0},
    {180, 180, 254, 254, 40, 248, 0},
    {182, 182, 254, 254, 40, 248, 0},
    {179, 179, 254, 254, 42, 292, 0},
    {176, 176, 254, 254, 43, 290, 0},
    {181, 181, 254, 254, 44, 293, 0},
    {183, 183, 254, 254, 44, 293, 0},
    {171, 171, 1, 6, 39, 234, 0},
    {431, 431, 1, 6, 39, 234, 0},
    {432, 432, 254, 254, 0, 223, 0},
    {324, 324, 0, 6, 6, 305, 0},
    {325, 325, 0, 10, 7, 306, 0},
    {567, 567, 4, 10, 28, 337, 0},
    {591, 591, 254, 254, 0, 223, 0},
    {592, 592, 254, 254, 0, 223, 0},
    {593, 593, 254, 254, 0, 223, 0},
    {594, 594, 254, 254, 0, 223, 0},
    {372, 372, 254, 254, 0, 223, 0},
    {378, 378, 254, 254, 0, 223, 0},
    {376, 376, 254, 254, 0, 223, 0},
    {377, 377, 254, 254, 0, 223, 0},
    {430, 430, 254, 254, 0, 223, 0},
    {428, 428, 254, 254, 0, 223, 0},
    {429, 429, 254, 254, 0, 223, 0},
    {425, 425, 254, 254, 0, 223, 0},
    {423, 423, 254, 254, 0, 223, 0},
    {424, 424, 254, 254, 0, 223, 0},
    {427, 427, 254, 254, 0, 223, 0},
    {426, 426, 254, 254, 0, 223, 0},
    {106, 106, 3, 9, 0, 232, 0},
    {112, 112, 3, 9, 0, 232, 0},
    {108, 108, 3, 9, 0, 232, 0},
    {109, 109, 3, 9, 0, 232, 0},
    {110, 110, 3, 9, 0, 232, 0},
    {111, 111, 3, 9, 0, 232, 0},
    {107, 107, 3, 9, 92, 254, 0},
    {527, 527, 3, 9, 0, 232, 0},
    {528, 528, 3, 9, 0, 232, 0},
    {522, 522, 3, 9, 0, 232, 0},
    {524, 524, 3, 9, 0, 232, 0},
    {525, 525, 3, 9, 0, 232, 0},
    {526, 526, 3, 9, 0, 232, 0},
    {523, 523, 3, 9, 0, 232, 0},
    {366, 366, 254, 254, 24, 313, 0},
    {369, 369, 254, 254, 25, 316, 0},
    {368, 368, 254, 254, 0, 315, 0},
    {379, 379, 254, 254, 26, 322, 0},
    {365, 365, 254, 254, 27, 312, 0},
    {367, 367, 254, 254, 0, 314, 0},
    {95, 95, 254, 254, 0, 223, 0},
    {604, 604, 4, 10, 1, 352, 0},
    {596, 596, 4, 10, 1, 349, 0},
    {585, 585, 4, 10, 0, 223, 0},
    {620, 620, 1, 6, 12, 355, 0},
    {157, 157, 1, 6, 13, 278, 0},
    {82, 82, 254, 254, 0, 232, 0},
    {632, 632, 1, 6, 0, 223, 0},
    {557, 557, 254, 254, 0, 223, 0},
    {555, 555, 254, 254, 0, 223, 0},
    {558, 558, 254, 254, 0, 223, 0},
    {556, 556, 254, 254, 0, 223, 0},
    {574, 574, 254, 254, 21, 342, 0},
    {578, 578, 254, 254, 22, 344, 0},
    {57, 57, 254, 254, 0, 232, 0},
    {58, 58, 254, 254, 0, 232, 0},
    {17, 17, 254, 254, 0, 232, 0},
    {570, 570, 254, 254, 3, 232, 0},
    {573, 573, 254, 254, 23, 341, 0},
    {577, 577, 254, 254, 0, 232, 0},
    {576, 576, 254, 254, 0, 232, 0},
    {193, 193, 1, 6, 39, 234, 0},
    {192, 192, 1, 6, 39, 234, 0},
    {194, 194, 1, 6, 39, 234, 0},
    {195, 195, 1, 6, 39, 234, 0},
    {196, 196, 1, 6, 39, 234, 0},
    {87, 87, 254, 254, 77, 247, 0},
    {86, 86, 254, 254, 78, 246, 0},
    {85, 85, 254, 254, 79, 245, 0},
    {361, 361, 254, 254, 0, 308, 0},
    {362, 362, 254, 254, 0, 310, 0},
    {362, 618, 254, 254, 0, 307, 0},
    {362, 381, 254, 254, 0, 307, 0},
    {586, 586, 4, 10, 41, 346, 0},
    {595, 595, 254, 254, 0, 348, 0},
    {619, 619, 254, 254, 0, 223, 0},
    {603, 602, 254, 5, 0, 223, 0},
    {603, 603, 0, 254, 0, 223, 0},
    {619, 533, 254, 5, 0, 223, 0},
    {619, 534, 0, 254, 0, 223, 0},
    {619, 531, 254, 5, 0, 223, 0},
    {619, 532, 0, 254, 0, 223, 0},
    {619, 103, 254, 5, 0, 223, 0},
    {90, 90, 2, 254, 0, 304, 0},
    {91, 91, 2, 254, 0, 304, 0},
    {92, 92, 2, 254, 0, 223, 0},
    {94, 94, 2, 5, 120, 249, 0},
    {491, 491, 254, 254, 0, 223, 0},
    {506, 506, 2, 5, 0, 223, 0},
    {508, 508, 2, 5, 0, 223, 0},
    {434, 434, 2, 5, 0, 223, 0},
    {217, 217, 4, 10, 30, 301, 0},
    {218, 218, 4, 10, 31, 302, 0},
    {215, 215, 3, 10, 0, 223, 0},
    {216, 216, 3, 10, 0, 223, 0},
    {219, 219, 254, 254, 0, 223, 0},
    {220, 220, 254, 254, 0, 223, 0},
    {492, 492, 254, 254, 29, 223, 0},
    {529, 529, 1, 6, 0, 223, 0},
    {484, 484, 1, 6, 0, 223, 0},
    {485, 485, 1, 6, 0, 223, 0},
    {552, 552, 254, 254, 0, 223, 0},
    {544, 544, 254, 254, 0, 223, 0},
    {543, 543, 254, 254, 0, 223, 0},
    {549, 549, 254, 254, 0, 223, 0},
    {547, 547, 254, 254, 0, 223, 0},
    {545, 545, 254, 254, 0, 223, 0},
    {546, 546, 254, 254, 0, 223, 0},
    {548, 548, 254, 254, 0, 223, 0},
    {551, 551, 100, 254, 0, 223, 0},
    {550, 550, 100, 254, 0, 223, 0},
    {530, 530, 254, 254, 0, 223, 0},
    {102, 102, 254, 254, 53, 252, 0},
    {105, 105, 254, 254, 54, 253, 0},
    {625, 625, 4, 10, 0, 358, 0},
    {72, 72, 3, 254, 62, 238, 0},
    {70, 70, 3, 254, 63, 236, 0},
    {71, 71, 3, 254, 64, 237, 0},
    {69, 69, 3, 254, 65, 235, 0},
    {75, 75, 3, 254, 66, 241, 0},
    {76, 76, 3, 5, 67, 242, 0},
    {73, 73, 3, 5, 68, 239, 0},
    {78, 78, 3, 254, 69, 243, 0},
    {79, 79, 3, 254, 70, 244, 0},
    {74, 74, 3, 254, 71, 240, 0},
    {77, 77, 3, 254, 0, 223, 0},
    {438, 438, 0, 10, 0, 223, 0},
    {495, 495, 0, 9, 0, 223, 0},
    {493, 493, 0, 9, 0, 223, 0},
    {494, 494, 0, 9, 0, 223, 0},
    {371, 371, 2, 254, 74, 319, 0},
    {370, 370, 2, 254, 76, 318, 0},
    {97, 97, 2, 254, 75, 251, 0},
    {621, 621, 2, 254, 75, 251, 0},
    {605, 605, 1, 6, 14, 355, 0},
    {610, 610, 1, 6, 15, 353, 0},
    {483, 483, 254, 254, 0, 223, 0},
    {212, 212, 4, 10, 80, 298, 0},
    {213, 213, 4, 10, 81, 299, 0},
    {571, 571, 254, 254, 82, 339, 0},
    {572, 572, 254, 254, 83, 340, 0},
    {114, 114, 3, 9, 0, 255, 0},
    {116, 116, 3, 9, 85, 256, 0},
    {115, 115, 3, 9, 0, 232, 0},
    {113, 113, 3, 9, 0, 232, 0},
    {117, 117, 3, 9, 0, 232, 0},
    {119, 119, 3, 9, 86, 257, 0},
    {120, 120, 3, 9, 87, 257, 0},
    {28, 121, 3, 9, 0, 232, 0},
    {122, 122, 3, 9, 0, 232, 0},
    {118, 118, 254, 254, 0, 304, 0},
    {222, 222, 4, 10, 84, 303, 0},
    {224, 224, 254, 254, 40, 248, 0},
    {8, 8, 0, 5, 0, 232, 0},
    {554, 554, 254, 254, 0, 223, 0},
    {553, 553, 254, 254, 0, 223, 0},
    {394, 394, 1, 6, 0, 232, 0},
    {395, 395, 1, 6, 0, 232, 0},
    {396, 396, 254, 254, 0, 232, 0},
    {384, 384, 1, 6, 0, 232, 0},
    {385, 385, 1, 6, 0, 232, 0},
    {386, 386, 1, 6, 0, 232, 0},
    {388, 388, 1, 6, 0, 232, 0},
    {392, 392, 1, 6, 0, 232, 0},
    {393, 393, 1, 6, 0, 232, 0},
    {390, 390, 1, 6, 0, 232, 0},
    {391, 391, 1, 6, 0, 232, 0},
    {387, 387, 1, 6, 0, 232, 0},
    {389, 389, 1, 6, 0, 232, 0},
    {398, 398, 1, 6, 0, 232, 0},
    {399, 399, 1, 6, 0, 232, 0},
    {400, 400, 1, 6, 0, 232, 0},
    {401, 401, 1, 6, 0, 232, 0},
    {404, 404, 1, 6, 0, 232, 0},
    {405, 405, 1, 6, 0, 232, 0},
    {402, 402, 1, 6, 0, 232, 0},
    {403, 403, 1, 6, 0, 232, 0},
    {504, 504, 254, 254, 0, 334, 0},
    {4142, 4142, 0, 5, 0, 223, 0},
    {4141, 4141, 0, 5, 0, 223, 0},
    {4106, 4106, 254, 254, 0, 223, 0},
    {4104, 4104, 254, 254, 0, 223, 0},
    {4105, 4105, 254, 254, 0, 223, 0},
    {4103, 4103, 254, 254, 0, 223, 0},
    {4129, 4129, 254, 254, 0, 223, 0},
    {4131, 4131, 254, 254, 0, 223, 0},
    {4130, 4130, 254, 254, 0, 223, 0},
    {4132, 4132, 254, 254, 0, 223, 0},
    {4133, 4133, 254, 254, 94, 4113, 0},
    {4136, 4136, 254, 254, 0, 223, 0},
    {4137, 4137, 254, 254, 0, 223, 0},
    {4134, 4134, 254, 254, 95, 4114, 0},
    {4135, 4135, 254, 254, 95, 4114, 0},
    {4138, 4138, 254, 254, 99, 4115, 0},
    {4121, 4121, 254, 254, 0, 223, 0},
    {4123, 4123, 254, 254, 97, 4110, 0},
    {4124, 4124, 254, 254, 98, 4111, 0},
    {4122, 4122, 254, 254, 96, 4109, 0},
    {4128, 4128, 254, 254, 95, 4114, 0},
    {4125, 4125, 254, 254, 101, 4112, 0},
    {4119, 4119, 254, 254, 100, 4108, 0},
    {4120, 4120, 254, 254, 100, 4108, 0},
    {4139, 4139, 254, 254, 0, 223, 0},
    {4140, 4140, 254, 254, 0, 223, 0},
    {4117, 4117, 254, 254, 102, 4107, 0},
    {4118, 4118, 254, 254, 102, 4107, 0},
    {4102, 4102, 254, 254, 0, 223, 0},
    {4116, 4116, 254, 254, 0, 223, 0},
    {4126, 4126, 0, 5, 0, 223, 0},
    {4127, 4127, 254, 254, 0, 223, 0},
    {177, 177, 254, 254, 93, 291, 0},
    {412, 412, 254, 5, 0, 232, 0},
    {413, 413, 254, 5, 0, 232, 0},
    {406, 406, 0, 5, 0, 232, 0},
    {411, 411, 0, 5, 0, 232, 0},
    {410, 410, 0, 5, 0, 232, 0},
    {409, 409, 0, 5, 0, 232, 0},
    {407, 407, 254, 5, 0, 232, 0},
    {408, 408, 254, 5, 0, 232, 0},
    {8204, 8204, 3, 9, 0, 232, 0},
    {8205, 8205, 3, 9, 0, 232, 0},
    {8206, 8206, 3, 9, 0, 232, 0},
    {8207, 8207, 100, 254, 0, 232, 0},
    {8201, 8201, 100, 9, 103, 232, 0},
    {8202, 8202, 100, 9, 104, 232, 0},
    {8203, 8203, 100, 10, 105, 8200, 0},
    {8208, 8208, 0, 5, 0, 223, 0},
    {20493, 20493, 1, 6, 0, 232, 0},
    {20494, 20494, 1, 6, 0, 232, 0},
    {20490, 20490, 3, 9, 0, 232, 0},
    {20491, 20491, 3, 9, 0, 232, 0},
    {20492, 20492, 100, 254, 0, 232, 0},
    {20487, 20487, 100, 9, 106, 232, 0},
    {20488, 20488, 100, 9, 107, 232, 0},
    {20489, 20489, 100, 10, 108, 20495, 0},
    {515, 515, 2, 5, 111, 232, 0},
    {516, 516, 2, 5, 112, 232, 0},
    {363, 363, 2, 10, 113, 309, 0},
    {606, 606, 3, 9, 39, 234, 0},
    {486, 486, 3, 9, 40, 248, 0},
    {487, 487, 3, 9, 40, 248, 0},
    {422, 422, 4, 5, 116, 330, 0},
    {614, 362, 254, 254, 0, 310, 0},
    {12292, 12292, 1, 6, 0, 12291, 0},
    {101, 101, 254, 254, 0, 223, 0},
    {98, 98, 3, 9, 0, 232, 0},
    {100, 100, 3, 9, 0, 232, 0},
    {99, 99, 3, 9, 0, 232, 0},
    {615, 615, 4, 10, 121, 354, 0},
    {208, 208, 4, 10, 126, 295, 0},
    {375, 375, 254, 254, 0, 223, 0},
    {633, 633, 4, 10, 0, 359, 0},
    {634, 634, 4, 10, 0, 307, 0},
    {207, 207, 0, 6, 0, 232, 0},
    {162, 162, 100, 6, 129, 283, 0},
    {163, 163, 100, 6, 129, 232, 0},
    {160, 160, 100, 6, 131, 281, 0},
    {161, 161, 100, 6, 132, 282, 0},
    {24587, 24587, 0, 10, 133, 24585, 0},
    {24588, 24588, 0, 5, 0, 232, 0},
    {24586, 24586, 100, 5, 0, 24584, 0},
    {28682, 28682, 0, 6, 0, 232, 0},
    {28683, 28683, 0, 6, 0, 232, 0},
    {28684, 28684, 0, 6, 0, 232, 0},
    {28686, 28686, 0, 6, 0, 232, 0},
    {28685, 28685, 0, 6, 0, 232, 0},
    {28680, 28680, 0, 5, 134, 28688, 0},
    {28681, 28681, 0, 5, 0, 28689, 0},
    {614, 28687, 4, 5, 135, 28690, 0},
    {415, 415, 254, 254, 0, 223, 0},
    {414, 414, 254, 254, 0, 223, 0},
    {490, 490, 254, 254, 136, 331, 0},
    {11, 11, 254, 254, 137, 231, 0},
};

/* 80391010-803914A8 -00001 0498+00 4/4 0/0 0/0 .rodata          m_wlAnmDataTable__9daAlink_c */
daAlink_WlAnmData const daAlink_c::m_wlAnmDataTable[147] = {
    {767, 0, 1, 2600, 255, 255},      {778, 0, 2, 270, 255, 255},
    {779, 0, 2, 270, 255, 255},       {692, 0, 12, 65535, 255, 255},
    {716, 1, 12, 65535, 255, 255},    {714, 1, 12, 65535, 255, 255},
    {715, 1, 12, 65535, 255, 255},    {773, 0, 1, 4095, 255, 255},
    {736, 0, 7, 767, 255, 255},       {735, 0, 7, 1568, 255, 255},
    {734, 0, 12, 65535, 255, 255},    {745, 1, 0, 2047, 255, 255},
    {724, 1, 12, 65535, 255, 255},    {725, 2, 12, 65535, 255, 255},
    {774, 1, 0, 511, 255, 255},       {666, 1, 7, 2559, 255, 255},
    {766, 1, 5, 2559, 255, 255},      {668, 1, 5, 1023, 255, 255},
    {667, 1, 12, 65535, 255, 255},    {765, 1, 6, 6655, 255, 255},
    {764, 1, 12, 65535, 255, 255},    {763, 0, 8, 1023, 255, 255},
    {679, 0, 12, 65535, 255, 255},    {771, 0, 3, 2590, 50, 255},
    {768, 0, 3, 1791, 255, 255},      {706, 1, 5, 1791, 255, 255},
    {750, 1, 12, 65535, 255, 255},    {762, 1, 12, 65535, 255, 255},
    {638, 0, 12, 65535, 255, 255},    {780, 1, 2, 274, 255, 255},
    {746, 1, 12, 65535, 255, 255},    {747, 1, 12, 65535, 255, 255},
    {748, 2, 12, 65535, 255, 255},    {743, 0, 2, 270, 255, 255},
    {739, 1, 5, 5375, 255, 255},      {740, 1, 5, 6911, 255, 255},
    {742, 0, 12, 65535, 255, 255},    {744, 8, 1, 6450, 255, 255},
    {741, 9, 2, 270, 30, 45},         {693, 1, 12, 65535, 255, 255},
    {684, 2, 12, 65535, 255, 255},    {682, 2, 12, 65535, 255, 255},
    {686, 2, 12, 65535, 255, 255},    {688, 2, 12, 65535, 255, 255},
    {685, 2, 10, 8447, 255, 255},     {683, 2, 11, 5375, 255, 255},
    {687, 2, 12, 65535, 255, 255},    {689, 2, 12, 65535, 255, 255},
    {752, 0, 12, 65535, 255, 255},    {770, 0, 1, 2600, 255, 255},
    {719, 0, 12, 65535, 255, 255},    {720, 0, 12, 65535, 255, 255},
    {717, 0, 12, 65535, 255, 255},    {718, 0, 12, 65535, 255, 255},
    {759, 1, 12, 65535, 255, 255},    {760, 0, 1, 3583, 255, 255},
    {758, 0, 2, 511, 255, 255},       {755, 0, 4, 1023, 255, 255},
    {753, 1, 12, 65535, 255, 255},    {775, 0, 12, 65535, 255, 255},
    {681, 1, 12, 65535, 255, 255},    {680, 1, 12, 65535, 255, 255},
    {690, 1, 12, 65535, 255, 255},    {691, 1, 12, 65535, 255, 255},
    {653, 1, 12, 65535, 255, 255},    {654, 1, 12, 65535, 255, 255},
    {655, 0, 12, 65535, 255, 255},    {656, 1, 12, 65535, 255, 255},
    {639, 0, 12, 65535, 255, 255},    {641, 0, 12, 65535, 255, 255},
    {640, 0, 12, 65535, 255, 255},    {730, 0, 12, 65535, 255, 255},
    {645, 1, 12, 65535, 255, 255},    {644, 1, 12, 65535, 255, 255},
    {647, 1, 12, 65535, 255, 255},    {646, 1, 12, 65535, 255, 255},
    {643, 1, 12, 65535, 255, 255},    {642, 1, 12, 65535, 255, 255},
    {731, 0, 12, 65535, 255, 255},    {732, 0, 9, 2047, 255, 255},
    {652, 1, 12, 65535, 255, 255},    {648, 1, 12, 65535, 255, 255},
    {649, 1, 12, 65535, 255, 255},    {651, 1, 12, 65535, 255, 255},
    {650, 1, 12, 65535, 255, 255},    {661, 2, 12, 65535, 255, 255},
    {660, 2, 12, 65535, 255, 255},    {707, 1, 12, 65535, 255, 255},
    {709, 1, 12, 65535, 255, 255},    {708, 1, 12, 65535, 255, 255},
    {676, 0, 12, 65535, 255, 255},    {678, 0, 12, 65535, 255, 255},
    {710, 0, 12, 65535, 255, 255},    {711, 1, 12, 65535, 255, 255},
    {712, 1, 12, 65535, 255, 255},    {713, 0, 1, 7935, 255, 255},
    {722, 1, 12, 65535, 255, 255},    {723, 1, 10, 1279, 255, 255},
    {665, 0, 12, 65535, 255, 255},    {662, 1, 12, 65535, 255, 255},
    {663, 1, 12, 65535, 255, 255},    {664, 1, 11, 10495, 255, 255},
    {738, 1, 12, 65535, 255, 255},    {737, 1, 12, 65535, 255, 255},
    {697, 0, 11, 16895, 255, 255},    {698, 13, 12, 65535, 255, 255},
    {761, 0, 5, 14662, 85, 255},      {749, 1, 6, 511, 255, 255},
    {721, 1, 12, 65535, 255, 255},    {733, 0, 12, 65535, 255, 255},
    {677, 0, 12, 65535, 255, 255},    {674, 0, 12, 65535, 255, 255},
    {675, 0, 12, 65535, 255, 255},    {776, 1, 12, 65535, 255, 255},
    {751, 0, 12, 65535, 255, 255},    {694, 2, 4, 511, 255, 255},
    {659, 1, 12, 65535, 255, 255},    {657, 1, 12, 65535, 255, 255},
    {700, 0, 12, 65535, 255, 255},    {703, 0, 12, 65535, 255, 255},
    {670, 2, 12, 65535, 255, 255},    {669, 2, 12, 65535, 255, 255},
    {658, 1, 5, 4351, 255, 255},      {696, 6, 12, 65535, 255, 255},
    {756, 7, 12, 65535, 255, 255},    {757, 7, 12, 65535, 255, 255},
    {772, 2, 12, 65535, 255, 255},    {769, 0, 1, 4095, 255, 255},
    {754, 0, 1, 3885, 255, 255},      {727, 0, 12, 65535, 255, 255},
    {699, 3, 12, 65535, 255, 255},    {705, 1, 12, 65535, 255, 255},
    {704, 1, 0, 1535, 255, 255},      {777, 0, 1, 511, 255, 255},
    {671, 5, 12, 65535, 255, 255},    {728, 0, 12, 65535, 255, 255},
    {729, 2, 12, 65535, 255, 255},    {16387, 0, 12, 65535, 255, 255},
    {672, 0, 12, 65535, 255, 255},    {673, 0, 12, 65535, 255, 255},
    {726, 1, 0, 5178, 255, 255},      {32808, 10, 12, 65535, 255, 255},
    {32807, 10, 12, 65535, 255, 255}, {32810, 11, 12, 65535, 255, 255},
    {32809, 11, 12, 65535, 255, 255}, {32812, 12, 12, 65535, 255, 255},
    {32811, 12, 12, 65535, 255, 255},
};

/* 803914A8-80391734 01DB08 028C+00 2/2 0/0 0/0 .rodata          m_faceTexDataTable__9daAlink_c */
SECTION_RODATA u8 const daAlink_c::m_faceTexDataTable[652] = {
    0x03, 0xDF, 0x03, 0x79, 0x03, 0xE0, 0x03, 0x7A, 0x03, 0xE1, 0x03, 0x7B, 0x03, 0xDF, 0x03, 0x78,
    0x03, 0xDF, 0x03, 0x83, 0x03, 0xE2, 0x03, 0x2C, 0x03, 0xC6, 0x03, 0x6A, 0x03, 0xD5, 0x03, 0x6B,
    0x03, 0xB0, 0x03, 0x2D, 0x03, 0xB1, 0x03, 0x2E, 0x03, 0xE6, 0x03, 0x82, 0x03, 0xE5, 0x03, 0x81,
    0x03, 0xF2, 0x03, 0x98, 0x03, 0xC3, 0x03, 0x53, 0x03, 0xAF, 0x03, 0x98, 0x03, 0xF0, 0x03, 0x96,
    0x03, 0xF4, 0x03, 0x2C, 0x03, 0xF3, 0x03, 0x2C, 0x03, 0xC5, 0x03, 0x5C, 0x03, 0xAF, 0x03, 0x42,
    0x03, 0xAF, 0x03, 0x43, 0x03, 0xEE, 0x03, 0x8E, 0x03, 0xEF, 0x03, 0x8F, 0x03, 0xED, 0x03, 0x8D,
    0x03, 0xD8, 0x03, 0x6E, 0x03, 0xD9, 0x03, 0x6F, 0x03, 0xDB, 0x03, 0x73, 0x03, 0xD7, 0x03, 0x6D,
    0x03, 0xE9, 0x03, 0x88, 0x03, 0xE4, 0x03, 0x7D, 0x03, 0xD1, 0x03, 0x67, 0x03, 0xD2, 0x03, 0x68,
    0x03, 0xAF, 0x03, 0x4A, 0x03, 0xAF, 0x03, 0x4B, 0x03, 0xAF, 0x03, 0x4C, 0x03, 0xAF, 0x03, 0x4D,
    0x03, 0xAF, 0x03, 0x4E, 0x03, 0xAF, 0x03, 0x91, 0x03, 0xE7, 0x03, 0x86, 0x03, 0xB4, 0x03, 0x2C,
    0x03, 0xBC, 0x03, 0x2C, 0x03, 0xAF, 0x03, 0x90, 0x03, 0xC9, 0x03, 0x5E, 0x03, 0xC7, 0x03, 0x5D,
    0x03, 0xCA, 0x03, 0x5F, 0x03, 0xAF, 0x03, 0x95, 0x03, 0xAF, 0x03, 0x41, 0x03, 0xAF, 0x03, 0x51,
    0x03, 0xAF, 0x03, 0x52, 0x03, 0xAF, 0x03, 0x49, 0x03, 0xAF, 0x03, 0x44, 0x03, 0xAF, 0x03, 0x45,
    0x03, 0xAF, 0x03, 0x46, 0x03, 0xBD, 0x03, 0x2C, 0x03, 0xBE, 0x03, 0x2C, 0x03, 0xEA, 0x03, 0x89,
    0x03, 0xAF, 0x03, 0x8A, 0x03, 0xCB, 0x03, 0x2C, 0x03, 0xAF, 0x03, 0x55, 0x03, 0xAF, 0x03, 0x54,
    0x03, 0xAF, 0x03, 0x50, 0x03, 0xAF, 0x03, 0x4F, 0x03, 0xB8, 0x03, 0x34, 0x03, 0xB6, 0x03, 0x32,
    0x03, 0xB7, 0x03, 0x33, 0x03, 0xB5, 0x03, 0x31, 0x03, 0xAF, 0x03, 0x36, 0x03, 0xAF, 0x03, 0x37,
    0x03, 0xB9, 0x03, 0x2C, 0x03, 0xAF, 0x03, 0x38, 0x03, 0xAF, 0x03, 0x39, 0x03, 0xAF, 0x03, 0x35,
    0x03, 0xDC, 0x03, 0x35, 0x03, 0xDE, 0x03, 0x35, 0x03, 0xDA, 0x03, 0x70, 0x03, 0xAF, 0x03, 0x3E,
    0x03, 0xD3, 0x03, 0x2C, 0x03, 0xBB, 0x03, 0x3C, 0x03, 0xAF, 0x03, 0x3B, 0x03, 0xBA, 0x03, 0x3A,
    0x03, 0xCE, 0x03, 0x64, 0x03, 0xCF, 0x03, 0x65, 0x03, 0xEB, 0x03, 0x8B, 0x03, 0xEC, 0x03, 0x8C,
    0x03, 0xD4, 0x03, 0x69, 0x03, 0xC0, 0x03, 0x2C, 0x03, 0xC1, 0x03, 0x3F, 0x03, 0xC1, 0x03, 0x40,
    0x03, 0xD0, 0x03, 0x66, 0x03, 0xC2, 0x03, 0x2C, 0x03, 0xAF, 0x03, 0x5A, 0x03, 0xC4, 0x03, 0x5B,
    0x03, 0xBF, 0x03, 0x2C, 0x03, 0xC8, 0x03, 0x2C, 0x10, 0x45, 0x10, 0x3B, 0x10, 0x46, 0x03, 0x2C,
    0x10, 0x41, 0x10, 0x37, 0x10, 0x42, 0x10, 0x38, 0x10, 0x43, 0x10, 0x39, 0x10, 0x47, 0x10, 0x3C,
    0x10, 0x40, 0x10, 0x36, 0x10, 0x44, 0x10, 0x3A, 0x10, 0x3F, 0x03, 0x2C, 0x03, 0xAF, 0x20, 0x32,
    0x03, 0xAF, 0x20, 0x33, 0x20, 0x39, 0x20, 0x34, 0x03, 0xAF, 0x50, 0x54, 0x03, 0xAF, 0x50, 0x55,
    0x50, 0x59, 0x50, 0x56, 0x03, 0xE8, 0x03, 0x87, 0x03, 0xAF, 0x03, 0x72, 0x03, 0xAF, 0x03, 0x84,
    0x03, 0xAF, 0x03, 0x85, 0x03, 0xD6, 0x03, 0x6C, 0x03, 0xAF, 0x03, 0x92, 0x03, 0xAF, 0x03, 0x93,
    0x03, 0xAF, 0x03, 0x77, 0x03, 0xAF, 0x03, 0x61, 0x03, 0xAF, 0x03, 0x62, 0x03, 0xCD, 0x03, 0x63,
    0x03, 0xAF, 0x03, 0x3D, 0x03, 0xF1, 0x03, 0x97, 0x03, 0xDC, 0x03, 0x2C, 0x03, 0xDD, 0x03, 0x2C,
    0x03, 0xDE, 0x03, 0x2C, 0x03, 0xB3, 0x03, 0x30, 0x03, 0xCC, 0x03, 0x60, 0x03, 0xAF, 0x03, 0x48,
    0x03, 0xAF, 0x03, 0x47, 0x03, 0xAF, 0x03, 0x58, 0x03, 0xAF, 0x03, 0x59, 0x03, 0xAF, 0x03, 0x56,
    0x03, 0xAF, 0x03, 0x57, 0x60, 0x18, 0x60, 0x15, 0x03, 0xAF, 0x70, 0x70, 0x03, 0xAF, 0x70, 0x71,
    0x03, 0xE3, 0x03, 0x7C, 0x03, 0xB2, 0x03, 0x2F, 0x03, 0xAF, 0x03, 0x94, 0x04, 0x17, 0x03, 0xA9,
    0x04, 0x18, 0x03, 0xAA, 0x04, 0x1A, 0x03, 0xA7, 0x04, 0x1E, 0x03, 0xA7, 0x04, 0x1B, 0x03, 0xA7,
    0x04, 0x0E, 0x03, 0xA7, 0x04, 0x0C, 0x03, 0xA7, 0x04, 0x0F, 0x03, 0xA7, 0x04, 0x10, 0x03, 0xA7,
    0x04, 0x20, 0x03, 0xA7, 0x04, 0x15, 0x03, 0xA7, 0x04, 0x16, 0x03, 0xA7, 0x04, 0x0B, 0x03, 0xA7,
    0x04, 0x11, 0x03, 0xA7, 0x04, 0x1F, 0x03, 0xA7, 0x04, 0x0A, 0x03, 0xA7, 0x04, 0x09, 0x03, 0xA7,
    0x04, 0x12, 0x03, 0xA7, 0x04, 0x1C, 0x03, 0xA7, 0x04, 0x1D, 0x03, 0xA7, 0x04, 0x19, 0x03, 0xAB,
    0x04, 0x13, 0x03, 0xA8, 0x04, 0x14, 0x03, 0xA7, 0x04, 0x0D, 0x03, 0xA7,
};
COMPILER_STRIP_GATE(0x803914A8, &daAlink_c::m_faceTexDataTable);

/* 80391734-80391740 01DD94 000C+00 1/1 0/0 0/0 .rodata          @5908 */
SECTION_RODATA static u8 const lit_5908[12] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80391734, &lit_5908);

/* 80391740-80391754 01DDA0 0014+00 0/1 0/0 0/0 .rodata          atnNormalType1$6976 */
#pragma push
#pragma force_active on
static int const atnNormalType1[5] = {4, 1, 1, 2, 0};
#pragma pop

/* 80391754-80391768 01DDB4 0014+00 0/1 0/0 0/0 .rodata          atnNormalType2$6977 */
#pragma push
#pragma force_active on
static int const atnNormalType2[5] = {3, 0, 0, 1, 1};
#pragma pop

/* 80391768-8039177C 01DDC8 0014+00 0/1 0/0 0/0 .rodata          atnNormalType3$6978 */
#pragma push
#pragma force_active on
static int const atnNormalType3[5] = {4, 1, 1, 0, 0};
#pragma pop

/* 8039177C-80391790 01DDDC 0014+00 0/1 0/0 0/0 .rodata          atnFinishType$6979 */
#pragma push
#pragma force_active on
static int const atnFinishType[5] = {2, 1, 0, 5, 1};
#pragma pop

/* 80391790-803917A4 01DDF0 0014+00 0/1 0/0 0/0 .rodata          hitType$6980 */
#pragma push
#pragma force_active on
static int const hitType[5] = {4, 0, 5, 0, 1};
#pragma pop

/* 803917A4-803917B8 01DE04 0014+00 0/1 0/0 0/0 .rodata          hitFinishType$6981 */
#pragma push
#pragma force_active on
static int const hitFinishType[5] = {2, 1, 0, 5, 0};
#pragma pop

/* 803917B8-803917CC 01DE18 0014+00 0/1 0/0 0/0 .rodata          normalType1$6982 */
#pragma push
#pragma force_active on
static int const normalType1_6982[5] = {0, 2, 1, 2, 1};
#pragma pop

/* 803917CC-803917E0 01DE2C 0014+00 0/1 0/0 0/0 .rodata          normalType2$6983 */
#pragma push
#pragma force_active on
static int const normalType2[5] = {1, 1, 2, 1, 2};
#pragma pop

/* 803917E0-803917F4 01DE40 0014+00 0/1 0/0 0/0 .rodata          normalType3$6984 */
#pragma push
#pragma force_active on
static int const normalType3[5] = {4, 0, 1, 2, 1};
#pragma pop

/* 803917F4-80391808 01DE54 0014+00 0/1 0/0 0/0 .rodata          finishType$6985 */
#pragma push
#pragma force_active on
static int const finishType[5] = {2, 0, 0, 5, 1};
#pragma pop

/* 80391808-80391858 01DE68 0050+00 0/1 0/0 0/0 .rodata          cutParamTable$7312 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const cutParamTable_7312[80] = {
    0x00, 0x00, 0x00, 0x62, 0x00, 0x00, 0x00, 0x6F, 0x01, 0x01, 0x00, 0x00, 0x40, 0xC0, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x63, 0x00, 0x00, 0x00, 0x6F, 0x04, 0x01, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x64, 0x00, 0x00, 0x00, 0x6F, 0x03, 0x01, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x65, 0x00, 0x00, 0x00, 0x6F, 0x21, 0x0E, 0x00, 0x00, 0x40, 0xC0, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x66, 0x00, 0x00, 0x00, 0x70, 0x02, 0x0E, 0x00, 0x00, 0x40, 0xC0, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80391808, &cutParamTable_7312);
#pragma pop

/* 80391858-803918B8 01DEB8 0060+00 0/1 0/0 0/0 .rodata          cutParamTable$7455 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const cutParamTable_7455[96] = {
    0x00, 0x00, 0x00, 0x67, 0x00, 0x00, 0x00, 0x6F, 0x06, 0x01, 0x64, 0x64, 0x40, 0xA0, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x00, 0x6F, 0x07, 0x01, 0x64, 0x64, 0x41, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x69, 0x00, 0x00, 0x00, 0x6F, 0x20, 0x0E, 0x64, 0x64, 0x41, 0x20, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x6A, 0x00, 0x00, 0x00, 0x6F, 0x1A, 0x01, 0x05, 0x0C, 0x41, 0x20, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x6B, 0x00, 0x00, 0x00, 0x6F, 0x1F, 0x01, 0x07, 0x0E, 0x41, 0x20, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x6C, 0x00, 0x00, 0x00, 0x6F, 0x15, 0x01, 0x64, 0x64, 0x41, 0x20, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80391858, &cutParamTable_7455);
#pragma pop

/* 803918B8-803918C4 01DF18 000C+00 1/1 0/0 0/0 .rodata          localCenter$11047 */
static Vec const localCenter = {-15.0f, 0.0f, 18.0f};

/* 803918C4-803918D0 01DF24 000C+00 1/1 0/0 0/0 .rodata          localPos$11819 */
static Vec const localPos = {3.45f, 45.32f, -7.0f};

/* 803918D0-803918DC 01DF30 000C+00 1/1 0/0 0/0 .rodata          slingLocalPos$12042 */
static Vec const slingLocalPos = {10.0f, 10.0f, 0.0f};

/* 803918DC-803918E8 01DF3C 000C+00 1/1 0/0 0/0 .rodata          localSidePos$14270 */
static Vec const localSidePos = {2.3f, -15.5f, 15.6f};

/* 803918E8-803918F4 01DF48 000C+00 0/1 0/0 0/0 .rodata          m_handLeftOutSidePos__9daAlink_c */
#pragma push
#pragma force_active on
SECTION_RODATA u8 const daAlink_c::m_handLeftOutSidePos[12] = {
    0x41, 0x10, 0x00, 0x00, 0xC0, 0xA0, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x803918E8, &daAlink_c::m_handLeftOutSidePos);
#pragma pop

/* 803918F4-80391900 01DF54 000C+00 0/1 0/0 0/0 .rodata          m_handRightOutSidePos__9daAlink_c
 */
#pragma push
#pragma force_active on
SECTION_RODATA u8 const daAlink_c::m_handRightOutSidePos[12] = {
    0x41, 0x10, 0x00, 0x00, 0xC0, 0xA0, 0x00, 0x00, 0xC0, 0x40, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x803918F4, &daAlink_c::m_handRightOutSidePos);
#pragma pop

/* 80391900-8039190C 01DF60 000C+00 0/1 0/0 1/1 .rodata          m_handLeftInSidePos__9daAlink_c */
SECTION_RODATA u8 const daAlink_c::m_handLeftInSidePos[12] = {
    0x41, 0x10, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80391900, &daAlink_c::m_handLeftInSidePos);

/* 8039190C-80391918 01DF6C 000C+00 0/1 0/0 1/1 .rodata          m_handRightInSidePos__9daAlink_c */
SECTION_RODATA u8 const daAlink_c::m_handRightInSidePos[12] = {
    0x41, 0x10, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00, 0xC0, 0x40, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x8039190C, &daAlink_c::m_handRightInSidePos);

/* 80391918-80391924 01DF78 000C+00 0/1 0/0 0/0 .rodata          horseLocalLeft$17678 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const horseLocalLeft[12] = {
    0x41, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80391918, &horseLocalLeft);
#pragma pop

/* 80391924-80391930 01DF84 000C+00 0/1 0/0 0/0 .rodata          horseLocalRight$17679 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const horseLocalRight[12] = {
    0xC1, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80391924, &horseLocalRight);
#pragma pop

/* 80391930-8039193C 01DF90 000C+00 0/1 0/0 0/0 .rodata          horseLocalBack$17680 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const horseLocalBack[12] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC3, 0x48, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80391930, &horseLocalBack);
#pragma pop

/* 8039193C-80391948 01DF9C 000C+00 0/1 0/0 0/0 .rodata          boarLocalLeft$17681 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const boarLocalLeft[12] = {
    0x43, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC1, 0x90, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x8039193C, &boarLocalLeft);
#pragma pop

/* 80391948-80391954 01DFA8 000C+00 0/1 0/0 0/0 .rodata          boarLocalRight$17682 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const boarLocalRight[12] = {
    0xC3, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC1, 0x90, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80391948, &boarLocalRight);
#pragma pop

/* 80391954-80391960 01DFB4 000C+00 1/1 0/0 0/0 .rodata          localHorseRun$18095 */
SECTION_RODATA static u8 const localHorseRun_18095[12] = {
    0x41, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC2, 0x34, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80391954, &localHorseRun_18095);

/* 80391960-8039196C 01DFC0 000C+00 1/1 0/0 0/0 .rodata          localHorseRun$18103 */
SECTION_RODATA static u8 const localHorseRun_18103[12] = {
    0x41, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC1, 0x20, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80391960, &localHorseRun_18103);

/* 8039196C-80391978 01DFCC 000C+00 1/1 0/0 0/0 .rodata          localOffset$18237 */
SECTION_RODATA static u8 const localOffset_18237[12] = {
    0xC1, 0xF0, 0x00, 0x00, 0xC1, 0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x8039196C, &localOffset_18237);

/* 80391978-80391984 01DFD8 000C+00 1/1 0/0 0/0 .rodata          @18938 */
SECTION_RODATA static u8 const lit_18938[12] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80391978, &lit_18938);

/* 80391984-80391990 01DFE4 000C+00 1/1 0/0 0/0 .rodata          boarRideOffset$19147 */
SECTION_RODATA static u8 const boarRideOffset[12] = {
    0xBF, 0x5E, 0xB8, 0x52, 0x40, 0x55, 0x1E, 0xB8, 0xC1, 0xBE, 0x28, 0xF6,
};
COMPILER_STRIP_GATE(0x80391984, &boarRideOffset);

/* 80391990-8039199C 01DFF0 000C+00 1/1 0/0 0/0 .rodata          leftOffset$19386 */
SECTION_RODATA static u8 const leftOffset[12] = {
    0x42, 0x96, 0x00, 0x00, 0x42, 0xCC, 0x00, 0x00, 0x40, 0xC7, 0x2B, 0x02,
};
COMPILER_STRIP_GATE(0x80391990, &leftOffset);

/* 8039199C-803919A8 01DFFC 000C+00 1/1 0/0 0/0 .rodata          rightOffset$19387 */
SECTION_RODATA static u8 const rightOffset[12] = {
    0xC2, 0x96, 0x00, 0x00, 0x42, 0xCC, 0x00, 0x00, 0x40, 0xC7, 0x12, 0x6F,
};
COMPILER_STRIP_GATE(0x8039199C, &rightOffset);

/* 803919A8-803919D8 01E008 0030+00 0/1 0/0 0/0 .rodata          cutParamTable$19765 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const cutParamTable_19765[48] = {
    0x00, 0x00, 0x00, 0x20, 0x00, 0x91, 0x01, 0x0C, 0x00, 0x0E, 0x22, 0x00, 0x00, 0x00, 0x00, 0x21,
    0x00, 0x92, 0x01, 0x0D, 0x00, 0x13, 0x23, 0x00, 0x00, 0x00, 0x00, 0x22, 0x00, 0x93, 0x01, 0x0E,
    0x00, 0x13, 0x2A, 0x00, 0x00, 0x00, 0x00, 0x23, 0x00, 0x94, 0x01, 0x0F, 0x00, 0x00, 0x2A, 0x00,
};
COMPILER_STRIP_GATE(0x803919A8, &cutParamTable_19765);
#pragma pop

/* 803919D8-803919E4 01E038 000A+02 1/1 0/0 0/0 .rodata          anmIdx$19945 */
SECTION_RODATA static u8 const anmIdx[10 + 2 /* padding */] = {
    0x00,
    0xBA,
    0x00,
    0xB8,
    0x00,
    0xBB,
    0x00,
    0xBC,
    0x00,
    0xB9,
    /* padding */
    0x00,
    0x00,
};
COMPILER_STRIP_GATE(0x803919D8, &anmIdx);

/* 803919E4-803919F0 01E044 000C+00 1/1 0/0 0/0 .rodata          localPaddleTop$20605 */
SECTION_RODATA static u8 const localPaddleTop[12] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC3, 0x1E, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x803919E4, &localPaddleTop);

/* 803919F0-803919FC 01E050 000C+00 1/1 0/0 0/0 .rodata          underOffsetY$23302 */
SECTION_RODATA static u8 const underOffsetY[12] = {
    0x41, 0x70, 0x00, 0x00, 0x42, 0xB4, 0x00, 0x00, 0x43, 0x16, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x803919F0, &underOffsetY);

/* 803919FC-80391A08 01E05C 000C+00 1/1 0/0 0/0 .rodata          hsVec$28749 */
SECTION_RODATA static u8 const hsVec[12] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x803919FC, &hsVec);

/* 80391A08-80391A14 01E068 000C+00 1/1 0/0 0/0 .rodata          hookRoot$29726 */
SECTION_RODATA static f32 const hookRoot[3] = {
    0.0f,
    0.0f,
    23.5f,
};
COMPILER_STRIP_GATE(0x80391A08, &hookRoot);

/* 80391A14-80391A20 01E074 000C+00 1/1 0/0 0/0 .rodata          bottleTop$32160 */
SECTION_RODATA static u8 const bottleTop[12] = {
    0x00, 0x00, 0x00, 0x00, 0x41, 0xC8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80391A14, &bottleTop);

/* 80391A20-80391A2C 01E080 000C+00 1/1 0/0 0/0 .rodata          kandelaarOffset$32655 */
SECTION_RODATA static u8 const kandelaarOffset[12] = {
    0x00, 0x00, 0x00, 0x00, 0xC1, 0x88, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80391A20, &kandelaarOffset);

/* 80391A2C-80391A38 01E08C 000C+00 1/1 0/0 0/0 .rodata          @33690 */
SECTION_RODATA static u8 const lit_33690[12] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80391A2C, &lit_33690);

/* 80391A38-80391A44 01E098 000C+00 0/1 0/0 0/0 .rodata          ironBallPosVec$34212 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const ironBallPosVec[12] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC2, 0x28, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80391A38, &ironBallPosVec);
#pragma pop

/* 80391A44-80391A50 01E0A4 000C+00 0/1 0/0 0/0 .rodata          handCenterOffsetVec$34213 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const handCenterOffsetVec[12] = {
    0x40, 0x00, 0x00, 0x00, 0xC1, 0xC8, 0x00, 0x00, 0x41, 0x48, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80391A44, &handCenterOffsetVec);
#pragma pop

/* 80391A50-80391A5C 01E0B0 000C+00 1/1 0/0 0/0 .rodata          @34968 */
SECTION_RODATA static u8 const lit_34968[12] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80391A50, &lit_34968);

/* 80391A5C-80391B5C 01E0BC 00FF+01 1/1 0/0 0/0 .rodata          getSeType$37390 */
SECTION_RODATA static u8 const getSeType[255 + 1 /* padding */] = {
    0x08,
    0x03,
    0x03,
    0x03,
    0x03,
    0x03,
    0x02,
    0x02,
    0x08,
    0x08,
    0x03,
    0x03,
    0x03,
    0x03,
    0x03,
    0x03,
    0x03,
    0x03,
    0x03,
    0x08,
    0x08,
    0x08,
    0x03,
    0x03,
    0x03,
    0x03,
    0x03,
    0x03,
    0x03,
    0x03,
    0x02,
    0x08,
    0x02,
    0x02,
    0x00,
    0x01,
    0x01,
    0x02,
    0x01,
    0x08,
    0x01,
    0x08,
    0x01,
    0x01,
    0x01,
    0x08,
    0x08,
    0x08,
    0x01,
    0x01,
    0x08,
    0x02,
    0x08,
    0x01,
    0x01,
    0x08,
    0x08,
    0x08,
    0x08,
    0x08,
    0x08,
    0x01,
    0x01,
    0x02,
    0x01,
    0x01,
    0x01,
    0x01,
    0x01,
    0x01,
    0x01,
    0x01,
    0x01,
    0x01,
    0x01,
    0x01,
    0x01,
    0x08,
    0x08,
    0x01,
    0x01,
    0x01,
    0x08,
    0x08,
    0x08,
    0x01,
    0x01,
    0x08,
    0x08,
    0x08,
    0x08,
    0x08,
    0x08,
    0x08,
    0x08,
    0x08,
    0x01,
    0x02,
    0x02,
    0x02,
    0x02,
    0x01,
    0x02,
    0x08,
    0x02,
    0x02,
    0x02,
    0x02,
    0x02,
    0x02,
    0x02,
    0x02,
    0x08,
    0x08,
    0x08,
    0x01,
    0x02,
    0x01,
    0x02,
    0x01,
    0x02,
    0x02,
    0x02,
    0x02,
    0x02,
    0x02,
    0x02,
    0x02,
    0x02,
    0x02,
    0x02,
    0x02,
    0x08,
    0x08,
    0x08,
    0x08,
    0x08,
    0x08,
    0x08,
    0x08,
    0x08,
    0x08,
    0x08,
    0x08,
    0x02,
    0x02,
    0x08,
    0x08,
    0x08,
    0x08,
    0x08,
    0x08,
    0x08,
    0x08,
    0x08,
    0x08,
    0x02,
    0x01,
    0x02,
    0x02,
    0x08,
    0x01,
    0x01,
    0x01,
    0x08,
    0x08,
    0x08,
    0x08,
    0x08,
    0x08,
    0x08,
    0x08,
    0x08,
    0x08,
    0x08,
    0x08,
    0x05,
    0x05,
    0x05,
    0x05,
    0x05,
    0x05,
    0x08,
    0x08,
    0x08,
    0x08,
    0x08,
    0x08,
    0x08,
    0x08,
    0x08,
    0x08,
    0x04,
    0x04,
    0x04,
    0x04,
    0x04,
    0x04,
    0x04,
    0x04,
    0x04,
    0x04,
    0x04,
    0x04,
    0x04,
    0x04,
    0x04,
    0x04,
    0x04,
    0x04,
    0x04,
    0x04,
    0x04,
    0x04,
    0x04,
    0x04,
    0x08,
    0x08,
    0x08,
    0x08,
    0x08,
    0x08,
    0x08,
    0x08,
    0x06,
    0x08,
    0x08,
    0x08,
    0x08,
    0x08,
    0x08,
    0x08,
    0x08,
    0x02,
    0x02,
    0x01,
    0x02,
    0x02,
    0x02,
    0x08,
    0x08,
    0x08,
    0x08,
    0x02,
    0x03,
    0x03,
    0x01,
    0x08,
    0x03,
    0x02,
    0x02,
    0x02,
    0x02,
    0x01,
    0x02,
    /* padding */
    0x00,
};
COMPILER_STRIP_GATE(0x80391A5C, &getSeType);

/* 80391B5C-80391B7C 01E1BC 0020+00 1/1 0/0 0/0 .rodata          bgmLabel$37391 */
static u32 const bgmLabel[8] = {0x100001C, 0x100000A, 0x100000B, 0x1000014,
                                0x1000081, 0x1000082, 0x1000083, 0x10000A0};

/* 80391B7C-80391B8C 01E1DC 0010+00 1/1 0/0 0/0 .rodata          rupeeCount$37407 */
static int const rupeeCount[4] = {20, 50, 100, 200};

/* 80391B8C-80391BA0 01E1EC 0014+00 0/1 0/0 0/0 .rodata          heartPieceMessage$37580 */
#pragma push
#pragma force_active on
static u32 const heartPieceMessage[5] = {0x86, 0x9C, 0x9D, 0x9E, 0x9F};
#pragma pop

/* 80391BA0-80391BAC 01E200 000C+00 0/1 0/0 0/0 .rodata          effName$39419 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const effName_39419[12] = {
    0x09, 0xF5, 0x09, 0xF6, 0x09, 0xF7, 0x09, 0xF8, 0x09, 0xF9, 0x09, 0xFA,
};
COMPILER_STRIP_GATE(0x80391BA0, &effName_39419);
#pragma pop

/* 80391BAC-80391BB8 01E20C 000C+00 1/1 0/0 0/0 .rodata          smokeParticleScale$39643 */
SECTION_RODATA static u8 const smokeParticleScale_39643[12] = {
    0x3F, 0x33, 0x33, 0x33, 0x3F, 0x33, 0x33, 0x33, 0x3F, 0x33, 0x33, 0x33,
};
COMPILER_STRIP_GATE(0x80391BAC, &smokeParticleScale_39643);

/* 80391BB8-80391BC4 01E218 000C+00 1/1 0/0 0/0 .rodata          wolfWaterCenterScale$39644 */
SECTION_RODATA static u8 const wolfWaterCenterScale[12] = {
    0x3F, 0x99, 0x99, 0x9A, 0x3F, 0x99, 0x99, 0x9A, 0x3F, 0x99, 0x99, 0x9A,
};
COMPILER_STRIP_GATE(0x80391BB8, &wolfWaterCenterScale);

/* 80391BC4-80391BD0 01E224 000C+00 0/1 0/0 0/0 .rodata          waterScale$39762 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const waterScale_39762[12] = {
    0x3F, 0x14, 0x7A, 0xE1, 0x3F, 0x14, 0x7A, 0xE1, 0x3F, 0x14, 0x7A, 0xE1,
};
COMPILER_STRIP_GATE(0x80391BC4, &waterScale_39762);
#pragma pop

/* 80391BD0-80391BDC 01E230 000C+00 0/1 0/0 0/0 .rodata          waterCenterScale$39763 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const waterCenterScale[12] = {
    0x3F, 0x99, 0x99, 0x9A, 0x3F, 0x99, 0x99, 0x9A, 0x3F, 0x99, 0x99, 0x9A,
};
COMPILER_STRIP_GATE(0x80391BD0, &waterCenterScale);
#pragma pop

/* 80391BDC-80391BE8 01E23C 000C+00 0/1 0/0 0/0 .rodata          waterSmokeScale$39764 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const waterSmokeScale[12] = {
    0x3F, 0x33, 0x33, 0x33, 0x3F, 0x33, 0x33, 0x33, 0x3F, 0x33, 0x33, 0x33,
};
COMPILER_STRIP_GATE(0x80391BDC, &waterSmokeScale);
#pragma pop

/* 80391BE8-80391BF4 01E248 000C+00 0/1 0/0 0/0 .rodata          smokeParticleScale$39891 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const smokeParticleScale_39891[12] = {
    0x3F, 0x4C, 0xCC, 0xCD, 0x3F, 0x4C, 0xCC, 0xCD, 0x3F, 0x4C, 0xCC, 0xCD,
};
COMPILER_STRIP_GATE(0x80391BE8, &smokeParticleScale_39891);
#pragma pop

/* 80391BF4-80391C00 01E254 000C+00 0/1 0/0 0/0 .rodata          waterScale$39892 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const waterScale_39892[12] = {
    0x3F, 0xA0, 0x00, 0x00, 0x3F, 0xA0, 0x00, 0x00, 0x3F, 0xA0, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80391BF4, &waterScale_39892);
#pragma pop

/* 80391C00-80391C0C 01E260 000C+00 0/1 0/0 0/0 .rodata          wolfSmokeScale$39893 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const wolfSmokeScale[12] = {
    0x3F, 0x33, 0x33, 0x33, 0x3F, 0x33, 0x33, 0x33, 0x3F, 0x33, 0x33, 0x33,
};
COMPILER_STRIP_GATE(0x80391C00, &wolfSmokeScale);
#pragma pop

/* 80391C0C-80391C18 01E26C 000C+00 0/1 0/0 0/0 .rodata          shikoScale$40012 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const shikoScale[12] = {
    0x3F, 0x33, 0x33, 0x33, 0x3F, 0x33, 0x33, 0x33, 0x3F, 0x33, 0x33, 0x33,
};
COMPILER_STRIP_GATE(0x80391C0C, &shikoScale);
#pragma pop

/* 80391C18-80391C24 01E278 000C+00 0/1 0/0 0/0 .rodata          pushedSlip$40013 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const pushedSlip[12] = {
    0x3F, 0x4C, 0xCC, 0xCD, 0x3F, 0x4C, 0xCC, 0xCD, 0x3F, 0x4C, 0xCC, 0xCD,
};
COMPILER_STRIP_GATE(0x80391C18, &pushedSlip);
#pragma pop

/* 80391C24-80391C30 01E284 000C+00 0/1 0/0 0/0 .rodata          loseScale$40014 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const loseScale[12] = {
    0x3F, 0x8C, 0xCC, 0xCD, 0x3F, 0x8C, 0xCC, 0xCD, 0x3F, 0x8C, 0xCC, 0xCD,
};
COMPILER_STRIP_GATE(0x80391C24, &loseScale);
#pragma pop

/* 80391C30-80391C3C 01E290 000C+00 1/1 0/0 0/0 .rodata          releaeScale$40567 */
SECTION_RODATA static u8 const releaeScale[12] = {
    0x3F, 0x4C, 0xCC, 0xCD, 0x3F, 0x4C, 0xCC, 0xCD, 0x3F, 0x4C, 0xCC, 0xCD,
};
COMPILER_STRIP_GATE(0x80391C30, &releaeScale);

/* 80391C3C-80391C48 01E29C 000C+00 0/1 0/0 0/0 .rodata          lightAParticleScale$40829 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const lightAParticleScale[12] = {
    0x3F, 0x80, 0x00, 0x00, 0x3F, 0x95, 0xE3, 0x54, 0x3F, 0x80, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80391C3C, &lightAParticleScale);
#pragma pop

/* 80391C48-80391C54 01E2A8 000C+00 0/1 0/0 0/0 .rodata          lightALocalTrans$40830 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const lightALocalTrans[12] = {
    0x42, 0x88, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80391C48, &lightALocalTrans);
#pragma pop

/* 80391C54-80391C60 01E2B4 000C+00 0/1 0/0 0/0 .rodata          localOffset$40952 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const localOffset_40952[12] = {
    0x00, 0x00, 0x00, 0x00, 0xC1, 0x20, 0x00, 0x00, 0xC1, 0x20, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80391C54, &localOffset_40952);
#pragma pop

/* 80391C60-80391C6C 01E2C0 000C+00 0/1 0/0 0/0 .rodata          localScale0$40953 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const localScale0[12] = {
    0x3F, 0x33, 0x33, 0x33, 0x3F, 0x59, 0x99, 0x9A, 0x3F, 0xC0, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80391C60, &localScale0);
#pragma pop

/* 80391C6C-80391C78 01E2CC 000C+00 0/1 0/0 0/0 .rodata          localScale1$40954 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const localScale1[12] = {
    0x3F, 0x80, 0x00, 0x00, 0x3F, 0x59, 0x99, 0x9A, 0x3F, 0xC0, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80391C6C, &localScale1);
#pragma pop

/* 80391C78-80391C84 01E2D8 000C+00 0/1 0/0 0/0 .rodata          waterEffScale$41082 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const waterEffScale[12] = {
    0x3F, 0xC0, 0x00, 0x00, 0x3F, 0xC0, 0x00, 0x00, 0x3F, 0xC0, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80391C78, &waterEffScale);
#pragma pop

/* 80391C84-80391C9C 01E2E4 0018+00 0/1 0/0 0/0 .rodata          leftTransNormal$41090 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const leftTransNormal[24] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x41, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80391C84, &leftTransNormal);
#pragma pop

/* 80391C9C-80391CCC 01E2FC 0030+00 0/1 0/0 0/0 .rodata          leftTransLight$41095 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const leftTransLight[48] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0x0C, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80391C9C, &leftTransLight);
#pragma pop

/* 80391CCC-80391CD8 01E32C 000C+00 0/1 0/0 0/0 .rodata          effNameLarge$41096 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const effNameLarge[12] = {
    0x0B, 0xA5, 0x0B, 0xA6, 0x0B, 0xA7, 0x0B, 0xA8, 0x0B, 0xA9, 0x0B, 0xAA,
};
COMPILER_STRIP_GATE(0x80391CCC, &effNameLarge);
#pragma pop

/* 80391CD8-80391D20 01E338 0048+00 0/1 0/0 0/0 .rodata          leftTransLarge$41100 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const leftTransLarge[72] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x42, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0x34, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x42, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80391CD8, &leftTransLarge);
#pragma pop

/* 80391D20-80391D38 01E380 0018+00 0/1 0/0 0/0 .rodata          leftTransWater$41105 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const leftTransWater[24] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80391D20, &leftTransWater);
#pragma pop

/* 80391D38-80391D44 01E398 000C+00 1/1 0/0 0/0 .rodata          effName$41208 */
SECTION_RODATA static u8 const effName_41208[12] = {
    0x09, 0xD0, 0x09, 0xD1, 0x09, 0xD2, 0x09, 0xD3, 0x09, 0xD4, 0x09, 0xD5,
};
COMPILER_STRIP_GATE(0x80391D38, &effName_41208);

/* 80391D44-80391D54 01E3A4 0010+00 1/1 0/0 0/0 .rodata          swordUpColor$41733 */
static GXColorS10 const swordUpColor[2] = {{13, 10, 2, 255}, {28, 16, 4, 255}};

/* 80391D54-80391D60 01E3B4 000C+00 1/1 0/0 0/0 .rodata          swordCutSplashScale$41755 */
SECTION_RODATA static u8 const swordCutSplashScale[12] = {
    0x3F, 0x19, 0x99, 0x9A, 0x3F, 0x19, 0x99, 0x9A, 0x3F, 0x19, 0x99, 0x9A,
};
COMPILER_STRIP_GATE(0x80391D54, &swordCutSplashScale);

/* 80391D60-80391D6C 01E3C0 000C+00 0/1 0/0 0/0 .rodata          fairyScale$41951 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const fairyScale[12] = {
    0x3F, 0x00, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80391D60, &fairyScale);
#pragma pop

/* 80391D6C-80391D78 01E3CC 000C+00 0/1 0/0 0/0 .rodata          chuchuLocalOffset$41952 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const chuchuLocalOffset[12] = {
    0x00, 0x00, 0x00, 0x00, 0x41, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80391D6C, &chuchuLocalOffset);
#pragma pop

/* 80391D78-80391D84 01E3D8 000C+00 0/1 0/0 0/0 .rodata          chuchuScale$41953 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const chuchuScale[12] = {
    0x3F, 0x4C, 0xCC, 0xCD, 0x3F, 0x4C, 0xCC, 0xCD, 0x3F, 0x4C, 0xCC, 0xCD,
};
COMPILER_STRIP_GATE(0x80391D78, &chuchuScale);
#pragma pop

/* 80391D84-80391D94 01E3E4 0010+00 1/1 0/0 0/0 .rodata          effJoint$42070 */
SECTION_RODATA static u8 const effJoint[16] = {
    0x00, 0x07, 0x00, 0x0C, 0x00, 0x10, 0x00, 0x22, 0x00, 0x03, 0x00, 0x03, 0x00, 0x03, 0x00, 0x03,
};
COMPILER_STRIP_GATE(0x80391D84, &effJoint);

/* 80391D94-80391DF4 01E3F4 0060+00 1/1 0/0 0/0 .rodata          effOffset$42071 */
SECTION_RODATA static u8 const effOffset[96] = {
    0xC0, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x70, 0x00, 0x00,
    0x40, 0x40, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00, 0x40, 0x80, 0x00, 0x00, 0xC1, 0x20, 0x00, 0x00,
    0x41, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xA0, 0x00, 0x00, 0xC0, 0xE0, 0x00, 0x00,
    0x41, 0x70, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00, 0xC1, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xC1, 0xC8, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00, 0x41, 0x70, 0x00, 0x00, 0xC0, 0xA0, 0x00, 0x00,
    0x41, 0xA0, 0x00, 0x00, 0x41, 0x20, 0x00, 0x00, 0xC1, 0xC8, 0x00, 0x00, 0xC1, 0x20, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80391D94, &effOffset);

/* 80391DF4-80391E00 01E454 000C+00 0/1 0/0 0/0 .rodata          effScale$42225 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const effScale[12] = {
    0x3F, 0x80, 0x00, 0x00, 0x3F, 0xE6, 0x66, 0x66, 0x3F, 0x80, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80391DF4, &effScale);
#pragma pop

/* 80391E00-80391E0C 01E460 000C+00 0/1 0/0 0/0 .rodata          wolfEffScale$42226 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const wolfEffScale[12] = {
    0x3F, 0x80, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x3F, 0xC0, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80391E00, &wolfEffScale);
#pragma pop

/* 80391E0C-80391E18 01E46C 000C+00 0/1 0/0 0/0 .rodata          offsetPos$42227 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const offsetPos[12] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC1, 0x20, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80391E0C, &offsetPos);
#pragma pop

/* 80391E18-80391E24 01E478 000C+00 1/1 0/0 0/0 .rodata          localFootOffset$45107 */
SECTION_RODATA static u8 const localFootOffset[12] = {
    0x40, 0xC0, 0x00, 0x00, 0xC0, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80391E18, &localFootOffset);

/* 80391E24-80391E30 01E484 000C+00 1/1 0/0 0/0 .rodata          frontOffset$45186 */
SECTION_RODATA static u8 const frontOffset[12] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0x48, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80391E24, &frontOffset);

/* 80391E30-80391E3C 01E490 000C+00 1/1 0/0 0/0 .rodata          wolfChainBaseOffset$45513 */
SECTION_RODATA static u8 const wolfChainBaseOffset[12] = {
    0x41, 0xB0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC1, 0x40, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80391E30, &wolfChainBaseOffset);

/* 80391E3C-80391E48 01E49C 000C+00 1/1 0/0 0/0 .rodata          wolfChainVec$45514 */
SECTION_RODATA static u8 const wolfChainVec[12] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC1, 0x10, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80391E3C, &wolfChainVec);

/* 80391E48-80391E78 01E4A8 0030+00 1/1 0/0 0/0 .rodata          label$45760 */
SECTION_RODATA static u8 const label[48] = {
    0x00, 0x01, 0x00, 0x30, 0x00, 0x01, 0x00, 0x2E, 0x00, 0x01, 0x00, 0x31, 0x00, 0x01, 0x00, 0x2F,
    0x00, 0x01, 0x00, 0x3D, 0x00, 0x01, 0x00, 0x33, 0x00, 0x01, 0x00, 0xB1, 0x00, 0x01, 0x00, 0xB5,
    0x00, 0x01, 0x00, 0xB6, 0x00, 0x01, 0x00, 0xB7, 0x00, 0x01, 0x00, 0xB9, 0x00, 0x01, 0x00, 0x3F,
};
COMPILER_STRIP_GATE(0x80391E48, &label);

/* 80391E78-80391E8C 01E4D8 0014+00 1/1 0/0 0/0 .rodata          normalType0$50859 */
SECTION_RODATA static u8 const normalType0[20] = {
    0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00,
    0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80391E78, &normalType0);

/* 80391E8C-80391EA0 01E4EC 0014+00 1/1 0/0 0/0 .rodata          normalType1$50860 */
SECTION_RODATA static u8 const normalType1_50860[20] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x03,
};
COMPILER_STRIP_GATE(0x80391E8C, &normalType1_50860);

/* 80391EA0-80391EC0 01E500 0020+00 0/1 0/0 0/0 .rodata          dataTabl$51470 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const dataTabl[32] = {
    0x00, 0x00, 0x00, 0x40, 0x2C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0x2E, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x43, 0x2F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x2D, 0x00, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80391EA0, &dataTabl);
#pragma pop

/* 80391EC0-80391ECC 01E520 000C+00 1/1 0/0 0/0 .rodata          arm1Vec$56040 */
SECTION_RODATA static u8 const arm1Vec[12] = {
    0x41, 0xE8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80391EC0, &arm1Vec);

/* 80391ECC-80391ED8 01E52C 000C+00 1/1 0/0 0/0 .rodata          arm2Vec$56041 */
SECTION_RODATA static u8 const arm2Vec[12] = {
    0x41, 0xD4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80391ECC, &arm2Vec);

/* 80453228-8045322C 001828 0004+00 1/1 0/0 0/0 .sdata2          armJointTable$56027 */
SECTION_SDATA2 static u8 armJointTable[4] = {
    0x00,
    0x07,
    0x00,
    0x0C,
};

/* 800A2710-800A29DC 09D050 02CC+00 1/1 0/0 0/0 .text            setArmMatrix__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setArmMatrix() {
    nofralloc
#include "asm/d/a/d_a_alink/setArmMatrix__9daAlink_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 80391ED8-80391EE4 01E538 000C+00 0/1 0/0 0/0 .rodata          leg1Vec$56150 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const leg1Vec[12] = {
    0x41, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80391ED8, &leg1Vec);
#pragma pop

/* 80391EE4-80391EF0 01E544 000C+00 0/1 0/0 0/0 .rodata          leg2Vec$56151 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const leg2Vec[12] = {
    0x42, 0x1D, 0x74, 0x39, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80391EE4, &leg2Vec);
#pragma pop

/* 80391EF0-80391EFC 01E550 000C+00 0/1 0/0 0/0 .rodata          footVec$56152 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const footVec[12] = {
    0x41, 0x62, 0xE1, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80391EF0, &footVec);
#pragma pop

/* 8045322C-80453230 00182C 0004+00 1/1 0/0 0/0 .sdata2          footJointTable$56137 */
SECTION_SDATA2 static u8 footJointTable[4] = {
    0x00,
    0x12,
    0x00,
    0x17,
};

/* 800A29DC-800A2C24 09D31C 0248+00 1/1 0/0 0/0 .text            setFootMatrix__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setFootMatrix() {
    nofralloc
#include "asm/d/a/d_a_alink/setFootMatrix__9daAlink_cFv.s"
}
#pragma pop

/* 800A2C24-800A2CE0 09D564 00BC+00 3/3 0/0 0/0 .text            setMatrixOffset__9daAlink_cFPff */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setMatrixOffset(f32* param_0, f32 param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/setMatrixOffset__9daAlink_cFPff.s"
}
#pragma pop

/* 800A2CE0-800A3430 09D620 0750+00 3/3 0/0 0/0 .text
 * setLegAngle__9daAlink_cFfP18daAlink_footData_cPsPsi          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setLegAngle(f32 param_0, daAlink_footData_c* param_1, s16* param_2,
                                s16* param_3, int param_4) {
    nofralloc
#include "asm/d/a/d_a_alink/setLegAngle__9daAlink_cFfP18daAlink_footData_cPsPsi.s"
}
#pragma pop

/* ############################################################################################## */
/* 80391EFC-80391F08 01E55C 000C+00 0/1 0/0 0/0 .rodata          localLeftFootOffset$56542 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const localLeftFootOffset[12] = {
    0xC0, 0x40, 0x00, 0x00, 0x41, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80391EFC, &localLeftFootOffset);
#pragma pop

/* 80391F08-80391F14 01E568 000C+00 0/1 0/0 0/0 .rodata          localRightFootOffset$56543 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const localRightFootOffset[12] = {
    0xC0, 0x40, 0x00, 0x00, 0xC1, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80391F08, &localRightFootOffset);
#pragma pop

/* 80391F14-80391F20 01E574 000C+00 0/1 0/0 0/0 .rodata          localLeftToeOffset$56544 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const localLeftToeOffset[12] = {
    0x41, 0x20, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80391F14, &localLeftToeOffset);
#pragma pop

/* 80391F20-80391F2C 01E580 000C+00 0/1 0/0 0/0 .rodata          localRightToeOffset$56545 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const localRightToeOffset[12] = {
    0x41, 0x20, 0x00, 0x00, 0xC0, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80391F20, &localRightToeOffset);
#pragma pop

/* 80450690-80450694 000110 0004+00 20/20 0/0 0/0 .sdata           l_autoUpHeight */
SECTION_SDATA static f32 l_autoUpHeight = 30.010000228881836f;

/* 80450694-80450698 000114 0004+00 12/12 0/0 0/0 .sdata           l_autoDownHeight */
SECTION_SDATA static f32 l_autoDownHeight = -30.010000228881836f;

/* 800A3430-800A39B8 09DD70 0588+00 1/1 0/0 0/0 .text            footBgCheck__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::footBgCheck() {
    nofralloc
#include "asm/d/a/d_a_alink/footBgCheck__9daAlink_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 80391F2C-80391F44 01E58C 0018+00 1/1 0/0 0/0 .rodata          localHandPos$56752 */
SECTION_RODATA static u8 const localHandPos[24] = {
    0x41, 0xB0, 0xC5, 0x60, 0x40, 0xAF, 0xC1, 0x20, 0x00, 0x00, 0x00, 0x00,
    0xC1, 0xAF, 0x33, 0x80, 0x40, 0xB0, 0xCF, 0xDF, 0x00, 0x00, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80391F2C, &localHandPos);

/* 800A39B8-800A3C8C 09E2F8 02D4+00 1/1 0/0 0/0 .text            handBgCheck__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::handBgCheck() {
    nofralloc
#include "asm/d/a/d_a_alink/handBgCheck__9daAlink_cFv.s"
}
#pragma pop

/* 800A3C8C-800A3CE4 09E5CC 0058+00 11/11 0/0 0/0 .text            setItemHeap__9daAlink_cFv */
JKRHeap* daAlink_c::setItemHeap() {
    if (!i_checkResetFlg0(RFLG0_UNK_4000)) {
        field_0x2fa0 ^= 1;
        i_onResetFlg0(RFLG0_UNK_4000);
    }
    return mItemHeap[field_0x2fa0].setAnimeHeap();
}

/* 800A3CE4-800A3D0C 09E624 0028+00 4/4 0/0 0/0 .text            setIdxMask__9daAlink_cFPUsPUs */
void daAlink_c::setIdxMask(u16* param_0, u16* param_1) {
    if (*param_0 == 0xFFFF) {
        u16 tmp = (*param_1 >> 12) & 0xF;
        *param_1 &= 0xFFF;

        if (tmp != 0) {
            *param_0 = tmp;
        }
    }
}

/* 800A3D0C-800A3D7C 09E64C 0070+00 5/5 0/0 0/0 .text
 * getAnimeResource__9daAlink_cFP14daPy_anmHeap_cUsUl           */
// setIdxMask param loads backwards
#ifdef NONMATCHING
void* daAlink_c::getAnimeResource(daPy_anmHeap_c* p_anmHeap, u16 param_1, u32 buf_size) {
    p_anmHeap->setBufferSize(buf_size);

    u16 tmp2 = 0xFFFF;
    u16* tmp1 = &param_1;

    setIdxMask(tmp1, &tmp2);

    if (tmp2 == 0xFFFF) {
        return p_anmHeap->loadDataIdx(*tmp1);
    } else {
        return p_anmHeap->loadDataDemoRID(*tmp1, tmp2);
    }
}
#else
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void* daAlink_c::getAnimeResource(daPy_anmHeap_c* param_0, u16 param_1, u32 param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/getAnimeResource__9daAlink_cFP14daPy_anmHeap_cUsUl.s"
}
#pragma pop
#endif

/* 800A3D7C-800A3E30 09E6BC 00B4+00 16/16 0/0 0/0 .text initModel__9daAlink_cFP12J3DModelDataUlUl
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DModel* daAlink_c::initModel(J3DModelData* param_0, u32 param_1, u32 param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/initModel__9daAlink_cFP12J3DModelDataUlUl.s"
}
#pragma pop

/* 800A3E30-800A3E98 09E770 0068+00 1/1 0/0 0/0 .text            initModel__9daAlink_cFUsUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::initModel(u16 param_0, u32 param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/initModel__9daAlink_cFUsUl.s"
}
#pragma pop

/* 800A3E98-800A3F00 09E7D8 0068+00 1/1 0/0 0/0 .text            initModelEnv__9daAlink_cFUsUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::initModelEnv(u16 param_0, u32 param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/initModelEnv__9daAlink_cFUsUl.s"
}
#pragma pop

/* 800A3F00-800A3F98 09E840 0098+00 1/1 0/0 0/0 .text initDemoModel__9daAlink_cFPP8J3DModelPCcUl
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::initDemoModel(J3DModel** param_0, char const* param_1, u32 param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/initDemoModel__9daAlink_cFPP8J3DModelPCcUl.s"
}
#pragma pop

/* 800A3F98-800A4068 09E8D8 00D0+00 1/1 0/0 1/1 .text initDemoBck__9daAlink_cFPP13mDoExt_bckAnmPCc
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::initDemoBck(mDoExt_bckAnm** param_0, char const* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/initDemoBck__9daAlink_cFPP13mDoExt_bckAnmPCc.s"
}
#pragma pop

/* ############################################################################################## */
/* 80392094-80392094 01E6F4 0000+00 0/0 0/0 0/0 .rodata          @stringBase0 */
#pragma push
#pragma force_active on
SECTION_DEAD static char const* const stringBase_80392094 = "Rotary";
SECTION_DEAD static char const* const stringBase_8039209B = "Rampart2";
SECTION_DEAD static char const* const stringBase_803920A4 = "Allay";
SECTION_DEAD static char const* const stringBase_803920AA = "AllayR";
SECTION_DEAD static char const* const stringBase_803920B1 = "AllayR2";
SECTION_DEAD static char const* const stringBase_803920B9 = "AllayS";
SECTION_DEAD static char const* const stringBase_803920C0 = "StreetP";
SECTION_DEAD static char const* const stringBase_803920C8 = "Street";
SECTION_DEAD static char const* const stringBase_803920CF = "D_MN04B";
SECTION_DEAD static char const* const stringBase_803920D7 = "Type";
SECTION_DEAD static char const* const stringBase_803920DC = "D_MN07B";
SECTION_DEAD static char const* const stringBase_803920E4 = "D_MN05A";
SECTION_DEAD static char const* const stringBase_803920EC = "D_MN06A";
SECTION_DEAD static char const* const stringBase_803920F4 = "F_SP117";
SECTION_DEAD static char const* const stringBase_803920FC = "D_MN54";
SECTION_DEAD static char const* const stringBase_80392103 = "F_SP103";
SECTION_DEAD static char const* const stringBase_8039210B = "F_SP00";
SECTION_DEAD static char const* const stringBase_80392112 = "F_SP127";
SECTION_DEAD static char const* const stringBase_8039211A = "D_MN07A";
SECTION_DEAD static char const* const stringBase_80392122 = "D_MN01A";
SECTION_DEAD static char const* const stringBase_8039212A = "D_MN10";
SECTION_DEAD static char const* const stringBase_80392131 = "D_MN10A";
SECTION_DEAD static char const* const stringBase_80392139 = "F_SP108";
SECTION_DEAD static char const* const stringBase_80392141 = "J_Tobi";
SECTION_DEAD static char const* const stringBase_80392148 = "J_Umak";
SECTION_DEAD static char const* const stringBase_8039214F = "D_MN01";
SECTION_DEAD static char const* const stringBase_80392156 = "D_MN06";
SECTION_DEAD static char const* const stringBase_8039215D = "D_MN05";
SECTION_DEAD static char const* const stringBase_80392164 = "R22-opening";
SECTION_DEAD static char const* const stringBase_80392170 = "pos";
SECTION_DEAD static char const* const stringBase_80392174 = "angle";
SECTION_DEAD static char const* const stringBase_8039217A = "prm0";
SECTION_DEAD static char const* const stringBase_8039217F = "prm1";
SECTION_DEAD static char const* const stringBase_80392184 = "stick";
SECTION_DEAD static char const* const stringBase_8039218A = "D_MN09B";
SECTION_DEAD static char const* const stringBase_80392192 = "D_MN05B";
SECTION_DEAD static char const* const stringBase_8039219A = "F_SP115";
SECTION_DEAD static char const* const stringBase_803921A2 = "D_MN11";
SECTION_DEAD static char const* const stringBase_803921A9 = "D_MN07";
SECTION_DEAD static char const* const stringBase_803921B0 = "F_SP102";
SECTION_DEAD static char const* const stringBase_803921B8 = "D_MN08D";
SECTION_DEAD static char const* const stringBase_803921C0 = "D_MN09A";
SECTION_DEAD static char const* const stringBase_803921C8 = "D_MN08C";
SECTION_DEAD static char const* const stringBase_803921D0 = "R_SP161";
SECTION_DEAD static char const* const stringBase_803921D8 = "Obj_kbrg";
SECTION_DEAD static char const* const stringBase_803921E1 = "Obj_obrg";
SECTION_DEAD static char const* const stringBase_803921EA = "M_VolcBom";
SECTION_DEAD static char const* const stringBase_803921F4 = "SCanCrs";
SECTION_DEAD static char const* const stringBase_803921FC = "F_SP125";
SECTION_DEAD static char const* const stringBase_80392204 = "D_MN08";
SECTION_DEAD static char const* const stringBase_8039220B = "F_SP116";
SECTION_DEAD static char const* const stringBase_80392213 = "zelda_v_cursor_new_yellow.blo";
SECTION_DEAD static char const* const stringBase_80392231 = "zelda_v_cursor_new_yellow.bpk";
SECTION_DEAD static char const* const stringBase_8039224F = "zelda_v_cursor_new_yellow.bck";
SECTION_DEAD static char const* const stringBase_8039226D = "zelda_v_cursor_new_yellow_02.brk";
SECTION_DEAD static char const* const stringBase_8039228E = "zelda_v_cursor_new_yellow.brk";
SECTION_DEAD static char const* const stringBase_803922AC = "wl_eye_Hilight";
SECTION_DEAD static char const* const stringBase_803922BB = "midona_eye_Hlight";
SECTION_DEAD static char const* const stringBase_803922CD = "alSumou";
SECTION_DEAD static char const* const stringBase_803922D5 = "bl.bmd";
SECTION_DEAD static char const* const stringBase_803922DC = "bl_head.bmd";
SECTION_DEAD static char const* const stringBase_803922E8 = "bl_hands.bmd";
SECTION_DEAD static char const* const stringBase_803922F5 = "zl.bmd";
SECTION_DEAD static char const* const stringBase_803922FC = "zl_head.bmd";
SECTION_DEAD static char const* const stringBase_80392308 = "al_hands.bmd";
SECTION_DEAD static char const* const stringBase_80392315 = "ml.bmd";
SECTION_DEAD static char const* const stringBase_8039231C = "ml_head.bmd";
SECTION_DEAD static char const* const stringBase_80392328 = "al.bmd";
SECTION_DEAD static char const* const stringBase_8039232F = "al_head.bmd";
SECTION_DEAD static char const* const stringBase_8039233B = "al_face.bmd";
SECTION_DEAD static char const* const stringBase_80392347 = "zl_face.bmd";
SECTION_DEAD static char const* const stringBase_80392353 = "al_bootsH.bmd";
SECTION_DEAD static char const* const stringBase_80392361 = "al_kantera.bmd";
SECTION_DEAD static char const* const stringBase_80392370 = "ef_ktGlow.bmd";
SECTION_DEAD static char const* const stringBase_8039237E = "ef_ktGlow.btk";
SECTION_DEAD static char const* const stringBase_8039238C = "al_SWB.bmd";
SECTION_DEAD static char const* const stringBase_80392397 = "highlight02";
SECTION_DEAD static char const* const stringBase_803923A3 = "F_SP200";
SECTION_DEAD static char const* const stringBase_803923AB = "R_SP30";
SECTION_DEAD static char const* const stringBase_803923B2 = "SMELL_1st";
SECTION_DEAD static char const* const stringBase_803923BC = "SMELL_Child";
SECTION_DEAD static char const* const stringBase_803923C8 = "Always";
SECTION_DEAD static char const* const stringBase_803923CF = "demo00_Link_cut00_HL_tmp.bmd";
SECTION_DEAD static char const* const stringBase_803923EC = "demo00_Link_cut00_HL_tmp.bck";
SECTION_DEAD static char const* const stringBase_80392409 = "demo00_Link_cut00_HR_tmp.bmd";
SECTION_DEAD static char const* const stringBase_80392426 = "demo00_Link_cut00_HR_tmp.bck";
SECTION_DEAD static char const* const stringBase_80392443 = "demo00_Link_cut00_FC_blend.bmd";
SECTION_DEAD static char const* const stringBase_80392462 = "demo00_Link_cut00_FC_tongue.bmd";
SECTION_DEAD static char const* const stringBase_80392482 = "demo00_Link_cut00_FC_tmp.bck";
SECTION_DEAD static char const* const stringBase_8039249F = "demo00_Link_cut00_HD_tmp.bck";
SECTION_DEAD static char const* const stringBase_803924BC = "demo00_Link_cut00_FC_tmp.bls";
SECTION_DEAD static char const* const stringBase_803924D9 = "F_SP118";
SECTION_DEAD static char const* const stringBase_803924E1 = "D_MN08B";
SECTION_DEAD static char const* const stringBase_803924E9 = "F_SP109";
SECTION_DEAD static char const* const stringBase_803924F1 = "F_SP123";
SECTION_DEAD static char const* const stringBase_803924F9 = "SCENE_EXIT";
SECTION_DEAD static char const* const stringBase_80392504 = "R_SP127";
SECTION_DEAD static char const* const stringBase_8039250C = "R_SP01";
SECTION_DEAD static char const* const stringBase_80392513 = "D_MN08A";
SECTION_DEAD static char const* const stringBase_8039251B = "ANGER";
SECTION_DEAD static char const* const stringBase_80392521 = "ANGER2";
SECTION_DEAD static char const* const stringBase_80392528 = "ml_body_power_down.brk";
SECTION_DEAD static char const* const stringBase_8039253F = "ml_body_power_up_a.brk";
SECTION_DEAD static char const* const stringBase_80392556 = "ml_body_power_up_b.brk";
SECTION_DEAD static char const* const stringBase_8039256D = "ml_head_power_down.brk";
SECTION_DEAD static char const* const stringBase_80392584 = "ml_head_power_up_a.brk";
SECTION_DEAD static char const* const stringBase_8039259B = "ml_head_power_up_b.brk";
#pragma pop

/* 803AF990-803AF99C 00CAB0 000C+00 4/4 0/0 0/0 .data            cNullVec__6Z2Calc */
SECTION_DATA static u8 cNullVec__6Z2Calc[12] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803AF99C-803AF9A8 00CABC 000A+02 2/2 0/0 0/0 .data            l_peepEventName */
SECTION_DATA static const char l_peepEventName[10] = "PEEP_HOLE";

/* 803AF9A8-803AF9B4 -00001 000C+00 0/1 0/0 0/0 .data            @4422 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4422[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procPreActionUnequip__9daAlink_cFv,
};
#pragma pop

/* 803AF9B4-803AF9C0 -00001 000C+00 0/1 0/0 0/0 .data            @4423 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4423[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procServiceWait__9daAlink_cFv,
};
#pragma pop

/* 803AF9C0-803AF9CC -00001 000C+00 0/1 0/0 0/0 .data            @4424 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4424[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procTiredWait__9daAlink_cFv,
};
#pragma pop

/* 803AF9CC-803AF9D8 -00001 000C+00 0/1 0/0 0/0 .data            @4425 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4425[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWait__9daAlink_cFv,
};
#pragma pop

/* 803AF9D8-803AF9E4 -00001 000C+00 0/1 0/0 0/0 .data            @4426 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4426[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procMove__9daAlink_cFv,
};
#pragma pop

/* 803AF9E4-803AF9F0 -00001 000C+00 0/1 0/0 0/0 .data            @4427 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4427[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procAtnMove__9daAlink_cFv,
};
#pragma pop

/* 803AF9F0-803AF9FC -00001 000C+00 0/1 0/0 0/0 .data            @4428 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4428[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procAtnActorWait__9daAlink_cFv,
};
#pragma pop

/* 803AF9FC-803AFA08 -00001 000C+00 0/1 0/0 0/0 .data            @4429 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4429[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procAtnActorMove__9daAlink_cFv,
};
#pragma pop

/* 803AFA08-803AFA14 -00001 000C+00 0/1 0/0 0/0 .data            @4430 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4430[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWaitTurn__9daAlink_cFv,
};
#pragma pop

/* 803AFA14-803AFA20 -00001 000C+00 0/1 0/0 0/0 .data            @4431 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4431[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procMoveTurn__9daAlink_cFv,
};
#pragma pop

/* 803AFA20-803AFA2C -00001 000C+00 0/1 0/0 0/0 .data            @4432 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4432[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procSideStep__9daAlink_cFv,
};
#pragma pop

/* 803AFA2C-803AFA38 -00001 000C+00 0/1 0/0 0/0 .data            @4433 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4433[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procSideStepLand__9daAlink_cFv,
};
#pragma pop

/* 803AFA38-803AFA44 -00001 000C+00 0/1 0/0 0/0 .data            @4434 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4434[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procSlide__9daAlink_cFv,
};
#pragma pop

/* 803AFA44-803AFA50 -00001 000C+00 0/1 0/0 0/0 .data            @4435 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4435[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procSlideLand__9daAlink_cFv,
};
#pragma pop

/* 803AFA50-803AFA5C -00001 000C+00 0/1 0/0 0/0 .data            @4436 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4436[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procFrontRoll__9daAlink_cFv,
};
#pragma pop

/* 803AFA5C-803AFA68 -00001 000C+00 0/1 0/0 0/0 .data            @4437 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4437[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procFrontRollCrash__9daAlink_cFv,
};
#pragma pop

/* 803AFA68-803AFA74 -00001 000C+00 0/1 0/0 0/0 .data            @4438 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4438[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procFrontRollSuccess__9daAlink_cFv,
};
#pragma pop

/* 803AFA74-803AFA80 -00001 000C+00 0/1 0/0 0/0 .data            @4439 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4439[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procSideRoll__9daAlink_cFv,
};
#pragma pop

/* 803AFA80-803AFA8C -00001 000C+00 0/1 0/0 0/0 .data            @4440 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4440[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procBackJump__9daAlink_cFv,
};
#pragma pop

/* 803AFA8C-803AFA98 -00001 000C+00 0/1 0/0 0/0 .data            @4441 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4441[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procBackJumpLand__9daAlink_cFv,
};
#pragma pop

/* 803AFA98-803AFAA4 -00001 000C+00 0/1 0/0 0/0 .data            @4442 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4442[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procSlip__9daAlink_cFv,
};
#pragma pop

/* 803AFAA4-803AFAB0 -00001 000C+00 0/1 0/0 0/0 .data            @4443 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4443[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procAutoJump__9daAlink_cFv,
};
#pragma pop

/* 803AFAB0-803AFABC -00001 000C+00 0/1 0/0 0/0 .data            @4444 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4444[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procDiveJump__9daAlink_cFv,
};
#pragma pop

/* 803AFABC-803AFAC8 -00001 000C+00 0/1 0/0 0/0 .data            @4445 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4445[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procRollJump__9daAlink_cFv,
};
#pragma pop

/* 803AFAC8-803AFAD4 -00001 000C+00 0/1 0/0 0/0 .data            @4446 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4446[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procFall__9daAlink_cFv,
};
#pragma pop

/* 803AFAD4-803AFAE0 -00001 000C+00 0/1 0/0 0/0 .data            @4447 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4447[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procLand__9daAlink_cFv,
};
#pragma pop

/* 803AFAE0-803AFAEC -00001 000C+00 0/1 0/0 0/0 .data            @4448 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4448[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procSmallJump__9daAlink_cFv,
};
#pragma pop

/* 803AFAEC-803AFAF8 -00001 000C+00 0/1 0/0 0/0 .data            @4449 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4449[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procStepMove__9daAlink_cFv,
};
#pragma pop

/* 803AFAF8-803AFB04 -00001 000C+00 0/1 0/0 0/0 .data            @4450 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4450[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCrouch__9daAlink_cFv,
};
#pragma pop

/* 803AFB04-803AFB10 -00001 000C+00 0/1 0/0 0/0 .data            @4451 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4451[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procGuardSlip__9daAlink_cFv,
};
#pragma pop

/* 803AFB10-803AFB1C -00001 000C+00 0/1 0/0 0/0 .data            @4452 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4452[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procGuardAttack__9daAlink_cFv,
};
#pragma pop

/* 803AFB1C-803AFB28 -00001 000C+00 0/1 0/0 0/0 .data            @4453 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4453[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procGuardBreak__9daAlink_cFv,
};
#pragma pop

/* 803AFB28-803AFB34 -00001 000C+00 0/1 0/0 0/0 .data            @4454 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4454[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procTurnMove__9daAlink_cFv,
};
#pragma pop

/* 803AFB34-803AFB40 -00001 000C+00 0/1 0/0 0/0 .data            @4455 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4455[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCutNormal__9daAlink_cFv,
};
#pragma pop

/* 803AFB40-803AFB4C -00001 000C+00 0/1 0/0 0/0 .data            @4456 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4456[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCutFinish__9daAlink_cFv,
};
#pragma pop

/* 803AFB4C-803AFB58 -00001 000C+00 0/1 0/0 0/0 .data            @4457 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4457[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCutFinishJumpUp__9daAlink_cFv,
};
#pragma pop

/* 803AFB58-803AFB64 -00001 000C+00 0/1 0/0 0/0 .data            @4458 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4458[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCutFinishJumpUpLand__9daAlink_cFv,
};
#pragma pop

/* 803AFB64-803AFB70 -00001 000C+00 0/1 0/0 0/0 .data            @4459 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4459[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCutReverse__9daAlink_cFv,
};
#pragma pop

/* 803AFB70-803AFB7C -00001 000C+00 0/1 0/0 0/0 .data            @4460 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4460[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCutJump__9daAlink_cFv,
};
#pragma pop

/* 803AFB7C-803AFB88 -00001 000C+00 0/1 0/0 0/0 .data            @4461 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4461[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCutJumpLand__9daAlink_cFv,
};
#pragma pop

/* 803AFB88-803AFB94 -00001 000C+00 0/1 0/0 0/0 .data            @4462 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4462[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCutTurn__9daAlink_cFv,
};
#pragma pop

/* 803AFB94-803AFBA0 -00001 000C+00 0/1 0/0 0/0 .data            @4463 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4463[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCutTurnCharge__9daAlink_cFv,
};
#pragma pop

/* 803AFBA0-803AFBAC -00001 000C+00 0/1 0/0 0/0 .data            @4464 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4464[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCutTurnMove__9daAlink_cFv,
};
#pragma pop

/* 803AFBAC-803AFBB8 -00001 000C+00 0/1 0/0 0/0 .data            @4465 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4465[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCutDown__9daAlink_cFv,
};
#pragma pop

/* 803AFBB8-803AFBC4 -00001 000C+00 0/1 0/0 0/0 .data            @4466 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4466[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCutDownLand__9daAlink_cFv,
};
#pragma pop

/* 803AFBC4-803AFBD0 -00001 000C+00 0/1 0/0 0/0 .data            @4467 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4467[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCutHead__9daAlink_cFv,
};
#pragma pop

/* 803AFBD0-803AFBDC -00001 000C+00 0/1 0/0 0/0 .data            @4468 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4468[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCutHeadLand__9daAlink_cFv,
};
#pragma pop

/* 803AFBDC-803AFBE8 -00001 000C+00 0/1 0/0 0/0 .data            @4469 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4469[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCutLargeJumpCharge__9daAlink_cFv,
};
#pragma pop

/* 803AFBE8-803AFBF4 -00001 000C+00 0/1 0/0 0/0 .data            @4470 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4470[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCutLargeJump__9daAlink_cFv,
};
#pragma pop

/* 803AFBF4-803AFC00 -00001 000C+00 0/1 0/0 0/0 .data            @4471 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4471[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCutLargeJumpLand__9daAlink_cFv,
};
#pragma pop

/* 803AFC00-803AFC0C -00001 000C+00 0/1 0/0 0/0 .data            @4472 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4472[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procDamage__9daAlink_cFv,
};
#pragma pop

/* 803AFC0C-803AFC18 -00001 000C+00 0/1 0/0 0/0 .data            @4473 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4473[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procLargeDamageUp__9daAlink_cFv,
};
#pragma pop

/* 803AFC18-803AFC24 -00001 000C+00 0/1 0/0 0/0 .data            @4474 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4474[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procLandDamage__9daAlink_cFv,
};
#pragma pop

/* 803AFC24-803AFC30 -00001 000C+00 0/1 0/0 0/0 .data            @4475 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4475[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCrawlStart__9daAlink_cFv,
};
#pragma pop

/* 803AFC30-803AFC3C -00001 000C+00 0/1 0/0 0/0 .data            @4476 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4476[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCrawlMove__9daAlink_cFv,
};
#pragma pop

/* 803AFC3C-803AFC48 -00001 000C+00 0/1 0/0 0/0 .data            @4477 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4477[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCrawlAutoMove__9daAlink_cFv,
};
#pragma pop

/* 803AFC48-803AFC54 -00001 000C+00 0/1 0/0 0/0 .data            @4478 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4478[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCrawlEnd__9daAlink_cFv,
};
#pragma pop

/* 803AFC54-803AFC60 -00001 000C+00 0/1 0/0 0/0 .data            @4479 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4479[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procPullMove__9daAlink_cFv,
};
#pragma pop

/* 803AFC60-803AFC6C -00001 000C+00 0/1 0/0 0/0 .data            @4480 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4480[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHorseRide__9daAlink_cFv,
};
#pragma pop

/* 803AFC6C-803AFC78 -00001 000C+00 0/1 0/0 0/0 .data            @4481 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4481[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHorseGetOff__9daAlink_cFv,
};
#pragma pop

/* 803AFC78-803AFC84 -00001 000C+00 0/1 0/0 0/0 .data            @4482 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4482[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHorseWait__9daAlink_cFv,
};
#pragma pop

/* 803AFC84-803AFC90 -00001 000C+00 0/1 0/0 0/0 .data            @4483 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4483[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHorseTurn__9daAlink_cFv,
};
#pragma pop

/* 803AFC90-803AFC9C -00001 000C+00 0/1 0/0 0/0 .data            @4484 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4484[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHorseJump__9daAlink_cFv,
};
#pragma pop

/* 803AFC9C-803AFCA8 -00001 000C+00 0/1 0/0 0/0 .data            @4485 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4485[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHorseLand__9daAlink_cFv,
};
#pragma pop

/* 803AFCA8-803AFCB4 -00001 000C+00 0/1 0/0 0/0 .data            @4486 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4486[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHorseSubjectivity__9daAlink_cFv,
};
#pragma pop

/* 803AFCB4-803AFCC0 -00001 000C+00 0/1 0/0 0/0 .data            @4487 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4487[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHorseCut__9daAlink_cFv,
};
#pragma pop

/* 803AFCC0-803AFCCC -00001 000C+00 0/1 0/0 0/0 .data            @4488 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4488[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHorseCutChargeReady__9daAlink_cFv,
};
#pragma pop

/* 803AFCCC-803AFCD8 -00001 000C+00 0/1 0/0 0/0 .data            @4489 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4489[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHorseCutTurn__9daAlink_cFv,
};
#pragma pop

/* 803AFCD8-803AFCE4 -00001 000C+00 0/1 0/0 0/0 .data            @4490 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4490[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHorseDamage__9daAlink_cFv,
};
#pragma pop

/* 803AFCE4-803AFCF0 -00001 000C+00 0/1 0/0 0/0 .data            @4491 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4491[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHorseBowSubject__9daAlink_cFv,
};
#pragma pop

/* 803AFCF0-803AFCFC -00001 000C+00 0/1 0/0 0/0 .data            @4492 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4492[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHorseBowMove__9daAlink_cFv,
};
#pragma pop

/* 803AFCFC-803AFD08 -00001 000C+00 0/1 0/0 0/0 .data            @4493 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4493[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHorseGrabMove__9daAlink_cFv,
};
#pragma pop

/* 803AFD08-803AFD14 -00001 000C+00 0/1 0/0 0/0 .data            @4494 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4494[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHorseBoomerangSubject__9daAlink_cFv,
};
#pragma pop

/* 803AFD14-803AFD20 -00001 000C+00 0/1 0/0 0/0 .data            @4495 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4495[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHorseBoomerangMove__9daAlink_cFv,
};
#pragma pop

/* 803AFD20-803AFD2C -00001 000C+00 0/1 0/0 0/0 .data            @4496 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4496[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHorseHookshotSubject__9daAlink_cFv,
};
#pragma pop

/* 803AFD2C-803AFD38 -00001 000C+00 0/1 0/0 0/0 .data            @4497 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4497[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHorseHookshotMove__9daAlink_cFv,
};
#pragma pop

/* 803AFD38-803AFD44 -00001 000C+00 0/1 0/0 0/0 .data            @4498 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4498[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHorseBottleDrink__9daAlink_cFv,
};
#pragma pop

/* 803AFD44-803AFD50 -00001 000C+00 0/1 0/0 0/0 .data            @4499 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4499[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHorseComeback__9daAlink_cFv,
};
#pragma pop

/* 803AFD50-803AFD5C -00001 000C+00 0/1 0/0 0/0 .data            @4500 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4500[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHorseKandelaarPour__9daAlink_cFv,
};
#pragma pop

/* 803AFD5C-803AFD68 -00001 000C+00 0/1 0/0 0/0 .data            @4501 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4501[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHorseRun__9daAlink_cFv,
};
#pragma pop

/* 803AFD68-803AFD74 -00001 000C+00 0/1 0/0 0/0 .data            @4502 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4502[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHorseHang__9daAlink_cFv,
};
#pragma pop

/* 803AFD74-803AFD80 -00001 000C+00 0/1 0/0 0/0 .data            @4503 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4503[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHorseGetKey__9daAlink_cFv,
};
#pragma pop

/* 803AFD80-803AFD8C -00001 000C+00 0/1 0/0 0/0 .data            @4504 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4504[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHorseLookDown__9daAlink_cFv,
};
#pragma pop

/* 803AFD8C-803AFD98 -00001 000C+00 0/1 0/0 0/0 .data            @4505 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4505[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procBoarRun__9daAlink_cFv,
};
#pragma pop

/* 803AFD98-803AFDA4 -00001 000C+00 0/1 0/0 0/0 .data            @4506 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4506[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procSwordUnequipSp__9daAlink_cFv,
};
#pragma pop

/* 803AFDA4-803AFDB0 -00001 000C+00 0/1 0/0 0/0 .data            @4507 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4507[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHangStart__9daAlink_cFv,
};
#pragma pop

/* 803AFDB0-803AFDBC -00001 000C+00 0/1 0/0 0/0 .data            @4508 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4508[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHangFallStart__9daAlink_cFv,
};
#pragma pop

/* 803AFDBC-803AFDC8 -00001 000C+00 0/1 0/0 0/0 .data            @4509 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4509[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHangUp__9daAlink_cFv,
};
#pragma pop

/* 803AFDC8-803AFDD4 -00001 000C+00 0/1 0/0 0/0 .data            @4510 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4510[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHangWait__9daAlink_cFv,
};
#pragma pop

/* 803AFDD4-803AFDE0 -00001 000C+00 0/1 0/0 0/0 .data            @4511 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4511[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHangMove__9daAlink_cFv,
};
#pragma pop

/* 803AFDE0-803AFDEC -00001 000C+00 0/1 0/0 0/0 .data            @4512 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4512[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHangClimb__9daAlink_cFv,
};
#pragma pop

/* 803AFDEC-803AFDF8 -00001 000C+00 0/1 0/0 0/0 .data            @4513 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4513[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHangWallCatch__9daAlink_cFv,
};
#pragma pop

/* 803AFDF8-803AFE04 -00001 000C+00 0/1 0/0 0/0 .data            @4514 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4514[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHangReady__9daAlink_cFv,
};
#pragma pop

/* 803AFE04-803AFE10 -00001 000C+00 0/1 0/0 0/0 .data            @4515 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4515[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHangLeverDown__9daAlink_cFv,
};
#pragma pop

/* 803AFE10-803AFE1C -00001 000C+00 0/1 0/0 0/0 .data            @4516 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4516[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procBowSubject__9daAlink_cFv,
};
#pragma pop

/* 803AFE1C-803AFE28 -00001 000C+00 0/1 0/0 0/0 .data            @4517 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4517[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procBowMove__9daAlink_cFv,
};
#pragma pop

/* 803AFE28-803AFE34 -00001 000C+00 0/1 0/0 0/0 .data            @4518 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4518[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procBoomerangSubject__9daAlink_cFv,
};
#pragma pop

/* 803AFE34-803AFE40 -00001 000C+00 0/1 0/0 0/0 .data            @4519 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4519[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procBoomerangMove__9daAlink_cFv,
};
#pragma pop

/* 803AFE40-803AFE4C -00001 000C+00 0/1 0/0 0/0 .data            @4520 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4520[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procBoomerangCatch__9daAlink_cFv,
};
#pragma pop

/* 803AFE4C-803AFE58 -00001 000C+00 0/1 0/0 0/0 .data            @4521 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4521[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCopyRodSubject__9daAlink_cFv,
};
#pragma pop

/* 803AFE58-803AFE64 -00001 000C+00 0/1 0/0 0/0 .data            @4522 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4522[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCopyRodMove__9daAlink_cFv,
};
#pragma pop

/* 803AFE64-803AFE70 -00001 000C+00 0/1 0/0 0/0 .data            @4523 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4523[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCopyRodSwing__9daAlink_cFv,
};
#pragma pop

/* 803AFE70-803AFE7C -00001 000C+00 0/1 0/0 0/0 .data            @4524 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4524[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCopyRodRevive__9daAlink_cFv,
};
#pragma pop

/* 803AFE7C-803AFE88 -00001 000C+00 0/1 0/0 0/0 .data            @4525 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4525[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procLadderUpStart__9daAlink_cFv,
};
#pragma pop

/* 803AFE88-803AFE94 -00001 000C+00 0/1 0/0 0/0 .data            @4526 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4526[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procLadderUpEnd__9daAlink_cFv,
};
#pragma pop

/* 803AFE94-803AFEA0 -00001 000C+00 0/1 0/0 0/0 .data            @4527 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4527[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procLadderDownStart__9daAlink_cFv,
};
#pragma pop

/* 803AFEA0-803AFEAC -00001 000C+00 0/1 0/0 0/0 .data            @4528 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4528[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procLadderDownEnd__9daAlink_cFv,
};
#pragma pop

/* 803AFEAC-803AFEB8 -00001 000C+00 0/1 0/0 0/0 .data            @4529 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4529[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procLadderMove__9daAlink_cFv,
};
#pragma pop

/* 803AFEB8-803AFEC4 -00001 000C+00 0/1 0/0 0/0 .data            @4530 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4530[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procGrabReady__9daAlink_cFv,
};
#pragma pop

/* 803AFEC4-803AFED0 -00001 000C+00 0/1 0/0 0/0 .data            @4531 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4531[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procGrabUp__9daAlink_cFv,
};
#pragma pop

/* 803AFED0-803AFEDC -00001 000C+00 0/1 0/0 0/0 .data            @4532 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4532[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procGrabMiss__9daAlink_cFv,
};
#pragma pop

/* 803AFEDC-803AFEE8 -00001 000C+00 0/1 0/0 0/0 .data            @4533 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4533[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procGrabThrow__9daAlink_cFv,
};
#pragma pop

/* 803AFEE8-803AFEF4 -00001 000C+00 0/1 0/0 0/0 .data            @4534 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4534[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procGrabPut__9daAlink_cFv,
};
#pragma pop

/* 803AFEF4-803AFF00 -00001 000C+00 0/1 0/0 0/0 .data            @4535 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4535[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procGrabWait__9daAlink_cFv,
};
#pragma pop

/* 803AFF00-803AFF0C -00001 000C+00 0/1 0/0 0/0 .data            @4536 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4536[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procGrabRebound__9daAlink_cFv,
};
#pragma pop

/* 803AFF0C-803AFF18 -00001 000C+00 0/1 0/0 0/0 .data            @4537 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4537[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procGrabStand__9daAlink_cFv,
};
#pragma pop

/* 803AFF18-803AFF24 -00001 000C+00 0/1 0/0 0/0 .data            @4538 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4538[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procInsectCatch__9daAlink_cFv,
};
#pragma pop

/* 803AFF24-803AFF30 -00001 000C+00 0/1 0/0 0/0 .data            @4539 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4539[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procPickUp__9daAlink_cFv,
};
#pragma pop

/* 803AFF30-803AFF3C -00001 000C+00 0/1 0/0 0/0 .data            @4540 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4540[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procPickPut__9daAlink_cFv,
};
#pragma pop

/* 803AFF3C-803AFF48 -00001 000C+00 0/1 0/0 0/0 .data            @4541 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4541[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procStEscape__9daAlink_cFv,
};
#pragma pop

/* 803AFF48-803AFF54 -00001 000C+00 0/1 0/0 0/0 .data            @4542 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4542[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procDkCaught__9daAlink_cFv,
};
#pragma pop

/* 803AFF54-803AFF60 -00001 000C+00 0/1 0/0 0/0 .data            @4543 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4543[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procSwimUp__9daAlink_cFv,
};
#pragma pop

/* 803AFF60-803AFF6C -00001 000C+00 0/1 0/0 0/0 .data            @4544 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4544[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procSwimWait__9daAlink_cFv,
};
#pragma pop

/* 803AFF6C-803AFF78 -00001 000C+00 0/1 0/0 0/0 .data            @4545 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4545[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procSwimMove__9daAlink_cFv,
};
#pragma pop

/* 803AFF78-803AFF84 -00001 000C+00 0/1 0/0 0/0 .data            @4546 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4546[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procSwimDive__9daAlink_cFv,
};
#pragma pop

/* 803AFF84-803AFF90 -00001 000C+00 0/1 0/0 0/0 .data            @4547 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4547[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procSwimHookshotSubject__9daAlink_cFv,
};
#pragma pop

/* 803AFF90-803AFF9C -00001 000C+00 0/1 0/0 0/0 .data            @4548 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4548[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procSwimHookshotMove__9daAlink_cFv,
};
#pragma pop

/* 803AFF9C-803AFFA8 -00001 000C+00 0/1 0/0 0/0 .data            @4549 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4549[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procSwimDamage__9daAlink_cFv,
};
#pragma pop

/* 803AFFA8-803AFFB4 -00001 000C+00 0/1 0/0 0/0 .data            @4550 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4550[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procClimbUpStart__9daAlink_cFv,
};
#pragma pop

/* 803AFFB4-803AFFC0 -00001 000C+00 0/1 0/0 0/0 .data            @4551 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4551[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procClimbDownStart__9daAlink_cFv,
};
#pragma pop

/* 803AFFC0-803AFFCC -00001 000C+00 0/1 0/0 0/0 .data            @4552 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4552[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procClimbMoveUpDown__9daAlink_cFv,
};
#pragma pop

/* 803AFFCC-803AFFD8 -00001 000C+00 0/1 0/0 0/0 .data            @4553 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4553[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procClimbMoveSide__9daAlink_cFv,
};
#pragma pop

/* 803AFFD8-803AFFE4 -00001 000C+00 0/1 0/0 0/0 .data            @4554 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4554[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procClimbWait__9daAlink_cFv,
};
#pragma pop

/* 803AFFE4-803AFFF0 -00001 000C+00 0/1 0/0 0/0 .data            @4555 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4555[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procClimbToRoof__9daAlink_cFv,
};
#pragma pop

/* 803AFFF0-803AFFFC -00001 000C+00 0/1 0/0 0/0 .data            @4556 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4556[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procRoofHangStart__9daAlink_cFv,
};
#pragma pop

/* 803AFFFC-803B0008 -00001 000C+00 0/1 0/0 0/0 .data            @4557 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4557[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procRoofHangWait__9daAlink_cFv,
};
#pragma pop

/* 803B0008-803B0014 -00001 000C+00 0/1 0/0 0/0 .data            @4558 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4558[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procRoofHangFrontMove__9daAlink_cFv,
};
#pragma pop

/* 803B0014-803B0020 -00001 000C+00 0/1 0/0 0/0 .data            @4559 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4559[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procRoofHangSideMove__9daAlink_cFv,
};
#pragma pop

/* 803B0020-803B002C -00001 000C+00 0/1 0/0 0/0 .data            @4560 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4560[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procRoofHangTurn__9daAlink_cFv,
};
#pragma pop

/* 803B002C-803B0038 -00001 000C+00 0/1 0/0 0/0 .data            @4561 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4561[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procRoofSwitchHang__9daAlink_cFv,
};
#pragma pop

/* 803B0038-803B0044 -00001 000C+00 0/1 0/0 0/0 .data            @4562 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4562[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCanoeRide__9daAlink_cFv,
};
#pragma pop

/* 803B0044-803B0050 -00001 000C+00 0/1 0/0 0/0 .data            @4563 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4563[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCanoeJumpRide__9daAlink_cFv,
};
#pragma pop

/* 803B0050-803B005C -00001 000C+00 0/1 0/0 0/0 .data            @4564 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4564[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCanoeGetOff__9daAlink_cFv,
};
#pragma pop

/* 803B005C-803B0068 -00001 000C+00 0/1 0/0 0/0 .data            @4565 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4565[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCanoeWait__9daAlink_cFv,
};
#pragma pop

/* 803B0068-803B0074 -00001 000C+00 0/1 0/0 0/0 .data            @4566 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4566[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCanoeRow__9daAlink_cFv,
};
#pragma pop

/* 803B0074-803B0080 -00001 000C+00 0/1 0/0 0/0 .data            @4567 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4567[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCanoePaddleShift__9daAlink_cFv,
};
#pragma pop

/* 803B0080-803B008C -00001 000C+00 0/1 0/0 0/0 .data            @4568 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4568[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCanoePaddlePut__9daAlink_cFv,
};
#pragma pop

/* 803B008C-803B0098 -00001 000C+00 0/1 0/0 0/0 .data            @4569 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4569[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCanoePaddleGrab__9daAlink_cFv,
};
#pragma pop

/* 803B0098-803B00A4 -00001 000C+00 0/1 0/0 0/0 .data            @4570 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4570[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCanoeRodGrab__9daAlink_cFv,
};
#pragma pop

/* 803B00A4-803B00B0 -00001 000C+00 0/1 0/0 0/0 .data            @4571 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4571[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCanoeFishingWait__9daAlink_cFv,
};
#pragma pop

/* 803B00B0-803B00BC -00001 000C+00 0/1 0/0 0/0 .data            @4572 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4572[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCanoeFishingReel__9daAlink_cFv,
};
#pragma pop

/* 803B00BC-803B00C8 -00001 000C+00 0/1 0/0 0/0 .data            @4573 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4573[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCanoeFishingGet__9daAlink_cFv,
};
#pragma pop

/* 803B00C8-803B00D4 -00001 000C+00 0/1 0/0 0/0 .data            @4574 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4574[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCanoeSubjectivity__9daAlink_cFv,
};
#pragma pop

/* 803B00D4-803B00E0 -00001 000C+00 0/1 0/0 0/0 .data            @4575 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4575[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCanoeBowSubject__9daAlink_cFv,
};
#pragma pop

/* 803B00E0-803B00EC -00001 000C+00 0/1 0/0 0/0 .data            @4576 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4576[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCanoeBowMove__9daAlink_cFv,
};
#pragma pop

/* 803B00EC-803B00F8 -00001 000C+00 0/1 0/0 0/0 .data            @4577 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4577[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCanoeGrabMove__9daAlink_cFv,
};
#pragma pop

/* 803B00F8-803B0104 -00001 000C+00 0/1 0/0 0/0 .data            @4578 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4578[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCanoeBoomerangSubject__9daAlink_cFv,
};
#pragma pop

/* 803B0104-803B0110 -00001 000C+00 0/1 0/0 0/0 .data            @4579 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4579[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCanoeBoomerangMove__9daAlink_cFv,
};
#pragma pop

/* 803B0110-803B011C -00001 000C+00 0/1 0/0 0/0 .data            @4580 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4580[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCanoeHookshotSubject__9daAlink_cFv,
};
#pragma pop

/* 803B011C-803B0128 -00001 000C+00 0/1 0/0 0/0 .data            @4581 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4581[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCanoeHookshotMove__9daAlink_cFv,
};
#pragma pop

/* 803B0128-803B0134 -00001 000C+00 0/1 0/0 0/0 .data            @4582 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4582[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCanoeBottleDrink__9daAlink_cFv,
};
#pragma pop

/* 803B0134-803B0140 -00001 000C+00 0/1 0/0 0/0 .data            @4583 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4583[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCanoeKandelaarPour__9daAlink_cFv,
};
#pragma pop

/* 803B0140-803B014C -00001 000C+00 0/1 0/0 0/0 .data            @4584 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4584[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procFishingCast__9daAlink_cFv,
};
#pragma pop

/* 803B014C-803B0158 -00001 000C+00 0/1 0/0 0/0 .data            @4585 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4585[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procFishingFood__9daAlink_cFv,
};
#pragma pop

/* 803B0158-803B0164 -00001 000C+00 0/1 0/0 0/0 .data            @4586 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4586[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procSpinnerReady__9daAlink_cFv,
};
#pragma pop

/* 803B0164-803B0170 -00001 000C+00 0/1 0/0 0/0 .data            @4587 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4587[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procSpinnerWait__9daAlink_cFv,
};
#pragma pop

/* 803B0170-803B017C -00001 000C+00 0/1 0/0 0/0 .data            @4588 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4588[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procBoardRide__9daAlink_cFv,
};
#pragma pop

/* 803B017C-803B0188 -00001 000C+00 0/1 0/0 0/0 .data            @4589 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4589[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procBoardWait__9daAlink_cFv,
};
#pragma pop

/* 803B0188-803B0194 -00001 000C+00 0/1 0/0 0/0 .data            @4590 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4590[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procBoardRow__9daAlink_cFv,
};
#pragma pop

/* 803B0194-803B01A0 -00001 000C+00 0/1 0/0 0/0 .data            @4591 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4591[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procBoardTurn__9daAlink_cFv,
};
#pragma pop

/* 803B01A0-803B01AC -00001 000C+00 0/1 0/0 0/0 .data            @4592 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4592[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procBoardJump__9daAlink_cFv,
};
#pragma pop

/* 803B01AC-803B01B8 -00001 000C+00 0/1 0/0 0/0 .data            @4593 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4593[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procBoardSubjectivity__9daAlink_cFv,
};
#pragma pop

/* 803B01B8-803B01C4 -00001 000C+00 0/1 0/0 0/0 .data            @4594 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4594[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procBoardCut__9daAlink_cFv,
};
#pragma pop

/* 803B01C4-803B01D0 -00001 000C+00 0/1 0/0 0/0 .data            @4595 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4595[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procBoardCutTurn__9daAlink_cFv,
};
#pragma pop

/* 803B01D0-803B01DC -00001 000C+00 0/1 0/0 0/0 .data            @4596 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4596[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procFmChainUp__9daAlink_cFv,
};
#pragma pop

/* 803B01DC-803B01E8 -00001 000C+00 0/1 0/0 0/0 .data            @4597 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4597[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procFmChainStrongPull__9daAlink_cFv,
};
#pragma pop

/* 803B01E8-803B01F4 -00001 000C+00 0/1 0/0 0/0 .data            @4598 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4598[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procDoorOpen__9daAlink_cFv,
};
#pragma pop

/* 803B01F4-803B0200 -00001 000C+00 0/1 0/0 0/0 .data            @4599 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4599[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procMonkeyMove__9daAlink_cFv,
};
#pragma pop

/* 803B0200-803B020C -00001 000C+00 0/1 0/0 0/0 .data            @4600 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4600[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procDemoBoomerangCatch__9daAlink_cFv,
};
#pragma pop

/* 803B020C-803B0218 -00001 000C+00 0/1 0/0 0/0 .data            @4601 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4601[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procBottleDrink__9daAlink_cFv,
};
#pragma pop

/* 803B0218-803B0224 -00001 000C+00 0/1 0/0 0/0 .data            @4602 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4602[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procBottleOpen__9daAlink_cFv,
};
#pragma pop

/* 803B0224-803B0230 -00001 000C+00 0/1 0/0 0/0 .data            @4603 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4603[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procBottleSwing__9daAlink_cFv,
};
#pragma pop

/* 803B0230-803B023C -00001 000C+00 0/1 0/0 0/0 .data            @4604 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4604[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procBottleGet__9daAlink_cFv,
};
#pragma pop

/* 803B023C-803B0248 -00001 000C+00 0/1 0/0 0/0 .data            @4605 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4605[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procKandelaarSwing__9daAlink_cFv,
};
#pragma pop

/* 803B0248-803B0254 -00001 000C+00 0/1 0/0 0/0 .data            @4606 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4606[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procKandelaarPour__9daAlink_cFv,
};
#pragma pop

/* 803B0254-803B0260 -00001 000C+00 0/1 0/0 0/0 .data            @4607 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4607[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procGrassWhistleGet__9daAlink_cFv,
};
#pragma pop

/* 803B0260-803B026C -00001 000C+00 0/1 0/0 0/0 .data            @4608 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4608[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procGrassWhistleWait__9daAlink_cFv,
};
#pragma pop

/* 803B026C-803B0278 -00001 000C+00 0/1 0/0 0/0 .data            @4609 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4609[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHawkCatch__9daAlink_cFv,
};
#pragma pop

/* 803B0278-803B0284 -00001 000C+00 0/1 0/0 0/0 .data            @4610 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4610[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHawkSubject__9daAlink_cFv,
};
#pragma pop

/* 803B0284-803B0290 -00001 000C+00 0/1 0/0 0/0 .data            @4611 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4611[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procFloorDownRebound__9daAlink_cFv,
};
#pragma pop

/* 803B0290-803B029C -00001 000C+00 0/1 0/0 0/0 .data            @4612 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4612[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procGoronRideWait__9daAlink_cFv,
};
#pragma pop

/* 803B029C-803B02A8 -00001 000C+00 0/1 0/0 0/0 .data            @4613 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4613[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procGoatMove__9daAlink_cFv,
};
#pragma pop

/* 803B02A8-803B02B4 -00001 000C+00 0/1 0/0 0/0 .data            @4614 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4614[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procGoatCatch__9daAlink_cFv,
};
#pragma pop

/* 803B02B4-803B02C0 -00001 000C+00 0/1 0/0 0/0 .data            @4615 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4615[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procGoatStroke__9daAlink_cFv,
};
#pragma pop

/* 803B02C0-803B02CC -00001 000C+00 0/1 0/0 0/0 .data            @4616 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4616[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procGoronMove__9daAlink_cFv,
};
#pragma pop

/* 803B02CC-803B02D8 -00001 000C+00 0/1 0/0 0/0 .data            @4617 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4617[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procDemoCommon__9daAlink_cFv,
};
#pragma pop

/* 803B02D8-803B02E4 -00001 000C+00 0/1 0/0 0/0 .data            @4618 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4618[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHookshotSubject__9daAlink_cFv,
};
#pragma pop

/* 803B02E4-803B02F0 -00001 000C+00 0/1 0/0 0/0 .data            @4619 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4619[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHookshotMove__9daAlink_cFv,
};
#pragma pop

/* 803B02F0-803B02FC -00001 000C+00 0/1 0/0 0/0 .data            @4620 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4620[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHookshotFly__9daAlink_cFv,
};
#pragma pop

/* 803B02FC-803B0308 -00001 000C+00 0/1 0/0 0/0 .data            @4621 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4621[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHookshotRoofWait__9daAlink_cFv,
};
#pragma pop

/* 803B0308-803B0314 -00001 000C+00 0/1 0/0 0/0 .data            @4622 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4622[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHookshotRoofShoot__9daAlink_cFv,
};
#pragma pop

/* 803B0314-803B0320 -00001 000C+00 0/1 0/0 0/0 .data            @4623 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4623[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHookshotRoofBoots__9daAlink_cFv,
};
#pragma pop

/* 803B0320-803B032C -00001 000C+00 0/1 0/0 0/0 .data            @4624 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4624[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHookshotWallWait__9daAlink_cFv,
};
#pragma pop

/* 803B032C-803B0338 -00001 000C+00 0/1 0/0 0/0 .data            @4625 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4625[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHookshotWallShoot__9daAlink_cFv,
};
#pragma pop

/* 803B0338-803B0344 -00001 000C+00 0/1 0/0 0/0 .data            @4626 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4626[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procMagneBootsFly__9daAlink_cFv,
};
#pragma pop

/* 803B0344-803B0350 -00001 000C+00 0/1 0/0 0/0 .data            @4627 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4627[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procBootsEquip__9daAlink_cFv,
};
#pragma pop

/* 803B0350-803B035C -00001 000C+00 0/1 0/0 0/0 .data            @4628 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4628[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procSumouReady__9daAlink_cFv,
};
#pragma pop

/* 803B035C-803B0368 -00001 000C+00 0/1 0/0 0/0 .data            @4629 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4629[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procSumouMove__9daAlink_cFv,
};
#pragma pop

/* 803B0368-803B0374 -00001 000C+00 0/1 0/0 0/0 .data            @4630 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4630[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procSumouSideMove__9daAlink_cFv,
};
#pragma pop

/* 803B0374-803B0380 -00001 000C+00 0/1 0/0 0/0 .data            @4631 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4631[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procSumouAction__9daAlink_cFv,
};
#pragma pop

/* 803B0380-803B038C -00001 000C+00 0/1 0/0 0/0 .data            @4632 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4632[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procSumouStagger__9daAlink_cFv,
};
#pragma pop

/* 803B038C-803B0398 -00001 000C+00 0/1 0/0 0/0 .data            @4633 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4633[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procSumouWinLose__9daAlink_cFv,
};
#pragma pop

/* 803B0398-803B03A4 -00001 000C+00 0/1 0/0 0/0 .data            @4634 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4634[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procSumouShiko__9daAlink_cFv,
};
#pragma pop

/* 803B03A4-803B03B0 -00001 000C+00 0/1 0/0 0/0 .data            @4635 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4635[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procLookUp__9daAlink_cFv,
};
#pragma pop

/* 803B03B0-803B03BC -00001 000C+00 0/1 0/0 0/0 .data            @4636 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4636[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procLookUpToGetItem__9daAlink_cFv,
};
#pragma pop

/* 803B03BC-803B03C8 -00001 000C+00 0/1 0/0 0/0 .data            @4637 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4637[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHandPat__9daAlink_cFv,
};
#pragma pop

/* 803B03C8-803B03D4 -00001 000C+00 0/1 0/0 0/0 .data            @4638 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4638[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procIronBallSubject__9daAlink_cFv,
};
#pragma pop

/* 803B03D4-803B03E0 -00001 000C+00 0/1 0/0 0/0 .data            @4639 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4639[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procIronBallMove__9daAlink_cFv,
};
#pragma pop

/* 803B03E0-803B03EC -00001 000C+00 0/1 0/0 0/0 .data            @4640 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4640[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procIronBallThrow__9daAlink_cFv,
};
#pragma pop

/* 803B03EC-803B03F8 -00001 000C+00 0/1 0/0 0/0 .data            @4641 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4641[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procIronBallReturn__9daAlink_cFv,
};
#pragma pop

/* 803B03F8-803B0404 -00001 000C+00 0/1 0/0 0/0 .data            @4642 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4642[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procBossBodyHang__9daAlink_cFv,
};
#pragma pop

/* 803B0404-803B0410 -00001 000C+00 0/1 0/0 0/0 .data            @4643 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4643[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procOctaIealSpit__9daAlink_cFv,
};
#pragma pop

/* 803B0410-803B041C -00001 000C+00 0/1 0/0 0/0 .data            @4644 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4644[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procScreamWait__9daAlink_cFv,
};
#pragma pop

/* 803B041C-803B0428 -00001 000C+00 0/1 0/0 0/0 .data            @4645 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4645[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procGoatStopReady__9daAlink_cFv,
};
#pragma pop

/* 803B0428-803B0434 -00001 000C+00 0/1 0/0 0/0 .data            @4646 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4646[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procZoraMove__9daAlink_cFv,
};
#pragma pop

/* 803B0434-803B0440 -00001 000C+00 0/1 0/0 0/0 .data            @4647 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4647[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procLookAroundTurn__9daAlink_cFv,
};
#pragma pop

/* 803B0440-803B044C -00001 000C+00 0/1 0/0 0/0 .data            @4648 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4648[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procTradeItemOut__9daAlink_cFv,
};
#pragma pop

/* 803B044C-803B0458 -00001 000C+00 0/1 0/0 0/0 .data            @4649 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4649[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procNotUseItem__9daAlink_cFv,
};
#pragma pop

/* 803B0458-803B0464 -00001 000C+00 0/1 0/0 0/0 .data            @4650 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4650[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procSwordReady__9daAlink_cFv,
};
#pragma pop

/* 803B0464-803B0470 -00001 000C+00 0/1 0/0 0/0 .data            @4651 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4651[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procSwordPush__9daAlink_cFv,
};
#pragma pop

/* 803B0470-803B047C -00001 000C+00 0/1 0/0 0/0 .data            @4652 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4652[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procGanonFinish__9daAlink_cFv,
};
#pragma pop

/* 803B047C-803B0488 -00001 000C+00 0/1 0/0 0/0 .data            @4653 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4653[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCutFastReady__9daAlink_cFv,
};
#pragma pop

/* 803B0488-803B0494 -00001 000C+00 0/1 0/0 0/0 .data            @4654 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4654[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procMasterSwordStick__9daAlink_cFv,
};
#pragma pop

/* 803B0494-803B04A0 -00001 000C+00 0/1 0/0 0/0 .data            @4655 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4655[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procMasterSwordPull__9daAlink_cFv,
};
#pragma pop

/* 803B04A0-803B04AC -00001 000C+00 0/1 0/0 0/0 .data            @4656 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4656[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procDungeonWarpReady__9daAlink_cFv,
};
#pragma pop

/* 803B04AC-803B04B8 -00001 000C+00 0/1 0/0 0/0 .data            @4657 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4657[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procDungeonWarp__9daAlink_cFv,
};
#pragma pop

/* 803B04B8-803B04C4 -00001 000C+00 0/1 0/0 0/0 .data            @4658 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4658[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procDungeonWarpSceneStart__9daAlink_cFv,
};
#pragma pop

/* 803B04C4-803B04D0 -00001 000C+00 0/1 0/0 0/0 .data            @4659 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4659[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfHowlDemo__9daAlink_cFv,
};
#pragma pop

/* 803B04D0-803B04DC -00001 000C+00 0/1 0/0 0/0 .data            @4660 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4660[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfServiceWait__9daAlink_cFv,
};
#pragma pop

/* 803B04DC-803B04E8 -00001 000C+00 0/1 0/0 0/0 .data            @4661 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4661[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfTiredWait__9daAlink_cFv,
};
#pragma pop

/* 803B04E8-803B04F4 -00001 000C+00 0/1 0/0 0/0 .data            @4662 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4662[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfMidnaRideShock__9daAlink_cFv,
};
#pragma pop

/* 803B04F4-803B0500 -00001 000C+00 0/1 0/0 0/0 .data            @4663 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4663[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfWait__9daAlink_cFv,
};
#pragma pop

/* 803B0500-803B050C -00001 000C+00 0/1 0/0 0/0 .data            @4664 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4664[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfMove__9daAlink_cFv,
};
#pragma pop

/* 803B050C-803B0518 -00001 000C+00 0/1 0/0 0/0 .data            @4665 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4665[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfDash__9daAlink_cFv,
};
#pragma pop

/* 803B0518-803B0524 -00001 000C+00 0/1 0/0 0/0 .data            @4666 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4666[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfDashReverse__9daAlink_cFv,
};
#pragma pop

/* 803B0524-803B0530 -00001 000C+00 0/1 0/0 0/0 .data            @4667 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4667[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfWaitTurn__9daAlink_cFv,
};
#pragma pop

/* 803B0530-803B053C -00001 000C+00 0/1 0/0 0/0 .data            @4668 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4668[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfAtnActorMove__9daAlink_cFv,
};
#pragma pop

/* 803B053C-803B0548 -00001 000C+00 0/1 0/0 0/0 .data            @4669 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4669[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfSideStep__9daAlink_cFv,
};
#pragma pop

/* 803B0548-803B0554 -00001 000C+00 0/1 0/0 0/0 .data            @4670 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4670[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfSideStepLand__9daAlink_cFv,
};
#pragma pop

/* 803B0554-803B0560 -00001 000C+00 0/1 0/0 0/0 .data            @4671 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4671[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfBackJump__9daAlink_cFv,
};
#pragma pop

/* 803B0560-803B056C -00001 000C+00 0/1 0/0 0/0 .data            @4672 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4672[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfBackJumpLand__9daAlink_cFv,
};
#pragma pop

/* 803B056C-803B0578 -00001 000C+00 0/1 0/0 0/0 .data            @4673 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4673[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfHowl__9daAlink_cFv,
};
#pragma pop

/* 803B0578-803B0584 -00001 000C+00 0/1 0/0 0/0 .data            @4674 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4674[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfAutoJump__9daAlink_cFv,
};
#pragma pop

/* 803B0584-803B0590 -00001 000C+00 0/1 0/0 0/0 .data            @4675 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4675[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfFall__9daAlink_cFv,
};
#pragma pop

/* 803B0590-803B059C -00001 000C+00 0/1 0/0 0/0 .data            @4676 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4676[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfLand__9daAlink_cFv,
};
#pragma pop

/* 803B059C-803B05A8 -00001 000C+00 0/1 0/0 0/0 .data            @4677 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4677[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfSit__9daAlink_cFv,
};
#pragma pop

/* 803B05A8-803B05B4 -00001 000C+00 0/1 0/0 0/0 .data            @4678 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4678[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfLieStart__9daAlink_cFv,
};
#pragma pop

/* 803B05B4-803B05C0 -00001 000C+00 0/1 0/0 0/0 .data            @4679 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4679[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfLieMove__9daAlink_cFv,
};
#pragma pop

/* 803B05C0-803B05CC -00001 000C+00 0/1 0/0 0/0 .data            @4680 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4680[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfLieAutoMove__9daAlink_cFv,
};
#pragma pop

/* 803B05CC-803B05D8 -00001 000C+00 0/1 0/0 0/0 .data            @4681 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4681[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfHangReady__9daAlink_cFv,
};
#pragma pop

/* 803B05D8-803B05E4 -00001 000C+00 0/1 0/0 0/0 .data            @4682 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4682[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfStepMove__9daAlink_cFv,
};
#pragma pop

/* 803B05E4-803B05F0 -00001 000C+00 0/1 0/0 0/0 .data            @4683 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4683[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfHangWallCatch__9daAlink_cFv,
};
#pragma pop

/* 803B05F0-803B05FC -00001 000C+00 0/1 0/0 0/0 .data            @4684 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4684[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfHangFallStart__9daAlink_cFv,
};
#pragma pop

/* 803B05FC-803B0608 -00001 000C+00 0/1 0/0 0/0 .data            @4685 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4685[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfDamage__9daAlink_cFv,
};
#pragma pop

/* 803B0608-803B0614 -00001 000C+00 0/1 0/0 0/0 .data            @4686 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4686[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfLargeDamageUp__9daAlink_cFv,
};
#pragma pop

/* 803B0614-803B0620 -00001 000C+00 0/1 0/0 0/0 .data            @4687 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4687[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfLandDamage__9daAlink_cFv,
};
#pragma pop

/* 803B0620-803B062C -00001 000C+00 0/1 0/0 0/0 .data            @4688 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4688[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfScreamWait__9daAlink_cFv,
};
#pragma pop

/* 803B062C-803B0638 -00001 000C+00 0/1 0/0 0/0 .data            @4689 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4689[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfSlip__9daAlink_cFv,
};
#pragma pop

/* 803B0638-803B0644 -00001 000C+00 0/1 0/0 0/0 .data            @4690 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4690[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfSlipTurn__9daAlink_cFv,
};
#pragma pop

/* 803B0644-803B0650 -00001 000C+00 0/1 0/0 0/0 .data            @4691 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4691[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfSlipTurnLand__9daAlink_cFv,
};
#pragma pop

/* 803B0650-803B065C -00001 000C+00 0/1 0/0 0/0 .data            @4692 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4692[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfSlideReady__9daAlink_cFv,
};
#pragma pop

/* 803B065C-803B0668 -00001 000C+00 0/1 0/0 0/0 .data            @4693 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4693[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfSlide__9daAlink_cFv,
};
#pragma pop

/* 803B0668-803B0674 -00001 000C+00 0/1 0/0 0/0 .data            @4694 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4694[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfSlideLand__9daAlink_cFv,
};
#pragma pop

/* 803B0674-803B0680 -00001 000C+00 0/1 0/0 0/0 .data            @4695 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4695[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfWaitSlip__9daAlink_cFv,
};
#pragma pop

/* 803B0680-803B068C -00001 000C+00 0/1 0/0 0/0 .data            @4696 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4696[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfSlopeStart__9daAlink_cFv,
};
#pragma pop

/* 803B068C-803B0698 -00001 000C+00 0/1 0/0 0/0 .data            @4697 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4697[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfRopeMove__9daAlink_cFv,
};
#pragma pop

/* 803B0698-803B06A4 -00001 000C+00 0/1 0/0 0/0 .data            @4698 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4698[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfRopeHang__9daAlink_cFv,
};
#pragma pop

/* 803B06A4-803B06B0 -00001 000C+00 0/1 0/0 0/0 .data            @4699 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4699[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfRopeTurn__9daAlink_cFv,
};
#pragma pop

/* 803B06B0-803B06BC -00001 000C+00 0/1 0/0 0/0 .data            @4700 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4700[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfRopeStagger__9daAlink_cFv,
};
#pragma pop

/* 803B06BC-803B06C8 -00001 000C+00 0/1 0/0 0/0 .data            @4701 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4701[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfRopeSubjectivity__9daAlink_cFv,
};
#pragma pop

/* 803B06C8-803B06D4 -00001 000C+00 0/1 0/0 0/0 .data            @4702 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4702[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfTagJump__9daAlink_cFv,
};
#pragma pop

/* 803B06D4-803B06E0 -00001 000C+00 0/1 0/0 0/0 .data            @4703 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4703[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfTagJumpLand__9daAlink_cFv,
};
#pragma pop

/* 803B06E0-803B06EC -00001 000C+00 0/1 0/0 0/0 .data            @4704 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4704[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfRollAttackCharge__9daAlink_cFv,
};
#pragma pop

/* 803B06EC-803B06F8 -00001 000C+00 0/1 0/0 0/0 .data            @4705 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4705[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfRollAttackMove__9daAlink_cFv,
};
#pragma pop

/* 803B06F8-803B0704 -00001 000C+00 0/1 0/0 0/0 .data            @4706 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4706[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfJumpAttack__9daAlink_cFv,
};
#pragma pop

/* 803B0704-803B0710 -00001 000C+00 0/1 0/0 0/0 .data            @4707 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4707[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfJumpAttackKick__9daAlink_cFv,
};
#pragma pop

/* 803B0710-803B071C -00001 000C+00 0/1 0/0 0/0 .data            @4708 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4708[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfJumpAttackSlideLand__9daAlink_cFv,
};
#pragma pop

/* 803B071C-803B0728 -00001 000C+00 0/1 0/0 0/0 .data            @4709 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4709[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfJumpAttackNormalLand__9daAlink_cFv,
};
#pragma pop

/* 803B0728-803B0734 -00001 000C+00 0/1 0/0 0/0 .data            @4710 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4710[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfWaitAttack__9daAlink_cFv,
};
#pragma pop

/* 803B0734-803B0740 -00001 000C+00 0/1 0/0 0/0 .data            @4711 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4711[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfRollAttack__9daAlink_cFv,
};
#pragma pop

/* 803B0740-803B074C -00001 000C+00 0/1 0/0 0/0 .data            @4712 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4712[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfDownAttack__9daAlink_cFv,
};
#pragma pop

/* 803B074C-803B0758 -00001 000C+00 0/1 0/0 0/0 .data            @4713 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4713[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfDownAtLand__9daAlink_cFv,
};
#pragma pop

/* 803B0758-803B0764 -00001 000C+00 0/1 0/0 0/0 .data            @4714 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4714[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfDownAtMissLand__9daAlink_cFv,
};
#pragma pop

/* 803B0764-803B0770 -00001 000C+00 0/1 0/0 0/0 .data            @4715 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4715[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfLockAttack__9daAlink_cFv,
};
#pragma pop

/* 803B0770-803B077C -00001 000C+00 0/1 0/0 0/0 .data            @4716 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4716[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfLockAttackTurn__9daAlink_cFv,
};
#pragma pop

/* 803B077C-803B0788 -00001 000C+00 0/1 0/0 0/0 .data            @4717 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4717[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfSwimUp__9daAlink_cFv,
};
#pragma pop

/* 803B0788-803B0794 -00001 000C+00 0/1 0/0 0/0 .data            @4718 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4718[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfSwimWait__9daAlink_cFv,
};
#pragma pop

/* 803B0794-803B07A0 -00001 000C+00 0/1 0/0 0/0 .data            @4719 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4719[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfSwimMove__9daAlink_cFv,
};
#pragma pop

/* 803B07A0-803B07AC -00001 000C+00 0/1 0/0 0/0 .data            @4720 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4720[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfSwimEndWait__9daAlink_cFv,
};
#pragma pop

/* 803B07AC-803B07B8 -00001 000C+00 0/1 0/0 0/0 .data            @4721 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4721[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfGrabUp__9daAlink_cFv,
};
#pragma pop

/* 803B07B8-803B07C4 -00001 000C+00 0/1 0/0 0/0 .data            @4722 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4722[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfGrabPut__9daAlink_cFv,
};
#pragma pop

/* 803B07C4-803B07D0 -00001 000C+00 0/1 0/0 0/0 .data            @4723 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4723[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfGrabThrow__9daAlink_cFv,
};
#pragma pop

/* 803B07D0-803B07DC -00001 000C+00 0/1 0/0 0/0 .data            @4724 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4724[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfChainUp__9daAlink_cFv,
};
#pragma pop

/* 803B07DC-803B07E8 -00001 000C+00 0/1 0/0 0/0 .data            @4725 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4725[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfPush__9daAlink_cFv,
};
#pragma pop

/* 803B07E8-803B07F4 -00001 000C+00 0/1 0/0 0/0 .data            @4726 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4726[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfChainReady__9daAlink_cFv,
};
#pragma pop

/* 803B07F4-803B0800 -00001 000C+00 0/1 0/0 0/0 .data            @4727 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4727[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfChainWait__9daAlink_cFv,
};
#pragma pop

/* 803B0800-803B080C -00001 000C+00 0/1 0/0 0/0 .data            @4728 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4728[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfDig__9daAlink_cFv,
};
#pragma pop

/* 803B080C-803B0818 -00001 000C+00 0/1 0/0 0/0 .data            @4729 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4729[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfDigThrough__9daAlink_cFv,
};
#pragma pop

/* 803B0818-803B0824 -00001 000C+00 0/1 0/0 0/0 .data            @4730 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4730[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfAttackReverse__9daAlink_cFv,
};
#pragma pop

/* 803B0824-803B0830 -00001 000C+00 0/1 0/0 0/0 .data            @4731 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4731[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfEnemyThrow__9daAlink_cFv,
};
#pragma pop

/* 803B0830-803B083C -00001 000C+00 0/1 0/0 0/0 .data            @4732 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4732[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfEnemyHangBite__9daAlink_cFv,
};
#pragma pop

/* 803B083C-803B0848 -00001 000C+00 0/1 0/0 0/0 .data            @4733 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4733[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfGiantPuzzle__9daAlink_cFv,
};
#pragma pop

/* 803B0848-803B0854 -00001 000C+00 0/1 0/0 0/0 .data            @4734 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4734[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfCargoCarry__9daAlink_cFv,
};
#pragma pop

/* 803B0854-803B0860 -00001 000C+00 0/1 0/0 0/0 .data            @4735 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4735[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfGetSmell__9daAlink_cFv,
};
#pragma pop

/* 803B0860-803B086C -00001 000C+00 0/1 0/0 0/0 .data            @4736 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4736[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procDemoCommon__9daAlink_cFv,
};
#pragma pop

/* 803B086C-803B0878 -00001 000C+00 0/1 0/0 0/0 .data            @4737 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4737[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfSnowEscape__9daAlink_cFv,
};
#pragma pop

/* 803B0878-803B0884 -00001 000C+00 0/1 0/0 0/0 .data            @4738 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4738[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfGanonCatch__9daAlink_cFv,
};
#pragma pop

/* 803B0884-803B0890 -00001 000C+00 0/1 0/0 0/0 .data            @4739 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4739[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoToolDemo__9daAlink_cFv,
};
#pragma pop

/* 803B0890-803B089C -00001 000C+00 0/1 0/0 0/0 .data            @4740 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4740[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoSubjectivity__9daAlink_cFv,
};
#pragma pop

/* 803B089C-803B08A8 -00001 000C+00 0/1 0/0 0/0 .data            @4741 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4741[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoSwimSubjectivity__9daAlink_cFv,
};
#pragma pop

/* 803B08A8-803B08B4 -00001 000C+00 0/1 0/0 0/0 .data            @4742 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4742[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoPeepSubjectivity__9daAlink_cFv,
};
#pragma pop

/* 803B08B4-803B08C0 -00001 000C+00 0/1 0/0 0/0 .data            @4743 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4743[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoPolyDamage__9daAlink_cFv,
};
#pragma pop

/* 803B08C0-803B08CC -00001 000C+00 0/1 0/0 0/0 .data            @4744 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4744[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoElecDamage__9daAlink_cFv,
};
#pragma pop

/* 803B08CC-803B08D8 -00001 000C+00 0/1 0/0 0/0 .data            @4745 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4745[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoPushPullWait__9daAlink_cFv,
};
#pragma pop

/* 803B08D8-803B08E4 -00001 000C+00 0/1 0/0 0/0 .data            @4746 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4746[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoPushMove__9daAlink_cFv,
};
#pragma pop

/* 803B08E4-803B08F0 -00001 000C+00 0/1 0/0 0/0 .data            @4747 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4747[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoTalk__9daAlink_cFv,
};
#pragma pop

/* 803B08F0-803B08FC -00001 000C+00 0/1 0/0 0/0 .data            @4748 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4748[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoOpenTreasure__9daAlink_cFv,
};
#pragma pop

/* 803B08FC-803B0908 -00001 000C+00 0/1 0/0 0/0 .data            @4749 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4749[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoUnequip__9daAlink_cFv,
};
#pragma pop

/* 803B0908-803B0914 -00001 000C+00 0/1 0/0 0/0 .data            @4750 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4750[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoGetItem__9daAlink_cFv,
};
#pragma pop

/* 803B0914-803B0920 -00001 000C+00 0/1 0/0 0/0 .data            @4751 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4751[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoTurnBack__9daAlink_cFv,
};
#pragma pop

/* 803B0920-803B092C -00001 000C+00 0/1 0/0 0/0 .data            @4752 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4752[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoLookWait__9daAlink_cFv,
};
#pragma pop

/* 803B092C-803B0938 -00001 000C+00 0/1 0/0 0/0 .data            @4753 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4753[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procDemoCommon__9daAlink_cFv,
};
#pragma pop

/* 803B0938-803B0944 -00001 000C+00 0/1 0/0 0/0 .data            @4754 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4754[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procDemoCommon__9daAlink_cFv,
};
#pragma pop

/* 803B0944-803B0950 -00001 000C+00 0/1 0/0 0/0 .data            @4755 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4755[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoMetamorphose__9daAlink_cFv,
};
#pragma pop

/* 803B0950-803B095C -00001 000C+00 0/1 0/0 0/0 .data            @4756 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4756[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoMetamorphoseOnly__9daAlink_cFv,
};
#pragma pop

/* 803B095C-803B0968 -00001 000C+00 0/1 0/0 0/0 .data            @4757 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4757[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoWarp__9daAlink_cFv,
};
#pragma pop

/* 803B0968-803B0974 -00001 000C+00 0/1 0/0 0/0 .data            @4758 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4758[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoDead__9daAlink_cFv,
};
#pragma pop

/* 803B0974-803B0980 -00001 000C+00 0/1 0/0 0/0 .data            @4759 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4759[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoFogDead__9daAlink_cFv,
};
#pragma pop

/* 803B0980-803B098C -00001 000C+00 0/1 0/0 0/0 .data            @4760 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4760[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoLookAround__9daAlink_cFv,
};
#pragma pop

/* 803B098C-803B0998 -00001 000C+00 0/1 0/0 0/0 .data            @4761 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4761[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procDemoCommon__9daAlink_cFv,
};
#pragma pop

/* 803B0998-803B09A4 -00001 000C+00 0/1 0/0 0/0 .data            @4762 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4762[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoSandWallHit__9daAlink_cFv,
};
#pragma pop

/* 803B09A4-803B09B0 -00001 000C+00 0/1 0/0 0/0 .data            @4763 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4763[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoLavaReturn__9daAlink_cFv,
};
#pragma pop

/* 803B09B0-803B09BC -00001 000C+00 0/1 0/0 0/0 .data            @4764 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4764[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoSwimFreezeReturn__9daAlink_cFv,
};
#pragma pop

/* 803B09BC-803B09C8 -00001 000C+00 0/1 0/0 0/0 .data            @4765 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4765[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoGetReadySit__9daAlink_cFv,
};
#pragma pop

/* 803B09C8-803B09D4 -00001 000C+00 0/1 0/0 0/0 .data            @4766 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4766[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoTwGate__9daAlink_cFv,
};
#pragma pop

/* 803B09D4-803B09E0 -00001 000C+00 0/1 0/0 0/0 .data            @4767 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4767[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoLargeDamage__9daAlink_cFv,
};
#pragma pop

/* 803B09E0-803B09EC -00001 000C+00 0/1 0/0 0/0 .data            @4768 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4768[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoLargeDamageWall__9daAlink_cFv,
};
#pragma pop

/* 803B09EC-803B09F8 -00001 000C+00 0/1 0/0 0/0 .data            @4769 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4769[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoNod__9daAlink_cFv,
};
#pragma pop

/* 803B09F8-803B0A04 -00001 000C+00 0/1 0/0 0/0 .data            @4770 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4770[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procDemoCommon__9daAlink_cFv,
};
#pragma pop

/* 803B0A04-803B0A10 -00001 000C+00 0/1 0/0 0/0 .data            @4771 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4771[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoGlare__9daAlink_cFv,
};
#pragma pop

/* 803B0A10-803B0A1C -00001 000C+00 0/1 0/0 0/0 .data            @4772 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4772[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoHorseCallWait__9daAlink_cFv,
};
#pragma pop

/* 803B0A1C-803B0A28 -00001 000C+00 0/1 0/0 0/0 .data            @4773 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4773[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procDemoCommon__9daAlink_cFv,
};
#pragma pop

/* 803B0A28-803B2028 00DB48 1600+00 1/2 0/0 0/0 .data            m_procInitTable__9daAlink_c */
SECTION_DATA u8 daAlink_c::m_procInitTable[5632] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x85,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x11, 0x85,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x11, 0x85,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x11, 0x84,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x11, 0x84,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x11, 0x85,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x11, 0x84,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x10, 0x85,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x10, 0x84,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x11, 0x86,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x11, 0x85,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x82, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x10, 0x86,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x85,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x06,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x06,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x05,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x11, 0x84,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x03, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x03, 0x20,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x02, 0x02,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x02, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x22,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x20, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x22,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x80, 0x08,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0xA0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0B, 0x00, 0xE0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x00, 0xA0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0xA0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x20, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x24, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x24, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x35, 0x85,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x25, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x25, 0x02,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x25, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x34, 0x04,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x25, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x25, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x25, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x08,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x34, 0x04,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x34, 0x04,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x34, 0x04,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x34, 0x04,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x34, 0x04,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x34, 0x04,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x34, 0x04,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x09,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x41,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x41,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x41,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x41,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x10, 0x05,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x10, 0x04,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x10, 0x05,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x10, 0x04,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x10, 0x05,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x10, 0x04,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x02, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x05,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x01, 0x05,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x01, 0x04,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x04, 0x10, 0x05,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x04, 0x10, 0x04,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x08,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x30,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x24, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x24, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x24, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x14, 0x00, 0x35, 0x04,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x25, 0x04,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x25, 0x04,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x24, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x24, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x24, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x44, 0x00, 0x24, 0x04,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x44, 0x00, 0x25, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x24, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x64, 0x00, 0x24, 0x04,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x64, 0x00, 0x34, 0x04,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x64, 0x00, 0x34, 0x04,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x10, 0x34, 0x04,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x64, 0x00, 0x34, 0x04,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x64, 0x00, 0x34, 0x04,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x64, 0x00, 0x34, 0x04,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x64, 0x00, 0x34, 0x04,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x02,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x25, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x22,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x15, 0x04,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x15, 0x04,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x15, 0x04,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x14, 0x06,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x04, 0x04,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x04,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x01, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x21,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x11, 0x85,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x21, 0x21,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0xA0, 0x21,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21, 0x21,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x10, 0x05,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x10, 0x04,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x02,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x68, 0x02,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x69, 0x02,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x69, 0x02,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x68, 0x02,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x69, 0x02,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x03,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xA0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xA0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xA0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xA0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xA0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x02,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xA0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x10, 0x05,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x10, 0x04,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x29,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x20, 0x08,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x01, 0x21,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x21,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x21,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x03,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x03,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x21,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x02,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x02,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x02,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x02,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x20, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x11, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x50, 0x40,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x50, 0x41,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x00, 0x80, 0x08,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x10, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x10, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x10, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x80, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x31, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x02, 0x30, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x02, 0x30, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x02, 0x30, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x30, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x22,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x20,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x22,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x20, 0x21,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x02,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x01, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x01, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x02, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xA0, 0x20,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x02,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0xE0, 0x22,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x21,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xA0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x20, 0x21,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x10, 0x05,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x04, 0x10, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x20, 0x0B,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x20, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x20, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x01, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0xE0, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xA0, 0x09,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xA0, 0x09,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0A,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x20, 0x09,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x20, 0x09,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xA0, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x02,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0A,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0A,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
};

/* 803B2028-803B2034 -00001 000C+00 0/1 0/0 0/0 .data            @4774 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4774[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)commonWaitTurnInit__9daAlink_cFv,
};
#pragma pop

/* 803B2034-803B2040 -00001 000C+00 0/1 0/0 0/0 .data            @4775 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4775[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoOpenTreasureInit__9daAlink_cFv,
};
#pragma pop

/* 803B2040-803B204C -00001 000C+00 0/1 0/0 0/0 .data            @4776 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4776[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoGetItemInit__9daAlink_cFv,
};
#pragma pop

/* 803B204C-803B2058 -00001 000C+00 0/1 0/0 0/0 .data            @4777 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4777[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoUnequipInit__9daAlink_cFv,
};
#pragma pop

/* 803B2058-803B2064 -00001 000C+00 0/1 0/0 0/0 .data            @4778 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4778[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)commonGrabPutInit__9daAlink_cFv,
};
#pragma pop

/* 803B2064-803B2070 -00001 000C+00 0/1 0/0 0/0 .data            @4779 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4779[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procMonkeyMoveInit__9daAlink_cFv,
};
#pragma pop

/* 803B2070-803B207C -00001 000C+00 0/1 0/0 0/0 .data            @4780 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4780[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoLookAroundInit__9daAlink_cFv,
};
#pragma pop

/* 803B207C-803B2088 -00001 000C+00 0/1 0/0 0/0 .data            @4781 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4781[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoTurnBackInit__9daAlink_cFv,
};
#pragma pop

/* 803B2088-803B2094 -00001 000C+00 0/1 0/0 0/0 .data            @4782 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4782[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procDemoBoomerangCatchInit__9daAlink_cFv,
};
#pragma pop

/* 803B2094-803B20A0 -00001 000C+00 0/1 0/0 0/0 .data            @4783 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4783[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHawkCatchInit__9daAlink_cFv,
};
#pragma pop

/* 803B20A0-803B20AC -00001 000C+00 0/1 0/0 0/0 .data            @4784 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4784[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procSwordUnequipSpInit__9daAlink_cFv,
};
#pragma pop

/* 803B20AC-803B20B8 -00001 000C+00 0/1 0/0 0/0 .data            @4785 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4785[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoDemoPushPullWaitInit__9daAlink_cFv,
};
#pragma pop

/* 803B20B8-803B20C4 -00001 000C+00 0/1 0/0 0/0 .data            @4786 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4786[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoDemoPushMoveInit__9daAlink_cFv,
};
#pragma pop

/* 803B20C4-803B20D0 -00001 000C+00 0/1 0/0 0/0 .data            @4787 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4787[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procBossAtnWaitInit__9daAlink_cFv,
};
#pragma pop

/* 803B20D0-803B20DC -00001 000C+00 0/1 0/0 0/0 .data            @4788 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4788[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procDoorOpenInit__9daAlink_cFv,
};
#pragma pop

/* 803B20DC-803B20E8 -00001 000C+00 0/1 0/0 0/0 .data            @4789 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4789[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procTradeItemOutInit__9daAlink_cFv,
};
#pragma pop

/* 803B20E8-803B20F4 -00001 000C+00 0/1 0/0 0/0 .data            @4790 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4790[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procKandelaarSwingInit__9daAlink_cFv,
};
#pragma pop

/* 803B20F4-803B2100 -00001 000C+00 0/1 0/0 0/0 .data            @4791 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4791[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procFrontRollInit__9daAlink_cFv,
};
#pragma pop

/* 803B2100-803B210C -00001 000C+00 0/1 0/0 0/0 .data            @4792 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4792[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCrouchInit__9daAlink_cFv,
};
#pragma pop

/* 803B210C-803B2118 -00001 000C+00 0/1 0/0 0/0 .data            @4793 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4793[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoCaughtInit__9daAlink_cFv,
};
#pragma pop

/* 803B2118-803B2124 -00001 000C+00 0/1 0/0 0/0 .data            @4794 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4794[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procLookUpInit__9daAlink_cFv,
};
#pragma pop

/* 803B2124-803B2130 -00001 000C+00 0/1 0/0 0/0 .data            @4795 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4795[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procLookUpToGetItemInit__9daAlink_cFv,
};
#pragma pop

/* 803B2130-803B213C -00001 000C+00 0/1 0/0 0/0 .data            @4796 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4796[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHandPatInit__9daAlink_cFv,
};
#pragma pop

/* 803B213C-803B2148 -00001 000C+00 0/1 0/0 0/0 .data            @4797 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4797[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfMidnaRideShockInit__9daAlink_cFv,
};
#pragma pop

/* 803B2148-803B2154 -00001 000C+00 0/1 0/0 0/0 .data            @4798 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4798[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procSumouShikoInit__9daAlink_cFv,
};
#pragma pop

/* 803B2154-803B2160 -00001 000C+00 0/1 0/0 0/0 .data            @4799 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4799[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoFogDeadInit__9daAlink_cFv,
};
#pragma pop

/* 803B2160-803B216C -00001 000C+00 0/1 0/0 0/0 .data            @4800 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4800[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfSmellWaitInit__9daAlink_cFv,
};
#pragma pop

/* 803B216C-803B2178 -00001 000C+00 0/1 0/0 0/0 .data            @4801 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4801[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfCargoCarryInit__9daAlink_cFv,
};
#pragma pop

/* 803B2178-803B2184 -00001 000C+00 0/1 0/0 0/0 .data            @4802 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4802[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoMetamorphoseInit__9daAlink_cFv,
};
#pragma pop

/* 803B2184-803B2190 -00001 000C+00 0/1 0/0 0/0 .data            @4803 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4803[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoMetamorphoseInit__9daAlink_cFv,
};
#pragma pop

/* 803B2190-803B219C -00001 000C+00 0/1 0/0 0/0 .data            @4804 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4804[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHorseGetKeyInit__9daAlink_cFv,
};
#pragma pop

/* 803B219C-803B21A8 -00001 000C+00 0/1 0/0 0/0 .data            @4805 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4805[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoNodInit__9daAlink_cFv,
};
#pragma pop

/* 803B21A8-803B21B4 -00001 000C+00 0/1 0/0 0/0 .data            @4806 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4806[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoGlareInit__9daAlink_cFv,
};
#pragma pop

/* 803B21B4-803B21C0 -00001 000C+00 0/1 0/0 0/0 .data            @4807 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4807[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoEyeAwayInit__9daAlink_cFv,
};
#pragma pop

/* 803B21C0-803B21CC -00001 000C+00 0/1 0/0 0/0 .data            @4808 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4808[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procGoatStopReadyInit__9daAlink_cFv,
};
#pragma pop

/* 803B21CC-803B21D8 -00001 000C+00 0/1 0/0 0/0 .data            @4809 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4809[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoGetReadySitInit__9daAlink_cFv,
};
#pragma pop

/* 803B21D8-803B21E4 -00001 000C+00 0/1 0/0 0/0 .data            @4810 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4810[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoTwGateInit__9daAlink_cFv,
};
#pragma pop

/* 803B21E4-803B21F0 -00001 000C+00 0/1 0/0 0/0 .data            @4811 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4811[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procFmChainStrongPullInit__9daAlink_cFv,
};
#pragma pop

/* 803B21F0-803B21FC -00001 000C+00 0/1 0/0 0/0 .data            @4812 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4812[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procWolfSnowEscapeInit__9daAlink_cFv,
};
#pragma pop

/* 803B21FC-803B2208 -00001 000C+00 0/1 0/0 0/0 .data            @4813 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4813[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procZoraMoveInit__9daAlink_cFv,
};
#pragma pop

/* 803B2208-803B2214 -00001 000C+00 0/1 0/0 0/0 .data            @4814 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4814[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoMetamorphoseOnlyInit__9daAlink_cFv,
};
#pragma pop

/* 803B2214-803B2220 -00001 000C+00 0/1 0/0 0/0 .data            @4815 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4815[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoMetamorphoseOnlyInit__9daAlink_cFv,
};
#pragma pop

/* 803B2220-803B222C -00001 000C+00 0/1 0/0 0/0 .data            @4816 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4816[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procLookAroundTurnInit__9daAlink_cFv,
};
#pragma pop

/* 803B222C-803B2238 -00001 000C+00 0/1 0/0 0/0 .data            @4817 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4817[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCoQuakeWaitInit__9daAlink_cFv,
};
#pragma pop

/* 803B2238-803B2244 -00001 000C+00 0/1 0/0 0/0 .data            @4818 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4818[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procGuardAttackInit__9daAlink_cFv,
};
#pragma pop

/* 803B2244-803B2250 -00001 000C+00 0/1 0/0 0/0 .data            @4819 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4819[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procSwordReadyInit__9daAlink_cFv,
};
#pragma pop

/* 803B2250-803B225C -00001 000C+00 0/1 0/0 0/0 .data            @4820 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4820[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procDungeonWarpInit__9daAlink_cFv,
};
#pragma pop

/* 803B225C-803B2268 -00001 000C+00 0/1 0/0 0/0 .data            @4821 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4821[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procDungeonWarpSceneStartInit__9daAlink_cFv,
};
#pragma pop

/* 803B2268-803B2274 -00001 000C+00 0/1 0/0 0/0 .data            @4822 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4822[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procMasterSwordStickInit__9daAlink_cFv,
};
#pragma pop

/* 803B2274-803B2280 -00001 000C+00 0/1 0/0 0/0 .data            @4823 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4823[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procMasterSwordPullInit__9daAlink_cFv,
};
#pragma pop

/* 803B2280-803B228C -00001 000C+00 0/1 0/0 0/0 .data            @4824 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4824[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCutDownInit__9daAlink_cFv,
};
#pragma pop

/* 803B228C-803B2298 -00001 000C+00 0/1 0/0 0/0 .data            @4825 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4825[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCutHeadInit__9daAlink_cFv,
};
#pragma pop

/* 803B2298-803B22A4 -00001 000C+00 0/1 0/0 0/0 .data            @4826 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4826[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCutLargeJumpInit__9daAlink_cFv,
};
#pragma pop

/* 803B22A4-803B22B0 -00001 000C+00 0/1 0/0 0/0 .data            @4827 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4827[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCutFastReadyInit__9daAlink_cFv,
};
#pragma pop

/* 803B22B0-803B22BC -00001 000C+00 0/1 0/0 0/0 .data            @4828 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4828[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procCopyRodReviveInit__9daAlink_cFv,
};
#pragma pop

/* 803B22BC-803B22C8 -00001 000C+00 0/1 0/0 0/0 .data            @4829 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4829[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procSwordPushInit__9daAlink_cFv,
};
#pragma pop

/* 803B22C8-803B22D4 -00001 000C+00 0/1 0/0 0/0 .data            @4830 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4830[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procGanonFinishInit__9daAlink_cFv,
};
#pragma pop

/* 803B22D4-803B22E0 -00001 000C+00 0/1 0/0 0/0 .data            @4831 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4831[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)procHorseLookDownInit__9daAlink_cFv,
};
#pragma pop

/* 803B22E0-803B2754 00F400 0474+00 1/2 0/0 0/0 .data            m_demoInitTable__9daAlink_c */
SECTION_DATA u8 daAlink_c::m_demoInitTable[1140] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00,
};

/* 803B2754-803B2798 00F874 0044+00 0/1 0/0 0/0 .data            l_cylSrc */
#pragma push
#pragma force_active on
SECTION_DATA static u8 l_cylSrc[68] = {
    0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x1A, 0xD8, 0xFF, 0xFD, 0xFF, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x73,
    0x04, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x42, 0x0C, 0x00, 0x00, 0x43, 0x34, 0x00, 0x00,
};
#pragma pop

/* 803B2798-803B27D8 00F8B8 0040+00 1/2 0/0 0/0 .data            l_sphSrc */
SECTION_DATA static u8 l_sphSrc[64] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1A,
    0xD8, 0xFB, 0xFD, 0xFF, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x73, 0x01, 0x03, 0x01, 0x00,
    0x00, 0x00, 0x00, 0x01, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0x20, 0x00, 0x00,
};

/* 803B27D8-803B281C 00F8F8 0044+00 0/1 0/0 0/0 .data            l_atCylSrc */
#pragma push
#pragma force_active on
SECTION_DATA static u8 l_atCylSrc[68] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x1B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x01, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x43, 0x34, 0x00, 0x00, 0x43, 0x02, 0x00, 0x00,
};
#pragma pop

/* 803B281C-803B2868 00F93C 004C+00 0/1 0/0 0/0 .data            l_atCpsSrc */
#pragma push
#pragma force_active on
SECTION_DATA static u8 l_atCpsSrc[76] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1B,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0xA0, 0x00, 0x00,
};
#pragma pop

/* 803B2868-803B2880 00F988 0018+00 1/0 0/0 0/0 .data            l_jntColPos0 */
SECTION_DATA static u8 l_jntColPos0[24] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x42, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803B2880-803B288C 00F9A0 000C+00 1/0 0/0 0/0 .data            l_jntColPos1 */
SECTION_DATA static u8 l_jntColPos1[12] = {
    0x00, 0x00, 0x00, 0x00, 0xC1, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803B288C-803B28A4 00F9AC 0018+00 1/0 0/0 0/0 .data            l_jntColPos2 */
SECTION_DATA static u8 l_jntColPos2[24] = {
    0xC0, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x41, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803B28A4-803B28BC 00F9C4 0018+00 1/0 0/0 0/0 .data            l_jntColPos4 */
SECTION_DATA static u8 l_jntColPos4[24] = {
    0xC0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x41, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803B28BC-803B28C8 00F9DC 000C+00 1/0 0/0 0/0 .data            l_jntColPos6 */
SECTION_DATA static u8 l_jntColPos6[12] = {
    0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803B28C8-803B28E0 00F9E8 0018+00 1/0 0/0 0/0 .data            l_jntColPos8 */
SECTION_DATA static u8 l_jntColPos8[24] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x42, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803B28E0-803B28F8 00FA00 0018+00 1/0 0/0 0/0 .data            l_jntColPos9 */
SECTION_DATA static u8 l_jntColPos9[24] = {
    0x00, 0x00, 0x00, 0x00, 0xC0, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x42, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803B28F8-803B2910 00FA18 0018+00 1/0 0/0 0/0 .data            l_jntColPos10 */
SECTION_DATA static u8 l_jntColPos10[24] = {
    0x00, 0x00, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x42, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803B2910-803B2928 00FA30 0018+00 1/0 0/0 0/0 .data            l_jntColPos11 */
SECTION_DATA static u8 l_jntColPos11[24] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x42, 0x40, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803B2928-803B2940 00FA48 0018+00 1/0 0/0 0/0 .data            l_jntColPos12 */
SECTION_DATA static u8 l_jntColPos12[24] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x42, 0x40, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803B2940-803B2958 00FA60 0018+00 1/0 0/0 0/0 .data            l_jntColPos13 */
SECTION_DATA static u8 l_jntColPos13[24] = {
    0x00, 0x00, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x41, 0xB0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803B2958-803B2970 00FA78 0018+00 1/0 0/0 0/0 .data            l_jntColPos14 */
SECTION_DATA static u8 l_jntColPos14[24] = {
    0x00, 0x00, 0x00, 0x00, 0xC0, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x41, 0xB0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803B2970-803B2988 00FA90 0018+00 1/0 0/0 0/0 .data            l_jntColPos15 */
SECTION_DATA static u8 l_jntColPos15[24] = {
    0xC1, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x88, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00,
};

/* 803B2988-803B29A0 00FAA8 0018+00 1/0 0/0 0/0 .data            l_jntColPos16 */
SECTION_DATA static u8 l_jntColPos16[24] = {
    0x41, 0x50, 0x00, 0x00, 0x41, 0x50, 0x00, 0x00, 0xC1, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803B29A0-803B29AC 00FAC0 000C+00 1/0 0/0 0/0 .data            l_jntColPos17 */
SECTION_DATA static u8 l_jntColPos17[12] = {
    0xC1, 0x70, 0x00, 0x00, 0xC1, 0x20, 0x00, 0x00, 0xC1, 0xF0, 0x00, 0x00,
};

/* 803B29AC-803B2A84 -00001 00D8+00 1/1 0/0 0/0 .data            l_jntColData */
SECTION_DATA static void* l_jntColData[54] = {
    (void*)0x01000001,     (void*)0x41900000,     (void*)&l_jntColPos0,  (void*)0x00000004,
    (void*)0x41800000,     (void*)&l_jntColPos1,  (void*)0x01000007,     (void*)0x40E00000,
    (void*)&l_jntColPos2,  (void*)0x0100000C,     (void*)0x40E00000,     (void*)&l_jntColPos2,
    (void*)0x01000008,     (void*)0x40C00000,     (void*)&l_jntColPos4,  (void*)0x0100000D,
    (void*)0x40C00000,     (void*)&l_jntColPos4,  (void*)0x00000009,     (void*)0x40C00000,
    (void*)&l_jntColPos6,  (void*)0x0000000E,     (void*)0x40C00000,     (void*)&l_jntColPos6,
    (void*)0x01000010,     (void*)0x41900000,     (void*)&l_jntColPos8,  (void*)0x01000012,
    (void*)0x41000000,     (void*)&l_jntColPos9,  (void*)0x01000017,     (void*)0x41000000,
    (void*)&l_jntColPos10, (void*)0x01000013,     (void*)0x40E00000,     (void*)&l_jntColPos11,
    (void*)0x01000018,     (void*)0x40E00000,     (void*)&l_jntColPos12, (void*)0x01000014,
    (void*)0x40C00000,     (void*)&l_jntColPos13, (void*)0x01000019,     (void*)0x40C00000,
    (void*)&l_jntColPos14, (void*)0x0203000F,     (void*)0x42200000,     (void*)&l_jntColPos15,
    (void*)0x02030005,     (void*)0x42200000,     (void*)&l_jntColPos16, (void*)0x0003000F,
    (void*)0x42340000,     (void*)&l_jntColPos17,
};

/* 803B2A84-803B2A9C 00FBA4 0018+00 1/0 0/0 0/0 .data            l_wolfJntColPos0 */
SECTION_DATA static u8 l_wolfJntColPos0[24] = {
    0xC1, 0xC8, 0x00, 0x00, 0x41, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x42, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803B2A9C-803B2AA8 00FBBC 000C+00 1/0 0/0 0/0 .data            l_wolfJntColPos1 */
SECTION_DATA static u8 l_wolfJntColPos1[12] = {
    0x40, 0xA0, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803B2AA8-803B2AC0 00FBC8 0018+00 1/0 0/0 0/0 .data            l_wolfJntColPos2 */
SECTION_DATA static u8 l_wolfJntColPos2[24] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x42, 0x0C, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803B2AC0-803B2AD8 00FBE0 0018+00 1/0 0/0 0/0 .data            l_wolfJntColPos4 */
SECTION_DATA static u8 l_wolfJntColPos4[24] = {
    0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x41, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803B2AD8-803B2AF0 00FBF8 0018+00 1/0 0/0 0/0 .data            l_wolfJntColPos6 */
SECTION_DATA static u8 l_wolfJntColPos6[24] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x41, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803B2AF0-803B2B08 00FC10 0018+00 1/0 0/0 0/0 .data            l_wolfJntColPos8 */
SECTION_DATA static u8 l_wolfJntColPos8[24] = {
    0x00, 0x00, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x41, 0x40, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803B2B08-803B2B20 00FC28 0018+00 1/0 0/0 0/0 .data            l_wolfJntColPos10 */
SECTION_DATA static u8 l_wolfJntColPos10[24] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x42, 0x04, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803B2B20-803B2B38 00FC40 0018+00 1/0 0/0 0/0 .data            l_wolfJntColPos12 */
SECTION_DATA static u8 l_wolfJntColPos12[24] = {
    0xC0, 0xA0, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x41, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803B2B38-803B2B50 00FC58 0018+00 1/0 0/0 0/0 .data            l_wolfJntColPos14 */
SECTION_DATA static u8 l_wolfJntColPos14[24] = {
    0xC0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x42, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803B2B50-803B2B68 00FC70 0018+00 1/0 0/0 0/0 .data            l_wolfJntColPos16 */
SECTION_DATA static u8 l_wolfJntColPos16[24] = {
    0x00, 0x00, 0x00, 0x00, 0xC0, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x41, 0x50, 0x00, 0x00, 0xC0, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803B2B68-803B2C40 -00001 00D8+00 1/1 0/0 0/0 .data            l_wolfJntColData */
SECTION_DATA static void* l_wolfJntColData[54] = {
    (void*)0x01000001, (void*)0x41E00000, (void*)&l_wolfJntColPos0,
    (void*)0x00000004, (void*)0x41C80000, (void*)&l_wolfJntColPos1,
    (void*)0x01000010, (void*)0x41200000, (void*)&l_wolfJntColPos2,
    (void*)0x01000015, (void*)0x41200000, (void*)&l_wolfJntColPos2,
    (void*)0x01000011, (void*)0x40C00000, (void*)&l_wolfJntColPos4,
    (void*)0x01000016, (void*)0x40C00000, (void*)&l_wolfJntColPos4,
    (void*)0x01000012, (void*)0x40800000, (void*)&l_wolfJntColPos6,
    (void*)0x01000017, (void*)0x40800000, (void*)&l_wolfJntColPos6,
    (void*)0x01000013, (void*)0x40800000, (void*)&l_wolfJntColPos8,
    (void*)0x01000018, (void*)0x40800000, (void*)&l_wolfJntColPos8,
    (void*)0x0100001C, (void*)0x41300000, (void*)&l_wolfJntColPos10,
    (void*)0x01000021, (void*)0x41300000, (void*)&l_wolfJntColPos10,
    (void*)0x0100001D, (void*)0x40E00000, (void*)&l_wolfJntColPos12,
    (void*)0x01000022, (void*)0x40E00000, (void*)&l_wolfJntColPos12,
    (void*)0x0100001E, (void*)0x40A00000, (void*)&l_wolfJntColPos14,
    (void*)0x01000023, (void*)0x40A00000, (void*)&l_wolfJntColPos14,
    (void*)0x0100001F, (void*)0x40C00000, (void*)&l_wolfJntColPos16,
    (void*)0x01000024, (void*)0x40A00000, (void*)&l_wolfJntColPos16,
};

/* 803B2C40-803B2C50 00FD60 000D+03 0/1 0/0 0/0 .data            defaultPortal$39238 */
#pragma push
#pragma force_active on
SECTION_DATA static const char defaultPortal[13] = "POTAL_WARPIN";
#pragma pop

/* 803B2C50-803B2C64 00FD70 0014+00 0/1 0/0 0/0 .data            kBridgePortal$39239 */
#pragma push
#pragma force_active on
SECTION_DATA static const char kBridgePortal[20] = "PORTAL_WARP_KBRIDGE";
#pragma pop

/* 803B2C64-803B2C78 00FD84 0014+00 0/1 0/0 0/0 .data            oBridgePortal$39240 */
#pragma push
#pragma force_active on
SECTION_DATA static const char oBridgePortal[20] = "PORTAL_WARP_OBRIDGE";
#pragma pop

/* 803B2C78-803B2C8C 00FD98 0014+00 0/1 0/0 0/0 .data            volcBomPortal$39241 */
#pragma push
#pragma force_active on
SECTION_DATA static const char volcBomPortal[20] = "PORTAL_WARP_BIGVOLC";
#pragma pop

/* 803B2C8C-803B2CA4 00FDAC 0016+02 0/1 0/0 0/0 .data            cannonPortal$39242 */
#pragma push
#pragma force_active on
SECTION_DATA static const char cannonPortal[22] = "SKY_CANNON_WARP_START";
#pragma pop

/* 803B2CA4-803B2CB0 -00001 000C+00 0/1 0/0 0/0 .data            @39610 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_39610[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)setEffectFrontRollParam__9daAlink_cFv,
};
#pragma pop

/* 803B2CB0-803B2CBC -00001 000C+00 0/1 0/0 0/0 .data            @39611 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_39611[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)setEffectSlipParam__9daAlink_cFv,
};
#pragma pop

/* 803B2CBC-803B2CC8 -00001 000C+00 0/1 0/0 0/0 .data            @39612 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_39612[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)setEffectSmallLandParam__9daAlink_cFv,
};
#pragma pop

/* 803B2CC8-803B2CD4 -00001 000C+00 0/1 0/0 0/0 .data            @39613 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_39613[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)setEffectRunParam__9daAlink_cFv,
};
#pragma pop

/* 803B2CD4-803B2CE0 -00001 000C+00 0/1 0/0 0/0 .data            @39614 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_39614[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)setEffectLandParam__9daAlink_cFv,
};
#pragma pop

/* 803B2CE0-803B2CEC -00001 000C+00 0/1 0/0 0/0 .data            @39615 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_39615[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)setEffectSumouParam__9daAlink_cFv,
};
#pragma pop

/* 803B2CEC-803B2D34 00FE0C 0048+00 1/2 0/0 0/0 .data            m_fEffParamProc__9daAlink_c */
SECTION_DATA u8 daAlink_c::m_fEffParamProc[72] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803B2D34-803B2D40 00FE54 000C+00 0/1 0/0 0/0 .data            leftRotNormal$41087 */
#pragma push
#pragma force_active on
SECTION_DATA static u8 leftRotNormal[12] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
#pragma pop

/* 803B2D40-803B2D58 00FE60 0018+00 0/1 0/0 0/0 .data            leftRotLight$41092 */
#pragma push
#pragma force_active on
SECTION_DATA static u8 leftRotLight[24] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
#pragma pop

/* 803B2D58-803B2D7C 00FE78 0024+00 0/1 0/0 0/0 .data            leftRotLarge$41097 */
#pragma push
#pragma force_active on
SECTION_DATA static u8 leftRotLarge[36] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
#pragma pop

/* 803B2D7C-803B2D88 00FE9C 000C+00 0/1 0/0 0/0 .data            leftRotWater$41102 */
#pragma push
#pragma force_active on
SECTION_DATA static u8 leftRotWater[12] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
#pragma pop

/* 803B2D88-803B2D94 00FEA8 000C+00 1/1 0/0 0/0 .data            rodTopOffset$61388 */
SECTION_DATA static u8 rodTopOffset[12] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803B2D94-803B2DA0 -00001 000C+00 1/1 0/0 0/0 .data            bodyBrkName$69118 */
SECTION_DATA static void* bodyBrkName[3] = {
    (void*)(((char*)&d_a_d_a_alink__stringBase0) + 0x494),
    (void*)(((char*)&d_a_d_a_alink__stringBase0) + 0x4AB),
    (void*)(((char*)&d_a_d_a_alink__stringBase0) + 0x4C2),
};

/* 803B2DA0-803B2DAC -00001 000C+00 1/1 0/0 0/0 .data            headBrkName$69119 */
SECTION_DATA static void* headBrkName[3] = {
    (void*)(((char*)&d_a_d_a_alink__stringBase0) + 0x4D9),
    (void*)(((char*)&d_a_d_a_alink__stringBase0) + 0x4F0),
    (void*)(((char*)&d_a_d_a_alink__stringBase0) + 0x507),
};

/* 803B2DAC-803B2DCC -00001 0020+00 1/0 0/0 0/0 .data            l_daAlink_Method */
SECTION_DATA static void* l_daAlink_Method[8] = {
    (void*)daAlink_Create__FP10fopAc_ac_c,
    (void*)daAlink_Delete__FP9daAlink_c,
    (void*)daAlink_Execute__FP9daAlink_c,
    (void*)NULL,
    (void*)daAlink_Draw__FP9daAlink_c,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
};

/* 803B2DCC-803B2E20 -00001 0030+24 0/0 0/0 1/0 .data            g_profile_ALINK */
SECTION_DATA extern void* g_profile_ALINK[12 + 9 /* padding */] = {
    (void*)0xFFFFFFFD,
    (void*)0x0005FFFD,
    (void*)0x00FD0000,
    (void*)&g_fpcLf_Method,
    (void*)0x0000385C,
    (void*)NULL,
    (void*)NULL,
    (void*)&g_fopAc_Method,
    (void*)0x005B0000,
    (void*)&l_daAlink_Method,
    (void*)0x00060400,
    (void*)0x01000000,
    /* padding */
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
};

/* 803B2E20-803B2E80 00FF40 000C+54 2/2 0/0 0/0 .data            __vt__16daPy_frameCtrl_c */
SECTION_DATA extern void* __vt__16daPy_frameCtrl_c[3 + 21 /* padding */] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__16daPy_frameCtrl_cFv,
    /* padding */
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
};

/* 803B2E80-803B2EC8 00FFA0 000C+3C 3/3 0/0 0/0 .data            __vt__8dEyeHL_c */
SECTION_DATA extern void* __vt__8dEyeHL_c[3 + 15 /* padding */] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__8dEyeHL_cFv,
    /* padding */
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
};

/* 803B2EC8-803B2EF8 00FFE8 0030+00 3/3 0/0 0/0 .data            __vt__16dBgS_LinkRoofChk */
SECTION_DATA extern void* __vt__16dBgS_LinkRoofChk[12] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__16dBgS_LinkRoofChkFv,
    (void*)NULL,
    (void*)NULL,
    (void*)func_8014470C,
    (void*)NULL,
    (void*)NULL,
    (void*)func_8014471C,
    (void*)NULL,
    (void*)NULL,
    (void*)func_80144714,
};

/* 803B2EF8-803B2F28 010018 0030+00 3/3 0/0 0/0 .data            __vt__15dBgS_LinkGndChk */
SECTION_DATA extern void* __vt__15dBgS_LinkGndChk[12] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__15dBgS_LinkGndChkFv,
    (void*)NULL,
    (void*)NULL,
    (void*)func_801446F4,
    (void*)NULL,
    (void*)NULL,
    (void*)func_80144704,
    (void*)NULL,
    (void*)NULL,
    (void*)func_801446FC,
};

/* 803B2F28-803B2F70 010048 0024+24 3/3 0/0 0/0 .data            __vt__13dBgS_LinkAcch */
SECTION_DATA extern void* __vt__13dBgS_LinkAcch[9 + 9 /* padding */] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__13dBgS_LinkAcchFv,
    (void*)NULL,
    (void*)NULL,
    (void*)func_801446EC,
    (void*)NULL,
    (void*)NULL,
    (void*)func_801446E4,
    /* padding */
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
};

/* 803B2F70-803B321C 010090 02AC+00 2/2 0/0 0/0 .data            __vt__9daPy_py_c */
SECTION_DATA extern void* __vt__9daPy_py_c[171] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)getMidnaAtnPos__9daPy_py_cCFv,
    (void*)setMidnaMsgNum__9daPy_py_cFP10fopAc_ac_cUs,
    (void*)getModelMtx__9daPy_py_cFv,
    (void*)getInvMtx__9daPy_py_cFv,
    (void*)getShadowTalkAtnPos__9daPy_py_cFv,
    (void*)NULL,
    (void*)getLeftItemMatrix__9daPy_py_cFv,
    (void*)getRightItemMatrix__9daPy_py_cFv,
    (void*)getLeftHandMatrix__9daPy_py_cFv,
    (void*)getRightHandMatrix__9daPy_py_cFv,
    (void*)getLinkBackBone1Matrix__9daPy_py_cFv,
    (void*)getWolfMouthMatrix__9daPy_py_cFv,
    (void*)getWolfBackbone2Matrix__9daPy_py_cFv,
    (void*)getBottleMtx__9daPy_py_cFv,
    (void*)checkPlayerGuard__9daPy_py_cCFv,
    (void*)checkPlayerFly__9daPy_py_cCFv,
    (void*)checkFrontRoll__9daPy_py_cCFv,
    (void*)checkWolfDash__9daPy_py_cCFv,
    (void*)checkAutoJump__9daPy_py_cCFv,
    (void*)checkSideStep__9daPy_py_cCFv,
    (void*)checkWolfTriggerJump__9daPy_py_cCFv,
    (void*)checkGuardBreakMode__9daPy_py_cCFv,
    (void*)checkLv3Slide__9daPy_py_cCFv,
    (void*)checkWolfHowlDemoMode__9daPy_py_cCFv,
    (void*)checkChainBlockPushPull__9daPy_py_cFv,
    (void*)checkElecDamage__9daPy_py_cCFv,
    (void*)checkEmptyBottleSwing__9daPy_py_cCFv,
    (void*)checkBottleSwingMode__9daPy_py_cCFv,
    (void*)checkHawkWait__9daPy_py_cCFv,
    (void*)checkGoatThrow__9daPy_py_cCFv,
    (void*)checkGoatThrowAfter__9daPy_py_cCFv,
    (void*)checkWolfTagLockJump__9daPy_py_cCFv,
    (void*)checkWolfTagLockJumpLand__9daPy_py_cCFv,
    (void*)checkWolfRope__9daPy_py_cFv,
    (void*)checkWolfRopeHang__9daPy_py_cCFv,
    (void*)checkRollJump__9daPy_py_cCFv,
    (void*)checkGoronRideWait__9daPy_py_cCFv,
    (void*)checkWolfChain__9daPy_py_cCFv,
    (void*)checkWolfWait__9daPy_py_cCFv,
    (void*)checkWolfJumpAttack__9daPy_py_cCFv,
    (void*)checkWolfRSit__9daPy_py_cCFv,
    (void*)checkBubbleFly__9daPy_py_cCFv,
    (void*)checkBottleDrinkEnd__9daPy_py_cCFv,
    (void*)checkWolfDig__9daPy_py_cCFv,
    (void*)checkCutCharge__9daPy_py_cCFv,
    (void*)checkCutTurnCharge__9daPy_py_cCFv,
    (void*)checkCutLargeJumpCharge__9daPy_py_cCFv,
    (void*)getBokoFlamePos__9daPy_py_cFP4cXyz,
    (void*)checkComboCutTurn__9daPy_py_cCFv,
    (void*)checkClimbMove__9daPy_py_cCFv,
    (void*)checkGrassWhistle__9daPy_py_cCFv,
    (void*)checkBoarRun__9daPy_py_cCFv,
    (void*)checkFmChainPut__9daPy_py_cCFv,
    (void*)checkHorseElecDamage__9daPy_py_cCFv,
    (void*)getBaseAnimeFrameRate__9daPy_py_cCFv,
    (void*)getBaseAnimeFrame__9daPy_py_cCFv,
    (void*)setAnimeFrame__9daPy_py_cFf,
    (void*)checkWolfLock__9daPy_py_cCFP10fopAc_ac_c,
    (void*)cancelWolfLock__9daPy_py_cFP10fopAc_ac_c,
    (void*)getAtnActorID__9daPy_py_cCFv,
    (void*)getItemID__9daPy_py_cCFv,
    (void*)getGrabActorID__9daPy_py_cCFv,
    (void*)exchangeGrabActor__9daPy_py_cFP10fopAc_ac_c,
    (void*)setForceGrab__9daPy_py_cFP10fopAc_ac_cii,
    (void*)setForcePutPos__9daPy_py_cFRC4cXyz,
    (void*)checkPlayerNoDraw__9daPy_py_cFv,
    (void*)checkRopeTag__9daPy_py_cFv,
    (void*)voiceStart__9daPy_py_cFUl,
    (void*)seStartOnlyReverb__9daPy_py_cFUl,
    (void*)seStartOnlyReverbLevel__9daPy_py_cFUl,
    (void*)setOutPower__9daPy_py_cFfsi,
    (void*)setGrabCollisionOffset__9daPy_py_cFffP13cBgS_PolyInfo,
    (void*)onMagneGrab__9daPy_py_cFff,
    (void*)onFrollCrashFlg__9daPy_py_cFUci,
    (void*)getModelJointMtx__9daPy_py_cFUs,
    (void*)getHeadMtx__9daPy_py_cFv,
    (void*)setHookshotCarryOffset__9daPy_py_cFUiPC4cXyz,
    (void*)checkCutJumpCancelTurn__9daPy_py_cCFv,
    (void*)checkIronBallReturn__9daPy_py_cCFv,
    (void*)checkIronBallGroundStop__9daPy_py_cCFv,
    (void*)checkSingleBoarBattleSecondBowReady__9daPy_py_cCFv,
    (void*)checkPointSubWindowMode__9daPy_py_cCFv,
    (void*)setClothesChange__9daPy_py_cFi,
    (void*)setPlayerPosAndAngle__9daPy_py_cFPC4cXyzsi,
    (void*)setPlayerPosAndAngle__9daPy_py_cFPC4cXyzPC5csXyz,
    (void*)setPlayerPosAndAngle__9daPy_py_cFPA4_f,
    (void*)setThrowDamage__9daPy_py_cFsffiii,
    (void*)checkSetNpcTks__9daPy_py_cFP4cXyzii,
    (void*)setRollJump__9daPy_py_cFffs,
    (void*)playerStartCollisionSE__9daPy_py_cFUlUl,
    (void*)changeTextureAnime__9daPy_py_cFUsUsi,
    (void*)cancelChangeTextureAnime__9daPy_py_cFv,
    (void*)cancelDungeonWarpReadyNeck__9daPy_py_cFv,
    (void*)onSceneChangeArea__9daPy_py_cFUcUcP10fopAc_ac_c,
    (void*)onSceneChangeAreaJump__9daPy_py_cFUcUcP10fopAc_ac_c,
    (void*)onSceneChangeDead__9daPy_py_cFUci,
    (void*)checkHorseRide__9daPy_py_cCFv,
    (void*)checkBoarRide__9daPy_py_cCFv,
    (void*)checkCanoeRide__9daPy_py_cCFv,
    (void*)checkBoardRide__9daPy_py_cCFv,
    (void*)checkSpinnerRide__9daPy_py_cCFv,
    (void*)getSpinnerActor__9daPy_py_cFv,
    (void*)checkHorseRideNotReady__9daPy_py_cCFv,
    (void*)checkArrowChargeEnd__9daPy_py_cCFv,
    (void*)getSearchBallScale__9daPy_py_cCFv,
    (void*)checkFastShotTime__9daPy_py_cFv,
    (void*)checkNoEquipItem__9daPy_py_cCFv,
    (void*)checkFireMaterial__9daPy_py_cCFv,
    (void*)checkKandelaarSwing__9daPy_py_cCFi,
    (void*)getBoardCutTurnOffsetAngleY__9daPy_py_cCFv,
    (void*)getMagneHitPos__9daPy_py_cFv,
    (void*)getMagneBootsTopVec__9daPy_py_cFv,
    (void*)getKandelaarFlamePos__9daPy_py_cFv,
    (void*)checkUseKandelaar__9daPy_py_cFi,
    (void*)setDkCaught__9daPy_py_cFP10fopAc_ac_c,
    (void*)onPressedDamage__9daPy_py_cFRC4cXyzs,
    (void*)checkPriActorOwn__9daPy_py_cCFPC10fopAc_ac_c,
    (void*)onWolfEnemyBiteAll__9daPy_py_cFP10fopAc_ac_cQ29daPy_py_c9daPy_FLG2,
    (void*)checkWolfEnemyBiteAllOwn__9daPy_py_cCFPC10fopAc_ac_c,
    (void*)setWolfEnemyHangBiteAngle__9daPy_py_cFs,
    (void*)setKandelaarMtx__9daPy_py_cFPA4_fii,
    (void*)getStickAngleFromPlayerShape__9daPy_py_cCFPs,
    (void*)checkSpinnerPathMove__9daPy_py_cFv,
    (void*)checkSpinnerTriggerAttack__9daPy_py_cFv,
    (void*)onSpinnerPathForceRemove__9daPy_py_cFv,
    (void*)getIronBallBgHit__9daPy_py_cCFv,
    (void*)getIronBallCenterPos__9daPy_py_cFv,
    (void*)checkCanoeFishingGetLeft__9daPy_py_cCFv,
    (void*)checkCanoeFishingGetRight__9daPy_py_cCFv,
    (void*)checkBeeChildDrink__9daPy_py_cCFv,
    (void*)skipPortalObjWarp__9daPy_py_cFv,
    (void*)checkTreasureRupeeReturn__9daPy_py_cCFi,
    (void*)setSumouReady__9daPy_py_cFP10fopAc_ac_c,
    (void*)checkAcceptDungeonWarpAlink__9daPy_py_cFi,
    (void*)getSumouCounter__9daPy_py_cCFv,
    (void*)checkSumouWithstand__9daPy_py_cCFv,
    (void*)cancelGoronThrowEvent__9daPy_py_cFv,
    (void*)setSumouGraspCancelCount__9daPy_py_cFi,
    (void*)setSumouPushBackDirection__9daPy_py_cFs,
    (void*)setSumouLoseHeadUp__9daPy_py_cFv,
    (void*)getGiantPuzzleAimAngle__9daPy_py_cCFv,
    (void*)setGoronSideMove__9daPy_py_cFP10fopAc_ac_c,
    (void*)setCargoCarry__9daPy_py_cFP10fopAc_ac_c,
    (void*)getDpdFarFlg__9daPy_py_cCFv,
    (void*)getHookshotTopPos__9daPy_py_cFv,
    (void*)checkHookshotReturnMode__9daPy_py_cCFv,
    (void*)checkHookshotShootReturnMode__9daPy_py_cCFv,
    (void*)checkOctaIealHang__9daPy_py_cCFv,
    (void*)cancelOctaIealHang__9daPy_py_cFv,
    (void*)cancelDragonHangBackJump__9daPy_py_cFv,
    (void*)setOctaIealWildHang__9daPy_py_cFv,
    (void*)checkDragonHangRide__9daPy_py_cCFv,
    (void*)changeDragonActor__9daPy_py_cFP10fopAc_ac_c,
    (void*)getClothesChangeWaitTimer__9daPy_py_cCFv,
    (void*)getShieldChangeWaitTimer__9daPy_py_cCFv,
    (void*)getSwordChangeWaitTimer__9daPy_py_cCFv,
    (void*)checkMetamorphose__9daPy_py_cCFv,
    (void*)checkWolfDownAttackPullOut__9daPy_py_cCFv,
    (void*)checkBootsOrArmorHeavy__9daPy_py_cCFv,
    (void*)getBottleOpenAppearItem__9daPy_py_cCFv,
    (void*)checkItemSwordEquip__9daPy_py_cCFv,
    (void*)getSinkShapeOffset__9daPy_py_cCFv,
    (void*)checkSinkDead__9daPy_py_cCFv,
    (void*)checkHorseStart__9daPy_py_cFv,
    (void*)getWolfHowlMgrP__9daPy_py_cFv,
    (void*)checkWolfHowlSuccessAnime__9daPy_py_cCFv,
    (void*)checkCopyRodTopUse__9daPy_py_cFv,
    (void*)checkCopyRodEquip__9daPy_py_cCFv,
    (void*)checkCutJumpMode__9daPy_py_cCFv,
};

/* 803B321C-803B32B8 01033C 000C+90 2/2 0/0 0/0 .data            __vt__12daAlinkHIO_c */
SECTION_DATA extern void* __vt__12daAlinkHIO_c[3 + 36 /* padding */] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__12daAlinkHIO_cFv,
    /* padding */
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
};

/* 803B32B8-803B3564 0103D8 02AC+00 2/2 0/0 0/0 .data            __vt__9daAlink_c */
SECTION_DATA extern void* __vt__9daAlink_c[171] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)getMidnaAtnPos__9daAlink_cCFv,
    (void*)setMidnaMsgNum__9daAlink_cFP10fopAc_ac_cUs,
    (void*)getModelMtx__9daAlink_cFv,
    (void*)getInvMtx__9daAlink_cFv,
    (void*)getShadowTalkAtnPos__9daAlink_cFv,
    (void*)getGroundY__9daAlink_cFv,
    (void*)getLeftItemMatrix__9daAlink_cFv,
    (void*)getRightItemMatrix__9daAlink_cFv,
    (void*)getLeftHandMatrix__9daAlink_cFv,
    (void*)getRightHandMatrix__9daAlink_cFv,
    (void*)getLinkBackBone1Matrix__9daAlink_cFv,
    (void*)getWolfMouthMatrix__9daAlink_cFv,
    (void*)getWolfBackbone2Matrix__9daAlink_cFv,
    (void*)getBottleMtx__9daAlink_cFv,
    (void*)checkPlayerGuard__9daAlink_cCFv,
    (void*)checkPlayerFly__9daAlink_cCFv,
    (void*)checkFrontRoll__9daAlink_cCFv,
    (void*)checkWolfDash__9daAlink_cCFv,
    (void*)checkAutoJump__9daAlink_cCFv,
    (void*)checkSideStep__9daAlink_cCFv,
    (void*)checkWolfTriggerJump__9daAlink_cCFv,
    (void*)checkGuardBreakMode__9daAlink_cCFv,
    (void*)checkLv3Slide__9daAlink_cCFv,
    (void*)checkWolfHowlDemoMode__9daAlink_cCFv,
    (void*)checkChainBlockPushPull__9daAlink_cFv,
    (void*)checkElecDamage__9daAlink_cCFv,
    (void*)checkEmptyBottleSwing__9daAlink_cCFv,
    (void*)checkBottleSwingMode__9daAlink_cCFv,
    (void*)checkHawkWait__9daAlink_cCFv,
    (void*)checkGoatThrow__9daAlink_cCFv,
    (void*)checkGoatThrowAfter__9daAlink_cCFv,
    (void*)checkWolfTagLockJump__9daAlink_cCFv,
    (void*)checkWolfTagLockJumpLand__9daAlink_cCFv,
    (void*)checkWolfRope__9daAlink_cFv,
    (void*)checkWolfRopeHang__9daAlink_cCFv,
    (void*)checkRollJump__9daAlink_cCFv,
    (void*)checkGoronRideWait__9daAlink_cCFv,
    (void*)checkWolfChain__9daAlink_cCFv,
    (void*)checkWolfWait__9daAlink_cCFv,
    (void*)checkWolfJumpAttack__9daAlink_cCFv,
    (void*)checkWolfRSit__9daAlink_cCFv,
    (void*)checkBubbleFly__9daPy_py_cCFv,
    (void*)checkBottleDrinkEnd__9daAlink_cCFv,
    (void*)checkWolfDig__9daAlink_cCFv,
    (void*)checkCutCharge__9daAlink_cCFv,
    (void*)checkCutTurnCharge__9daAlink_cCFv,
    (void*)checkCutLargeJumpCharge__9daAlink_cCFv,
    (void*)getBokoFlamePos__9daPy_py_cFP4cXyz,
    (void*)checkComboCutTurn__9daAlink_cCFv,
    (void*)checkClimbMove__9daAlink_cCFv,
    (void*)checkGrassWhistle__9daAlink_cCFv,
    (void*)checkBoarRun__9daAlink_cCFv,
    (void*)checkFmChainPut__9daPy_py_cCFv,
    (void*)checkHorseElecDamage__9daPy_py_cCFv,
    (void*)getBaseAnimeFrameRate__9daAlink_cCFv,
    (void*)getBaseAnimeFrame__9daAlink_cCFv,
    (void*)setAnimeFrame__9daAlink_cFf,
    (void*)checkWolfLock__9daAlink_cCFP10fopAc_ac_c,
    (void*)cancelWolfLock__9daAlink_cFP10fopAc_ac_c,
    (void*)getAtnActorID__9daAlink_cCFv,
    (void*)getItemID__9daAlink_cCFv,
    (void*)getGrabActorID__9daAlink_cCFv,
    (void*)exchangeGrabActor__9daAlink_cFP10fopAc_ac_c,
    (void*)setForceGrab__9daAlink_cFP10fopAc_ac_cii,
    (void*)setForcePutPos__9daAlink_cFRC4cXyz,
    (void*)checkPlayerNoDraw__9daAlink_cFv,
    (void*)checkRopeTag__9daPy_py_cFv,
    (void*)voiceStart__9daAlink_cFUl,
    (void*)seStartOnlyReverb__9daAlink_cFUl,
    (void*)seStartOnlyReverbLevel__9daAlink_cFUl,
    (void*)setOutPower__9daAlink_cFfsi,
    (void*)setGrabCollisionOffset__9daAlink_cFffP13cBgS_PolyInfo,
    (void*)onMagneGrab__9daPy_py_cFff,
    (void*)onFrollCrashFlg__9daAlink_cFUci,
    (void*)getModelJointMtx__9daAlink_cFUs,
    (void*)getHeadMtx__9daAlink_cFv,
    (void*)setHookshotCarryOffset__9daAlink_cFUiPC4cXyz,
    (void*)checkCutJumpCancelTurn__9daAlink_cCFv,
    (void*)checkIronBallReturn__9daAlink_cCFv,
    (void*)checkIronBallGroundStop__9daAlink_cCFv,
    (void*)checkSingleBoarBattleSecondBowReady__9daAlink_cCFv,
    (void*)checkPointSubWindowMode__9daPy_py_cCFv,
    (void*)setClothesChange__9daAlink_cFi,
    (void*)setPlayerPosAndAngle__9daAlink_cFPC4cXyzsi,
    (void*)setPlayerPosAndAngle__9daAlink_cFPC4cXyzPC5csXyz,
    (void*)setPlayerPosAndAngle__9daAlink_cFPA4_f,
    (void*)setThrowDamage__9daAlink_cFsffiii,
    (void*)checkSetNpcTks__9daAlink_cFP4cXyzii,
    (void*)setRollJump__9daAlink_cFffs,
    (void*)playerStartCollisionSE__9daAlink_cFUlUl,
    (void*)changeTextureAnime__9daPy_py_cFUsUsi,
    (void*)cancelChangeTextureAnime__9daPy_py_cFv,
    (void*)cancelDungeonWarpReadyNeck__9daAlink_cFv,
    (void*)onSceneChangeArea__9daAlink_cFUcUcP10fopAc_ac_c,
    (void*)onSceneChangeAreaJump__9daAlink_cFUcUcP10fopAc_ac_c,
    (void*)onSceneChangeDead__9daAlink_cFUci,
    (void*)checkHorseRide__9daAlink_cCFv,
    (void*)checkBoarRide__9daAlink_cCFv,
    (void*)checkCanoeRide__9daAlink_cCFv,
    (void*)checkBoardRide__9daAlink_cCFv,
    (void*)checkSpinnerRide__9daAlink_cCFv,
    (void*)getSpinnerActor__9daAlink_cFv,
    (void*)checkHorseRideNotReady__9daAlink_cCFv,
    (void*)checkArrowChargeEnd__9daAlink_cCFv,
    (void*)getSearchBallScale__9daAlink_cCFv,
    (void*)checkFastShotTime__9daAlink_cFv,
    (void*)checkNoEquipItem__9daAlink_cCFv,
    (void*)checkFireMaterial__9daPy_py_cCFv,
    (void*)checkKandelaarSwing__9daAlink_cCFi,
    (void*)getBoardCutTurnOffsetAngleY__9daAlink_cCFv,
    (void*)getMagneHitPos__9daPy_py_cFv,
    (void*)getMagneBootsTopVec__9daAlink_cFv,
    (void*)getKandelaarFlamePos__9daAlink_cFv,
    (void*)checkUseKandelaar__9daAlink_cFi,
    (void*)setDkCaught__9daAlink_cFP10fopAc_ac_c,
    (void*)onPressedDamage__9daAlink_cFRC4cXyzs,
    (void*)checkPriActorOwn__9daAlink_cCFPC10fopAc_ac_c,
    (void*)onWolfEnemyBiteAll__9daAlink_cFP10fopAc_ac_cQ29daPy_py_c9daPy_FLG2,
    (void*)checkWolfEnemyBiteAllOwn__9daAlink_cCFPC10fopAc_ac_c,
    (void*)setWolfEnemyHangBiteAngle__9daAlink_cFs,
    (void*)setKandelaarMtx__9daAlink_cFPA4_fii,
    (void*)getStickAngleFromPlayerShape__9daAlink_cCFPs,
    (void*)checkSpinnerPathMove__9daAlink_cFv,
    (void*)checkSpinnerTriggerAttack__9daAlink_cFv,
    (void*)onSpinnerPathForceRemove__9daAlink_cFv,
    (void*)getIronBallBgHit__9daAlink_cCFv,
    (void*)getIronBallCenterPos__9daAlink_cFv,
    (void*)checkCanoeFishingGetLeft__9daAlink_cCFv,
    (void*)checkCanoeFishingGetRight__9daAlink_cCFv,
    (void*)checkBeeChildDrink__9daAlink_cCFv,
    (void*)skipPortalObjWarp__9daAlink_cFv,
    (void*)checkTreasureRupeeReturn__9daAlink_cCFi,
    (void*)setSumouReady__9daAlink_cFP10fopAc_ac_c,
    (void*)checkAcceptDungeonWarpAlink__9daAlink_cFi,
    (void*)getSumouCounter__9daAlink_cCFv,
    (void*)checkSumouWithstand__9daAlink_cCFv,
    (void*)cancelGoronThrowEvent__9daAlink_cFv,
    (void*)setSumouGraspCancelCount__9daAlink_cFi,
    (void*)setSumouPushBackDirection__9daAlink_cFs,
    (void*)setSumouLoseHeadUp__9daAlink_cFv,
    (void*)getGiantPuzzleAimAngle__9daAlink_cCFv,
    (void*)setGoronSideMove__9daAlink_cFP10fopAc_ac_c,
    (void*)setCargoCarry__9daAlink_cFP10fopAc_ac_c,
    (void*)getDpdFarFlg__9daPy_py_cCFv,
    (void*)getHookshotTopPos__9daAlink_cFv,
    (void*)checkHookshotReturnMode__9daAlink_cCFv,
    (void*)checkHookshotShootReturnMode__9daAlink_cCFv,
    (void*)checkOctaIealHang__9daAlink_cCFv,
    (void*)cancelOctaIealHang__9daAlink_cFv,
    (void*)cancelDragonHangBackJump__9daAlink_cFv,
    (void*)setOctaIealWildHang__9daAlink_cFv,
    (void*)checkDragonHangRide__9daAlink_cCFv,
    (void*)changeDragonActor__9daAlink_cFP10fopAc_ac_c,
    (void*)getClothesChangeWaitTimer__9daAlink_cCFv,
    (void*)getShieldChangeWaitTimer__9daAlink_cCFv,
    (void*)getSwordChangeWaitTimer__9daAlink_cCFv,
    (void*)checkMetamorphose__9daAlink_cCFv,
    (void*)checkWolfDownAttackPullOut__9daAlink_cCFv,
    (void*)checkBootsOrArmorHeavy__9daAlink_cCFv,
    (void*)getBottleOpenAppearItem__9daAlink_cCFv,
    (void*)checkItemSwordEquip__9daAlink_cCFv,
    (void*)getSinkShapeOffset__9daAlink_cCFv,
    (void*)checkSinkDead__9daAlink_cCFv,
    (void*)checkHorseStart__9daAlink_cFv,
    (void*)getWolfHowlMgrP__9daAlink_cFv,
    (void*)checkWolfHowlSuccessAnime__9daAlink_cCFv,
    (void*)checkCopyRodTopUse__9daAlink_cFv,
    (void*)checkCopyRodEquip__9daAlink_cCFv,
    (void*)checkCutJumpMode__9daAlink_cCFv,
};

/* 803B3564-803B3580 010684 0010+0C 2/2 0/0 0/0 .data            __vt__16daAlink_matAnm_c */
SECTION_DATA extern void* __vt__16daAlink_matAnm_c[4 + 3 /* padding */] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__16daAlink_matAnm_cFv,
    (void*)calc__16daAlink_matAnm_cCFP11J3DMaterial,
    /* padding */
    NULL,
    NULL,
    NULL,
};

/* 800A4068-800A4820 09E9A8 07B8+00 1/1 0/0 0/0 .text            createHeap__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::createHeap() {
    nofralloc
#include "asm/d/a/d_a_alink/createHeap__9daAlink_cFv.s"
}
#pragma pop

/* 800A4820-800A48F0 09F160 00D0+00 0/0 1/0 0/0 .text            __dt__14J3DMaterialAnmFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// asm J3DMaterialAnm::~J3DMaterialAnm() {
extern "C" asm void __dt__14J3DMaterialAnmFv() {
    nofralloc
#include "asm/d/a/d_a_alink/__dt__14J3DMaterialAnmFv.s"
}
#pragma pop

/* 800A48F0-800A4910 09F230 0020+00 1/1 0/0 0/0 .text            daAlink_createHeap__FP10fopAc_ac_c
 */
static void daAlink_createHeap(fopAc_ac_c* param_0) {
    daAlink_c::createHeap();
}

/* 800A4910-800A4BC8 09F250 02B8+00 5/5 0/0 0/0 .text            setSelectEquipItem__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSelectEquipItem(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setSelectEquipItem__9daAlink_cFi.s"
}
#pragma pop

/* 800A4BC8-800A4C40 09F508 0078+00 2/2 0/0 0/0 .text            checkBoarStart__9daAlink_cFv */
BOOL daAlink_c::checkBoarStart() {
    // Stage: Bulblin Camp   Room: Outside Arbiter's
    return (checkStageName("F_SP118") && getStartRoomNo() == 3) && dComIfGs_getStartPoint() == 0;
}

/* 800A4C40-800A4CB4 09F580 0074+00 2/2 0/0 0/0 .text            checkCanoeStart__9daAlink_cFv */
BOOL daAlink_c::checkCanoeStart() {
    // Stage: Lake Hylia   Room: Lake
    return (checkStageName("F_SP115") && getStartRoomNo() == 0) && dComIfGs_getStartPoint() == 2;
}

/* 800A4CB4-800A54F4 09F5F4 0840+00 1/1 0/0 0/0 .text            playerInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::playerInit() {
    nofralloc
#include "asm/d/a/d_a_alink/playerInit__9daAlink_cFv.s"
}
#pragma pop

/* 800A54F4-800A551C 09FE34 0028+00 3/3 0/0 0/0 .text            checkHorseStart__9daAlink_cFUli */
BOOL daAlink_c::checkHorseStart(u32 pLastMode, int pStartMode) {
    return pLastMode == 1 || pStartMode == 2 || pLastMode == 8;
}

/* 800A551C-800A5CC8 09FE5C 07AC+00 1/1 0/0 0/0 .text            setStartProcInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setStartProcInit() {
    nofralloc
#include "asm/d/a/d_a_alink/setStartProcInit__9daAlink_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 80450FCC-80450FD0 0004CC 0004+00 1/1 0/0 0/0 .sbss            bgWaitFlg$58404 */
static s32 bgWaitFlg;

/* 80450FD0-80450FD8 -00001 0008+00 2/2 0/0 0/0 .sbss            None */
/* 80450FD0 0001+00 data_80450FD0 None */
/* 80450FD1 0007+00 data_80450FD1 None */
static u8 struct_80450FD0[8];

/* 80453230-80453234 001830 0004+00 1/1 0/0 0/0 .sdata2          @58630 */
SECTION_SDATA2 static f32 lit_58630 = 7500.0f;

/* 80453234-80453238 001834 0004+00 2/2 0/0 0/0 .sdata2          @58631 */
SECTION_SDATA2 static f32 lit_58631 = 275.0f;

/* 800A5CC8-800A660C 0A0608 0944+00 1/1 0/0 0/0 .text            create__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::create() {
    nofralloc
#include "asm/d/a/d_a_alink/create__9daAlink_cFv.s"
}
#pragma pop

/* 800A660C-800A662C 0A0F4C 0020+00 1/0 0/0 0/0 .text            daAlink_Create__FP10fopAc_ac_c */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void daAlink_Create(fopAc_ac_c* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/daAlink_Create__FP10fopAc_ac_c.s"
}
#pragma pop

/* 800A662C-800A67E0 0A0F6C 01B4+00 2/2 0/0 0/0 .text            setRoomInfo__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setRoomInfo() {
    nofralloc
#include "asm/d/a/d_a_alink/setRoomInfo__9daAlink_cFv.s"
}
#pragma pop

/* 800A67E0-800A6B0C 0A1120 032C+00 1/1 0/0 0/0 .text            setShapeAngleOnGround__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setShapeAngleOnGround() {
    nofralloc
#include "asm/d/a/d_a_alink/setShapeAngleOnGround__9daAlink_cFv.s"
}
#pragma pop

/* 800A6B0C-800A6DCC 0A144C 02C0+00 1/1 0/0 0/0 .text            setStepsOffset__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setStepsOffset() {
    nofralloc
#include "asm/d/a/d_a_alink/setStepsOffset__9daAlink_cFv.s"
}
#pragma pop

/* 800A6DCC-800A7050 0A170C 0284+00 1/1 0/0 0/0 .text            iceSlipBgCheck__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::iceSlipBgCheck() {
    nofralloc
#include "asm/d/a/d_a_alink/iceSlipBgCheck__9daAlink_cFv.s"
}
#pragma pop

/* 800A7050-800A7358 0A1990 0308+00 1/1 0/0 0/0 .text            setIceSlipSpeed__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setIceSlipSpeed() {
    nofralloc
#include "asm/d/a/d_a_alink/setIceSlipSpeed__9daAlink_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 80453238-8045323C 001838 0004+00 3/3 0/0 0/0 .sdata2          @59593 */
SECTION_SDATA2 static f32 lit_59593 = 0.0054931640625f;

/* 8045323C-80453240 00183C 0004+00 1/1 0/0 0/0 .sdata2          @59594 */
SECTION_SDATA2 static f32 lit_59594 = 29.899999618530273f;

/* 80453240-80453244 001840 0004+00 1/1 0/0 0/0 .sdata2          @59595 */
SECTION_SDATA2 static f32 lit_59595 = 0.016887418925762177f;

/* 800A7358-800A7950 0A1C98 05F8+00 1/1 0/0 0/0 .text            setPolygonSpeed__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setPolygonSpeed() {
    nofralloc
#include "asm/d/a/d_a_alink/setPolygonSpeed__9daAlink_cFv.s"
}
#pragma pop

/* 800A7950-800A79EC 0A2290 009C+00 4/4 0/0 0/0 .text checkWindSpeedOnAngle__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkWindSpeedOnAngle() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkWindSpeedOnAngle__9daAlink_cCFv.s"
}
#pragma pop

/* 800A79EC-800A7A5C 0A232C 0070+00 2/2 0/0 0/0 .text checkWindSpeedOnAngleAnime__9daAlink_cCFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkWindSpeedOnAngleAnime(int param_0) const {
    nofralloc
#include "asm/d/a/d_a_alink/checkWindSpeedOnAngleAnime__9daAlink_cCFi.s"
}
#pragma pop

/* 800A7A5C-800A7ABC 0A239C 0060+00 7/7 0/0 0/0 .text            checkDashAnime__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkDashAnime() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkDashAnime__9daAlink_cCFv.s"
}
#pragma pop

/* 800A7ABC-800A7CB0 0A23FC 01F4+00 1/1 0/0 0/0 .text checkWindWallRate__9daAlink_cFRC4cXyz */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkWindWallRate(cXyz const& param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkWindWallRate__9daAlink_cFRC4cXyz.s"
}
#pragma pop

/* 800A7CB0-800A8310 0A25F0 0660+00 1/1 0/0 0/0 .text            setWindSpeed__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setWindSpeed() {
    nofralloc
#include "asm/d/a/d_a_alink/setWindSpeed__9daAlink_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 80391F44-80391F50 01E5A4 000C+00 0/1 0/0 0/0 .rodata          localHeadCenter$59872 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const localHeadCenter[12] = {
    0x00, 0x00, 0x00, 0x00, 0xC1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80391F44, &localHeadCenter);
#pragma pop

/* 80391F50-80391F5C 01E5B0 000C+00 0/1 0/0 0/0 .rodata          localEye$59873 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const localEye[12] = {
    0x41, 0x40, 0x00, 0x00, 0xC1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80391F50, &localEye);
#pragma pop

/* 80391F5C-80391F68 01E5BC 000C+00 0/1 0/0 0/0 .rodata          localHeadTop$59874 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const localHeadTop[12] = {
    0x00, 0x00, 0x00, 0x00, 0xC1, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80391F5C, &localHeadTop);
#pragma pop

/* 80391F68-80391F74 01E5C8 000C+00 0/1 0/0 0/0 .rodata          wlLocalHeadCenter$59875 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const wlLocalHeadCenter[12] = {
    0x00, 0x00, 0x00, 0x00, 0xC0, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80391F68, &wlLocalHeadCenter);
#pragma pop

/* 80391F74-80391F80 01E5D4 000C+00 0/1 0/0 0/0 .rodata          wlLocalEye$59876 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const wlLocalEye[12] = {
    0x41, 0xF0, 0x00, 0x00, 0xC0, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80391F74, &wlLocalEye);
#pragma pop

/* 80391F80-80391F8C 01E5E0 000C+00 0/1 0/0 0/0 .rodata          wlLocalHeadTop$59877 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const wlLocalHeadTop[12] = {
    0x00, 0x00, 0x00, 0x00, 0xC1, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80391F80, &wlLocalHeadTop);
#pragma pop

/* 80391F8C-80391F98 01E5EC 000C+00 0/1 0/0 0/0 .rodata          localEyeFromRoot$59878 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const localEyeFromRoot[12] = {
    0x00, 0x00, 0x00, 0x00, 0x42, 0x5F, 0x00, 0x00, 0x41, 0x70, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80391F8C, &localEyeFromRoot);
#pragma pop

/* 80391F98-80391FA4 01E5F8 000C+00 0/1 0/0 0/0 .rodata          boardLocalEyeFromRoot$59879 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const boardLocalEyeFromRoot[12] = {
    0x41, 0x18, 0x00, 0x00, 0x42, 0x3C, 0x00, 0x00, 0x41, 0xC4, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80391F98, &boardLocalEyeFromRoot);
#pragma pop

/* 80391FA4-80391FB0 01E604 000C+00 0/1 0/0 0/0 .rodata          horseLocalEyeFromRoot$59880 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const horseLocalEyeFromRoot[12] = {
    0x3F, 0xE0, 0x00, 0x00, 0x42, 0x5C, 0x00, 0x00, 0x41, 0xCC, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80391FA4, &horseLocalEyeFromRoot);
#pragma pop

/* 80391FB0-80391FBC 01E610 000C+00 0/1 0/0 0/0 .rodata          canoeLocalEyeFromRoot$59881 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const canoeLocalEyeFromRoot[12] = {
    0x00, 0x00, 0x00, 0x00, 0x42, 0x5C, 0x00, 0x00, 0x41, 0xC8, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80391FB0, &canoeLocalEyeFromRoot);
#pragma pop

/* 800A8310-800A87D8 0A2C50 04C8+00 2/2 0/0 0/0 .text            setBodyPartPos__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setBodyPartPos() {
    nofralloc
#include "asm/d/a/d_a_alink/setBodyPartPos__9daAlink_cFv.s"
}
#pragma pop

/* 800A87D8-800A87F8 0A3118 0020+00 1/0 0/0 0/0 .text            setRollJump__9daAlink_cFffs */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm bool daAlink_c::setRollJump(f32 param_0, f32 param_1, s16 param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/setRollJump__9daAlink_cFffs.s"
}
#pragma pop

/* ############################################################################################## */
/* 80391FBC-80391FC8 01E61C 000C+00 0/0 0/0 0/0 .rodata          wlLocalEyeFromRoot$59882 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const wlLocalEyeFromRoot[12] = {
    0x00, 0x00, 0x00, 0x00, 0xC0, 0xC0, 0x00, 0x00, 0x42, 0xAB, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80391FBC, &wlLocalEyeFromRoot);
#pragma pop

/* 80391FC8-80391FD4 01E628 000C+00 0/1 0/0 0/0 .rodata          normalOffset$60101 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const normalOffset[12] = {
    0x00, 0x00, 0x00, 0x00, 0x43, 0x16, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80391FC8, &normalOffset);
#pragma pop

/* 80391FD4-80391FE0 01E634 000C+00 0/1 0/0 0/0 .rodata          crawlOffset$60141 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const crawlOffset[12] = {
    0x00, 0x00, 0x00, 0x00, 0x42, 0x20, 0x00, 0x00, 0x41, 0xF0, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80391FD4, &crawlOffset);
#pragma pop

/* 80391FE0-80391FEC 01E640 000C+00 0/1 0/0 0/0 .rodata          crouchOffset$60142 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const crouchOffset[12] = {
    0x00, 0x00, 0x00, 0x00, 0x42, 0xBE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80391FE0, &crouchOffset);
#pragma pop

/* 80391FEC-80391FF8 01E64C 000C+00 0/1 0/0 0/0 .rodata          swimOffset$60143 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const swimOffset[12] = {
    0x00, 0x00, 0x00, 0x00, 0x41, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80391FEC, &swimOffset);
#pragma pop

/* 80425508-80425514 052228 000C+00 4/4 0/0 0/0 .bss             @4409 */
static u8 lit_4409[12];

/* 80425514-80425520 052234 000C+00 32/35 0/0 0/0 .bss             l_waitBaseAnime */
static Vec l_waitBaseAnime;

/* 80425520-8042552C 052240 000C+00 0/1 0/0 0/0 .bss             @4410 */
#pragma push
#pragma force_active on
static u8 lit_4410[12];
#pragma pop

/* 8042552C-80425538 05224C 000C+00 2/3 0/0 0/0 .bss             l_ironBallBaseAnime */
static f32 l_ironBallBaseAnime[3];

/* 80425538-80425544 052258 000C+00 0/1 0/0 0/0 .bss             @4411 */
#pragma push
#pragma force_active on
static u8 lit_4411[12];
#pragma pop

/* 80425544-80425550 052264 000C+00 15/17 0/0 0/0 .bss             l_halfAtnWaitBaseAnime */
static f32 l_halfAtnWaitBaseAnime[3];

/* 80425550-8042555C 052270 000C+00 0/1 0/0 0/0 .bss             @4412 */
#pragma push
#pragma force_active on
static u8 lit_4412[12];
#pragma pop

/* 8042555C-80425568 05227C 000C+00 1/2 0/0 0/0 .bss             l_rWaitBaseAnime */
static f32 l_rWaitBaseAnime[3];

/* 80425568-80425574 052288 000C+00 0/1 0/0 0/0 .bss             @4413 */
#pragma push
#pragma force_active on
static u8 lit_4413[12];
#pragma pop

/* 80425574-80425580 052294 000C+00 0/1 0/0 0/0 .bss             l_lWaitBaseAnime */
#pragma push
#pragma force_active on
static u8 l_lWaitBaseAnime[12];
#pragma pop

/* 80425580-8042558C 0522A0 000C+00 0/1 0/0 0/0 .bss             @4414 */
#pragma push
#pragma force_active on
static u8 lit_4414[12];
#pragma pop

/* 8042558C-80425598 0522AC 000C+00 3/5 0/0 0/0 .bss             l_horseBaseAnime */
static u8 l_horseBaseAnime[12];

/* 80425598-804255A4 0522B8 000C+00 0/1 0/0 0/0 .bss             @4415 */
#pragma push
#pragma force_active on
static u8 lit_4415[12];
#pragma pop

/* 804255A4-804255B0 0522C4 000C+00 3/5 0/0 0/0 .bss             l_boarBaseAnime */
static u8 l_boarBaseAnime[12];

/* 804255B0-804255BC 0522D0 000C+00 0/1 0/0 0/0 .bss             @4416 */
#pragma push
#pragma force_active on
static u8 lit_4416[12];
#pragma pop

/* 804255BC-804255C8 0522DC 000C+00 1/3 0/0 0/0 .bss             l_localHorseRidePos */
static u8 l_localHorseRidePos[12];

/* 804255C8-804255D4 0522E8 000C+00 0/1 0/0 0/0 .bss             @4417 */
#pragma push
#pragma force_active on
static u8 lit_4417[12];
#pragma pop

/* 804255D4-804255E0 0522F4 000C+00 1/3 0/0 0/0 .bss             l_localBoarRidePos */
static u8 l_localBoarRidePos[12];

/* 804255E0-804255EC 052300 000C+00 0/1 0/0 0/0 .bss             @4418 */
#pragma push
#pragma force_active on
static u8 lit_4418[12];
#pragma pop

/* 804255EC-804255F8 05230C 000C+00 2/3 0/0 0/0 .bss             l_canoeBaseAnime */
static u8 l_canoeBaseAnime[12];

/* 800A87F8-800A8CE4 0A3138 04EC+00 2/2 0/0 0/0 .text            setAttentionPos__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setAttentionPos() {
    nofralloc
#include "asm/d/a/d_a_alink/setAttentionPos__9daAlink_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 80453244-80453248 001844 0004+00 1/1 0/0 0/0 .sdata2          @60413 */
SECTION_SDATA2 static f32 lit_60413 = -70.0f;

/* 800A8CE4-800A9248 0A3624 0564+00 3/3 0/0 0/0 .text            setMatrix__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setMatrix() {
    nofralloc
#include "asm/d/a/d_a_alink/setMatrix__9daAlink_cFv.s"
}
#pragma pop

/* 800A9248-800A92F0 0A3B88 00A8+00 15/15 0/0 5/5 .text simpleAnmPlay__9daAlink_cFP10J3DAnmBase */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::simpleAnmPlay(J3DAnmBase* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/simpleAnmPlay__9daAlink_cFP10J3DAnmBase.s"
}
#pragma pop

/* ############################################################################################## */
/* 80391FF8-80392004 01E658 000C+00 0/1 0/0 0/0 .rodata          swordMoveLocal0$60438 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const swordMoveLocal0[12] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xBF, 0x80, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80391FF8, &swordMoveLocal0);
#pragma pop

/* 80392004-80392010 01E664 000C+00 0/1 0/0 0/0 .rodata          swordMoveLocal1$60439 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const swordMoveLocal1[12] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80392004, &swordMoveLocal1);
#pragma pop

/* 80392010-8039201C 01E670 000C+00 0/1 0/0 0/0 .rodata          copyRodTop$60447 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const copyRodTop[12] = {
    0x41, 0xDC, 0x00, 0x00, 0xC0, 0xA0, 0x00, 0x00, 0xC1, 0x48, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80392010, &copyRodTop);
#pragma pop

/* 800A92F0-800A9450 0A3C30 0160+00 2/2 0/0 0/0 .text            setSwordPos__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSwordPos() {
    nofralloc
#include "asm/d/a/d_a_alink/setSwordPos__9daAlink_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 80453248-8045324C 001848 0004+00 1/1 0/0 0/0 .sdata2          @61025 */
SECTION_SDATA2 static f32 lit_61025 = -18.5f;

/* 8045324C-80453250 00184C 0004+00 1/1 0/0 0/0 .sdata2          @61026 */
SECTION_SDATA2 static f32 lit_61026 = 7.0f / 50.0f;

/* 80453250-80453254 001850 0004+00 1/1 0/0 0/0 .sdata2          @61027 */
SECTION_SDATA2 static f32 lit_61027 = 61.0f / 5.0f;

/* 80453254-80453258 001854 0004+00 1/1 0/0 0/0 .sdata2          @61028 */
SECTION_SDATA2 static f32 lit_61028 = 21.0f / 5.0f;

/* 80453258-8045325C 001858 0004+00 1/1 0/0 0/0 .sdata2          @61029 */
SECTION_SDATA2 static f32 lit_61029 = -22.0f / 5.0f;

/* 8045325C-80453260 00185C 0004+00 1/1 0/0 0/0 .sdata2          @61030 */
SECTION_SDATA2 static f32 lit_61030 = -7.5f;

/* 80453260-80453264 001860 0004+00 1/1 0/0 0/0 .sdata2          @61031 */
SECTION_SDATA2 static f32 lit_61031 = -5.5f;

/* 80453264-80453268 001864 0004+00 1/1 0/0 0/0 .sdata2          @61032 */
SECTION_SDATA2 static f32 lit_61032 = -13.0f / 10.0f;

/* 80453268-8045326C 001868 0004+00 1/1 0/0 0/0 .sdata2          @61033 */
SECTION_SDATA2 static f32 lit_61033 = -1.0f / 10.0f;

/* 8045326C-80453270 00186C 0004+00 1/1 0/0 0/0 .sdata2          @61034 */
SECTION_SDATA2 static f32 lit_61034 = -7.0f / 10.0f;

/* 800A9450-800A9F4C 0A3D90 0AFC+00 4/4 0/0 0/0 .text            setItemMatrix__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setItemMatrix(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setItemMatrix__9daAlink_cFi.s"
}
#pragma pop

/* ############################################################################################## */
/* 8039201C-80392028 01E67C 000C+00 1/1 0/0 0/0 .rodata          @61047 */
SECTION_RODATA static u8 const lit_61047[12] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x8039201C, &lit_61047);

/* 80453270-80453274 001870 0004+00 1/1 0/0 0/0 .sdata2          @61141 */
SECTION_SDATA2 static f32 lit_61141 = -21.0f;

/* 80453274-80453278 001874 0004+00 1/1 0/0 0/0 .sdata2          @61142 */
SECTION_SDATA2 static f32 lit_61142 = -13.0f;

/* 800A9F4C-800AA2BC 0A488C 0370+00 4/4 0/0 0/0 .text            setWolfItemMatrix__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setWolfItemMatrix() {
    nofralloc
#include "asm/d/a/d_a_alink/setWolfItemMatrix__9daAlink_cFv.s"
}
#pragma pop

/* 800AA2BC-800AA2E0 0A4BFC 0024+00 3/3 0/0 0/0 .text
 * setHandIndex__9daAlink_cFQ29daAlink_c11daAlink_ANM           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setHandIndex(daAlink_c::daAlink_ANM param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setHandIndex__9daAlink_cFQ29daAlink_c11daAlink_ANM.s"
}
#pragma pop

/* 800AA2E0-800AA5E8 0A4C20 0308+00 1/1 0/0 0/0 .text            setSwordAtCollision__9daAlink_cFi
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSwordAtCollision(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setSwordAtCollision__9daAlink_cFi.s"
}
#pragma pop

/* 800AA5E8-800AA6B4 0A4F28 00CC+00 4/4 0/0 0/0 .text checkNoCollisionCorret__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkNoCollisionCorret() {
    nofralloc
#include "asm/d/a/d_a_alink/checkNoCollisionCorret__9daAlink_cFv.s"
}
#pragma pop

/* 800AA6B4-800AA714 0A4FF4 0060+00 1/1 0/0 0/0 .text            decSwordBlur__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::decSwordBlur() {
    nofralloc
#include "asm/d/a/d_a_alink/decSwordBlur__9daAlink_cFv.s"
}
#pragma pop

/* 800AA714-800AA7EC 0A5054 00D8+00 2/2 0/0 0/0 .text            resetWolfAtCollision__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::resetWolfAtCollision() {
    nofralloc
#include "asm/d/a/d_a_alink/resetWolfAtCollision__9daAlink_cFv.s"
}
#pragma pop

/* 800AA7EC-800AA9DC 0A512C 01F0+00 1/1 0/0 0/0 .text            setWolfAtCollision__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setWolfAtCollision() {
    nofralloc
#include "asm/d/a/d_a_alink/setWolfAtCollision__9daAlink_cFv.s"
}
#pragma pop

/* 800AA9DC-800AAABC 0A531C 00E0+00 3/3 0/0 0/0 .text            resetAtCollision__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::resetAtCollision(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/resetAtCollision__9daAlink_cFi.s"
}
#pragma pop

/* ############################################################################################## */
/* 80392028-80392034 01E688 000C+00 0/1 0/0 0/0 .rodata          bottleTopPos$61387 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const bottleTopPos[12] = {
    0x00, 0x00, 0x00, 0x00, 0x41, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80392028, &bottleTopPos);
#pragma pop

/* 800AAABC-800AB878 0A53FC 0DBC+00 1/1 0/0 0/0 .text            setAtCollision__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setAtCollision() {
    nofralloc
#include "asm/d/a/d_a_alink/setAtCollision__9daAlink_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 80392034-80392040 01E694 000C+00 1/1 0/0 0/0 .rodata          localHead$61779 */
SECTION_RODATA static u8 const localHead[12] = {
    0x41, 0x70, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80392034, &localHead);

/* 800AB878-800ABAE0 0A61B8 0268+00 1/1 0/0 0/0 .text            setWolfCollisionPos__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setWolfCollisionPos() {
    nofralloc
#include "asm/d/a/d_a_alink/setWolfCollisionPos__9daAlink_cFv.s"
}
#pragma pop

/* 800ABAE0-800ABB28 0A6420 0048+00 2/2 0/0 0/0 .text            initLockAt__9daAlink_cFv */
void daAlink_c::initLockAt() {
    field_0x122C[0].OnAtSPrmBit(0x20);
    field_0x122C[0].OnAtNoHitMark();
    field_0x122C[0].OffAtNoConHit();
    field_0x122C[0].ResetAtHit();
}

/* 800ABB28-800ABB84 0A6468 005C+00 3/3 0/0 0/0 .text            cancelLockAt__9daAlink_cFv */
void daAlink_c::cancelLockAt() {
    field_0x122C[0].OffAtSPrmBit(0x20);
    field_0x122C[0].OffAtNoHitMark();
    field_0x122C[0].OnAtNoConHit();
    field_0x122C[0].ResetAtHit();
    field_0x814.SetAtApid(0xFFFFFFFF);
}

/* 800ABB84-800ABDB8 0A64C4 0234+00 1/1 0/0 0/0 .text            setCollisionPos__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setCollisionPos() {
    nofralloc
#include "asm/d/a/d_a_alink/setCollisionPos__9daAlink_cFv.s"
}
#pragma pop

/* 800ABDB8-800AC328 0A66F8 0570+00 1/1 0/0 0/0 .text            setCollision__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setCollision() {
    nofralloc
#include "asm/d/a/d_a_alink/setCollision__9daAlink_cFv.s"
}
#pragma pop

/* 800AC328-800AC378 0A6C68 0050+00 1/0 0/0 0/0 .text            getBaseAnimeFrame__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm float daAlink_c::getBaseAnimeFrame() const {
    nofralloc
#include "asm/d/a/d_a_alink/getBaseAnimeFrame__9daAlink_cCFv.s"
}
#pragma pop

/* 800AC378-800AC394 0A6CB8 001C+00 1/0 0/0 0/0 .text            setAnimeFrame__9daAlink_cFf */
void daAlink_c::setAnimeFrame(f32 frame) {
    mFrameCtrl1[0].setFrame(frame);
    mFrameCtrl1[1].setFrame(frame);
    mFrameCtrl1[2].setFrame(frame);
    mFrameCtrl2[0].setFrame(frame);
    mFrameCtrl2[1].setFrame(frame);
    mFrameCtrl2[2].setFrame(frame);
}

/* 800AC394-800AC450 0A6CD4 00BC+00 6/6 0/0 0/0 .text
 * setFrameCtrl__9daAlink_cFP16daPy_frameCtrl_cUcssff           */
void daAlink_c::setFrameCtrl(daPy_frameCtrl_c* p_ctrl, u8 attr, s16 start, s16 end, f32 rate,
                             f32 frame) {
    if (i_checkNoResetFlg0(UNDER_WATER_MOVEMENT)) {
        if (checkZoraWearAbility()) {
            rate *= daAlinkHIO_magneBoots_c0::m.mZoraWaterAnmSpeed;
        } else {
            rate *= daAlinkHIO_magneBoots_c0::m.mWaterWalkAnmRate;
        }
    }
    p_ctrl->setFrameCtrl(attr, start, end, rate, frame);
}

/* ############################################################################################## */
/* 80453278-80453280 001878 0008+00 1/1 0/0 0/0 .sdata2          kandelaarAnm$62207 */
SECTION_SDATA2 static u8 kandelaarAnm[8] = {
    0x02, 0x6A, 0x02, 0x68, 0x02, 0x66, 0x02, 0x64,
};

/* 800AC450-800AC558 0A6D90 0108+00 23/23 0/0 0/0 .text
 * getMainBckData__9daAlink_cCFQ29daAlink_c11daAlink_ANM        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getMainBckData(daAlink_c::daAlink_ANM param_0) const {
    nofralloc
#include "asm/d/a/d_a_alink/getMainBckData__9daAlink_cCFQ29daAlink_c11daAlink_ANM.s"
}
#pragma pop

/* 800AC558-800AC5B4 0A6E98 005C+00 51/51 0/0 2/2 .text
 * checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkUnderMove0BckNoArc(daAlink_c::daAlink_ANM param_0) const {
    nofralloc
#include "asm/d/a/d_a_alink/checkUnderMove0BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM.s"
}
#pragma pop

/* 800AC5B4-800AC610 0A6EF4 005C+00 4/4 0/0 0/0 .text
 * checkUnderMove1BckNoArc__9daAlink_cCFQ29daAlink_c11daAlink_ANM */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkUnderMove1BckNoArc(daAlink_c::daAlink_ANM param_0) const {
    nofralloc
#include "asm/d/a/d_a_alink/func_800AC5B4.s"
}
#pragma pop

/* 800AC610-800AC738 0A6F50 0128+00 3/3 0/0 0/0 .text
 * getUnderUpperAnime__9daAlink_cFQ29daAlink_c11daAlink_ANMPP15J3DAnmTransformPP15J3DAnmTransformiUl
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getUnderUpperAnime(daAlink_c::daAlink_ANM param_0, J3DAnmTransform** param_1,
                                       J3DAnmTransform** param_2, int param_3, u32 param_4) {
    nofralloc
#include "asm/d/a/d_a_alink/getUnderUpperAnime__9daAlink_cFQ29daAlink_c11daAlink_ANMPP15J3DAnmTransformPP15J3DAnmTransformiUl.s"
}
#pragma pop

/* 800AC738-800AC754 0A7078 001C+00 7/7 0/0 0/0 .text setDoubleAnimeBlendRatio__9daAlink_cFf */
void daAlink_c::setDoubleAnimeBlendRatio(f32 param_0) {
    f32 tmp = lit_6040;  // remove later
    field_0x1f28[0].setRatio(tmp - param_0);
    field_0x1f28[1].setRatio(param_0);
    mNowAnmPack[0].setRatio(tmp - param_0);
    mNowAnmPack[1].setRatio(param_0);
}

/* 800AC754-800ACA14 0A7094 02C0+00 2/2 0/0 0/0 .text
 * commonDoubleAnime__9daAlink_cFP15J3DAnmTransformP15J3DAnmTransformP15J3DAnmTransformP15J3DAnmTransformfffi
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::commonDoubleAnime(J3DAnmTransform* param_0, J3DAnmTransform* param_1,
                                      J3DAnmTransform* param_2, J3DAnmTransform* param_3,
                                      f32 param_4, f32 param_5, f32 param_6, int param_7) {
    nofralloc
#include "asm/d/a/d_a_alink/func_800AC754.s"
}
#pragma pop

/* 800ACA14-800ACD40 0A7354 032C+00 14/14 0/0 0/0 .text
 * setDoubleAnime__9daAlink_cFfffQ29daAlink_c11daAlink_ANMQ29daAlink_c11daAlink_ANMif */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setDoubleAnime(f32 param_0, f32 param_1, f32 param_2,
                                   daAlink_c::daAlink_ANM param_3, daAlink_c::daAlink_ANM param_4,
                                   int param_5, f32 param_6) {
    nofralloc
#include "asm/d/a/d_a_alink/setDoubleAnime__9daAlink_cFfffQ29daAlink_c11daAlink_ANMQ29daAlink_c11daAlink_ANMif.s"
}
#pragma pop

/* 800ACD40-800ACF80 0A7680 0240+00 2/2 0/0 0/0 .text
 * commonSingleAnime__9daAlink_cFP15J3DAnmTransformP15J3DAnmTransformffs */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::commonSingleAnime(J3DAnmTransform* param_0, J3DAnmTransform* param_1,
                                      f32 param_2, f32 param_3, s16 param_4) {
    nofralloc
#include "asm/d/a/d_a_alink/commonSingleAnime__9daAlink_cFP15J3DAnmTransformP15J3DAnmTransformffs.s"
}
#pragma pop

/* 800ACF80-800ACFB0 0A78C0 0030+00 88/88 0/0 0/0 .text
 * setSingleAnimeBase__9daAlink_cFQ29daAlink_c11daAlink_ANM     */
void daAlink_c::setSingleAnimeBase(daAlink_c::daAlink_ANM anm) {
    setSingleAnime(anm, lit_6040, FLOAT_LABEL(lit_6108), -1, lit_6109);
}

/* 800ACFB0-800ACFE0 0A78F0 0030+00 27/27 0/0 0/0 .text
 * setSingleAnimeBaseMorf__9daAlink_cFQ29daAlink_c11daAlink_ANMf */
void daAlink_c::setSingleAnimeBaseMorf(daAlink_c::daAlink_ANM anm, f32 param_1) {
    setSingleAnime(anm, lit_6040, FLOAT_LABEL(lit_6108), -1, param_1);
}

/* 800ACFE0-800AD00C 0A7920 002C+00 77/77 0/0 0/0 .text
 * setSingleAnimeBaseSpeed__9daAlink_cFQ29daAlink_c11daAlink_ANMff */
void daAlink_c::setSingleAnimeBaseSpeed(daAlink_c::daAlink_ANM anm, f32 param_1, f32 param_2) {
    setSingleAnime(anm, param_1, FLOAT_LABEL(lit_6108), -1, param_2);
}

/* 800AD00C-800AD0F4 0A794C 00E8+00 58/58 0/0 0/0 .text
 * setSingleAnime__9daAlink_cFQ29daAlink_c11daAlink_ANMffsf     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSingleAnime(daAlink_c::daAlink_ANM param_0, f32 param_1, f32 param_2,
                                   s16 param_3, f32 param_4) {
    nofralloc
#include "asm/d/a/d_a_alink/setSingleAnime__9daAlink_cFQ29daAlink_c11daAlink_ANMffsf.s"
}
#pragma pop

/* 800AD0F4-800AD128 0A7A34 0034+00 93/93 0/0 0/0 .text
 * setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSingleAnimeParam(daAlink_c::daAlink_ANM param_0,
                                        daAlinkHIO_anm_c const* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/setSingleAnimeParam__9daAlink_cFQ29daAlink_c11daAlink_ANMPC16daAlinkHIO_anm_c.s"
}
#pragma pop

/* 800AD128-800AD170 0A7A68 0048+00 1/1 0/0 0/0 .text
 * animePlay__9daAlink_cFP15J3DAnmTransformP16daPy_frameCtrl_c  */
void daAlink_c::animePlay(J3DAnmTransform* param_0, daPy_frameCtrl_c* param_1) {
    if (param_0 != NULL) {
        param_1->updateFrame();
        param_0->setFrame(param_1->getFrame());
    }
}

/* 800AD170-800AD2D8 0A7AB0 0168+00 2/2 0/0 0/0 .text            allAnimePlay__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::allAnimePlay() {
    nofralloc
#include "asm/d/a/d_a_alink/allAnimePlay__9daAlink_cFv.s"
}
#pragma pop

/* 800AD2D8-800AD340 0A7C18 0068+00 2/2 0/0 0/0 .text            setUpperAnimeMorf__9daAlink_cFf */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setUpperAnimeMorf(f32 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setUpperAnimeMorf__9daAlink_cFf.s"
}
#pragma pop

/* 800AD340-800AD374 0A7C80 0034+00 15/15 0/0 0/0 .text            setUpperAnimeBase__9daAlink_cFUs
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setUpperAnimeBase(u16 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setUpperAnimeBase__9daAlink_cFUs.s"
}
#pragma pop

/* 800AD374-800AD3A8 0A7CB4 0034+00 7/7 0/0 0/0 .text setUpperAnimeBaseMorf__9daAlink_cFUsf */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setUpperAnimeBaseMorf(u16 param_0, f32 param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/setUpperAnimeBaseMorf__9daAlink_cFUsf.s"
}
#pragma pop

/* 800AD3A8-800AD3D8 0A7CE8 0030+00 18/18 0/0 0/0 .text setUpperAnimeBaseSpeed__9daAlink_cFUsff */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setUpperAnimeBaseSpeed(u16 param_0, f32 param_1, f32 param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/setUpperAnimeBaseSpeed__9daAlink_cFUsff.s"
}
#pragma pop

/* 800AD3D8-800AD6F0 0A7D18 0318+00 13/13 0/0 0/0 .text
 * setUpperAnime__9daAlink_cFUsQ29daAlink_c13daAlink_UPPERffsf  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setUpperAnime(u16 param_0, daAlink_c::daAlink_UPPER param_1, f32 param_2,
                                  f32 param_3, s16 param_4, f32 param_5) {
    nofralloc
#include "asm/d/a/d_a_alink/setUpperAnime__9daAlink_cFUsQ29daAlink_c13daAlink_UPPERffsf.s"
}
#pragma pop

/* 800AD6F0-800AD724 0A8030 0034+00 21/21 0/0 0/0 .text
 * setUpperAnimeParam__9daAlink_cFUsQ29daAlink_c13daAlink_UPPERPC16daAlinkHIO_anm_c */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setUpperAnimeParam(u16 param_0, daAlink_c::daAlink_UPPER param_1,
                                       daAlinkHIO_anm_c const* param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/setUpperAnimeParam__9daAlink_cFUsQ29daAlink_c13daAlink_UPPERPC16daAlinkHIO_anm_c.s"
}
#pragma pop

/* 800AD724-800AD8F4 0A8064 01D0+00 65/65 0/0 0/0 .text
 * resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::resetUpperAnime(daAlink_c::daAlink_UPPER param_0, f32 param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/resetUpperAnime__9daAlink_cFQ29daAlink_c13daAlink_UPPERf.s"
}
#pragma pop

/* 800AD8F4-800AD964 0A8234 0070+00 2/2 0/0 0/0 .text            setUnderAnimeMorf__9daAlink_cFf */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setUnderAnimeMorf(f32 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setUnderAnimeMorf__9daAlink_cFf.s"
}
#pragma pop

/* 800AD964-800ADAB8 0A82A4 0154+00 5/5 0/0 0/0 .text
 * setUnderAnime__9daAlink_cFUsQ29daAlink_c13daAlink_UNDERffsf  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setUnderAnime(u16 param_0, daAlink_c::daAlink_UNDER param_1, f32 param_2,
                                  f32 param_3, s16 param_4, f32 param_5) {
    nofralloc
#include "asm/d/a/d_a_alink/setUnderAnime__9daAlink_cFUsQ29daAlink_c13daAlink_UNDERffsf.s"
}
#pragma pop

/* 800ADAB8-800ADAEC 0A83F8 0034+00 2/2 0/0 0/0 .text
 * setUnderAnimeParam__9daAlink_cFUsQ29daAlink_c13daAlink_UNDERPC16daAlinkHIO_anm_c */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setUnderAnimeParam(u16 param_0, daAlink_c::daAlink_UNDER param_1,
                                       daAlinkHIO_anm_c const* param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/setUnderAnimeParam__9daAlink_cFUsQ29daAlink_c13daAlink_UNDERPC16daAlinkHIO_anm_c.s"
}
#pragma pop

/* 800ADAEC-800ADB78 0A842C 008C+00 17/17 0/0 0/0 .text
 * resetUnderAnime__9daAlink_cFQ29daAlink_c13daAlink_UNDERf     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::resetUnderAnime(daAlink_c::daAlink_UNDER param_0, f32 param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/resetUnderAnime__9daAlink_cFQ29daAlink_c13daAlink_UNDERf.s"
}
#pragma pop

/* 800ADB78-800ADC50 0A84B8 00D8+00 34/34 0/0 0/0 .text setOldRootQuaternion__9daAlink_cFsss */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setOldRootQuaternion(s16 param_0, s16 param_1, s16 param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/setOldRootQuaternion__9daAlink_cFsss.s"
}
#pragma pop

/* 800ADC50-800ADCEC 0A8590 009C+00 2/2 0/0 0/0 .text            checkAtnLeftAnime__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkAtnLeftAnime() {
    nofralloc
#include "asm/d/a/d_a_alink/checkAtnLeftAnime__9daAlink_cFv.s"
}
#pragma pop

/* 800ADCEC-800ADD88 0A862C 009C+00 1/1 0/0 0/0 .text            checkAtnRightAnime__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkAtnRightAnime() {
    nofralloc
#include "asm/d/a/d_a_alink/checkAtnRightAnime__9daAlink_cFv.s"
}
#pragma pop

/* 800ADD88-800ADE14 0A86C8 008C+00 3/3 0/0 0/0 .text getMoveGroundAngleSpeedRate__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getMoveGroundAngleSpeedRate() {
    nofralloc
#include "asm/d/a/d_a_alink/getMoveGroundAngleSpeedRate__9daAlink_cFv.s"
}
#pragma pop

/* 800ADE14-800AEA70 0A8754 0C5C+00 20/20 0/0 0/0 .text            setBlendMoveAnime__9daAlink_cFf
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setBlendMoveAnime(f32 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setBlendMoveAnime__9daAlink_cFf.s"
}
#pragma pop

/* ############################################################################################## */
/* 80453280-80453284 001880 0004+00 2/2 0/0 0/0 .sdata2          @63332 */
SECTION_SDATA2 static f32 lit_63332 = -99.0f / 100.0f;

/* 80453284-80453288 001884 0004+00 1/1 0/0 0/0 .sdata2          @63333 */
SECTION_SDATA2 static f32 lit_63333 = 0.8659999966621399f;

/* 80453288-8045328C 001888 0004+00 2/2 0/0 0/0 .sdata2          @63334 */
SECTION_SDATA2 static f32 lit_63334 = -0.8659999966621399f;

/* 800AEA70-800AF11C 0A93B0 06AC+00 17/17 0/0 0/0 .text setBlendAtnMoveAnime__9daAlink_cFf */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setBlendAtnMoveAnime(f32 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setBlendAtnMoveAnime__9daAlink_cFf.s"
}
#pragma pop

/* 800AF11C-800AF4B0 0A9A5C 0394+00 1/1 0/0 0/0 .text setBlendAtnBackMoveAnime__9daAlink_cFf */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setBlendAtnBackMoveAnime(f32 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setBlendAtnBackMoveAnime__9daAlink_cFf.s"
}
#pragma pop

/* 800AF4B0-800AF61C 0A9DF0 016C+00 29/29 0/0 0/0 .text            setFaceBck__9daAlink_cFUsiUs */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setFaceBck(u16 param_0, int param_1, u16 param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/setFaceBck__9daAlink_cFUsiUs.s"
}
#pragma pop

/* ############################################################################################## */
/* 8045328C-80453290 00188C 0004+00 2/2 0/0 0/0 .sdata2          @63482 */
SECTION_SDATA2 static f32 lit_63482 = 0.012000000104308128f;

/* 800AF61C-800AF7D0 0A9F5C 01B4+00 7/7 0/0 0/0 .text            setFaceBtp__9daAlink_cFUsiUs */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setFaceBtp(u16 param_0, int param_1, u16 param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/setFaceBtp__9daAlink_cFUsiUs.s"
}
#pragma pop

/* 800AF7D0-800AF8A0 0AA110 00D0+00 6/6 0/0 0/0 .text            setFaceBtk__9daAlink_cFUsiUs */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setFaceBtk(u16 param_0, int param_1, u16 param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/setFaceBtk__9daAlink_cFUsiUs.s"
}
#pragma pop

/* 800AF8A0-800AF9A8 0AA1E0 0108+00 31/31 0/0 0/0 .text
 * setFaceBasicTexture__9daAlink_cFQ29daAlink_c13daAlink_FTANM  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setFaceBasicTexture(daAlink_c::daAlink_FTANM param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setFaceBasicTexture__9daAlink_cFQ29daAlink_c13daAlink_FTANM.s"
}
#pragma pop

/* 800AF9A8-800AFAA8 0AA2E8 0100+00 5/5 0/0 0/0 .text
 * setFaceBasicAnime__9daAlink_cFQ29daAlink_c11daAlink_ANM      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setFaceBasicAnime(daAlink_c::daAlink_ANM param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setFaceBasicAnime__9daAlink_cFQ29daAlink_c11daAlink_ANM.s"
}
#pragma pop

/* 800AFAA8-800AFB14 0AA3E8 006C+00 16/16 0/0 0/0 .text
 * setFacePriTexture__9daAlink_cFQ29daAlink_c13daAlink_FTANM    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setFacePriTexture(daAlink_c::daAlink_FTANM param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setFacePriTexture__9daAlink_cFQ29daAlink_c13daAlink_FTANM.s"
}
#pragma pop

/* 800AFB14-800AFB74 0AA454 0060+00 6/6 0/0 0/0 .text
 * setFacePriAnime__9daAlink_cFQ29daAlink_c11daAlink_ANM        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setFacePriAnime(daAlink_c::daAlink_ANM param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setFacePriAnime__9daAlink_cFQ29daAlink_c11daAlink_ANM.s"
}
#pragma pop

/* 800AFB74-800AFBD0 0AA4B4 005C+00 1/1 0/0 0/0 .text            resetFacePriBck__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::resetFacePriBck() {
    nofralloc
#include "asm/d/a/d_a_alink/resetFacePriBck__9daAlink_cFv.s"
}
#pragma pop

/* 800AFBD0-800AFC2C 0AA510 005C+00 1/1 0/0 0/0 .text            resetFacePriBtp__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::resetFacePriBtp() {
    nofralloc
#include "asm/d/a/d_a_alink/resetFacePriBtp__9daAlink_cFv.s"
}
#pragma pop

/* 800AFC2C-800AFC88 0AA56C 005C+00 1/1 0/0 0/0 .text            resetFacePriBtk__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::resetFacePriBtk() {
    nofralloc
#include "asm/d/a/d_a_alink/resetFacePriBtk__9daAlink_cFv.s"
}
#pragma pop

/* 800AFC88-800AFCBC 0AA5C8 0034+00 1/1 0/0 0/0 .text            resetFacePriTexture__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::resetFacePriTexture() {
    nofralloc
#include "asm/d/a/d_a_alink/resetFacePriTexture__9daAlink_cFv.s"
}
#pragma pop

/* 800AFCBC-800AFCF0 0AA5FC 0034+00 7/7 0/0 0/0 .text            resetFacePriAnime__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::resetFacePriAnime() {
    nofralloc
#include "asm/d/a/d_a_alink/resetFacePriAnime__9daAlink_cFv.s"
}
#pragma pop

/* 800AFCF0-800B0098 0AA630 03A8+00 2/2 0/0 0/0 .text            playFaceTextureAnime__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::playFaceTextureAnime() {
    nofralloc
#include "asm/d/a/d_a_alink/playFaceTextureAnime__9daAlink_cFv.s"
}
#pragma pop

/* 800B0098-800B0150 0AA9D8 00B8+00 14/14 0/0 0/0 .text
 * getGroundAngle__9daAlink_cFP13cBgS_PolyInfos                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getGroundAngle(cBgS_PolyInfo* param_0, s16 param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/getGroundAngle__9daAlink_cFP13cBgS_PolyInfos.s"
}
#pragma pop

/* 800B0150-800B01FC 0AAA90 00AC+00 1/1 0/0 0/0 .text getRoofAngle__9daAlink_cFP13cBgS_PolyInfos
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getRoofAngle(cBgS_PolyInfo* param_0, s16 param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/getRoofAngle__9daAlink_cFP13cBgS_PolyInfos.s"
}
#pragma pop

/* 800B01FC-800B02BC 0AAB3C 00C0+00 2/2 0/0 0/0 .text
 * getWallEdgePos__9daAlink_cFRC4cXyzP8cM3dGPlaP8cM3dGPlaP4cXyzi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getWallEdgePos(cXyz const& param_0, cM3dGPla* param_1, cM3dGPla* param_2,
                                   cXyz* param_3, int param_4) {
    nofralloc
#include "asm/d/a/d_a_alink/getWallEdgePos__9daAlink_cFRC4cXyzP8cM3dGPlaP8cM3dGPlaP4cXyzi.s"
}
#pragma pop

/* ############################################################################################## */
/* 80453290-80453294 001890 0004+00 1/1 0/0 0/0 .sdata2          @64357 */
SECTION_SDATA2 static f32 lit_64357 = 36.5f;

/* 800B02BC-800B146C 0AABFC 11B0+00 9/9 0/0 0/0 .text            setFrontWallType__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setFrontWallType() {
    nofralloc
#include "asm/d/a/d_a_alink/setFrontWallType__9daAlink_cFv.s"
}
#pragma pop

/* 800B146C-800B1488 0ABDAC 001C+00 1/1 0/0 0/0 .text            SetPos__12dBgS_RoofChkFRC4cXyz */
void dBgS_RoofChk::SetPos(cXyz const& pos) {
    m_pos = pos;
}

/* 800B1488-800B14B4 0ABDC8 002C+00 4/4 0/0 0/0 .text checkWaterPolygonUnder__9daAlink_cFv */
BOOL daAlink_c::checkWaterPolygonUnder() {
    return i_checkModeFlg(MODE_SWIMMING) || mCurrent.mPosition.y < mWaterY;
}

/* 800B14B4-800B154C 0ABDF4 0098+00 2/2 0/0 0/0 .text            setWaterY__9daAlink_cFv */
void daAlink_c::setWaterY() {
    if (mLinkAcch.ChkWaterHit()) {
        i_onNoResetFlg0(FLG0_UNK_80);
        field_0x2fbc = dComIfG_Bgsp().GetPolyAtt0(mLinkAcch.m_wtr);
        mWaterY = mLinkAcch.m_wtr.GetHeight();
        if (field_0x2fbc != 6) {
            checkWaterInKandelaar(mWaterY);
        }
    } else {
        i_offNoResetFlg0(FLG0_UNK_80);
        field_0x2fbc = 16;
        mWaterY = lit_9138;
    }
}

/* 800B154C-800B172C 0ABE8C 01E0+00 2/2 0/0 0/0 .text            setHangWaterY__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setHangWaterY() {
    nofralloc
#include "asm/d/a/d_a_alink/setHangWaterY__9daAlink_cFv.s"
}
#pragma pop

/* 800B172C-800B1770 0AC06C 0044+00 3/3 0/0 0/0 .text setSandDownBgCheckWallH__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSandDownBgCheckWallH() {
    nofralloc
#include "asm/d/a/d_a_alink/setSandDownBgCheckWallH__9daAlink_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 80453294-80453298 001894 0004+00 1/1 0/0 0/0 .sdata2          @64592 */
SECTION_SDATA2 static f32 lit_64592 = 11.654999732971191f;

/* 80453298-8045329C 001898 0004+00 1/1 0/0 0/0 .sdata2          @64593 */
SECTION_SDATA2 static f32 lit_64593 = 140.0f;

/* 8045329C-804532A0 00189C 0004+00 1/1 0/0 0/0 .sdata2          @64594 */
SECTION_SDATA2 static f32 lit_64594 = -260.0f;

/* 804532A0-804532A4 0018A0 0004+00 1/1 0/0 0/0 .sdata2          @64595 */
SECTION_SDATA2 static f32 lit_64595 = -140.0f;

/* 804532A4-804532A8 0018A4 0004+00 1/1 0/0 0/0 .sdata2          @64596 */
SECTION_SDATA2 static f32 lit_64596 = 49.99000549316406f;

/* 800B1770-800B1B28 0AC0B0 03B8+00 2/2 0/0 0/0 .text            setBgCheckParam__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setBgCheckParam() {
    nofralloc
#include "asm/d/a/d_a_alink/setBgCheckParam__9daAlink_cFv.s"
}
#pragma pop

/* 800B1B28-800B1B68 0AC468 0040+00 4/4 0/0 0/0 .text            checkNotJumpSinkLimit__9daAlink_cFv
 */
BOOL daAlink_c::checkNotJumpSinkLimit() {
    return mSinkShapeOffset < lit_14614 || field_0x2fbd == 3 ||
           (field_0x2fbd == 4 && mSinkShapeOffset < lit_14624);
}

/* 800B1B68-800B1BAC 0AC4A8 0044+00 2/2 0/0 0/0 .text            checkNotItemSinkLimit__9daAlink_cFv
 */
BOOL daAlink_c::checkNotItemSinkLimit() {
    return mSinkShapeOffset < lit_28045 &&
           (field_0x2fbd == 1 || field_0x2fbd == 2 || field_0x2fbd == 3 || field_0x2fbd == 4);
}

/* ############################################################################################## */
/* 804532A8-804532AC 0018A8 0004+00 1/1 0/0 0/0 .sdata2          @64730 */
SECTION_SDATA2 static f32 lit_64730 = 3.0f / 7.0f;

/* 804532AC-804532B0 0018AC 0004+00 1/1 0/0 0/0 .sdata2          @64731 */
SECTION_SDATA2 static f32 lit_64731 = 128.0f;

/* 800B1BAC-800B1FB8 0AC4EC 040C+00 2/2 0/0 0/0 .text            setSandShapeOffset__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSandShapeOffset() {
    nofralloc
#include "asm/d/a/d_a_alink/setSandShapeOffset__9daAlink_cFv.s"
}
#pragma pop

/* 800B1FB8-800B1FD8 0AC8F8 0020+00 2/2 0/0 0/0 .text checkLv2MiddleBossBgRide__9daAlink_cFs */
bool daAlink_c::checkLv2MiddleBossBgRide(short param_0) {
    return param_0 == 0x7B || param_0 == 0x7D;
}

/* 800B1FD8-800B21EC 0AC918 0214+00 11/11 0/0 0/0 .text getSlidePolygon__9daAlink_cFP8cM3dGPla */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getSlidePolygon(cM3dGPla* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/getSlidePolygon__9daAlink_cFP8cM3dGPla.s"
}
#pragma pop

/* 800B21EC-800B221C 0ACB2C 0030+00 4/4 0/0 0/0 .text            checkSlope__9daAlink_cCFv */
BOOL daAlink_c::checkSlope() const {
    return field_0x3174 != 8 && field_0x2ff0 < -field_0x3122;
}

inline daHorse_c* i_dComIfGp_getHorseActor() {
    return (daHorse_c*)g_dComIfG_gameInfo.play.getPlayerPtr(1);
}

/* 800B221C-800B23FC 0ACB5C 01E0+00 1/0 0/0 0/0 .text setPlayerPosAndAngle__9daAlink_cFPC4cXyzsi
 */
// need to figure out member function pointer calls
#ifdef NONMATCHING
void daAlink_c::setPlayerPosAndAngle(cXyz const* p_pos, s16 param_1, int param_2) {
    if (checkEventRun() || param_2 != 0 || mSpecialMode != 0) {
        if (p_pos != NULL) {
            mCurrent.mPosition = *p_pos;
            mNext.mPosition = mCurrent.mPosition;
            field_0x3798 = mCurrent.mPosition;
            i_onEndResetFlg0(ERFLG0_UNK_800000);
            i_onEndResetFlg2(ERFLG2_UNK_100);
            if (mDemo.getDemoMode() != 0x59) {
                mSpeed.y = FLOAT_LABEL(lit_6108);
            }
        }

        mCollisionRot.y = param_1;
        mCurrent.mAngle.y = param_1;
        field_0x2fe6 = mCollisionRot.y;
        if ((mActionID == 0x145 || mActionID == 0xE2) && !i_checkWolf()) {
            if (field_0x3198 != 0) {
                field_0x37c8.x = mCurrent.mPosition.x;
                field_0x37c8.z = mCurrent.mPosition.z;
            }
        }

        if (i_checkMagneBootsOn() && cBgW_CheckBGround(mMagneBootsTopVec.y)) {
            field_0x3118 = mCollisionRot.y;
        }

        if (checkHorseRide() || checkSpinnerRide()) {
            fopAc_ac_c* rideAc = mRideActor.getActor();
            rideAc->mCurrent.mPosition = mCurrent.mPosition;
            rideAc->mCollisionRot.y = mCollisionRot.y;
            rideAc->mCurrent.mAngle.y = mCollisionRot.y;
            rideAc->mSpeed.y = FLOAT_LABEL(lit_6108);
        } else {
            i_dComIfGp_getHorseActor()->setHorsePosAndAngle(&mCurrent.mPosition, mCollisionRot.y);
        }

        field_0x814.ClrCcMove();
    }
}
#else
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setPlayerPosAndAngle(cXyz const* param_0, s16 param_1, int param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/setPlayerPosAndAngle__9daAlink_cFPC4cXyzsi.s"
}
#pragma pop
#endif

/* 800B23FC-800B24F4 0ACD3C 00F8+00 1/0 0/0 0/0 .text
 * setPlayerPosAndAngle__9daAlink_cFPC4cXyzPC5csXyz             */
void daAlink_c::setPlayerPosAndAngle(cXyz const* p_pos, csXyz const* p_angle) {
    if (checkEventRun() || mSpecialMode != 0) {
        if (p_pos != NULL) {
            mCurrent.mPosition = *p_pos;
            mNext.mPosition = mCurrent.mPosition;
            field_0x3798 = mCurrent.mPosition;
            i_onEndResetFlg0(ERFLG0_UNK_800000);
            i_onEndResetFlg2(ERFLG2_UNK_100);
            mSpeed.y = FLOAT_LABEL(lit_6108);
        }

        if (p_angle != NULL) {
            mCollisionRot = *p_angle;
            mCurrent.mAngle.y = mCollisionRot.y;
            field_0x2fe6 = mCollisionRot.y;
        }

        field_0x814.ClrCcMove();
    }
}

/* 800B24F4-800B25CC 0ACE34 00D8+00 1/0 0/0 0/0 .text setPlayerPosAndAngle__9daAlink_cFPA4_f */
void daAlink_c::setPlayerPosAndAngle(Mtx param_0) {
    if (checkEventRun() || mSpecialMode != 0) {
        mCurrent.mPosition.x = param_0[0][3];
        mCurrent.mPosition.y = param_0[1][3];
        mCurrent.mPosition.z = param_0[2][3];
        mNext.mPosition = mCurrent.mPosition;
        field_0x3798 = mCurrent.mPosition;
        i_onEndResetFlg0(ERFLG0_UNK_800000);
        i_onEndResetFlg2(ERFLG2_UNK_100);
        mDoMtx_MtxToRot(param_0, &mCollisionRot);
        mCurrent.mAngle.y = mCollisionRot.y;
        field_0x2fe6 = mCollisionRot.y;
        mSpeed.y = FLOAT_LABEL(lit_6108);
        field_0x814.ClrCcMove();
    }
}

/* 800B25CC-800B25E8 0ACF0C 001C+00 16/16 0/0 0/0 .text            itemTriggerCheck__9daAlink_cFUc
 */
BOOL daAlink_c::itemTriggerCheck(u8 pTrigger) {
    field_0x2fae |= pTrigger;
    return mItemTrigger & pTrigger;
}

/* 800B25E8-800B2604 0ACF28 001C+00 11/11 0/0 0/0 .text            itemButtonCheck__9daAlink_cFUc */
BOOL daAlink_c::itemButtonCheck(u8 pButton) {
    field_0x2fae |= pButton;
    return mItemButton & pButton;
}

void daAlink_c::itemButton() {
    itemButtonCheck(1 << mSelectItemId);
}

void daAlink_c::itemTrigger() {
    itemTriggerCheck(1 << mSelectItemId);
}

void daAlink_c::spActionButton() {
    itemButtonCheck(64);
}

void daAlink_c::spActionTrigger() {
    itemTriggerCheck(64);
}

BOOL daAlink_c::midnaTalkTrigger() const {
    return mItemTrigger & 4;
}

BOOL daAlink_c::swordSwingTrigger() {
    return itemTriggerCheck(8);
}

/* 800B26DC-800B26FC 0AD01C 0020+00 2/2 0/0 0/0 .text setItemActionButtonStatus__9daAlink_cFUc */
void daAlink_c::setItemActionButtonStatus(u8 param_0) {
    setRStatusEmphasys(param_0);
}

/* 800B26FC-800B271C 0AD03C 0020+00 2/2 0/0 1/1 .text            itemActionTrigger__9daAlink_cFv */
void daAlink_c::itemActionTrigger() {
    spActionTrigger();
}

/* 800B271C-800B2EA4 0AD05C 0788+00 1/1 0/0 0/0 .text            setStickData__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setStickData() {
    nofralloc
#include "asm/d/a/d_a_alink/setStickData__9daAlink_cFv.s"
}
#pragma pop

/* 800B2EA4-800B3220 0AD7E4 037C+00 1/1 0/0 0/0 .text            setAtnList__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setAtnList() {
    nofralloc
#include "asm/d/a/d_a_alink/setAtnList__9daAlink_cFv.s"
}
#pragma pop

/* 800B3220-800B3238 0ADB60 0018+00 5/5 0/0 0/0 .text            setRStatus__9daAlink_cFUc */
void daAlink_c::setRStatus(u8 status) {
    dComIfGp_setRStatus(status, 0);
}

/* 800B3238-800B3250 0ADB78 0018+00 1/1 0/0 0/0 .text            setRStatusEmphasys__9daAlink_cFUc
 */
void daAlink_c::setRStatusEmphasys(u8 status) {
    dComIfGp_setRStatus(status, 2);
}

/* 800B3250-800B3268 0ADB90 0018+00 61/61 0/0 0/0 .text            setDoStatus__9daAlink_cFUc */
void daAlink_c::setDoStatus(u8 status) {
    dComIfGp_setDoStatus(status, 0);
}

/* 800B3268-800B3280 0ADBA8 0018+00 19/19 0/0 0/0 .text setDoStatusEmphasys__9daAlink_cFUc */
void daAlink_c::setDoStatusEmphasys(u8 status) {
    dComIfGp_setDoStatus(status, 2);
}

/* 800B3280-800B3298 0ADBC0 0018+00 2/2 0/0 0/0 .text setDoStatusContinuation__9daAlink_cFUc */
void daAlink_c::setDoStatusContinuation(u8 status) {
    dComIfGp_setDoStatus(status, 4);
}

/* 800B3298-800B32B0 0ADBD8 0018+00 8/8 0/0 0/0 .text            setBStatus__9daAlink_cFUc */
void daAlink_c::setBStatus(u8 status) {
    dComIfGp_setAStatus(status, 0);
}

/* 800B32B0-800B3358 0ADBF0 00A8+00 2/2 0/0 0/0 .text            checkAtnWaitAnime__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm BOOL daAlink_c::checkAtnWaitAnime() {
    nofralloc
#include "asm/d/a/d_a_alink/checkAtnWaitAnime__9daAlink_cFv.s"
}
#pragma pop

/* 800B3358-800B33E4 0ADC98 008C+00 2/2 0/0 0/0 .text
 * setTiredVoice__9daAlink_cFP16daPy_frameCtrl_c                */
void daAlink_c::setTiredVoice(daPy_frameCtrl_c* param_0) {
    if (param_0->checkPass(lit_7448)) {
        if (i_dComIfGs_getLife() <= 2) {
            voiceStart(Z2SE_AL_V_TIRED_L);
        } else {
            voiceStart(Z2SE_AL_V_TIRED_S);
        }
    }
}

/* 800B33E4-800B3494 0ADD24 00B0+00 4/4 0/0 0/0 .text            checkRestHPAnime__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkRestHPAnime() {
    nofralloc
#include "asm/d/a/d_a_alink/checkRestHPAnime__9daAlink_cFv.s"
}
#pragma pop

/* 800B3494-800B3500 0ADDD4 006C+00 44/44 0/0 0/0 .text getDirectionFromAngle__9daAlink_cFs */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getDirectionFromAngle(s16 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/getDirectionFromAngle__9daAlink_cFs.s"
}
#pragma pop

/* 800B3500-800B3630 0ADE40 0130+00 13/13 0/0 0/0 .text            checkAttentionState__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkAttentionState() {
    nofralloc
#include "asm/d/a/d_a_alink/checkAttentionState__9daAlink_cFv.s"
}
#pragma pop

/* 800B3630-800B3734 0ADF70 0104+00 5/5 0/0 0/0 .text getShapeAngleYAtnActor__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getShapeAngleYAtnActor() {
    nofralloc
#include "asm/d/a/d_a_alink/getShapeAngleYAtnActor__9daAlink_cFv.s"
}
#pragma pop

/* 800B3734-800B3844 0AE074 0110+00 26/26 0/0 0/0 .text setShapeAngleToAtnActor__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setShapeAngleToAtnActor(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setShapeAngleToAtnActor__9daAlink_cFi.s"
}
#pragma pop

/* 800B3844-800B3904 0AE184 00C0+00 9/9 0/0 0/0 .text            initServiceWaitTime__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::initServiceWaitTime() {
    nofralloc
#include "asm/d/a/d_a_alink/initServiceWaitTime__9daAlink_cFv.s"
}
#pragma pop

/* 800B3904-800B3924 0AE244 0020+00 50/50 0/0 0/0 .text            checkZeroSpeedF__9daAlink_cCFv */
bool daAlink_c::checkZeroSpeedF() const {
    return fabsf(mNormalSpeed) < lit_12328;
}

/* 800B3924-800B3F2C 0AE264 0608+00 14/14 0/0 0/0 .text            setNormalSpeedF__9daAlink_cFff */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setNormalSpeedF(f32 param_0, f32 param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/setNormalSpeedF__9daAlink_cFff.s"
}
#pragma pop

/* 800B3F2C-800B3FD4 0AE86C 00A8+00 2/2 0/0 0/0 .text getStickAngleDistanceRate__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getStickAngleDistanceRate() {
    nofralloc
#include "asm/d/a/d_a_alink/getStickAngleDistanceRate__9daAlink_cFv.s"
}
#pragma pop

/* 800B3FD4-800B444C 0AE914 0478+00 3/3 0/0 0/0 .text setSpeedAndAngleNormal__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSpeedAndAngleNormal() {
    nofralloc
#include "asm/d/a/d_a_alink/setSpeedAndAngleNormal__9daAlink_cFv.s"
}
#pragma pop

/* 800B444C-800B477C 0AED8C 0330+00 1/1 0/0 0/0 .text            setSpeedAndAngleAtn__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSpeedAndAngleAtn() {
    nofralloc
#include "asm/d/a/d_a_alink/setSpeedAndAngleAtn__9daAlink_cFv.s"
}
#pragma pop

/* 800B477C-800B47B4 0AF0BC 0038+00 2/2 0/0 0/0 .text
 * checkRequestTalkActor__9daAlink_cFP10dAttList_cP10fopAc_ac_c */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkRequestTalkActor(dAttList_c* param_0, fopAc_ac_c* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/checkRequestTalkActor__9daAlink_cFP10dAttList_cP10fopAc_ac_c.s"
}
#pragma pop

/* 800B47B4-800B48D0 0AF0F4 011C+00 4/4 0/0 0/0 .text            checkServiceWaitMode__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkServiceWaitMode() {
    nofralloc
#include "asm/d/a/d_a_alink/checkServiceWaitMode__9daAlink_cFv.s"
}
#pragma pop

/* 800B48D0-800B4908 0AF210 0038+00 18/18 0/0 0/0 .text            setJumpMode__9daAlink_cFv */
void daAlink_c::setJumpMode() {
    onModeFlg(MODE_JUMP);
    mLastJumpPos = mCurrent.mPosition;
    mFallHeight = mLastJumpPos.y;
    field_0x33c8 = mLastJumpPos.y;
}

/* 800B4908-800B4918 0AF248 0010+00 0/0 0/0 1/1 .text getMetamorphoseNearDis__9daAlink_cCFv */
f32 daAlink_c::getMetamorphoseNearDis() const {
    return daAlinkHIO_basic_c0::m.mTransformBlockNearDis;
}

/* 800B4918-800B4928 0AF258 0010+00 0/0 0/0 1/1 .text getMetamorphoseFarDis__9daAlink_cCFv */
f32 daAlink_c::getMetamorphoseFarDis() const {
    return daAlinkHIO_basic_c0::m.mTransformBlockFarDis;
}

/* 800B4928-800B4938 0AF268 0010+00 0/0 0/0 1/1 .text getMetamorphoseFarAngle__9daAlink_cCFv */
s16 daAlink_c::getMetamorphoseFarAngle() const {
    return daAlinkHIO_basic_c0::m.mTransformBlockFarAngle;
}

/* 800B4938-800B4950 0AF278 0018+00 0/0 1/1 0/0 .text            setMidnaMsg__9daAlink_cFv */
void daAlink_c::setMidnaMsg() {
    if (mMidnaMsg != NULL) {
        mMidnaMsg->onUseFlg();
    }
}

/* 800B4950-800B4A08 0AF290 00B8+00 3/3 0/0 0/0 .text            notTalk__9daAlink_cFv */
bool daAlink_c::notTalk() {
    BOOL chk;
    if (dComIfG_Bgsp().ChkPolySafe(mLinkAcch.m_gnd) && dBgS_CheckBGroundPoly(mLinkAcch.m_gnd)) {
        chk = true;
    } else {
        chk = false;
    }

    if ((mMidnaTalkDelayTimer != 0 ||
         (i_checkMagneBootsOn() && !cBgW_CheckBGround(mMagneBootsTopVec.y))) ||
        !i_checkModeFlg(MODE_SWIMMING | MODE_ROPE_WALK | MODE_VINE_CLIMB | MODE_UNK_800 |
                        MODE_RIDING | MODE_NO_COLLISION | MODE_CLIMB | MODE_JUMP) &&
            !chk) {
        return true;
    }
    return false;
}

/* 800B4A08-800B4B2C 0AF348 0124+00 11/11 0/0 0/0 .text            setTalkStatus__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setTalkStatus() {
    nofralloc
#include "asm/d/a/d_a_alink/setTalkStatus__9daAlink_cFv.s"
}
#pragma pop

/* 800B4B2C-800B4B7C 0AF46C 0050+00 1/1 0/0 0/0 .text            getFrontRollRate__9daAlink_cFv */
f32 daAlink_c::getFrontRollRate() {
    if (checkHeavyStateOn(1, 1)) {
        return lit_16641 * mHeavySpeedMultiplier;
    } else {
        return lit_16641;
    }
}

/* 800B4B7C-800B5284 0AF4BC 0708+00 2/2 0/0 0/0 .text            decideCommonDoStatus__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::decideCommonDoStatus() {
    nofralloc
#include "asm/d/a/d_a_alink/decideCommonDoStatus__9daAlink_cFv.s"
}
#pragma pop

/* 800B5284-800B58EC 0AFBC4 0668+00 1/1 0/0 0/0 .text            decideDoStatus__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::decideDoStatus() {
    nofralloc
#include "asm/d/a/d_a_alink/decideDoStatus__9daAlink_cFv.s"
}
#pragma pop

/* 800B58EC-800B5BC0 0B022C 02D4+00 25/25 0/0 0/0 .text            checkWaitAction__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm BOOL daAlink_c::checkWaitAction() {
    nofralloc
#include "asm/d/a/d_a_alink/checkWaitAction__9daAlink_cFv.s"
}
#pragma pop

/* 800B5BC0-800B5C34 0B0500 0074+00 3/3 0/0 0/0 .text            setFallVoice__9daAlink_cFv */
void daAlink_c::setFallVoice() {
    if (mFallVoiceInit == 0 && lit_8782 * (mFallHeight - mCurrent.mPosition.y) > lit_8676) {
        voiceStart(Z2SE_AL_V_FALL);
        mFallVoiceInit = 1;
    }
}

/* 800B5C34-800B5C64 0B0574 0030+00 2/2 0/0 0/0 .text            setLandPassiveData__9daAlink_cFv */
void daAlink_c::setLandPassiveData() {
    if (field_0x30f0 == 0) {
        if (doTrigger()) {
            field_0x30f0 = 0x41;
        }
    } else {
        field_0x30f0--;
    }
}

/* 800B5C64-800B5CCC 0B05A4 0068+00 5/5 0/0 0/0 .text            setStepLandVibration__9daAlink_cFv
 */
// cXyz issues
#ifdef NONMATCHING
void daAlink_c::setStepLandVibration() {
    int shock;
    if (checkBootsOrArmorHeavy()) {
        shock = 3;
    } else {
        shock = 1;
    }
    cXyz xyz(0.0f, 1.0f, 0.0f);

    dComIfGp_getVibration().StartShock(shock, 15, xyz);
}
#else
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setStepLandVibration() {
    nofralloc
#include "asm/d/a/d_a_alink/setStepLandVibration__9daAlink_cFv.s"
}
#pragma pop
#endif

/* 800B5CCC-800B5F6C 0B060C 02A0+00 5/5 0/0 0/0 .text            checkLandAction__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkLandAction(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkLandAction__9daAlink_cFi.s"
}
#pragma pop

/* 800B5F6C-800B607C 0B08AC 0110+00 3/3 0/0 0/0 .text            checkSlideAction__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm BOOL daAlink_c::checkSlideAction() {
    nofralloc
#include "asm/d/a/d_a_alink/checkSlideAction__9daAlink_cFv.s"
}
#pragma pop

/* 800B607C-800B69CC 0B09BC 0950+00 2/2 0/0 0/0 .text            checkAutoJumpAction__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkAutoJumpAction() {
    nofralloc
#include "asm/d/a/d_a_alink/checkAutoJumpAction__9daAlink_cFv.s"
}
#pragma pop

/* 800B69CC-800B6A30 0B130C 0064+00 2/2 0/0 0/0 .text            checkCutJumpInFly__9daAlink_cFv */
bool daAlink_c::checkCutJumpInFly() {
    if ((mEquipItem == EQUIP_SWORD && i_checkResetFlg0(RFLG0_UNK_80)) || checkForceSwordSwing()) {
        return procCutJumpInit(1);
    }
    return false;
}

/* ############################################################################################## */
/* 80450698-8045069C 000118 0004+00 4/4 0/0 0/0 .sdata           l_ladderAnmBaseTransY */
SECTION_SDATA static f32 l_ladderAnmBaseTransY = 102.00054168701172f;

/* 800B6A30-800B6F28 0B1370 04F8+00 16/16 0/0 0/0 .text checkFrontWallTypeAction__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm BOOL daAlink_c::checkFrontWallTypeAction() {
    nofralloc
#include "asm/d/a/d_a_alink/checkFrontWallTypeAction__9daAlink_cFv.s"
}
#pragma pop

/* 800B6F28-800B7090 0B1868 0168+00 3/3 0/0 0/0 .text checkItemActionInitStart__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkItemActionInitStart() {
    nofralloc
#include "asm/d/a/d_a_alink/checkItemActionInitStart__9daAlink_cFv.s"
}
#pragma pop

/* 800B7090-800B7168 0B19D0 00D8+00 1/1 0/0 0/0 .text checkItemChangeAutoAction__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkItemChangeAutoAction() {
    nofralloc
#include "asm/d/a/d_a_alink/checkItemChangeAutoAction__9daAlink_cFv.s"
}
#pragma pop

inline bool i_dComIfGp_checkPlayerStatus0(int param_0, u32 flag) {
    return g_dComIfG_gameInfo.play.checkPlayerStatus(param_0, 0, flag);
}

/* 800B7168-800B7190 0B1AA8 0028+00 7/7 0/0 0/0 .text            setFastShotTimer__9daAlink_cFv */
void daAlink_c::setFastShotTimer() {
    if (!i_dComIfGp_checkPlayerStatus0(0, 0x2000)) {
        mFastShotTime = daAlinkHIO_item_c0::m.mItemFPTransitionTimer;
    }
}

/* 800B7190-800B71EC 0B1AD0 005C+00 9/9 0/0 0/0 .text            cancelItemUseQuake__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::cancelItemUseQuake(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/cancelItemUseQuake__9daAlink_cFi.s"
}
#pragma pop

/* 800B71EC-800B72E4 0B1B2C 00F8+00 6/6 0/0 0/0 .text cancelUpperItemReadyAnime__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::cancelUpperItemReadyAnime(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/cancelUpperItemReadyAnime__9daAlink_cFi.s"
}
#pragma pop

/* 800B72E4-800B7390 0B1C24 00AC+00 8/8 0/0 0/0 .text            checkItemActorPointer__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkItemActorPointer() {
    nofralloc
#include "asm/d/a/d_a_alink/checkItemActorPointer__9daAlink_cFv.s"
}
#pragma pop

/* 800B7390-800B74B4 0B1CD0 0124+00 2/2 0/0 0/0 .text            checkSwordTwirlAction__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm bool daAlink_c::checkSwordTwirlAction() {
    nofralloc
#include "asm/d/a/d_a_alink/checkSwordTwirlAction__9daAlink_cFv.s"
}
#pragma pop

/* 800B74B4-800B7528 0B1DF4 0074+00 3/3 0/0 0/0 .text checkUpperItemActionFly__9daAlink_cFv */
BOOL daAlink_c::checkUpperItemActionFly() {
    if (checkBowAndSlingItem(mEquipItem)) {
        checkUpperItemActionBowFly();
    } else if (mEquipItem == BOOMERANG) {
        checkUpperItemActionBoomerangFly();
    } else if (mEquipItem == COPY_ROD) {
        checkUpperItemActionCopyRodFly();
    }

    return checkCanoeJumpRide();
}

/* 800B7528-800B75EC 0B1E68 00C4+00 1/1 0/0 0/0 .text            checkItemButtonChange__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkItemButtonChange() {
    nofralloc
#include "asm/d/a/d_a_alink/checkItemButtonChange__9daAlink_cFv.s"
}
#pragma pop

/* 800B75EC-800B7B7C 0B1F2C 0590+00 1/1 0/0 0/0 .text            checkUpperItemAction__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkUpperItemAction() {
    nofralloc
#include "asm/d/a/d_a_alink/checkUpperItemAction__9daAlink_cFv.s"
}
#pragma pop

/* 800B7B7C-800B7BF8 0B24BC 007C+00 1/1 0/0 0/0 .text            orderPeep__9daAlink_cFv */
void daAlink_c::orderPeep() {
    field_0x2fad = field_0x27f4->getSceneListID();
    field_0x2ff2 = 20;
    fopAcM_orderOtherEvent(this, field_0x27f4, l_peepEventName, 0xFFFF, 1, 0);
    if (i_checkWolf()) {
        procWolfWaitInit();
    } else {
        procWaitInit();
    }
}

/* ############################################################################################## */
/* 804532B0-804532B4 0018B0 0004+00 1/1 0/0 0/0 .sdata2          itemTalkType$67468 */
SECTION_SDATA2 static u16 itemTalkType[2] = {6, 7};

/* 800B7BF8-800B7D4C 0B2538 0154+00 13/13 0/0 0/0 .text            orderTalk__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::orderTalk(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/orderTalk__9daAlink_cFi.s"
}
#pragma pop

/* ############################################################################################## */
/* 804532B4-804532B8 0018B4 0004+00 1/1 0/0 0/0 .sdata2          @67554 */
SECTION_SDATA2 static f32 lit_67554 = 1100.0f;

/* 800B7D4C-800B7F84 0B268C 0238+00 1/1 0/0 0/0 .text daAlink_searchBouDoor__FP10fopAc_ac_cPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void daAlink_searchBouDoor(fopAc_ac_c* param_0, void* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/daAlink_searchBouDoor__FP10fopAc_ac_cPv.s"
}
#pragma pop

/* 800B7F84-800B80C4 0B28C4 0140+00 1/1 0/0 0/0 .text daAlink_searchKolin__FP10fopAc_ac_cPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void daAlink_searchKolin(fopAc_ac_c* param_0, void* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/daAlink_searchKolin__FP10fopAc_ac_cPv.s"
}
#pragma pop

/* 800B80C4-800B8374 0B2A04 02B0+00 2/2 0/0 0/0 .text            orderZTalk__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::orderZTalk() {
    nofralloc
#include "asm/d/a/d_a_alink/orderZTalk__9daAlink_cFv.s"
}
#pragma pop

/* 800B8374-800B8930 0B2CB4 05BC+00 1/1 0/0 0/0 .text            checkNormalAction__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkNormalAction() {
    nofralloc
#include "asm/d/a/d_a_alink/checkNormalAction__9daAlink_cFv.s"
}
#pragma pop

u16 daAlink_c::getReadyItem() {
    return dComIfGp_getSelectItem(mSelectItemId);
}

/* 800B8930-800B8988 0B3270 0058+00 11/11 0/0 0/0 .text            checkReadyItem__9daAlink_cFv */
bool daAlink_c::checkReadyItem() {
    if (mEquipItem == NO_ITEM) {
        return false;
    }

    return getReadyItem() == mEquipItem;
}

/* 800B8988-800B9010 0B32C8 0688+00 2/2 0/0 0/0 .text            checkItemAction__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkItemAction() {
    nofralloc
#include "asm/d/a/d_a_alink/checkItemAction__9daAlink_cFv.s"
}
#pragma pop

/* 800B9010-800B9018 0B3950 0008+00 1/1 0/0 0/0 .text            checkRAction__9daAlink_cFv */
bool daAlink_c::checkRAction() {
    return false;
}

/* 800B9018-800B9148 0B3958 0130+00 1/1 0/0 0/0 .text            checkMoveDoAction__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkMoveDoAction() {
    nofralloc
#include "asm/d/a/d_a_alink/checkMoveDoAction__9daAlink_cFv.s"
}
#pragma pop

/* 800B9148-800B9254 0B3A88 010C+00 3/3 0/0 0/0 .text            checkSideRollAction__9daAlink_cFi
 */
#ifdef NONMATCHING
BOOL daAlink_c::checkSideRollAction(int param_0) {
    if (checkNotJumpSinkLimit() || checkHeavyStateOn(1, 1) || checkInputOnR() ||
        checkCutBackState()) {
        return false;
    } else {
        if (mTargetedActor != NULL) {
            if (checkEnemyGroup(mTargetedActor) &&
                mTargetedActor->mCurrent.mPosition.abs2XZ(mCurrent.mPosition) <= lit_6237) {
                return procSideRollInit(param_0);
            } else {
                return procTurnMoveInit(param_0);
            }
        } else {
            return procSideRollInit(param_0);
        }
    }
    return false;
}
#else
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm BOOL daAlink_c::checkSideRollAction(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkSideRollAction__9daAlink_cFi.s"
}
#pragma pop
#endif

/* 800B9254-800B92D0 0B3B94 007C+00 35/35 0/0 0/0 .text            checkNoUpperAnime__9daAlink_cCFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm BOOL daAlink_c::checkNoUpperAnime() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkNoUpperAnime__9daAlink_cCFv.s"
}
#pragma pop

/* 800B92D0-800B92F8 0B3C10 0028+00 1/1 0/0 0/0 .text checkOneHandItemEquipAnime__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkOneHandItemEquipAnime() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkOneHandItemEquipAnime__9daAlink_cCFv.s"
}
#pragma pop

/* 800B92F8-800B9340 0B3C38 0048+00 1/1 0/0 0/0 .text            checkItemEquipAnime__9daAlink_cCFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkItemEquipAnime() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkItemEquipAnime__9daAlink_cCFv.s"
}
#pragma pop

/* 800B9340-800B9398 0B3C80 0058+00 30/30 0/0 1/1 .text            checkEquipAnime__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm BOOL daAlink_c::checkEquipAnime() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkEquipAnime__9daAlink_cCFv.s"
}
#pragma pop

/* 800B9398-800B93CC 0B3CD8 0034+00 4/4 0/0 0/0 .text            checkWindDashAnime__9daAlink_cCFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkWindDashAnime() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkWindDashAnime__9daAlink_cCFv.s"
}
#pragma pop

/* 800B93CC-800B93F4 0B3D0C 0028+00 4/4 0/0 0/0 .text            checkSwordTwirlAnime__9daAlink_cCFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkSwordTwirlAnime() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkSwordTwirlAnime__9daAlink_cCFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 804532B8-804532BC 0018B8 0004+00 1/1 0/0 0/0 .sdata2          @68266 */
SECTION_SDATA2 static f32 lit_68266 = -4.0f / 5.0f;

/* 800B93F4-800B9580 0B3D34 018C+00 7/7 0/0 0/0 .text            swordEquip__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::swordEquip(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/swordEquip__9daAlink_cFi.s"
}
#pragma pop

/* 800B9580-800B9640 0B3EC0 00C0+00 1/1 0/0 0/0 .text            swordUnequip__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::swordUnequip() {
    nofralloc
#include "asm/d/a/d_a_alink/swordUnequip__9daAlink_cFv.s"
}
#pragma pop

/* 800B9640-800B96A4 0B3F80 0064+00 6/6 0/0 0/0 .text            itemEquip__9daAlink_cFUs */
void daAlink_c::itemEquip(u16 item_id) {
    if (mThrowBoomerangActor.getActor() == NULL || item_id != BOOMERANG) {
        field_0x2fde = item_id;
        dComIfGp_clearPlayerStatus0(0, 0x400000);
        i_offNoResetFlg3(0x40000);
        itemUnequip(field_0x2fde, lit_6041);
    }
}

/* 800B96A4-800B97EC 0B3FE4 0148+00 2/2 0/0 0/0 .text            itemUnequip__9daAlink_cFUsf */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::itemUnequip(u16 param_0, f32 param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/itemUnequip__9daAlink_cFUsf.s"
}
#pragma pop

/* 800B97EC-800B983C 0B412C 0050+00 2/2 0/0 0/0 .text            checkFastUnequip__9daAlink_cFv */
bool daAlink_c::checkFastUnequip() {
    return mActionID == PREACTION_UNEQUIP || mActionID == HORSE_GETOFF || checkEventRun();
}

/* 800B983C-800B994C 0B417C 0110+00 10/10 0/0 0/0 .text            allUnequip__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::allUnequip(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/allUnequip__9daAlink_cFi.s"
}
#pragma pop

/* 800B994C-800B9D2C 0B428C 03E0+00 8/8 0/0 0/0 .text checkItemChangeFromButton__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm BOOL daAlink_c::checkItemChangeFromButton() {
    nofralloc
#include "asm/d/a/d_a_alink/checkItemChangeFromButton__9daAlink_cFv.s"
}
#pragma pop

/* 800B9D2C-800B9F50 0B466C 0224+00 12/12 0/0 0/0 .text checkNextActionFromButton__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm BOOL daAlink_c::checkNextActionFromButton() {
    nofralloc
#include "asm/d/a/d_a_alink/checkNextActionFromButton__9daAlink_cFv.s"
}
#pragma pop

/* 800B9F50-800BA09C 0B4890 014C+00 14/14 0/0 0/0 .text checkGroundSpecialMode__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm BOOL daAlink_c::checkGroundSpecialMode() {
    nofralloc
#include "asm/d/a/d_a_alink/checkGroundSpecialMode__9daAlink_cFv.s"
}
#pragma pop

/* 800BA09C-800BA0D0 0B49DC 0034+00 4/4 0/0 0/0 .text            commonCheckNextAction__9daAlink_cFi
 */
void daAlink_c::commonCheckNextAction(int param_0) {
    if (i_checkWolf()) {
        checkNextActionWolf(param_0);
    } else {
        checkNextAction(param_0);
    }
}

/* 800BA0D0-800BA6A0 0B4A10 05D0+00 91/91 0/0 0/0 .text            checkNextAction__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm int daAlink_c::checkNextAction(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkNextAction__9daAlink_cFi.s"
}
#pragma pop

/* 800BA6A0-800BA914 0B4FE0 0274+00 3/3 0/0 0/0 .text            commonChangeItem__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::commonChangeItem() {
    nofralloc
#include "asm/d/a/d_a_alink/commonChangeItem__9daAlink_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 804532BC-804532C0 0018BC 0004+00 1/1 0/0 0/0 .sdata2          @68956 */
SECTION_SDATA2 static f32 lit_68956 = 9.5f;

/* 800BA914-800BAF08 0B5254 05F4+00 1/1 0/0 0/0 .text            setItemAction__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setItemAction() {
    nofralloc
#include "asm/d/a/d_a_alink/setItemAction__9daAlink_cFv.s"
}
#pragma pop

/* 800BAF08-800BAF80 0B5848 0078+00 2/2 0/0 0/0 .text checkNextActionFromCrouch__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkNextActionFromCrouch(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkNextActionFromCrouch__9daAlink_cFi.s"
}
#pragma pop

/* 800BAF80-800BB020 0B58C0 00A0+00 18/18 0/0 0/0 .text checkUpperReadyThrowAnime__9daAlink_cCFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkUpperReadyThrowAnime() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkUpperReadyThrowAnime__9daAlink_cCFv.s"
}
#pragma pop

/* 800BB020-800BB084 0B5960 0064+00 2/2 0/0 0/0 .text getBodyAngleXBasePos__9daAlink_cFP4cXyz */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getBodyAngleXBasePos(cXyz* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/getBodyAngleXBasePos__9daAlink_cFP4cXyz.s"
}
#pragma pop

/* 800BB084-800BB2B0 0B59C4 022C+00 3/3 0/0 0/0 .text            getBodyAngleXAtnActor__9daAlink_cFi
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getBodyAngleXAtnActor(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/getBodyAngleXAtnActor__9daAlink_cFi.s"
}
#pragma pop

/* 800BB2B0-800BB324 0B5BF0 0074+00 13/13 0/0 0/0 .text setBodyAngleXReadyAnime__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setBodyAngleXReadyAnime(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setBodyAngleXReadyAnime__9daAlink_cFi.s"
}
#pragma pop

/* 800BB324-800BB408 0B5C64 00E4+00 2/2 0/0 0/0 .text            setMagicArmorBrk__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setMagicArmorBrk(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setMagicArmorBrk__9daAlink_cFi.s"
}
#pragma pop

inline u16 i_dComIfGs_getRupee() {
    return g_dComIfG_gameInfo.info.getPlayer().getPlayerStatusA().getRupee();
}

/* 800BB408-800BB458 0B5D48 0050+00 6/6 0/0 0/0 .text            checkMagicArmorHeavy__9daAlink_cCFv
 */
BOOL daAlink_c::checkMagicArmorHeavy() const {
    return checkMagicArmorWearAbility() && i_dComIfGs_getRupee() == 0;
}

/* 800BB458-800BB4B8 0B5D98 0060+00 1/0 0/0 0/0 .text checkBootsOrArmorHeavy__9daAlink_cCFv */
BOOL daAlink_c::checkBootsOrArmorHeavy() const {
    return i_checkEquipHeavyBoots() || checkMagicArmorHeavy() || checkIronBallWaitAnime();
}

/* 800BB4B8-800BB560 0B5DF8 00A8+00 29/29 0/0 0/0 .text            checkHeavyStateOn__9daAlink_cFii
 */
// param_0 something related to boots
BOOL daAlink_c::checkHeavyStateOn(int param_0, int param_1) {
    if (!checkEventRun()) {
        if ((param_1 != 0 && mSinkShapeOffset < lit_14614) ||
            (param_0 != 0 && checkIronBallWaitAnime()) || checkIronBallAnime() ||
            checkMagicArmorHeavy() || getHeavyStateAndBoots()) {
            return true;
        }
    }
    return false;
}

/* 800BB560-800BB644 0B5EA0 00E4+00 1/0 0/0 0/0 .text            setOutPower__9daAlink_cFfsi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setOutPower(f32 param_0, s16 param_1, int param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/setOutPower__9daAlink_cFfsi.s"
}
#pragma pop

/* 800BB644-800BB770 0B5F84 012C+00 3/3 0/0 0/0 .text            initGravity__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::initGravity() {
    nofralloc
#include "asm/d/a/d_a_alink/initGravity__9daAlink_cFv.s"
}
#pragma pop

/* 800BB770-800BB7A0 0B60B0 0030+00 64/64 0/0 0/0 .text            setSpecialGravity__9daAlink_cFffi
 */
void daAlink_c::setSpecialGravity(f32 gravity, f32 speed, int param_2) {
    if (param_2 != 0) {
        i_offNoResetFlg3(0x4000);
    } else {
        i_onNoResetFlg3(0x4000);
    }
    mGravity = gravity;
    mMaxFallSpeed = speed;
}

/* 800BB7A0-800BBD40 0B60E0 05A0+00 1/1 0/0 0/0 .text            transAnimeProc__9daAlink_cFP4cXyzff
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::transAnimeProc(cXyz* param_0, f32 param_1, f32 param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/transAnimeProc__9daAlink_cFP4cXyzff.s"
}
#pragma pop

/* 800BBD40-800BBF68 0B6680 0228+00 1/1 0/0 0/0 .text            setFootSpeed__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setFootSpeed() {
    nofralloc
#include "asm/d/a/d_a_alink/setFootSpeed__9daAlink_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 80392040-8039204C 01E6A0 000C+00 0/1 0/0 0/0 .rodata          @69600 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const lit_69600[12] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80392040, &lit_69600);
#pragma pop

/* 8039204C-80392058 01E6AC 000C+00 0/1 0/0 0/0 .rodata          @69683 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const lit_69683[12] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x8039204C, &lit_69683);
#pragma pop

/* 80392094-80392094 01E6F4 0000+00 0/0 0/0 0/0 .rodata          @stringBase0 */
#pragma push
#pragma force_active on
SECTION_DEAD static char const* const stringBase_803925B2 = "F_SP113";
#pragma pop

/* 804532C0-804532C4 0018C0 0004+00 2/2 0/0 0/0 .sdata2          @70084 */
SECTION_SDATA2 static f32 lit_70084 = 2.25f;

/* 800BBF68-800BD6FC 0B68A8 1794+00 1/1 0/0 0/0 .text            posMove__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::posMove() {
    nofralloc
#include "asm/d/a/d_a_alink/posMove__9daAlink_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 804532C4-804532C8 0018C4 0004+00 1/1 0/0 0/0 .sdata2          @70267 */
SECTION_SDATA2 static f32 lit_70267 = 9.999999974752427e-07f;

/* 800BD6FC-800BDD70 0B803C 0674+00 1/1 0/0 0/0 .text            autoGroundHit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::autoGroundHit() {
    nofralloc
#include "asm/d/a/d_a_alink/autoGroundHit__9daAlink_cFv.s"
}
#pragma pop

/* 800BDD70-800BDE20 0B86B0 00B0+00 2/2 0/0 0/0 .text            startPeepChange__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::startPeepChange() {
    nofralloc
#include "asm/d/a/d_a_alink/startPeepChange__9daAlink_cFv.s"
}
#pragma pop

/* 800BDE20-800BDE48 0B8760 0028+00 3/3 0/0 0/0 .text            setLastSceneDamage__9daAlink_cFiPUl
 */
void daAlink_c::setLastSceneDamage(int p1, u32* p2) {
    if (p1 <= 0) {
        return;
    }
    if (0x80 <= p1) {
        p1 = 0x7f;
    }
    *p2 |= p1 << 4;
}

/* 800BDE48-800BDF60 0B8788 0118+00 0/0 1/1 0/0 .text            setLastSceneMode__9daAlink_cFPUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setLastSceneMode(u32* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setLastSceneMode__9daAlink_cFPUl.s"
}
#pragma pop

/* 800BDF60-800BE26C 0B88A0 030C+00 4/4 1/1 0/0 .text            startRestartRoom__9daAlink_cFUliii
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::startRestartRoom(u32 param_0, int param_1, int param_2, int param_3) {
    nofralloc
#include "asm/d/a/d_a_alink/startRestartRoom__9daAlink_cFUliii.s"
}
#pragma pop

/* 800BE26C-800BE2C0 0B8BAC 0054+00 2/2 0/0 0/0 .text            checkCoachGuardGame__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkCoachGuardGame() {
    nofralloc
#include "asm/d/a/d_a_alink/checkCoachGuardGame__9daAlink_cFv.s"
}
#pragma pop

/* 800BE2C0-800BE3E4 0B8C00 0124+00 1/1 0/0 0/0 .text            checkRoofRestart__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkRoofRestart() {
    nofralloc
#include "asm/d/a/d_a_alink/checkRoofRestart__9daAlink_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 80392094-80392094 01E6F4 0000+00 0/0 0/0 0/0 .rodata          @stringBase0 */
#pragma push
#pragma force_active on
SECTION_DEAD static char const* const stringBase_803925BA = "F_SP114";
#pragma pop

/* 800BE3E4-800BE9D4 0B8D24 05F0+00 1/1 0/0 0/0 .text            checkRestartRoom__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkRestartRoom() {
    nofralloc
#include "asm/d/a/d_a_alink/checkRestartRoom__9daAlink_cFv.s"
}
#pragma pop

/* 800BE9D4-800BEAF8 0B9314 0124+00 2/2 0/0 0/0 .text            getSceneExitMoveAngle__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getSceneExitMoveAngle() {
    nofralloc
#include "asm/d/a/d_a_alink/getSceneExitMoveAngle__9daAlink_cFv.s"
}
#pragma pop

/* 800BEAF8-800BF084 0B9438 058C+00 1/1 0/0 0/0 .text            checkSceneChange__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkSceneChange(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkSceneChange__9daAlink_cFi.s"
}
#pragma pop

/* 800BF084-800BF0B8 0B99C4 0034+00 1/0 0/0 0/0 .text            voiceStart__9daAlink_cFUl */
// matches, but JAISoundID(u32) constructor needs to be inlined?
#ifdef NONMATCHING
void daAlink_c::voiceStart(u32 sfx_id) {
    mZ2Link.startLinkVoice(sfx_id, mVoiceReverbIntensity);
}
#else
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::voiceStart(u32 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/voiceStart__9daAlink_cFUl.s"
}
#pragma pop
#endif

/* 800BF0B8-800BF0EC 0B99F8 0034+00 14/14 0/0 0/0 .text            voiceStartLevel__9daAlink_cFUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::voiceStartLevel(u32 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/voiceStartLevel__9daAlink_cFUl.s"
}
#pragma pop

/* 800BF0EC-800BF124 0B9A2C 0038+00 21/21 0/0 0/0 .text            seStartSwordCut__9daAlink_cFUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::seStartSwordCut(u32 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/seStartSwordCut__9daAlink_cFUl.s"
}
#pragma pop

/* 800BF124-800BF15C 0B9A64 0038+00 1/0 0/0 0/0 .text            seStartOnlyReverb__9daAlink_cFUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::seStartOnlyReverb(u32 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/seStartOnlyReverb__9daAlink_cFUl.s"
}
#pragma pop

/* 800BF15C-800BF194 0B9A9C 0038+00 1/0 0/0 0/0 .text seStartOnlyReverbLevel__9daAlink_cFUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::seStartOnlyReverbLevel(u32 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/seStartOnlyReverbLevel__9daAlink_cFUl.s"
}
#pragma pop

/* 800BF194-800BF1CC 0B9AD4 0038+00 10/10 0/0 0/0 .text            seStartMapInfo__9daAlink_cFUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::seStartMapInfo(u32 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/seStartMapInfo__9daAlink_cFUl.s"
}
#pragma pop

/* 800BF1CC-800BF204 0B9B0C 0038+00 9/9 0/0 0/0 .text            seStartMapInfoLevel__9daAlink_cFUl
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::seStartMapInfoLevel(u32 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/seStartMapInfoLevel__9daAlink_cFUl.s"
}
#pragma pop

/* 800BF204-800BF37C 0B9B44 0178+00 3/3 0/0 0/0 .text
 * setBasAnime__9daAlink_cFQ29daAlink_c13daAlink_UNDER          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setBasAnime(daAlink_c::daAlink_UNDER param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setBasAnime__9daAlink_cFQ29daAlink_c13daAlink_UNDER.s"
}
#pragma pop

/* 800BF37C-800BF4E0 0B9CBC 0164+00 11/11 0/0 0/0 .text            initBasAnime__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::initBasAnime() {
    nofralloc
#include "asm/d/a/d_a_alink/initBasAnime__9daAlink_cFv.s"
}
#pragma pop

/* 800BF4E0-800BF500 0B9E20 0020+00 6/6 0/0 0/0 .text            resetBasAnime__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::resetBasAnime() {
    nofralloc
#include "asm/d/a/d_a_alink/resetBasAnime__9daAlink_cFv.s"
}
#pragma pop

/* 800BF500-800BF79C 0B9E40 029C+00 5/5 0/0 0/0 .text            checkSightLine__9daAlink_cFfP4cXyz
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkSightLine(f32 param_0, cXyz* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/checkSightLine__9daAlink_cFfP4cXyz.s"
}
#pragma pop

/* 800BF79C-800BF854 0BA0DC 00B8+00 2/2 0/0 0/0 .text            setMetamorphoseModel__9daAlink_cFi
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setMetamorphoseModel(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setMetamorphoseModel__9daAlink_cFi.s"
}
#pragma pop

/* 800BF854-800BF884 0BA194 0030+00 10/10 0/0 0/0 .text            keepItemData__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::keepItemData() {
    nofralloc
#include "asm/d/a/d_a_alink/keepItemData__9daAlink_cFv.s"
}
#pragma pop

/* 800BF884-800BF8D0 0BA1C4 004C+00 8/8 0/0 0/0 .text            returnKeepItemData__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::returnKeepItemData() {
    nofralloc
#include "asm/d/a/d_a_alink/returnKeepItemData__9daAlink_cFv.s"
}
#pragma pop

/* 800BF8D0-800BF9F0 0BA210 0120+00 2/2 0/0 0/0 .text            setItemModel__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm BOOL daAlink_c::setItemModel() {
    nofralloc
#include "asm/d/a/d_a_alink/setItemModel__9daAlink_cFv.s"
}
#pragma pop

/* 800BF9F0-800BFD74 0BA330 0384+00 4/4 0/0 0/0 .text            setItemActor__9daAlink_cFv */
// register issues
#ifdef NONMATCHING
BOOL daAlink_c::setItemActor() {
    if (mEquipItem == BOOMERANG) {
        fopAc_ac_c* actor = (fopAc_ac_c*)fopAcM_fastCreate(0xFE, 0, &mCurrent.mPosition, -1, NULL,
                                                           NULL, -1, NULL, NULL);
        if (actor == NULL) {
            deleteEquipItem(0, 0);
            return false;
        } else {
            mItemActor.setData(actor);
            field_0x2f94 = 2;
            return true;
        }
    } else if (mEquipItem == COPY_ROD) {
        fopAc_ac_c* actor = (fopAc_ac_c*)fopAcM_fastCreate(0x2F4, 0, &mCurrent.mPosition, -1, NULL,
                                                           NULL, -1, NULL, NULL);
        if (actor == NULL) {
            deleteEquipItem(0, 0);
            return false;
        } else {
            mItemActor.setData(actor);
            field_0x2f94 = 2;
            return true;
        }
    } else if (mEquipItem == IRONBALL) {
        fopAc_ac_c* actor = daCrod_c::makeIronBallDummy(this);
        if (actor == NULL) {
            if (checkIronBallWaitAnime()) {
                resetUpperAnime(UPPER_NOW, -1.0f);
            }
            deleteEquipItem(0, 0);
            return false;
        } else {
            mItemActor.setData(actor);
            field_0x173c.SetActor(actor);
            return true;
        }
    } else if (checkFisingRodLure()) {
        u32 id = fopAcM_create(0x2E4, 0x10D, &mLeftHandPos, -1, NULL, NULL, 0xFF);
        mItemActor.setID(id);
        initFishingRodHand();
        return 1;
    } else if (checkFishingRodItem(mEquipItem)) {
        setGroundFishingRodActor();
        return 1;
    } else if (checkBombItem(mEquipItem)) {
        if (checkHorseRide()) {
            if (!i_dComIfGp_getHorseActor()->checkNoBombProc() &&
                (mActionID != HORSE_TURN || !i_checkModeFlg(MODE_DISABLE_ITEMS))) {
                mEquipItem = NO_ITEM;
                return 1;
            }
        }
        cXyz create_pos = (mLeftHandPos + mRightHandPos) * 0.5f;
        if (checkReadyItem()) {
            fopAc_ac_c* actor;
            if (mEquipItem == NORMAL_BOMB) {
                actor = dBomb_c::createNormalBombPlayer(&create_pos);
            } else {
                actor = dBomb_c::createWaterBombPlayer(&create_pos);
            }
            if (actor != NULL) {
                mActiveBombNum++;
                setGrabItemActor(actor);
                dComIfGp_addSelectItemNum(mSelectItemId, -1);
                field_0x33e4 = 38.0f;
                setGrabUpperAnime(daAlinkHIO_basic_c0::m.mAnmBlendFactor);
            }
        }
        mEquipItem = NO_ITEM;
        return true;
    }
    return false;
}
#else
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm BOOL daAlink_c::setItemActor() {
    nofralloc
#include "asm/d/a/d_a_alink/setItemActor__9daAlink_cFv.s"
}
#pragma pop
#endif

/* 800BFD74-800BFDB0 0BA6B4 003C+00 2/2 0/0 0/0 .text            makeItemType__9daAlink_cFv */
void daAlink_c::makeItemType() {
    if (!setItemModel()) {
        setItemActor();
    }
}

bool daPy_py_c::checkZoraWearFlg() const {
    return dComIfGs_getSelectEquipClothes() == WEAR_ZORA;
}

/* 800BFDB0-800BFDFC 0BA6F0 004C+00 28/28 0/0 0/0 .text checkZoraWearAbility__9daAlink_cCFv */
// li 0 needs to be mr
#ifdef NONMATCHING
BOOL daAlink_c::checkZoraWearAbility() const {
    bool ret = false;
    bool wear_zora = false;
    if (!i_checkWolf()) {
        if (checkZoraWearFlg()) {
            wear_zora = true;
        }
    }
    if (wear_zora && !i_checkNoResetFlg2(UNK_ARMOR)) {
        ret = true;
    }
    return ret;
}
#else
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm BOOL daAlink_c::checkZoraWearAbility() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkZoraWearAbility__9daAlink_cCFv.s"
}
#pragma pop
#endif

/* 800BFDFC-800BFE48 0BA73C 004C+00 5/5 0/0 0/0 .text checkMagicArmorWearAbility__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm BOOL daAlink_c::checkMagicArmorWearAbility() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkMagicArmorWearAbility__9daAlink_cCFv.s"
}
#pragma pop

/* 800BFE48-800BFF04 0BA788 00BC+00 9/9 0/0 0/0 .text            loadAramBmd__9daAlink_cFUsUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DModelData* daAlink_c::loadAramBmd(u16 param_0, u32 param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/loadAramBmd__9daAlink_cFUsUl.s"
}
#pragma pop

/* 800BFF04-800BFF70 0BA844 006C+00 5/5 0/0 0/0 .text            loadAram__9daAlink_cFUsUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::loadAram(u16 param_0, u32 param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/loadAram__9daAlink_cFUsUl.s"
}
#pragma pop

/* 800BFF70-800BFFCC 0BA8B0 005C+00 3/3 0/0 0/0 .text loadAramItemBrk__9daAlink_cFUsP8J3DModel */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DAnmTevRegKey* daAlink_c::loadAramItemBrk(u16 param_0, J3DModel* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/loadAramItemBrk__9daAlink_cFUsP8J3DModel.s"
}
#pragma pop

/* 800BFFCC-800C0028 0BA90C 005C+00 2/2 0/0 0/0 .text loadAramItemBtk__9daAlink_cFUsP8J3DModel */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::loadAramItemBtk(u16 param_0, J3DModel* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/loadAramItemBtk__9daAlink_cFUsP8J3DModel.s"
}
#pragma pop

/* 800C0028-800C0084 0BA968 005C+00 1/1 0/0 0/0 .text loadAramItemBtp__9daAlink_cFUsP8J3DModel */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::loadAramItemBtp(u16 param_0, J3DModel* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/loadAramItemBtp__9daAlink_cFUsP8J3DModel.s"
}
#pragma pop

/* 800C0084-800C0114 0BA9C4 0090+00 5/5 0/0 0/0 .text            changeItemBck__9daAlink_cFUsf */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::changeItemBck(u16 param_0, f32 param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/changeItemBck__9daAlink_cFUsf.s"
}
#pragma pop

/* 800C0114-800C0164 0BAA54 0050+00 2/2 0/0 0/0 .text            checkGroupItem__9daAlink_cCFii */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkGroupItem(int param_0, int param_1) const {
    nofralloc
#include "asm/d/a/d_a_alink/checkGroupItem__9daAlink_cCFii.s"
}
#pragma pop

/* 800C0164-800C0208 0BAAA4 00A4+00 11/11 0/0 0/0 .text            checkSetItemTrigger__9daAlink_cFi
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkSetItemTrigger(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkSetItemTrigger__9daAlink_cFi.s"
}
#pragma pop

/* 800C0208-800C0284 0BAB48 007C+00 6/6 0/0 0/0 .text            checkItemSetButton__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkItemSetButton(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkItemSetButton__9daAlink_cFi.s"
}
#pragma pop

/* 800C0284-800C02C8 0BABC4 0044+00 1/1 0/0 0/0 .text            checkField__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkField() {
    nofralloc
#include "asm/d/a/d_a_alink/checkField__9daAlink_cFv.s"
}
#pragma pop

/* 800C02C8-800C0310 0BAC08 0048+00 6/6 0/0 0/0 .text            checkBossRoom__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkBossRoom() {
    nofralloc
#include "asm/d/a/d_a_alink/checkBossRoom__9daAlink_cFv.s"
}
#pragma pop

/* 800C0310-800C0358 0BAC50 0048+00 4/4 0/0 0/0 .text            checkDungeon__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkDungeon() {
    nofralloc
#include "asm/d/a/d_a_alink/checkDungeon__9daAlink_cFv.s"
}
#pragma pop

/* 800C0358-800C03A0 0BAC98 0048+00 3/3 0/0 0/0 .text            checkCastleTown__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm bool daAlink_c::checkCastleTown() {
    nofralloc
#include "asm/d/a/d_a_alink/checkCastleTown__9daAlink_cFv.s"
}
#pragma pop

/* 800C03A0-800C03E8 0BACE0 0048+00 6/6 0/0 1/1 .text            checkCloudSea__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm bool daAlink_c::checkCloudSea() {
    nofralloc
#include "asm/d/a/d_a_alink/checkCloudSea__9daAlink_cFv.s"
}
#pragma pop

/* 800C03E8-800C044C 0BAD28 0064+00 5/5 0/0 0/0 .text            checkRoomOnly__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm bool daAlink_c::checkRoomOnly() {
    nofralloc
#include "asm/d/a/d_a_alink/checkRoomOnly__9daAlink_cFv.s"
}
#pragma pop

/* 800C044C-800C04B4 0BAD8C 0068+00 3/3 0/0 0/0 .text checkLv2DungeonRoomSpecial__9daAlink_cFv */
bool daAlink_c::checkLv2DungeonRoomSpecial() {
    return checkStageName("D_MN04") &&
           (dComIfGp_roomControl_getStayNo() == 14 || dComIfGp_roomControl_getStayNo() == 16 ||
            dComIfGp_roomControl_getStayNo() == 17);
}

/* 800C04B4-800C0520 0BADF4 006C+00 2/2 0/0 0/0 .text            checkRoomSpecial__9daAlink_cFv */
// 1 wrong branch
#ifdef NONMATCHING
bool daAlink_c::checkRoomSpecial() {
    return !checkStageName("D_MN11") || dComIfGp_roomControl_getStayNo() == 1 ||
           dComIfGp_roomControl_getStayNo() == 2 || checkLv2DungeonRoomSpecial();
}
#else
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm bool daAlink_c::checkRoomSpecial() {
    nofralloc
#include "asm/d/a/d_a_alink/checkRoomSpecial__9daAlink_cFv.s"
}
#pragma pop
#endif

/* 800C0520-800C0594 0BAE60 0074+00 1/1 0/0 0/0 .text            checkRoom__9daAlink_cFv */
bool daAlink_c::checkRoom() {
    return checkRoomOnly() || checkRoomSpecial() ||
           checkStageName("R_SP161") && !dComIfGs_isOneZoneSwitch(14, -1);
}

/* 800C0594-800C05DC 0BAED4 0048+00 8/8 0/0 0/0 .text            checkNotBattleStage__9daAlink_cFv
 */
bool daAlink_c::checkNotBattleStage() {
    return checkRoom() || checkCastleTown();
}

/* 800C05DC-800C0630 0BAF1C 0054+00 2/2 0/0 0/0 .text checkNotHeavyBootsStage__9daAlink_cFv */
bool daAlink_c::checkNotHeavyBootsStage() {
    return (checkNotBattleStage() || checkCloudSea()) && !checkLv2DungeonRoomSpecial();
}

/* 800C0630-800C0678 0BAF70 0048+00 1/1 0/0 0/0 .text            checkNotAutoJumpStage__9daAlink_cFv
 */
bool daAlink_c::checkNotAutoJumpStage() {
    return checkRoomOnly() || checkCastleTown();
}

/* 800C0678-800C077C 0BAFB8 0104+00 3/3 0/0 0/0 .text checkCastleTownUseItem__9daAlink_cFUs */
bool daAlink_c::checkCastleTownUseItem(u16 item_id) {
    if (checkNotBattleStage()) {
        if (item_id == KANTERA || checkTradeItem(item_id) ||
            (item_id == DUNGEON_BACK && checkLv7DungeonShop()) ||
            (checkRoomSpecial() && (item_id == EMPTY_BOTTLE || checkDungeonWarpItem(item_id))) ||
            (checkStageName("R_SP128") && item_id == COPY_ROD) ||
            (checkLv2DungeonRoomSpecial() && item_id == HVY_BOOTS) ||
            (checkBottleItem(item_id) && item_id != EMPTY_BOTTLE)) {
            return true;
        } else {
            return false;
        }
    }
    return true;
}

/* 800C077C-800C0A9C 0BB0BC 0320+00 1/1 0/0 0/0 .text changeItemTriggerKeepProc__9daAlink_cFUci */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::changeItemTriggerKeepProc(u8 param_0, int param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/changeItemTriggerKeepProc__9daAlink_cFUci.s"
}
#pragma pop

/* 800C0A9C-800C12DC 0BB3DC 0840+00 1/1 0/0 0/0 .text            checkNewItemChange__9daAlink_cFUc
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkNewItemChange(u8 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkNewItemChange__9daAlink_cFUc.s"
}
#pragma pop

/* 800C12DC-800C1704 0BBC1C 0428+00 67/67 0/0 0/0 .text            deleteEquipItem__9daAlink_cFii */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::deleteEquipItem(int param_0, int param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/deleteEquipItem__9daAlink_cFii.s"
}
#pragma pop

/* ############################################################################################## */
/* 80392058-80392064 01E6B8 000C+00 0/1 0/0 0/0 .rodata          @71887 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const lit_71887[12] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80392058, &lit_71887);
#pragma pop

/* 80392064-80392070 01E6C4 000C+00 0/1 0/0 0/0 .rodata          @71911 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const lit_71911[12] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80392064, &lit_71911);
#pragma pop

/* 804532C8-804532CC 0018C8 0004+00 1/1 0/0 0/0 .sdata2          @71910 */
SECTION_SDATA2 static u32 lit_71910 = 0x000000FF;

/* 804532CC-804532D0 0018CC 0004+00 1/1 0/0 0/0 .sdata2          @71997 */
SECTION_SDATA2 static f32 lit_71997 = 7.0f / 25.0f;

/* 804532D0-804532D4 0018D0 0004+00 1/1 0/0 0/0 .sdata2          @71998 */
SECTION_SDATA2 static f32 lit_71998 = 174.0f;

/* 804532D4-804532D8 0018D4 0004+00 1/1 0/0 0/0 .sdata2          @71999 */
SECTION_SDATA2 static f32 lit_71999 = 141.0f;

/* 800C1704-800C1CEC 0BC044 05E8+00 1/1 0/0 0/0 .text            setLight__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setLight() {
    nofralloc
#include "asm/d/a/d_a_alink/setLight__9daAlink_cFv.s"
}
#pragma pop

/* 800C1CEC-800C1DAC 0BC62C 00C0+00 3/3 0/0 0/0 .text setFrontRollCrashShock__9daAlink_cFUc */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setFrontRollCrashShock(u8 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setFrontRollCrashShock__9daAlink_cFUc.s"
}
#pragma pop

/* 800C1DAC-800C1DE0 0BC6EC 0034+00 1/0 0/0 0/0 .text            getModelJointMtx__9daAlink_cFUs */
MtxP daAlink_c::getModelJointMtx(u16 param_0) {
    if (param_0 >= field_0x30c6) {
        return field_0x0650->mBaseTransformMtx;
    }
    return field_0x0650->i_getAnmMtx(param_0);
}

/* 800C1DE0-800C1E0C 0BC720 002C+00 1/0 0/0 0/0 .text            onFrollCrashFlg__9daAlink_cFUci */
void daAlink_c::onFrollCrashFlg(u8 param_0, int param_1) {
    if (param_1 != 0) {
        i_onNoResetFlg0(UNK_F_ROLL_CRASH_2);
    } else {
        i_onNoResetFlg0(UNK_F_ROLL_CRASH_1);
    }
    mRollCrashFlg = param_0;
}

/* ############################################################################################## */
/* 804532D8-804532DC -00001 0004+00 1/1 0/0 0/0 .sdata2          @72043 */
SECTION_SDATA2 static void* lit_72043 = (void*)onWarpMaterial__11dRes_info_cFP12J3DModelData;

/* 804532DC-804532E0 -00001 0004+00 1/1 0/0 0/0 .sdata2          None */
SECTION_SDATA2 static void* data_804532DC = (void*)offWarpMaterial__11dRes_info_cFP12J3DModelData;

/* 800C1E0C-800C1F6C 0BC74C 0160+00 4/4 0/0 0/0 .text
 * changeWarpMaterial__9daAlink_cFQ29daAlink_c21daAlink_WARP_MAT_MODE */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::changeWarpMaterial(daAlink_c::daAlink_WARP_MAT_MODE param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/changeWarpMaterial__9daAlink_cFQ29daAlink_c21daAlink_WARP_MAT_MODE.s"
}
#pragma pop

/* 800C1F6C-800C2DA4 0BC8AC 0E38+00 229/229 0/0 0/0 .text
 * commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::commonProcInit(daAlink_c::daAlink_PROC param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/commonProcInit__9daAlink_cFQ29daAlink_c12daAlink_PROC.s"
}
#pragma pop

/* 800C2DA4-800C2DDC 0BD6E4 0038+00 121/121 0/0 0/0 .text
 * commonProcInitNotSameProc__9daAlink_cFQ29daAlink_c12daAlink_PROC */
BOOL daAlink_c::commonProcInitNotSameProc(daAlink_PROC pProcAction) {
    if (mActionID == pProcAction) {
        return false;
    } else {
        commonProcInit(pProcAction);
        return true;
    }
}

/* 800C2DDC-800C2EAC 0BD71C 00D0+00 17/17 0/0 0/0 .text
 * procPreActionUnequipInit__9daAlink_cFiP10fopAc_ac_c          */
#ifdef NONMATCHING
void daAlink_c::procPreActionUnequipInit(int param_0, fopAc_ac_c* param_1) {
    commonProcInit(ACT_PREACTION_UNEQUIP);
    mNormalSpeed = 0.0f;
    setBlendMoveAnime(4.0f);
    allUnequip(0);
    field_0x3010 = 0;

    if (param_1 == NULL) {
        field_0x300e = 0;
    } else {
        field_0x280c.setData(param_1);
        field_0x300e = 1;
        if (fopAcM_GetName(param_1) == 0x2cb) {
            if (mEquipItem == KANTERA) {
                field_0x3010 = 1;
            } else {
                if (i_checkNoResetFlg2(1) != 0) {
                    offKandelaarModel();
                }
            }
        }
    }

    field_0x3198 = param_0;
    return 1;
}
#else
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procPreActionUnequipInit(int param_0, fopAc_ac_c* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/procPreActionUnequipInit__9daAlink_cFiP10fopAc_ac_c.s"
}
#pragma pop
#endif

/* 800C2EAC-800C3098 0BD7EC 01EC+00 1/0 0/0 0/0 .text            procPreActionUnequip__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procPreActionUnequip() {
    nofralloc
#include "asm/d/a/d_a_alink/procPreActionUnequip__9daAlink_cFv.s"
}
#pragma pop

/* 800C3098-800C30F0 0BD9D8 0058+00 1/1 0/0 0/0 .text            procServiceWaitInit__9daAlink_cFv
 */
bool daAlink_c::procServiceWaitInit() {
    commonProcInit(SERVICE_WAIT);
    setSingleAnimeBase(ANM_SERVICE_WAIT);
    mNormalSpeed = FLOAT_LABEL(lit_6108);
    mCurrent.mAngle.y = mCollisionRot.y;
    field_0x2f98 = 4;
    return true;
}

/* 800C30F0-800C3224 0BDA30 0134+00 1/0 0/0 0/0 .text            procServiceWait__9daAlink_cFv */
bool daAlink_c::procServiceWait() {
    J3DFrameCtrl* ctrl = &mFrameCtrl1[0];
    if ((!checkNextAction(0) && !checkFrontWallTypeAction()) &&
        (checkEventRun() || checkGuardActionChange() || mCollisionRot.y != field_0x2fe6)) {
        ctrl->setRate(FLOAT_LABEL(lit_6108));
        procWaitInit();
    } else {
        if (ctrl->checkPass(lit_10040)) {
            voiceStart(Z2SE_AL_V_RELAX_A);
        } else if (ctrl->checkPass(lit_11673)) {
            voiceStart(Z2SE_AL_V_RELAX_B);
        } else if (ctrl->checkPass(lit_25684)) {
            voiceStart(Z2SE_AL_V_RELAX_C);
        }
    }
    return true;
}

/* 800C3224-800C3338 0BDB64 0114+00 2/2 0/0 0/0 .text            procTiredWaitInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procTiredWaitInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procTiredWaitInit__9daAlink_cFv.s"
}
#pragma pop

/* 800C3338-800C33B8 0BDC78 0080+00 1/0 0/0 0/0 .text            procTiredWait__9daAlink_cFv */
bool daAlink_c::procTiredWait() {
    daPy_frameCtrl_c* ctrl = &mFrameCtrl1[0];
    if (!checkNextAction(0)) {
        if (ctrl->checkAnmEnd()) {
            setSingleAnimeBase(ANM_TIRED_WAIT);
        } else if (ctrl->getAttribute() == 2) {
            setTiredVoice(ctrl);
        }
    }
    return true;
}

/* 800C33B8-800C3504 0BDCF8 014C+00 26/26 0/0 0/0 .text            procWaitInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm bool daAlink_c::procWaitInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procWaitInit__9daAlink_cFv.s"
}
#pragma pop

/* 800C3504-800C36CC 0BDE44 01C8+00 1/0 0/0 0/0 .text            procWait__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWait() {
    nofralloc
#include "asm/d/a/d_a_alink/procWait__9daAlink_cFv.s"
}
#pragma pop

/* 800C36CC-800C3730 0BE00C 0064+00 3/3 0/0 0/0 .text            procMoveInit__9daAlink_cFv */
bool daAlink_c::procMoveInit() {
    if (!commonProcInitNotSameProc(HUMAN_MOVE)) {
        return false;
    }
    setBlendMoveAnime(daAlinkHIO_basic_c0::m.mAnmBlendFactor);
    setFootEffectProcType(3);
    return true;
}

/* 800C3730-800C3810 0BE070 00E0+00 1/0 0/0 0/0 .text            procMove__9daAlink_cFv */
// results of cLib_minMaxLimit are put in r4 instead of r3
#ifdef NONMATCHING
bool daAlink_c::procMove() {
    setFootEffectProcType(3);
    if (!checkNextAction(0) && !checkFrontWallTypeAction()) {
        if (mDemo.getDemoMode() == 2 &&
            mNormalSpeed > field_0x594 * daAlinkHIO_move_c0::m.mWalkChangeRate) {
            mNormalSpeed = field_0x594 * daAlinkHIO_move_c0::m.mWalkChangeRate;
        }
        setBlendMoveAnime(-1.0f);
        if (field_0x3174 != 8) {
            field_0x30a0 =
                cLib_minMaxLimit((s16)(field_0x2ff0 >> 1), daAlinkHIO_basic_c0::m.mNeckMaxUp,
                                 daAlinkHIO_basic_c0::m.mNeckMaxDown);
        }
    }
    return true;
}
#else
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm bool daAlink_c::procMove() {
    nofralloc
#include "asm/d/a/d_a_alink/procMove__9daAlink_cFv.s"
}
#pragma pop
#endif

/* 800C3810-800C3868 0BE150 0058+00 1/1 0/0 0/0 .text            procAtnMoveInit__9daAlink_cFv */
bool daAlink_c::procAtnMoveInit() {
    if (!commonProcInitNotSameProc(HUMAN_ATN_MOVE)) {
        return false;
    }
    setBlendAtnMoveAnime(daAlinkHIO_basic_c0::m.mAnmBlendFactor);
    return true;
}

/* 800C3868-800C38CC 0BE1A8 0064+00 1/0 0/0 0/0 .text            procAtnMove__9daAlink_cFv */
bool daAlink_c::procAtnMove() {
    if (!checkNextAction(0)) {
        if (field_0x2f98 != 0 || !checkFrontWallTypeAction()) {
            setBlendAtnMoveAnime(lit_6041);
        }
    }
    return true;
}

/* 800C38CC-800C397C 0BE20C 00B0+00 4/4 0/0 0/0 .text            procAtnActorWaitInit__9daAlink_cFv
 */
bool daAlink_c::procAtnActorWaitInit() {
    if (!commonProcInitNotSameProc(HUMAN_ATN_ACTOR_WAIT)) {
        return false;
    }

    if (mTargetedActor != NULL) {
        fopAcM_searchActorAngleY(this, mTargetedActor);
    }
    mNormalSpeed = FLOAT_LABEL(lit_6108);
    if (field_0x2f98 != 2) {
        field_0x2f98 = 3;
    }

    if (checkAtnWaitAnime()) {
        setBlendAtnMoveAnime(daAlinkHIO_basic_c0::m.mAnmBlendFactor);
    } else {
        setBlendMoveAnime(daAlinkHIO_basic_c0::m.mAnmBlendFactor);
    }

    return true;
}

/* 800C397C-800C39EC 0BE2BC 0070+00 1/0 0/0 0/0 .text            procAtnActorWait__9daAlink_cFv */
bool daAlink_c::procAtnActorWait() {
    if (!checkNextAction(0)) {
        if (checkAtnWaitAnime()) {
            setBlendAtnMoveAnime(lit_6041);
        } else {
            setBlendMoveAnime(lit_6041);
        }
        checkSwordTwirlAction();
    }
    return true;
}

/* 800C39EC-800C3A44 0BE32C 0058+00 3/3 0/0 0/0 .text            procAtnActorMoveInit__9daAlink_cFv
 */
bool daAlink_c::procAtnActorMoveInit() {
    if (!commonProcInitNotSameProc(HUMAN_ATN_ACTOR_MOVE)) {
        return false;
    }
    setBlendAtnMoveAnime(daAlinkHIO_basic_c0::m.mAnmBlendFactor);
    return true;
}

/* 800C3A44-800C3A94 0BE384 0050+00 1/0 0/0 0/0 .text            procAtnActorMove__9daAlink_cFv */
bool daAlink_c::procAtnActorMove() {
    if (!checkNextAction(0)) {
        setBlendAtnMoveAnime(lit_6041);
        checkSwordTwirlAction();
    }
    return 1;
}

/* 800C3A94-800C3B1C 0BE3D4 0088+00 2/2 0/0 0/0 .text            procWaitTurnInit__9daAlink_cFv */
bool daAlink_c::procWaitTurnInit() {
    if (!commonProcInitNotSameProc(HUMAN_WAIT_TURN)) {
        return false;
    }

    setSingleAnimeBaseSpeed(ANM_WAIT_TURN, daAlinkHIO_basic_c0::m.mWaitTurnSpeed,
                            daAlinkHIO_basic_c0::m.mAnmBlendFactor);
    if (checkEventRun()) {
        mNormalSpeed = FLOAT_LABEL(lit_6108);
    }
    field_0x300e = field_0x2fe2;
    mCurrent.mAngle.y = mCollisionRot.y;
    return true;
}

/* 800C3B1C-800C3C3C 0BE45C 0120+00 1/0 0/0 0/0 .text            procWaitTurn__9daAlink_cFv */
BOOL daAlink_c::procWaitTurn() {
    cLib_chaseF(&mNormalSpeed, FLOAT_LABEL(lit_6108), daAlinkHIO_move_c0::m.mDeceleration);
    if (checkGroundSpecialMode()) {
        return true;
    } else {
        if (i_checkEndResetFlg0(ERFLG0_UNK_100000)) {
            return procFloorDownReboundInit();
        } else {
            s16 angle = cLib_addCalcAngleS(&mCollisionRot.y, field_0x300e, 30, 0x3CDF, 8000);
            mCurrent.mAngle.y = mCollisionRot.y;
            if (checkNextActionFromButton()) {
                return true;
            } else {
                if (angle == 0) {
                    if (checkEventRun()) {
                        if (mDemo.getDemoMode() == 5) {
                            dComIfGp_evmng_cutEnd(field_0x3184);
                        } else if (!checkNextAction(0)) {
                            checkWaitAction();
                        }
                    } else {
                        checkNextAction(0);
                    }
                }
            }
        }
    }
    return true;
}

/* 800C3C3C-800C3D38 0BE57C 00FC+00 2/2 0/0 0/0 .text            procMoveTurnInit__9daAlink_cFi */
bool daAlink_c::procMoveTurnInit(int param_0) {
    if (!commonProcInitNotSameProc(HUMAN_MOVE_TURN)) {
        return false;
    }

    setBlendMoveAnime(daAlinkHIO_basic_c0::m.mAnmBlendFactor);
    dComIfGp_setPlayerStatus0(0, 0x800);

    if (param_0 != 0) {
        field_0x300e = (daAlinkHIO_move_c0::m.mMaxTurnAngle << 2) + 19030;
        field_0x3010 = daAlinkHIO_move_c0::m.mMaxTurnAngle << 1;
        field_0x300a = 2;
        mCurrent.mAngle.y = field_0x2fe2;
        mNormalSpeed *= lit_5943;
    } else {
        field_0x300e = daAlinkHIO_move_c0::m.mMaxTurnAngle << 1;
        field_0x3010 = daAlinkHIO_move_c0::m.mMaxTurnAngle;
        field_0x300a = 3;
    }
    field_0x300e = daAlinkHIO_move_c0::m.mMaxTurnAngle << 1;
    field_0x3010 = daAlinkHIO_move_c0::m.mMaxTurnAngle;
    return true;
}

/* 800C3D38-800C3DA0 0BE678 0068+00 1/0 0/0 0/0 .text            procMoveTurn__9daAlink_cFv */
bool daAlink_c::procMoveTurn() {
    setSpeedAndAngleNormal();
    cLib_addCalcAngleS(&mCollisionRot.y, mCurrent.mAngle.y, field_0x300a, field_0x300e,
                       field_0x3010);

    if (!checkNextAction(0)) {
        setBlendMoveAnime(lit_6041);
    }
    return true;
}

/* 800C3DA0-800C3F60 0BE6E0 01C0+00 2/2 0/0 0/0 .text            procSideStepInit__9daAlink_cFi */
bool daAlink_c::procSideStepInit(int jump_type) {
    if (jump_type == 1 && !checkHeavyStateOn(1, 1) &&
        (checkNoUpperAnime() || checkEquipAnime() || field_0x2fcc != 0 && checkUpperGuardAnime())) {
        return procBackJumpInit(0);
    } else {
        commonProcInit(HUMAN_SIDESTEP);
        field_0x2f98 = jump_type;

        if (field_0x2f98 == 1) {
            mCurrent.mAngle.y = mCollisionRot.y + 0x8000;
            setSingleAnimeParam(ANM_BACK_JUMP, &daAlinkHIO_sideStep_c0::m.mBackJumpAnm);
            mNormalSpeed = daAlinkHIO_sideStep_c0::m.mBackJumpSpeedH;
            mSpeed.y = daAlinkHIO_sideStep_c0::m.mBackJumpSpeedV;
            field_0x300a = 0;
        } else {
            daAlink_ANM anm_id;
            if (field_0x2f98 == 2) {
                anm_id = ANM_SIDE_STEP_LEFT;
                mCurrent.mAngle.y = mCollisionRot.y + 0x4000;
            } else {
                anm_id = ANM_SIDE_STEP_RIGHT;
                mCurrent.mAngle.y = mCollisionRot.y - 0x4000;
            }
            setSingleAnimeParam(anm_id, &daAlinkHIO_sideStep_c0::m.mSideJumpAnm);
            mNormalSpeed = daAlinkHIO_sideStep_c0::m.mSideJumpSpeedH;
            mSpeed.y = daAlinkHIO_sideStep_c0::m.mSideJumpSpeedV;
            field_0x300a = 1;
        }
        if (i_checkNoResetFlg0(UNDER_WATER_MOVEMENT)) {
            mNormalSpeed *= daAlinkHIO_magneBoots_c0::m.mWaterVelocityX;
            mSpeed.y *= daAlinkHIO_magneBoots_c0::m.mWaterVelocityY;
        }
        voiceStart(Z2SE_AL_V_JUMP_S);
        mCommonCounter = 0;
        field_0x300e = 0;
        return 1;
    }
}

/* 800C3F60-800C40F0 0BE8A0 0190+00 1/0 0/0 0/0 .text            procSideStep__9daAlink_cFv */
bool daAlink_c::procSideStep() {
    if (mTargetedActor != NULL && field_0x300a != 0) {
        s16 actor_angle = fopAcM_searchActorAngleY(this, mTargetedActor);
        cLib_addCalcAngleS(&mCollisionRot.y, actor_angle, 5, 0x5E8, 0x13C);
        if (field_0x2f98 == 2) {
            mCurrent.mAngle.y = mCollisionRot.y + 0x4000;
        } else {
            mCurrent.mAngle.y = mCollisionRot.y - 0x4000;
        }
    }
    if (doTrigger() && field_0x300a != 0) {
        mCommonCounter = 1;
    }

    if (checkUpperItemActionFly()) {
        return true;
    } else if (mLinkAcch.ChkGroundHit() && field_0x300e != 0) {
        if (mCommonCounter != 0 && checkSideRollAction(field_0x2f98)) {
            return true;
        } else {
            return procSideStepLandInit();
        }
    } else if (checkNoUpperAnime() && checkForceSwordSwing()) {
        setCutDash(1, 0);
    } else if (mDemo.getDemoMode() != 16 &&
               mCurrent.mPosition.y < mLastJumpPos.y - daAlinkHIO_sideStep_c0::m.mFallHeight) {
        return procFallInit(2, daAlinkHIO_sideStep_c0::m.mFallInterpolation);
    }

    field_0x300e = 1;
    checkItemChangeFromButton();
    return true;
}

/* 800C40F0-800C4278 0BEA30 0188+00 1/1 0/0 0/0 .text            procSideStepLandInit__9daAlink_cFv
 */
bool daAlink_c::procSideStepLandInit() {
    commonProcInit(HUMAN_SIDESTEP_LAND);
    if (field_0x2f98 == 1) {
        field_0x2f9d = 4;
        setSingleAnimeParam(ANM_BACK_JUMP_LAND, &daAlinkHIO_sideStep_c0::m.mBackLandAnm);
        field_0x3478 = daAlinkHIO_sideStep_c0::m.mBackLandAnm.field_0x10;
        field_0x2f98 = 2;
        field_0x300a = 0;
        field_0x2fb0 = 0;
        field_0x2fcc = 10;
    } else {
        daAlink_ANM anm_id;
        u16 uvar3;
        if (field_0x2f98 == 2) {
            anm_id = ANM_SIDE_STEP_LEFT_LAND;
            uvar3 = 0x3F;
        } else {
            anm_id = ANM_SIDE_STEP_RIGHT_LAND;
            uvar3 = 0x40;
        }
        setSingleAnimeParam(anm_id, &daAlinkHIO_sideStep_c0::m.mSideLandAnm);
        field_0x3478 = daAlinkHIO_sideStep_c0::m.mSideLandAnm.field_0x10;
        field_0x300a = 1;
        field_0x2fb0 = 8;
        field_0x2fcc = 0;
        if (checkEnemyGroup(mTargetedActor) && mEquipItem == EQUIP_SWORD && checkNoUpperAnime()) {
            setUpperAnimeBaseSpeed(uvar3, daAlinkHIO_atnMove_c0::m.mWaitAnmSpeed, lit_6041);
            seStartSwordCut(Z2SE_AL_WAIT_SWORD_SWING);
        }
    }
    field_0x2f9d = 4;
    setFootEffectProcType(2);
    i_onResetFlg1(0x30);
    mNormalSpeed = FLOAT_LABEL(lit_6108);
    mCommonCounter = 0;
    mCurrent.mAngle.y = mCollisionRot.y;
    setStepLandVibration();
    return true;
}

/* 800C4278-800C4378 0BEBB8 0100+00 1/0 0/0 0/0 .text            procSideStepLand__9daAlink_cFv */
bool daAlink_c::procSideStepLand() {
    daPy_frameCtrl_c* ctrl = &mFrameCtrl1[0];
    i_onEndResetFlg0(ERFLG0_UNK_8000000);
    if (field_0x2fcc != 0) {
        field_0x2fcc = 10;
    }

    if (doTrigger() && field_0x300a != 0) {
        mCommonCounter = 1;
    }

    if (ctrl->checkAnmEnd()) {
        if (mDemo.getDemoMode() == 16) {
            dComIfGp_evmng_cutEnd(field_0x3184);
        } else {
            checkNextAction(0);
        }
    } else if (ctrl->getFrame() > field_0x3478) {
        if (mCommonCounter != 0 && checkSideRollAction(field_0x2f98)) {
            return true;
        }
        checkNextAction(1);
    }

    return true;
}

/* 800C4378-800C4514 0BECB8 019C+00 1/1 0/0 0/0 .text            procSlideInit__9daAlink_cFs */
bool daAlink_c::procSlideInit(s16 param_0) {
    commonProcInit(HUMAN_SLIDE);

    field_0x814.SetWeight(255);
    field_0x3090 = 8;
    mCurrent.mAngle.y = param_0;

    if (getMoveBGActorName(mLinkAcch.m_gnd, 0) == 0xD4) {
        field_0x300e = 1;
    } else {
        field_0x300e = 0;
    }

    if (cLib_distanceAngleS(param_0, mCollisionRot.y) < 0x3800 || field_0x300e != 0) {
        field_0x3198 = 1;
        setSingleAnimeParam(ANM_FORWARD_SLIDE, &daAlinkHIO_slide_c0::m.mForwardSlideAnm);
        dComIfGp_setPlayerStatus1(0, 0x100);
        onModeFlg(MODE_UNK_8000);
        onModeFlg(MODE_UNK_2000000);
        onModeFlg(MODE_UNK_20000000);
        mNormalSpeed = FLOAT_LABEL(lit_6108);
        field_0x2f9d = 4;
        setUpperAnimeBaseMorf(0xCE, lit_6041);
        i_onNoResetFlg1(0x10000000);
        setFootEffectProcType(0);
    } else {
        field_0x3198 = 0;
        setSingleAnimeParam(ANM_BACKWARD_SLIDE, &daAlinkHIO_slide_c0::m.mBackwardSlideAnm);
        dComIfGp_setPlayerStatus1(0, 0x200);
        field_0x2f9d = 0x60;
        setFootEffectProcType(1);
    }
    field_0x594 = daAlinkHIO_slide_c0::m.mMaxSpeed;
    field_0x33cc = FLOAT_LABEL(lit_6108);
    mCommonCounter = 0;
    field_0x3010 = 0;
    return true;
}

/* ############################################################################################## */
/* 804532E0-804532E4 0018E0 0004+00 1/1 0/0 0/0 .sdata2          @73057 */
SECTION_SDATA2 static f32 lit_73057 = -4096.0f;

/* 800C4514-800C47AC 0BEE54 0298+00 1/0 0/0 0/0 .text            procSlide__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSlide() {
    nofralloc
#include "asm/d/a/d_a_alink/procSlide__9daAlink_cFv.s"
}
#pragma pop

/* 800C47AC-800C4894 0BF0EC 00E8+00 1/1 0/0 0/0 .text            procSlideLandInit__9daAlink_cFi */
bool daAlink_c::procSlideLandInit(int param_0) {
    commonProcInit(HUMAN_SLIDE_LAND);

    if (param_0 != 0) {
        setSingleAnimeParam(ANM_BACKWARD_SLIDE_LAND, &daAlinkHIO_slide_c0::m.mForwardLandAnm);
        field_0x3478 = daAlinkHIO_slide_c0::m.mForwardLandAnm.field_0x10;
        field_0x3198 = 1;
        field_0x2f99 = 4;
        field_0x3588 = l_waitBaseAnime;
    } else {
        setSingleAnimeParam(ANM_FORWARD_SLIDE_LAND, &daAlinkHIO_slide_c0::m.mBackwardLandAnm);
        field_0x3478 = daAlinkHIO_slide_c0::m.mBackwardLandAnm.field_0x10;
        field_0x3198 = 0;
    }
    field_0x814.SetWeight(255);
    mNormalSpeed *= lit_5943;
    return true;
}

/* 800C4894-800C494C 0BF1D4 00B8+00 1/0 0/0 0/0 .text            procSlideLand__9daAlink_cFv */
bool daAlink_c::procSlideLand() {
    daPy_frameCtrl_c* ctrl = &mFrameCtrl1[0];

    cLib_chaseF(&mNormalSpeed, FLOAT_LABEL(lit_6108), lit_7450);
    if (field_0x3198 != 0) {
        field_0x2f99 = 4;
    }

    if (ctrl->checkAnmEnd()) {
        mCurrent.mAngle.y = mCollisionRot.y;
        checkNextAction(0);
    } else {
        if (ctrl->getFrame() > field_0x3478) {
            s16 tmp_angle = mCurrent.mAngle.y;
            mCurrent.mAngle.y = mCollisionRot.y;
            if (!checkNextAction(1)) {
                mCurrent.mAngle.y = tmp_angle;
            }
        }
    }
    return true;
}

/* 800C494C-800C4B40 0BF28C 01F4+00 4/3 0/0 0/0 .text            procFrontRollInit__9daAlink_cFv */
#ifdef NONMATCHING
bool daAlink_c::procFrontRollInit() {
    BOOL check = checkUpperGuardAnime();
    if (mActionID == FRONT_ROLL && mDemo.getDemoMode() == 0x28) {
        return 0;
    } else {
        BOOL check = mActionID == 0x16;
        commonProcInit(FRONT_ROLL);

        f32 fvar1;
        if (!check) {
            fvar1 = daAlinkHIO_frontRoll_c0::m.mRollAnm.field_0x04;
        } else {
            fvar1 = lit_7977;
        }
        setSingleAnime(ANM_FRONT_ROLL, daAlinkHIO_frontRoll_c0::m.mRollAnm.field_0x04, fvar1,
                       daAlinkHIO_frontRoll_c0::m.mRollAnm.field_0x00,
                       daAlinkHIO_frontRoll_c0::m.mRollAnm.field_0x0c);
        mNormalSpeed =
            mSpeedF * daAlinkHIO_frontRoll_c0::m.mInitSpeed + daAlinkHIO_frontRoll_c0::m.mSpeedRate;
        if (mNormalSpeed > daAlinkHIO_frontRoll_c0::m.mCrashHitAnm.field_0x08) {
            mNormalSpeed = daAlinkHIO_frontRoll_c0::m.mCrashHitAnm.field_0x08;
        }
        if (mNormalSpeed < daAlinkHIO_frontRoll_c0::m.mMinSpeed) {
            mNormalSpeed = daAlinkHIO_frontRoll_c0::m.mMinSpeed;
        }

        if (!i_checkNoResetFlg0(UNDER_WATER_MOVEMENT)) {
            if (checkHeavyStateOn(1, 1)) {
                mNormalSpeed *= mHeavySpeedMultiplier;
            }
        } else {
            mNormalSpeed *= daAlinkHIO_magneBoots_c0::m.mWaterVelocityX;
        }
        mCurrent.mAngle.y = mCollisionRot.y;
        voiceStart(Z2SE_AL_V_BACKTEN);
        mCommonCounter = 0;
        setFootEffectProcType(0);
        if (check) {
            i_onNoResetFlg0(2);
        }
        if (i_checkEquipHeavyBoots()) {
            field_0xFB8.SetAtType(0x200000);
            field_0xFB8.SetAtHitMark(1);
            field_0xFB8.SetAtSe(9);
            field_0xFB8.SetAtAtp(2);
            field_0xFB8.SetAtMtrl(0);
            field_0xFB8.ResetAtHit();
            field_0xFB8.SetR(daAlinkHIO_frontRoll_c0::m.mBootsAttackRadius);
            field_0xFB8.OnAtSetBit();
        }
        return true;
    }
}
#else
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm bool daAlink_c::procFrontRollInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procFrontRollInit__9daAlink_cFv.s"
}
#pragma pop
#endif

/* 800C4B40-800C4F14 0BF480 03D4+00 1/0 0/0 0/0 .text            procFrontRoll__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procFrontRoll() {
    nofralloc
#include "asm/d/a/d_a_alink/procFrontRoll__9daAlink_cFv.s"
}
#pragma pop

/* 800C4F14-800C4FFC 0BF854 00E8+00 1/1 0/0 0/0 .text procFrontRollCrashInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procFrontRollCrashInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procFrontRollCrashInit__9daAlink_cFv.s"
}
#pragma pop

/* 800C4FFC-800C5160 0BF93C 0164+00 1/0 0/0 0/0 .text            procFrontRollCrash__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procFrontRollCrash() {
    nofralloc
#include "asm/d/a/d_a_alink/procFrontRollCrash__9daAlink_cFv.s"
}
#pragma pop

/* 800C5160-800C5240 0BFAA0 00E0+00 3/3 0/0 0/0 .text procFrontRollSuccessInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procFrontRollSuccessInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procFrontRollSuccessInit__9daAlink_cFv.s"
}
#pragma pop

/* 800C5240-800C5328 0BFB80 00E8+00 1/0 0/0 0/0 .text            procFrontRollSuccess__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procFrontRollSuccess() {
    nofralloc
#include "asm/d/a/d_a_alink/procFrontRollSuccess__9daAlink_cFv.s"
}
#pragma pop

/* 800C5328-800C5484 0BFC68 015C+00 3/3 0/0 0/0 .text            procSideRollInit__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm bool daAlink_c::procSideRollInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procSideRollInit__9daAlink_cFi.s"
}
#pragma pop

/* 800C5484-800C5700 0BFDC4 027C+00 1/0 0/0 0/0 .text            procSideRoll__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSideRoll() {
    nofralloc
#include "asm/d/a/d_a_alink/procSideRoll__9daAlink_cFv.s"
}
#pragma pop

/* 800C5700-800C57A4 0C0040 00A4+00 2/2 0/0 0/0 .text            backJumpSpeedDec__9daAlink_cFv */
void daAlink_c::backJumpSpeedDec() {
    if (mLinkAcch.ChkGroundHit()) {
        if (dComIfG_Bgsp().ChkPolySafe(mLinkAcch.m_gnd)) {
            f32 jump_speed;
            if (dBgS_CheckBWallPoly(mLinkAcch.m_gnd)) {
                jump_speed = FLOAT_LABEL(lit_6108);
            } else {
                jump_speed = field_0x3478 * cM_scos(field_0x2ff0);
                if (field_0x2ff0 > 0) {
                    jump_speed *= cM_scos(field_0x2ff0);
                }
            }

            if (mNormalSpeed > jump_speed) {
                mNormalSpeed = jump_speed;
            }
        }
    }
}

/* 800C57A4-800C5964 0C00E4 01C0+00 6/6 0/0 0/0 .text            procBackJumpInit__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm bool daAlink_c::procBackJumpInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procBackJumpInit__9daAlink_cFi.s"
}
#pragma pop

/* 800C5964-800C5A54 0C02A4 00F0+00 1/0 0/0 0/0 .text            procBackJump__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procBackJump() {
    nofralloc
#include "asm/d/a/d_a_alink/procBackJump__9daAlink_cFv.s"
}
#pragma pop

/* 800C5A54-800C5AF0 0C0394 009C+00 1/1 0/0 0/0 .text            procBackJumpLandInit__9daAlink_cFi
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procBackJumpLandInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procBackJumpLandInit__9daAlink_cFi.s"
}
#pragma pop

/* 800C5AF0-800C5C28 0C0430 0138+00 1/0 0/0 0/0 .text            procBackJumpLand__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procBackJumpLand() {
    nofralloc
#include "asm/d/a/d_a_alink/procBackJumpLand__9daAlink_cFv.s"
}
#pragma pop

/* 800C5C28-800C5CA4 0C0568 007C+00 1/1 0/0 0/0 .text            procSlipInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSlipInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procSlipInit__9daAlink_cFv.s"
}
#pragma pop

/* 800C5CA4-800C5E68 0C05E4 01C4+00 1/0 0/0 0/0 .text            procSlip__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSlip() {
    nofralloc
#include "asm/d/a/d_a_alink/procSlip__9daAlink_cFv.s"
}
#pragma pop

/* 800C5E68-800C61EC 0C07A8 0384+00 4/4 0/0 0/0 .text            procAutoJumpInit__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procAutoJumpInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procAutoJumpInit__9daAlink_cFi.s"
}
#pragma pop

/* ############################################################################################## */
/* 804532E4-804532E8 0018E4 0004+00 1/1 0/0 0/0 .sdata2          @73781 */
SECTION_SDATA2 static f32 lit_73781 = 2.0f / 3.0f;

/* 800C61EC-800C66DC 0C0B2C 04F0+00 1/0 0/0 0/0 .text            procAutoJump__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procAutoJump() {
    nofralloc
#include "asm/d/a/d_a_alink/procAutoJump__9daAlink_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 804532E8-804532EC 0018E8 0004+00 1/1 0/0 0/0 .sdata2          @73790 */
SECTION_SDATA2 static f32 lit_73790 = 92.0f;

/* 800C66DC-800C6798 0C101C 00BC+00 1/1 0/0 0/0 .text            procDiveJumpInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procDiveJumpInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procDiveJumpInit__9daAlink_cFv.s"
}
#pragma pop

/* 800C6798-800C6850 0C10D8 00B8+00 1/0 0/0 0/0 .text            procDiveJump__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procDiveJump() {
    nofralloc
#include "asm/d/a/d_a_alink/procDiveJump__9daAlink_cFv.s"
}
#pragma pop

/* 800C6850-800C692C 0C1190 00DC+00 1/1 0/0 0/0 .text            procRollJumpInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procRollJumpInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procRollJumpInit__9daAlink_cFv.s"
}
#pragma pop

/* 800C692C-800C6A48 0C126C 011C+00 1/0 0/0 0/0 .text            procRollJump__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procRollJump() {
    nofralloc
#include "asm/d/a/d_a_alink/procRollJump__9daAlink_cFv.s"
}
#pragma pop

/* 800C6A48-800C6D20 0C1388 02D8+00 30/30 0/0 0/0 .text            procFallInit__9daAlink_cFif */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm bool daAlink_c::procFallInit(int param_0, f32 param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/procFallInit__9daAlink_cFif.s"
}
#pragma pop

/* 800C6D20-800C6F18 0C1660 01F8+00 1/0 0/0 0/0 .text            procFall__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procFall() {
    nofralloc
#include "asm/d/a/d_a_alink/procFall__9daAlink_cFv.s"
}
#pragma pop

/* 800C6F18-800C6FE4 0C1858 00CC+00 6/6 0/0 0/0 .text            procLandInit__9daAlink_cFf */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procLandInit(f32 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procLandInit__9daAlink_cFf.s"
}
#pragma pop

/* 800C6FE4-800C70F8 0C1924 0114+00 1/0 0/0 0/0 .text            procLand__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procLand() {
    nofralloc
#include "asm/d/a/d_a_alink/procLand__9daAlink_cFv.s"
}
#pragma pop

/* 800C70F8-800C72D4 0C1A38 01DC+00 3/3 0/0 0/0 .text            procSmallJumpInit__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSmallJumpInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procSmallJumpInit__9daAlink_cFi.s"
}
#pragma pop

/* 800C72D4-800C74D4 0C1C14 0200+00 1/0 0/0 0/0 .text            procSmallJump__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSmallJump() {
    nofralloc
#include "asm/d/a/d_a_alink/procSmallJump__9daAlink_cFv.s"
}
#pragma pop

/* 800C74D4-800C755C 0C1E14 0088+00 1/1 0/0 0/0 .text            procStepMoveInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procStepMoveInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procStepMoveInit__9daAlink_cFv.s"
}
#pragma pop

/* 800C755C-800C7690 0C1E9C 0134+00 1/0 0/0 0/0 .text            procStepMove__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procStepMove() {
    nofralloc
#include "asm/d/a/d_a_alink/procStepMove__9daAlink_cFv.s"
}
#pragma pop

/* 800C7690-800C76F8 0C1FD0 0068+00 1/0 0/0 0/0 .text            procCrouchInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCrouchInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCrouchInit__9daAlink_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 804532EC-804532F0 0018EC 0004+00 1/1 0/0 0/0 .sdata2          @74138 */
SECTION_SDATA2 static f32 lit_74138 = -80.0f;

/* 800C76F8-800C77F4 0C2038 00FC+00 1/0 0/0 0/0 .text            procCrouch__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCrouch() {
    nofralloc
#include "asm/d/a/d_a_alink/procCrouch__9daAlink_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 804255F8-80425604 052318 000C+00 0/1 0/0 0/0 .bss             @4419 */
#pragma push
#pragma force_active on
static u8 lit_4419[12];
#pragma pop

/* 80425604-80425610 052324 000C+00 0/1 0/0 0/0 .bss             l_sumouBaseAnimeSp */
#pragma push
#pragma force_active on
static u8 l_sumouBaseAnimeSp[12];
#pragma pop

/* 80425610-8042561C 052330 000C+00 0/1 0/0 0/0 .bss             @4420 */
#pragma push
#pragma force_active on
static u8 lit_4420[12];
#pragma pop

/* 8042561C-80425628 05233C 000C+00 37/39 0/0 0/0 .bss             l_wolfBaseAnime */
static Vec l_wolfBaseAnime;

inline dEvt_control_c& i_dComIfGp_getEvent() {
    return g_dComIfG_gameInfo.play.getEvent();
}

bool daMidna_c::checkMidnaRealBody() {
    return dKy_darkworld_check() == 1 || dComIfGs_isTransformLV(3);
}

/* 800C77F4-800C7C64 0C2134 0470+00 4/2 0/0 0/0 .text procCoMetamorphoseInit__9daAlink_cFv */
// 1 missing instruction, lots of regalloc. maybe related
#ifdef NONMATCHING
bool daAlink_c::procCoMetamorphoseInit() {
    int svar8 = 0;

    if (i_dComIfGp_getEvent().i_isOrderOK()) {
        if (!dComIfGp_event_compulsory(this, NULL, 0xFFFF)) {
            return 0;
        }
        mDemo.i_setSpecialDemoType();
        mDamageTimer = 0;
        svar8 = 1;
    }

    if (!commonProcInitNotSameProc(METAMORPHOSE)) {
        return 1;
    }

    field_0x3198 = svar8;
    field_0x3008 = 0;
    field_0x300e = 0;
    field_0x3010 = 0;
    field_0x347c = 1.0f;
    mFallVoiceInit = 0;

    if ((i_checkWolf() && mDemo.getDemoMode() == 0x39) ||
        (!i_checkWolf() && mDemo.getDemoMode() == 0x3A)) {
        field_0x300a = 1;
        mSpeed.y = 0.0f;
        mNormalSpeed = 0.0f;
        if (i_checkWolf()) {
            mCommonCounter = mCollisionRot.x;
        }
    } else {
        deleteEquipItem(0, 1);

        if (i_checkEndResetFlg0(ERFLG0_UNK_2) && checkStageName("D_MN08")) {
            field_0x3010 = 1;
        }
        field_0x300a = 0;

        if (i_checkWolf()) {
            // Transform Wolf -> Human
            setSingleAnimeWolfBase(ANM_TRANFORM_HUMAN);
            field_0x3588 = l_wolfBaseAnime;
            field_0x347c = 0.5f;
            field_0x3480 = daAlinkHIO_basic_c0::m.mWolfLinkTransformSpeed;
            mCommonCounter = mCollisionRot.x;

            daMidna_c* midna = getMidnaActor();
            if (i_checkMidnaRide() && midna->checkMidnaRealBody() && midna->checkDemoTypeNone()) {
                midna->changeOriginalDemo();
                midna->changeDemoMode(15);
            }
        } else {
            // Transform Human -> Wolf
            if (mDemo.getDemoMode() == 0x39 && mDemo.getParam1() == 1) {
                voiceStart(Z2SE_AL_V_TRANSFORM);
            }
            setSingleAnimeBase(ANM_TRANSFORM_WOLF);
            setMetamorphoseModel(1);
            field_0x3588 = l_waitBaseAnime;
            field_0x3480 = daAlinkHIO_basic_c0::m.mLinkWolfTransformSpeed;

            cXyz pos(mCurrent.mPosition.x + (cM_ssin(mCollisionRot.y) * 100.0f),
                     mCurrent.mPosition.y + 300.0f,
                     mCurrent.mPosition.z + (cM_scos(mCollisionRot.y) * 100.0f));
            mLinkGndChk.SetPos(&pos);

            f32 gnd_cross = dComIfG_Bgsp().GroundCross(&mLinkGndChk);
            if (gnd_cross != -1000000000.0f) {
                pos.y = -1000000000.0f;
                cXyz tmp_4c = mCurrent.mPosition;
                cXyz tmp_58 = pos;
                BOOL check = false;
                for (int i = 0; i < 4; i++) {
                    if (i == 3) {
                        tmp_4c.y = gnd_cross + 5.0f;
                    } else {
                        tmp_4c.y = mCurrent.mPosition.y + field_0x18B0[i].GetWallH();
                    }
                    tmp_58.y = tmp_4c.y;

                    if (commonLineCheck(&tmp_4c, &tmp_58) && dBgS_CheckBWallPoly(mLinkLinChk)) {
                        if (dComIfG_Bgsp().GetWallCode(mLinkLinChk) != 7) {
                            check = true;
                            break;
                        }
                    }
                }

                if (check) {
                    mCommonCounter = field_0x2ff0;
                } else {
                    pos -= mCurrent.mPosition;
                    pos.atan2sY_XZ();
                    mCommonCounter = svar8;

                    if (cM_deg2s(70.0f) < abs(mCommonCounter)) {
                        mCommonCounter = field_0x2ff0;
                    }
                }
            } else {
                mCommonCounter = 0;
            }
        }
        mSpeed.y = 0.0f;
        mNormalSpeed = 0.0f;
        field_0x3012 = 0;
    }

    field_0x3484 = mCurrent.mPosition.y;
    return 1;
}
#else
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm bool daAlink_c::procCoMetamorphoseInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoMetamorphoseInit__9daAlink_cFv.s"
}
#pragma pop
#endif

/* ############################################################################################## */
/* 80392070-8039207C 01E6D0 000C+00 0/1 0/0 0/0 .rodata          @74273 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const lit_74273[12] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80392070, &lit_74273);
#pragma pop

/* 804532F0-804532F4 0018F0 0004+00 1/1 0/0 0/0 .sdata2          @74385 */
SECTION_SDATA2 static f32 lit_74385 = 1.0f / 26.0f;

/* 804532F4-804532F8 0018F4 0004+00 1/1 0/0 0/0 .sdata2          @74386 */
SECTION_SDATA2 static f32 lit_74386 = -64.0f;

/* 804532F8-80453300 0018F8 0008+00 1/1 0/0 0/0 .sdata2          @74387 */
SECTION_SDATA2 static f64 lit_74387 = 15.0;

/* 80453300-80453308 001900 0008+00 1/1 0/0 0/0 .sdata2          @74388 */
SECTION_SDATA2 static f64 lit_74388 = 49.0;

/* 80453308-80453310 001908 0008+00 1/1 0/0 0/0 .sdata2          @74389 */
SECTION_SDATA2 static f64 lit_74389 = 1.0;

/* 80453310-80453318 001910 0008+00 1/1 0/0 0/0 .sdata2          @74390 */
SECTION_SDATA2 static f64 lit_74390 = 1.0 / 14.0;

/* 80453318-80453320 001918 0008+00 1/1 0/0 0/0 .sdata2          @74391 */
SECTION_SDATA2 static f64 lit_74391 = -64.0;

/* 80453320-80453328 001920 0008+00 1/1 0/0 0/0 .sdata2          @74392 */
SECTION_SDATA2 static f64 lit_74392 = -15.0;

/* 80453328-80453330 001928 0008+00 1/1 0/0 0/0 .sdata2          @74393 */
SECTION_SDATA2 static f64 lit_74393 = 1.0 / 9.0;

/* 80453330-80453334 001930 0004+00 1/1 0/0 0/0 .sdata2          @74394 */
SECTION_SDATA2 static f32 lit_74394 = 49.0f;

/* 80453334-80453338 001934 0004+00 1/1 0/0 0/0 .sdata2          @74395 */
SECTION_SDATA2 static f32 lit_74395 = 1.0f / 36.0f;

/* 800C7C64-800C82E8 0C25A4 0684+00 1/0 0/0 0/0 .text            procCoMetamorphose__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoMetamorphose() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoMetamorphose__9daAlink_cFv.s"
}
#pragma pop

/* 800C82E8-800C83A0 0C2C28 00B8+00 2/0 0/0 0/0 .text procCoMetamorphoseOnlyInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoMetamorphoseOnlyInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoMetamorphoseOnlyInit__9daAlink_cFv.s"
}
#pragma pop

/* 800C83A0-800C8460 0C2CE0 00C0+00 1/0 0/0 0/0 .text procCoMetamorphoseOnly__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoMetamorphoseOnly() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoMetamorphoseOnly__9daAlink_cFv.s"
}
#pragma pop

/* 800C8460-800C84D0 0C2DA0 0070+00 2/2 0/0 0/0 .text procFloorDownReboundInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm BOOL daAlink_c::procFloorDownReboundInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procFloorDownReboundInit__9daAlink_cFv.s"
}
#pragma pop

/* 800C84D0-800C854C 0C2E10 007C+00 1/0 0/0 0/0 .text            procFloorDownRebound__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procFloorDownRebound() {
    nofralloc
#include "asm/d/a/d_a_alink/procFloorDownRebound__9daAlink_cFv.s"
}
#pragma pop

/* 800C854C-800C85D8 0C2E8C 008C+00 1/1 0/0 0/0 .text
 * procGoronRideWaitInit__9daAlink_cFP10fopAc_ac_c              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procGoronRideWaitInit(fopAc_ac_c* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procGoronRideWaitInit__9daAlink_cFP10fopAc_ac_c.s"
}
#pragma pop

/* 800C85D8-800C8700 0C2F18 0128+00 1/0 0/0 0/0 .text            procGoronRideWait__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procGoronRideWait() {
    nofralloc
#include "asm/d/a/d_a_alink/procGoronRideWait__9daAlink_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 8039207C-80392088 01E6DC 000C+00 0/1 0/0 0/0 .rodata          @74748 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const lit_74748[12] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x8039207C, &lit_74748);
#pragma pop

/* 80392088-80392094 01E6E8 000C+00 0/1 0/0 0/0 .rodata          localBoomCatchPos$74910 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const localBoomCatchPos[12] = {
    0x41, 0x95, 0x99, 0x9A, 0x43, 0x12, 0x4C, 0xCD, 0x42, 0x8A, 0x66, 0x66,
};
COMPILER_STRIP_GATE(0x80392088, &localBoomCatchPos);
#pragma pop

/* 80392094-80392094 01E6F4 0000+00 0/0 0/0 0/0 .rodata          @stringBase0 */
#pragma push
#pragma force_active on
SECTION_DEAD static char const* const stringBase_803925D1 = "Alink";
SECTION_DEAD static char const* const stringBase_803925D7 = "kiko_yami";
SECTION_DEAD static char const* const stringBase_803925E1 = "fire_insect";
SECTION_DEAD static char const* const stringBase_803925ED = "MapToolCamera19";
SECTION_DEAD static char const* const stringBase_803925FD = "yami_mog";
SECTION_DEAD static char const* const stringBase_80392606 = "R_SP109";
SECTION_DEAD static char const* const stringBase_8039260E = "MapToolCamera1";
SECTION_DEAD static char const* const stringBase_8039261D = "MapToolCamera2";
SECTION_DEAD static char const* const stringBase_8039262C = "MapToolCamera23";
/* @stringBase0 padding */
SECTION_DEAD static char const* const pad_8039263C = "\0\0\0";
#pragma pop

/* 800C8700-800CAFA8 0C3040 28A8+00 1/1 0/0 0/0 .text            execute__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::execute() {
    nofralloc
#include "asm/d/a/d_a_alink/execute__9daAlink_cFv.s"
}
#pragma pop

/* 800CAFA8-800CAFC8 0C58E8 0020+00 1/0 0/0 0/0 .text            daAlink_Execute__FP9daAlink_c */
static void daAlink_Execute(daAlink_c* pLinkPtr) {
    pLinkPtr->execute();
}

/* 800CAFC8-800CB480 0C5908 04B8+00 2/2 0/0 0/0 .text            setDrawHand__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setDrawHand() {
    nofralloc
#include "asm/d/a/d_a_alink/setDrawHand__9daAlink_cFv.s"
}
#pragma pop

BOOL daPy_py_c::i_checkSwordGet() {
    return dComIfGs_getSelectEquipSword() != 0xFF;
}

/* 800CB480-800CB53C 0C5DC0 00BC+00 3/3 0/0 0/0 .text            checkSwordDraw__9daAlink_cFv */
bool daAlink_c::checkSwordDraw() {
    return ((i_checkSwordGet() && mSwordChangeWaitTimer == 0) &&
            !i_checkNoResetFlg2(FLG2_UNK_2080000)) &&
           (!i_checkWolf() || !i_dComIfGs_isEventBit(0x0C08));
}

bool daPy_py_c::i_checkShieldGet() const {
    return dComIfGs_getSelectEquipShield() != NO_ITEM;
}

/* 800CB53C-800CB5F8 0C5E7C 00BC+00 3/3 0/0 0/0 .text            checkShieldDraw__9daAlink_cFv */
bool daAlink_c::checkShieldDraw() {
    return ((i_checkShieldGet() && mShieldChangeWaitTimer == 0) &&
            !i_checkNoResetFlg2(FLG2_UNK_4080000)) &&
           (!i_checkWolf() || !i_dComIfGs_isEventBit(0x0C08));
}

/* 800CB5F8-800CB694 0C5F38 009C+00 2/2 0/0 0/0 .text            checkItemDraw__9daAlink_cFv */
bool daAlink_c::checkItemDraw() {
    if (mHeldItemModel != NULL && (mEquipItem != IRONBALL || !checkSwordEquipAnime())) {
        if (!checkBowAndSlingItem(mEquipItem) || checkBowGrabLeftHand() || !i_checkShieldGet() ||
            field_0x2e44.checkPassNum(15)) {
            return true;
        }
    }
    return false;
}

/* 800CB694-800CBA38 0C5FD4 03A4+00 0/0 0/0 1/1 .text            initShadowScaleLight__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::initShadowScaleLight() {
    nofralloc
#include "asm/d/a/d_a_alink/initShadowScaleLight__9daAlink_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 80453338-8045333C 001938 0004+00 1/1 0/0 0/0 .sdata2          @75939 */
SECTION_SDATA2 static f32 lit_75939 = 50000.0f;

/* 800CBA38-800CBC18 0C6378 01E0+00 0/0 0/0 1/1 .text            moveShadowScaleLight__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::moveShadowScaleLight() {
    nofralloc
#include "asm/d/a/d_a_alink/moveShadowScaleLight__9daAlink_cFv.s"
}
#pragma pop

/* 800CBC18-800CC25C 0C6558 0644+00 1/1 0/0 0/0 .text            shadowDraw__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::shadowDraw() {
    nofralloc
#include "asm/d/a/d_a_alink/shadowDraw__9daAlink_cFv.s"
}
#pragma pop

/* 800CC25C-800CC298 0C6B9C 003C+00 3/3 0/0 0/0 .text            modelCalc__9daAlink_cFP8J3DModel */
void daAlink_c::modelCalc(J3DModel* p_model) {
    if (mClothesChangeWaitTimer == 0) {
        p_model->calc();
    }
}

/* 800CC298-800CC2E0 0C6BD8 0048+00 2/2 0/0 0/0 .text basicModelDraw__9daAlink_cFP8J3DModel */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::basicModelDraw(J3DModel* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/basicModelDraw__9daAlink_cFP8J3DModel.s"
}
#pragma pop

/* 800CC2E0-800CC364 0C6C20 0084+00 1/1 0/0 0/0 .text            modelDraw__9daAlink_cFP8J3DModeli
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::modelDraw(J3DModel* param_0, int param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/modelDraw__9daAlink_cFP8J3DModeli.s"
}
#pragma pop

/* ############################################################################################## */
/* 8045333C-80453344 00193C 0008+00 1/1 0/0 0/0 .sdata2          notColor0$76211 */
SECTION_SDATA2 static u8 notColor0[8] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF,
};

/* 800CC364-800CC7DC 0C6CA4 0478+00 2/2 0/0 0/0 .text
 * setWaterDropColor__9daAlink_cFPC13J3DGXColorS10              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setWaterDropColor(J3DGXColorS10 const* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setWaterDropColor__9daAlink_cFPC13J3DGXColorS10.s"
}
#pragma pop

/* 800CC7DC-800CC7FC 0C711C 0020+00 2/2 0/0 0/0 .text            initTevCustomColor__9daAlink_cFv */
void daAlink_c::initTevCustomColor() {
    mTevStr.field_0x367 = 0;
    mTevStr.field_0x358 = 0;
    mTevStr.field_0x35a = 0;
    mTevStr.field_0x35c = 0;
    mTevStr.field_0x360 = 0;
    mTevStr.field_0x362 = 0;
}

/* 800CC7FC-800CD78C 0C713C 0F90+00 1/1 0/0 0/0 .text            draw__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::draw() {
    nofralloc
#include "asm/d/a/d_a_alink/draw__9daAlink_cFv.s"
}
#pragma pop

/* 800CD78C-800CD7AC 0C80CC 0020+00 1/0 0/0 0/0 .text            daAlink_Draw__FP9daAlink_c */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void daAlink_Draw(daAlink_c* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/daAlink_Draw__FP9daAlink_c.s"
}
#pragma pop

/* ############################################################################################## */
/* 803B3580-803B3590 0106A0 0010+00 3/3 0/0 0/0 .data            __vt__15daAlink_sight_c */
SECTION_DATA extern void* __vt__15daAlink_sight_c[4] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)draw__15daAlink_sight_cFv,
    (void*)__dt__15daAlink_sight_cFv,
};

/* 803B3590-803B35A0 0106B0 0010+00 4/4 0/0 0/0 .data            __vt__20daAlink_lockCursor_c */
SECTION_DATA extern void* __vt__20daAlink_lockCursor_c[4] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)draw__20daAlink_lockCursor_cFv,
    (void*)__dt__20daAlink_lockCursor_cFv,
};

/* 803B35A0-803B35B4 0106C0 0014+00 3/3 0/0 0/0 .data            __vt__14daAlink_blur_c */
SECTION_DATA extern void* __vt__14daAlink_blur_c[5] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)entry__9J3DPacketFP13J3DDrawBuffer,
    (void*)draw__14daAlink_blur_cFv,
    (void*)__dt__14daAlink_blur_cFv,
};

/* 803B35B4-803B35C8 0106D4 0014+00 3/3 0/0 0/0 .data __vt__29dAlink_bottleWaterPcallBack_c */
SECTION_DATA extern void* __vt__29dAlink_bottleWaterPcallBack_c[5] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__29dAlink_bottleWaterPcallBack_cFv,
    (void*)execute__29dAlink_bottleWaterPcallBack_cFP14JPABaseEmitterP15JPABaseParticle,
    (void*)draw__19JPAParticleCallBackFP14JPABaseEmitterP15JPABaseParticle,
};

/* 800CD7AC-800CE208 0C80EC 0A5C+00 1/1 0/0 0/0 .text            __dt__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm daAlink_c::~daAlink_c() {
    nofralloc
#include "asm/d/a/d_a_alink/__dt__9daAlink_cFv.s"
}
#pragma pop

/* 800CE208-800CE294 0C8B48 008C+00 1/0 0/0 0/0 .text            daAlink_Delete__FP9daAlink_c */
// destructor issue
#ifdef NONMATCHING
static bool daAlink_Delete(daAlink_c* p_link) {
    if (p_link->getClothesChangeWaitTimer() != 0) {
        p_link->loadModelDVD();
        return false;
    } else if (p_link->getShieldChangeWaitTimer() != 0) {
        p_link->loadShieldModelDVD();
        return false;
    } else {
        delete p_link;
        return true;
    }
}
#else
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm bool daAlink_Delete(daAlink_c* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/daAlink_Delete__FP9daAlink_c.s"
}
#pragma pop
#endif

/* 800CE294-800CE468 0C8BD4 01D4+00 1/1 0/0 0/0 .text checkNoSubjectModeCamera__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkNoSubjectModeCamera() {
    nofralloc
#include "asm/d/a/d_a_alink/checkNoSubjectModeCamera__9daAlink_cFv.s"
}
#pragma pop

/* 800CE468-800CE628 0C8DA8 01C0+00 2/2 0/0 0/0 .text acceptSubjectModeChange__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::acceptSubjectModeChange() {
    nofralloc
#include "asm/d/a/d_a_alink/acceptSubjectModeChange__9daAlink_cFv.s"
}
#pragma pop

/* 800CE628-800CE728 0C8F68 0100+00 5/5 0/0 0/0 .text            checkSubjectAction__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkSubjectAction() {
    nofralloc
#include "asm/d/a/d_a_alink/checkSubjectAction__9daAlink_cFv.s"
}
#pragma pop

/* 800CE728-800CE8A0 0C9068 0178+00 1/1 0/0 0/0 .text            checkBodyAngleX__9daAlink_cFs */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkBodyAngleX(s16 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkBodyAngleX__9daAlink_cFs.s"
}
#pragma pop

/* 800CE8A0-800CEAF4 0C91E0 0254+00 15/15 0/0 0/0 .text setBodyAngleToCamera__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setBodyAngleToCamera() {
    nofralloc
#include "asm/d/a/d_a_alink/setBodyAngleToCamera__9daAlink_cFv.s"
}
#pragma pop

/* 800CEAF4-800CEB58 0C9434 0064+00 9/9 0/0 0/0 .text            setSubjectMode__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSubjectMode() {
    nofralloc
#include "asm/d/a/d_a_alink/setSubjectMode__9daAlink_cFv.s"
}
#pragma pop

/* 800CEB58-800CEBD8 0C9498 0080+00 2/2 0/0 0/0 .text            subjectCancelTrigger__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::subjectCancelTrigger() {
    nofralloc
#include "asm/d/a/d_a_alink/subjectCancelTrigger__9daAlink_cFv.s"
}
#pragma pop

/* 800CEBD8-800CECE4 0C9518 010C+00 9/9 0/0 0/0 .text            checkSubjectEnd__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkSubjectEnd(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkSubjectEnd__9daAlink_cFi.s"
}
#pragma pop

/* 800CECE4-800CED48 0C9624 0064+00 1/1 0/0 0/0 .text searchPeepObj__9daAlink_cFP10fopAc_ac_cPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::searchPeepObj(fopAc_ac_c* param_0, void* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/searchPeepObj__9daAlink_cFP10fopAc_ac_cPv.s"
}
#pragma pop

/* 800CED48-800CED84 0C9688 003C+00 1/1 0/0 0/0 .text daAlink_searchPeepObj__FP10fopAc_ac_cPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void daAlink_searchPeepObj(fopAc_ac_c* param_0, void* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/daAlink_searchPeepObj__FP10fopAc_ac_cPv.s"
}
#pragma pop

/* 800CED84-800CEE08 0C96C4 0084+00 2/2 0/0 0/0 .text procCoSubjectivityInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoSubjectivityInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoSubjectivityInit__9daAlink_cFv.s"
}
#pragma pop

/* 800CEE08-800CEF70 0C9748 0168+00 1/0 0/0 0/0 .text            procCoSubjectivity__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoSubjectivity() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoSubjectivity__9daAlink_cFv.s"
}
#pragma pop

/* 800CEF70-800CF018 0C98B0 00A8+00 1/1 0/0 0/0 .text procCoSwimSubjectivityInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoSwimSubjectivityInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoSwimSubjectivityInit__9daAlink_cFv.s"
}
#pragma pop

/* 800CF018-800CF100 0C9958 00E8+00 1/0 0/0 0/0 .text procCoSwimSubjectivity__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoSwimSubjectivity() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoSwimSubjectivity__9daAlink_cFv.s"
}
#pragma pop

/* 800CF100-800CF1B8 0C9A40 00B8+00 1/1 0/0 0/0 .text procCoPeepSubjectivityInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoPeepSubjectivityInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoPeepSubjectivityInit__9daAlink_cFv.s"
}
#pragma pop

/* 800CF1B8-800CF25C 0C9AF8 00A4+00 1/0 0/0 0/0 .text procCoPeepSubjectivity__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoPeepSubjectivity() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoPeepSubjectivity__9daAlink_cFv.s"
}
#pragma pop

/* 800CF25C-800CF270 0C9B9C 0014+00 1/0 0/0 0/0 .text            checkBoardRide__9daAlink_cCFv */
u32 daAlink_c::checkBoardRide() const {
    return mRideStatus == 4;
}

/* 800CF270-800CF284 0C9BB0 0014+00 1/0 0/0 0/0 .text            checkCanoeRide__9daAlink_cCFv */
u32 daAlink_c::checkCanoeRide() const {
    return mRideStatus == 3;
}

/* 800CF284-800CF298 0C9BC4 0014+00 1/0 0/0 0/0 .text            checkHorseRide__9daAlink_cCFv */
u32 daAlink_c::checkHorseRide() const {
    return mRideStatus == 1;
}

/* 800CF298-800CF2B4 0C9BD8 001C+00 1/0 0/0 0/0 .text            getLeftItemMatrix__9daAlink_cFv */
MtxP daAlink_c::getLeftItemMatrix() {
    return field_0x0650->i_getAnmMtx(field_0x30c0);
}

/* 800CF2B4-800CF2C8 0C9BF4 0014+00 1/0 0/0 0/0 .text            checkBoarRide__9daAlink_cCFv */
u32 daAlink_c::checkBoarRide() const {
    return mRideStatus == 2;
}

/* 800CF2C8-800CF2DC 0C9C08 0014+00 1/0 0/0 0/0 .text            checkSpinnerRide__9daAlink_cCFv */
u32 daAlink_c::checkSpinnerRide() const {
    return mRideStatus == 5;
}

/* 800CF2DC-800CF2F8 0C9C1C 001C+00 1/0 0/0 0/0 .text            getLeftHandMatrix__9daAlink_cFv */
MtxP daAlink_c::getLeftHandMatrix() {
    return field_0x0650->i_getAnmMtx(field_0x30b8);
}

/* 800CF2F8-800CF314 0C9C38 001C+00 1/0 0/0 0/0 .text            getRightHandMatrix__9daAlink_cFv */
MtxP daAlink_c::getRightHandMatrix() {
    return field_0x0650->i_getAnmMtx(field_0x30ba);
}

/* 800CF314-800CF328 0C9C54 0014+00 1/0 0/0 0/0 .text
 * onSceneChangeArea__9daAlink_cFUcUcP10fopAc_ac_c              */
void daAlink_c::onSceneChangeArea(u8 param_0, u8 param_1, fopAc_ac_c* param_2) {
    field_0x3112 = param_0;
    field_0x2fac = param_1;
    field_0x2808 = param_2;
}

/* 800CF328-800CF344 0C9C68 001C+00 1/0 0/0 0/0 .text            getRightItemMatrix__9daAlink_cFv */
MtxP daAlink_c::getRightItemMatrix() {
    return field_0x0650->i_getAnmMtx(field_0x30c2);
}

/* 800CF344-800CF380 0C9C84 003C+00 1/0 0/0 0/0 .text            checkPlayerNoDraw__9daAlink_cFv */
BOOL daAlink_c::checkPlayerNoDraw() {
    return dComIfGp_checkCameraAttentionStatus(field_0x317c, 2) ||
           i_checkNoResetFlg0(FLG0_UNK_8000000);
}

/* 800CF380-800CFC3C 0C9CC0 08BC+00 1/1 0/0 0/0 .text            __ct__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm daAlink_c::daAlink_c() {
    nofralloc
#include "asm/d/a/d_a_alink/__ct__9daAlink_cFv.s"
}
#pragma pop

/* 800CFC3C-800CFC78 0CA57C 003C+00 2/2 0/0 0/0 .text __dt__Q29daAlink_c14firePointEff_cFv */
daAlink_c::firePointEff_c::~firePointEff_c() {}

/* 800CFC78-800CFC7C 0CA5B8 0004+00 1/1 0/0 0/0 .text __ct__Q29daAlink_c14firePointEff_cFv */
daAlink_c::firePointEff_c::firePointEff_c() {
    /* empty function */
}

/* 800CFC7C-800CFCB8 0CA5BC 003C+00 0/0 2/2 0/0 .text            __dt__15LIGHT_INFLUENCEFv */
LIGHT_INFLUENCE::~LIGHT_INFLUENCE() {}

/* 800CFCB8-800CFCF4 0CA5F8 003C+00 2/2 0/0 0/0 .text            __dt__18daAlink_footData_cFv */
daAlink_footData_c::~daAlink_footData_c() {}

/* 800CFCF4-800CFCF8 0CA634 0004+00 1/1 0/0 0/0 .text            __ct__18daAlink_footData_cFv */
daAlink_footData_c::daAlink_footData_c() {
    /* empty function */
}

/* 800CFCF8-800CFD58 0CA638 0060+00 1/0 0/0 0/0 .text __dt__29dAlink_bottleWaterPcallBack_cFv */
dAlink_bottleWaterPcallBack_c::~dAlink_bottleWaterPcallBack_c() {}

/* 800CFD58-800CFDF4 0CA698 009C+00 1/0 0/0 0/0 .text            __dt__14daAlink_blur_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm daAlink_blur_c::~daAlink_blur_c() {
    nofralloc
#include "asm/d/a/d_a_alink/__dt__14daAlink_blur_cFv.s"
}
#pragma pop

/* 800CFDF4-800CFE68 0CA734 0074+00 1/0 0/0 0/0 .text            __dt__15daAlink_sight_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm daAlink_sight_c::~daAlink_sight_c() {
    nofralloc
#include "asm/d/a/d_a_alink/__dt__15daAlink_sight_cFv.s"
}
#pragma pop

/* 800CFE68-800CFEB0 0CA7A8 0048+00 1/0 0/0 0/0 .text            __dt__20daAlink_lockCursor_cFv */
daAlink_lockCursor_c::~daAlink_lockCursor_c() {}

/* 800CFEB0-800CFEC4 0CA7F0 0014+00 1/1 0/0 0/0 .text            checkRideOn__9daAlink_cCFv */
BOOL daAlink_c::checkRideOn() const {
    return mRideStatus != 0;
}

/* 800CFEC4-800CFEF4 0CA804 0030+00 1/1 0/0 0/0 .text            dComIfGp_att_getCatghTarget__Fv */
#ifdef NONMATCHING
static s32 dComIfGp_att_getCatghTarget() {
    return dComIfGp_getAttention().getCatghTarget().getCatghTarget();
}
#else
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void dComIfGp_att_getCatghTarget() {
    nofralloc
#include "asm/d/a/d_a_alink/dComIfGp_att_getCatghTarget__Fv.s"
}
#pragma pop
#endif

/* 800CFEF4-800CFF2C 0CA834 0038+00 1/1 0/0 0/0 .text            mDoAud_setLinkHp__Fll */
static void mDoAud_setLinkHp(s32 param_0, s32 param_1) {
    if (Z2GetLink() != NULL) {
        Z2GetLink()->setLinkHp(param_0, param_1);
    }
}

/* 800CFF2C-800CFF3C 0CA86C 0010+00 1/1 0/0 0/0 .text            dComIfGs_getLife__Fv */
static u16 dComIfGs_getLife() {
    return g_dComIfG_gameInfo.info.getPlayer().getPlayerStatusA().getLife();
}

/* 800CFF3C-800CFF4C 0CA87C 0010+00 1/1 0/0 0/0 .text            dComIfGp_getRStatus__Fv */
static u8 dComIfGp_getRStatus() {
    return g_dComIfG_gameInfo.play.getRStatus();
}

/* 800CFF4C-800CFFA4 0CA88C 0058+00 1/1 0/0 0/0 .text            checkAttentionLock__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm BOOL daAlink_c::checkAttentionLock() {
    nofralloc
#include "asm/d/a/d_a_alink/checkAttentionLock__9daAlink_cFv.s"
}
#pragma pop

/* 800CFFA4-800CFFC0 0CA8E4 001C+00 1/1 0/0 0/0 .text            dComIfGp_setItemLifeCount__FfUc */
void dComIfGp_setItemLifeCount(f32 amount, u8 type) {
    g_dComIfG_gameInfo.play.setItemLifeCount(amount, type);
}

/* 800CFFC0-800CFFE0 0CA900 0020+00 1/1 0/0 0/0 .text            cMtx_multVec__FPA4_CfPC3VecP3Vec */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void cMtx_multVec(f32 const (*param_0)[4], Vec const* param_1, Vec* param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/cMtx_multVec__FPA4_CfPC3VecP3Vec.s"
}
#pragma pop

/* 800CFFE0-800CFFF4 0CA920 0014+00 1/1 0/0 0/0 .text            getAnmMtx__8J3DModelFi */
MtxP J3DModel::getAnmMtx(int i) {
    return mMtxBuffer->getAnmMtx(i);
}

/* 800CFFF4-800D0020 0CA934 002C+00 1/1 0/0 0/0 .text            setBaseTRMtx__8J3DModelFPA4_f */
void J3DModel::setBaseTRMtx(MtxP matrix) {
    PSMTXCopy(matrix, mBaseTransformMtx);
}

/* 800D0020-800D0048 0CA960 0028+00 1/1 0/0 0/0 .text checkFmChainGrabAnime__9daAlink_cCFv */
BOOL daAlink_c::checkFmChainGrabAnime() const {
    return checkUpperAnime(ANM_HUMAN_CHAIN_GRAB) || checkUpperAnime(ANM_WOLF_CHAIN_GRAB);
}

/* 800D0048-800D005C 0CA988 0014+00 1/1 0/0 0/0 .text checkSmallUpperGuardAnime__9daAlink_cCFv */
BOOL daAlink_c::checkSmallUpperGuardAnime() const {
    return checkUpperAnime(ANM_SMALL_GUARD);
}

/* 800D005C-800D008C 0CA99C 0030+00 1/1 0/0 0/0 .text            dComIfGp_evmng_startCheck__FPCc */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void dComIfGp_evmng_startCheck(char const* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/dComIfGp_evmng_startCheck__FPCc.s"
}
#pragma pop

/* 800D008C-800D00BC 0CA9CC 0030+00 1/1 0/0 0/0 .text            mDoAud_setLinkGroupInfo__FUc */
static void mDoAud_setLinkGroupInfo(u8 param_0) {
    if (Z2GetLink() != NULL) {
        Z2GetLink()->setLinkGroupInfo(param_0);
    }
}

/* 800D00BC-800D00D0 0CA9FC 0014+00 1/1 0/0 0/0 .text getAnm__25mDoExt_MtxCalcAnmBlendTblFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_MtxCalcAnmBlendTbl::getAnm(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/getAnm__25mDoExt_MtxCalcAnmBlendTblFi.s"
}
#pragma pop

/* 800D00D0-800D00DC 0CAA10 000C+00 1/1 0/0 0/0 .text            ChkRoofHit__9dBgS_AcchCFv */
bool dBgS_Acch::ChkRoofHit() const {
    return m_flags & ROOF_HIT;
}

/* 800D00DC-800D00EC 0CAA1C 0010+00 1/1 0/0 0/0 .text            ClrGroundHit__9dBgS_AcchFv */
void dBgS_Acch::ClrGroundHit() {
    m_flags &= ~GROUND_HIT;
}

/* 800D00EC-800D0110 0CAA2C 0024+00 1/1 0/0 0/0 .text            checkReinRide__9daAlink_cCFv */
BOOL daAlink_c::checkReinRide() const {
    return mRideStatus == 1 || mRideStatus == 2;
}

/* 800D0110-800D0138 0CAA50 0028+00 1/1 0/0 0/0 .text checkWolfEnemyThrowAnime__9daAlink_cCFv */
BOOL daAlink_c::checkWolfEnemyThrowAnime() const {
    return checkUpperAnime(ANM_WOLF_ENEMY_THROW_LEFT) ||
           checkUpperAnime(ANM_WOLF_ENEMY_THROW_RIGHT);
}

/* 800D0138-800D014C 0CAA78 0014+00 1/1 0/0 0/0 .text            checkSpecialDemoMode__9daAlink_cCFv
 */
u16 daAlink_c::checkSpecialDemoMode() const {
    return mDemo.getDemoType() == 5;
}

/* 800D014C-800D0164 0CAA8C 0018+00 1/1 0/0 0/0 .text            setMidnaTalkStatus__9daAlink_cFUc
 */
void daAlink_c::setMidnaTalkStatus(u8 status) {
    dComIfGp_setZStatus(status, 0);
}

/* 800D0164-800D0180 0CAAA4 001C+00 1/1 0/0 0/0 .text            set3DStatus__9daAlink_cFUcUc */
void daAlink_c::set3DStatus(u8 status, u8 direction) {
    dComIfGp_set3DStatus(status, direction, 0);
}

/* 800D0180-800D018C 0CAAC0 000C+00 1/1 0/0 0/0 .text            offSetFlg__16daAlink_matAnm_cFv */
void daAlink_matAnm_c::offSetFlg() {
    mSetFlag = 0;
}

/* 800D018C-800D0198 0CAACC 000C+00 1/1 0/0 0/0 .text            checkModeFlg__9daAlink_cCFUl */
u32 daAlink_c::checkModeFlg(u32 pFlag) const {
    return mModeFlg & pFlag;
}

/* 800D0198-800D01A0 0CAAD8 0008+00 1/0 0/0 0/0 .text getShieldChangeWaitTimer__9daAlink_cCFv */
u8 daAlink_c::getShieldChangeWaitTimer() const {
    return mShieldChangeWaitTimer;
}

/* 800D01A0-800D01A8 0CAAE0 0008+00 1/0 0/0 0/0 .text getClothesChangeWaitTimer__9daAlink_cCFv */
u8 daAlink_c::getClothesChangeWaitTimer() const {
    return mClothesChangeWaitTimer;
}

/* 800D01A8-800D01E0 0CAAE8 0038+00 1/0 0/0 0/0 .text            checkHorseStart__9daAlink_cFv */
u32 daPy_py_c::getLastSceneMode() {
    return dComIfGs_getLastSceneMode() & 0xF;
}

BOOL daAlink_c::checkHorseStart() {
    return checkHorseStart(getLastSceneMode(), getStartMode());
}

/* 800D01E0-800D0208 0CAB20 0028+00 1/0 0/0 0/0 .text            checkCutTurnCharge__9daAlink_cCFv
 */
BOOL daAlink_c::checkCutTurnCharge() const {
    return mActionID == CUT_TURN_MOVE && mCommonCounter == 0;
}

/* 800D0208-800D0228 0CAB48 0020+00 1/0 0/0 0/0 .text checkAcceptDungeonWarpAlink__9daAlink_cFi */
void daAlink_c::checkAcceptDungeonWarpAlink(int param_0) {
    checkAcceptWarp();
}

/* 800D0228-800D0274 0CAB68 004C+00 1/0 0/0 0/0 .text            getSpinnerActor__9daAlink_cFv */
fopAc_ac_c* daAlink_c::getSpinnerActor() {
    fopAc_ac_c* spinnerActor;

    if (!checkSpinnerRide()) {
        spinnerActor = NULL;
    } else {
        spinnerActor = mRideActor.getActor();
    }
    return spinnerActor;
}

/* 800D0274-800D027C 0CABB4 0008+00 1/0 0/0 0/0 .text            getSumouCounter__9daAlink_cCFv */
s16 daAlink_c::getSumouCounter() const {
    return mCommonCounter;
}

/* 800D027C-800D0284 0CABBC 0008+00 1/0 0/0 0/0 .text            checkSumouWithstand__9daAlink_cCFv
 */
s16 daAlink_c::checkSumouWithstand() const {
    return field_0x300e;
}

/* 800D0284-800D0290 0CABC4 000C+00 1/0 0/0 0/0 .text setMidnaMsgNum__9daAlink_cFP10fopAc_ac_cUs
 */
void daAlink_c::setMidnaMsgNum(fopAc_ac_c* param_0, u16 pMsgNum) {
    mMidnaMsgNum = pMsgNum;
    static_cast<fopAc_ac_c*>(mMidnaMsg) = param_0;
}

/* 800D0290-800D029C 0CABD0 000C+00 1/0 0/0 0/0 .text            getModelMtx__9daAlink_cFv */
MtxP daAlink_c::getModelMtx() {
    return field_0x0650->getBaseTRMtx();
}

/* 800D029C-800D02A4 0CABDC 0008+00 1/0 0/0 0/0 .text            getInvMtx__9daAlink_cFv */
MtxP daAlink_c::getInvMtx() {
    return mInvMtx;
}

/* 800D02A4-800D02B8 0CABE4 0014+00 1/0 0/0 0/0 .text getLinkBackBone1Matrix__9daAlink_cFv */
MtxP daAlink_c::getLinkBackBone1Matrix() {
    return field_0x0650->i_getAnmMtx(1);
}

/* 800D02B8-800D02CC 0CABF8 0014+00 1/0 0/0 0/0 .text            getWolfMouthMatrix__9daAlink_cFv */
MtxP daAlink_c::getWolfMouthMatrix() {
    return field_0x0650->i_getAnmMtx(13);
}

/* 800D02CC-800D02E0 0CAC0C 0014+00 1/0 0/0 0/0 .text getWolfBackbone2Matrix__9daAlink_cFv */
MtxP daAlink_c::getWolfBackbone2Matrix() {
    return field_0x0650->i_getAnmMtx(2);
}

/* 800D02E0-800D0334 0CAC20 0054+00 1/0 0/0 0/0 .text            getBottleMtx__9daAlink_cFv */
MtxP daAlink_c::getBottleMtx() {
    if (mHeldItemModel != NULL && checkBottleItem(mEquipItem)) {
        return mHeldItemModel->getBaseTRMtx();
    }

    return NULL;
}

/* 800D0334-800D0350 0CAC74 001C+00 1/0 0/0 0/0 .text            getHeadMtx__9daAlink_cFv */
MtxP daAlink_c::getHeadMtx() {
    return field_0x0650->i_getAnmMtx(field_0x30b4);
}

/* 800D0350-800D0358 0CAC90 0008+00 1/0 0/0 0/0 .text            getGroundY__9daAlink_cFv */
f32 daAlink_c::getGroundY() {
    return mLinkAcch.GetGroundH();
}

/* 800D0358-800D0360 0CAC98 0008+00 1/0 0/0 0/0 .text getBaseAnimeFrameRate__9daAlink_cCFv */
f32 daAlink_c::getBaseAnimeFrameRate() const {
    return mFrameCtrl1[0].getRate();
}

/* 800D0360-800D0368 0CACA0 0008+00 1/0 0/0 0/0 .text            getAtnActorID__9daAlink_cCFv */
s32 daAlink_c::getAtnActorID() const {
    return mAtnActorID;
}

/* 800D0368-800D0370 0CACA8 0008+00 1/0 0/0 0/0 .text            getItemID__9daAlink_cCFv */
s32 daAlink_c::getItemID() const {
    return mItemActor.getID();
}

/* 800D0370-800D038C 0CACB0 001C+00 1/0 0/0 0/0 .text            getGrabActorID__9daAlink_cCFv */
s32 daAlink_c::getGrabActorID() const {
    if (mEquipItem == 0x102) {
        return mItemActor.getID();
    } else {
        return mGrabItemActor.getID();
    }
}

/* 800D038C-800D03B4 0CACCC 0028+00 1/0 0/0 0/0 .text            setForcePutPos__9daAlink_cFRC4cXyz
 */
void daAlink_c::setForcePutPos(cXyz const& pPutPos) {
    mForcePutPos = pPutPos;
    i_onEndResetFlg1(UNK_FORCE_PUT_POS);
}

/* 800D03B4-800D03C8 0CACF4 0014+00 1/0 0/0 0/0 .text            checkPlayerFly__9daAlink_cCFv */
u32 daAlink_c::checkPlayerFly() const {
    return i_checkModeFlg(MODE_SWIMMING | MODE_ROPE_WALK | MODE_VINE_CLIMB | MODE_UNK_800 |
                          MODE_NO_COLLISION | MODE_CLIMB | MODE_JUMP);
}

/* 800D03C8-800D03DC 0CAD08 0014+00 1/0 0/0 0/0 .text            checkFrontRoll__9daAlink_cCFv */
BOOL daAlink_c::checkFrontRoll() const {
    return mActionID == FRONT_ROLL;
}

/* 800D03DC-800D03F0 0CAD1C 0014+00 1/0 0/0 0/0 .text            checkWolfDash__9daAlink_cCFv */
BOOL daAlink_c::checkWolfDash() const {
    return mActionID == WOLF_DASH;
}

/* 800D03F0-800D0414 0CAD30 0024+00 1/0 0/0 0/0 .text            checkAutoJump__9daAlink_cCFv */
BOOL daAlink_c::checkAutoJump() const {
    return mActionID == HUMAN_AUTOJUMP || mActionID == WOLF_AUTOJUMP;
}

/* 800D0414-800D0444 0CAD54 0030+00 1/0 0/0 0/0 .text            checkSideStep__9daAlink_cCFv */
bool daAlink_c::checkSideStep() const {
    return (mActionID == HUMAN_SIDESTEP || mActionID == WOLF_SIDESTEP) && field_0x300a != 0;
}

/* 800D0444-800D0468 0CAD84 0024+00 1/0 0/0 0/0 .text            checkWolfTriggerJump__9daAlink_cCFv
 */
bool daAlink_c::checkWolfTriggerJump() const {
    return mActionID == WOLF_SIDESTEP || mActionID == WOLF_JUMPATTACK;
}

/* 800D0468-800D047C 0CADA8 0014+00 1/0 0/0 0/0 .text            checkGuardBreakMode__9daAlink_cCFv
 */
BOOL daAlink_c::checkGuardBreakMode() const {
    return mActionID == GUARD_BREAK;
}

/* 800D047C-800D04A4 0CADBC 0028+00 1/0 0/0 0/0 .text            checkLv3Slide__9daAlink_cCFv */
bool daAlink_c::checkLv3Slide() const {
    return mActionID == HUMAN_SLIDE && field_0x300e != 0;
}

/* 800D04A4-800D04B8 0CADE4 0014+00 1/0 0/0 0/0 .text checkWolfHowlDemoMode__9daAlink_cCFv */
bool daAlink_c::checkWolfHowlDemoMode() const {
    return mActionID == WOLF_HOWL;
}

/* 800D04B8-800D04CC 0CADF8 0014+00 1/0 0/0 0/0 .text            checkElecDamage__9daAlink_cCFv */
BOOL daAlink_c::checkElecDamage() const {
    return mActionID == ELEC_DAMAGE;
}

/* 800D04CC-800D04F4 0CAE0C 0028+00 1/0 0/0 0/0 .text checkEmptyBottleSwing__9daAlink_cCFv */
BOOL daAlink_c::checkEmptyBottleSwing() const {
    return mEquipItem == EMPTY_BOTTLE && mActionID == BOTTLE_SWING;
}

/* 800D04F4-800D0508 0CAE34 0014+00 1/0 0/0 0/0 .text            checkBottleSwingMode__9daAlink_cCFv
 */
BOOL daAlink_c::checkBottleSwingMode() const {
    return mActionID == BOTTLE_SWING;
}

/* 800D0508-800D051C 0CAE48 0014+00 1/0 0/0 0/0 .text            checkHawkWait__9daAlink_cCFv */
BOOL daAlink_c::checkHawkWait() const {
    return mActionID == HAWK_WAIT;
}

/* 800D051C-800D0544 0CAE5C 0028+00 1/0 0/0 0/0 .text            checkGoatThrow__9daAlink_cCFv */
BOOL daAlink_c::checkGoatThrow() const {
    return mActionID == GOAT_THROW && mCommonCounter != 0;
}

/* 800D0544-800D0570 0CAE84 002C+00 1/0 0/0 0/0 .text            checkGoatThrowAfter__9daAlink_cCFv
 */
BOOL daAlink_c::checkGoatThrowAfter() const {
    return mActionID == GOAT_THROW && field_0x3478 > FLOAT_LABEL(lit_6108);
}

/* 800D0570-800D0598 0CAEB0 0028+00 1/0 0/0 0/0 .text            checkWolfTagLockJump__9daAlink_cCFv
 */
BOOL daAlink_c::checkWolfTagLockJump() const {
    return mActionID == WOLF_TAGLOCK_JUMP && field_0x3198 == 0;
}

/* 800D0598-800D05AC 0CAED8 0014+00 1/0 0/0 0/0 .text checkWolfTagLockJumpLand__9daAlink_cCFv */
BOOL daAlink_c::checkWolfTagLockJumpLand() const {
    return mActionID == WOLF_TAGLOCK_LAND;
}

/* 800D05AC-800D05C0 0CAEEC 0014+00 1/0 0/0 0/0 .text            checkWolfRopeHang__9daAlink_cCFv */
BOOL daAlink_c::checkWolfRopeHang() const {
    return mActionID == WOLF_ROPE_HANG;
}

/* 800D05C0-800D05D4 0CAF00 0014+00 1/0 0/0 0/0 .text            checkRollJump__9daAlink_cCFv */
BOOL daAlink_c::checkRollJump() const {
    return mActionID == ROLL_JUMP;
}

/* 800D05D4-800D05E8 0CAF14 0014+00 1/0 0/0 0/0 .text            checkGoronRideWait__9daAlink_cCFv
 */
BOOL daAlink_c::checkGoronRideWait() const {
    return mActionID == GORON_RIDE_WAIT;
}

/* 800D05E8-800D05FC 0CAF28 0014+00 1/0 0/0 0/0 .text            checkWolfChain__9daAlink_cCFv */
BOOL daAlink_c::checkWolfChain() const {
    return mActionID == WOLF_CHAIN;
}

/* 800D05FC-800D0610 0CAF3C 0014+00 1/0 0/0 0/0 .text            checkWolfWait__9daAlink_cCFv */
BOOL daAlink_c::checkWolfWait() const {
    return mActionID == WOLF_WAIT;
}

/* 800D0610-800D0624 0CAF50 0014+00 1/0 0/0 0/0 .text            checkWolfJumpAttack__9daAlink_cCFv
 */
BOOL daAlink_c::checkWolfJumpAttack() const {
    return mActionID == WOLF_JUMPATTACK;
}

/* 800D0624-800D0638 0CAF64 0014+00 1/0 0/0 0/0 .text            checkWolfRSit__9daAlink_cCFv */
BOOL daAlink_c::checkWolfRSit() const {
    return mActionID == WOLF_RSIT;
}

/* 800D0638-800D0660 0CAF78 0028+00 1/0 0/0 0/0 .text            checkBottleDrinkEnd__9daAlink_cCFv
 */
BOOL daAlink_c::checkBottleDrinkEnd() const {
    return mActionID == BOTTLE_DRINK && field_0x300e != 0;
}

/* 800D0660-800D0674 0CAFA0 0014+00 1/0 0/0 0/0 .text            checkWolfDig__9daAlink_cCFv */
BOOL daAlink_c::checkWolfDig() const {
    return mActionID == WOLF_DIG;
}

/* 800D0674-800D0688 0CAFB4 0014+00 1/0 0/0 0/0 .text            checkCutCharge__9daAlink_cCFv */
BOOL daAlink_c::checkCutCharge() const {
    return mActionID == CUT_TURN_MOVE;
}

/* 800D0688-800D06B0 0CAFC8 0028+00 1/0 0/0 0/0 .text checkCutLargeJumpCharge__9daAlink_cCFv */
BOOL daAlink_c::checkCutLargeJumpCharge() const {
    return mActionID == CUT_TURN_MOVE && mCommonCounter != 0;
}

/* 800D06B0-800D06D8 0CAFF0 0028+00 1/0 0/0 0/0 .text            checkComboCutTurn__9daAlink_cCFv */
BOOL daAlink_c::checkComboCutTurn() const {
    return mActionID == COMBO_CUT_TURN && mComboCutCount != 0;
}

/* 800D06D8-800D0704 0CB018 002C+00 1/0 0/0 0/0 .text            checkClimbMove__9daAlink_cCFv */
BOOL daAlink_c::checkClimbMove() const {
    return mActionID == CLIMB_MOVE_VERTICAL || mActionID == CLIMB_MOVE_LADDER ||
           mActionID == CLIMB_MOVE_HORIZONTAL;
}

/* 800D0704-800D0718 0CB044 0014+00 1/0 0/0 0/0 .text            checkGrassWhistle__9daAlink_cCFv */
BOOL daAlink_c::checkGrassWhistle() const {
    return mActionID == GRASS_WHISTLE;
}

/* 800D0718-800D072C 0CB058 0014+00 1/0 0/0 0/0 .text            checkBoarRun__9daAlink_cCFv */
BOOL daAlink_c::checkBoarRun() const {
    return mActionID == BOAR_RUN;
}

/* 800D072C-800D0794 0CB06C 0068+00 1/0 0/0 0/0 .text checkHorseRideNotReady__9daAlink_cCFv */
BOOL daAlink_c::checkHorseRideNotReady() const {
    return checkHorseRide() && mActionID != HORSE_RIDE && mActionID != HORSE_GETOFF;
}

/* 800D0794-800D079C 0CB0D4 0008+00 1/0 0/0 0/0 .text            getSearchBallScale__9daAlink_cCFv
 */
f32 daAlink_c::getSearchBallScale() const {
    return mSearchBallScale;
}

/* 800D079C-800D07A4 0CB0DC 0008+00 1/0 0/0 0/0 .text            checkFastShotTime__9daAlink_cFv */
s16 daAlink_c::checkFastShotTime() {
    return mFastShotTime;
}

/* 800D07A4-800D07D4 0CB0E4 0030+00 1/0 0/0 0/0 .text checkCutJumpCancelTurn__9daAlink_cCFv */
BOOL daAlink_c::checkCutJumpCancelTurn() const {
    return (mActionID == CUT_JUMP || mActionID == CUT_JUMP_LAND) && field_0x3198 != 2;
}

/* 800D07D4-800D07FC 0CB114 0028+00 1/0 0/0 0/0 .text
 * checkSingleBoarBattleSecondBowReady__9daAlink_cCFv           */
BOOL daAlink_c::checkSingleBoarBattleSecondBowReady() const {
    return mActionID == RIDE_BOW_READY && mCommonCounter != 0;
}

/* 800D07FC-800D0818 0CB13C 001C+00 1/0 0/0 0/0 .text cancelDungeonWarpReadyNeck__9daAlink_cFv */
void daAlink_c::cancelDungeonWarpReadyNeck() {
    if (mActionID != DUNGEON_WARP_READY) {
        return;
    }
    offModeFlg(MODE_UNK_100);
}

/* 800D0818-800D0830 0CB158 0018+00 1/0 0/0 0/0 .text
 * onSceneChangeAreaJump__9daAlink_cFUcUcP10fopAc_ac_c          */
void daAlink_c::onSceneChangeAreaJump(u8 param_0, u8 param_1, fopAc_ac_c* param_2) {
    field_0x3112 = param_0 | 0x8000;
    field_0x2fac = param_1;
    field_0x2808 = param_2;
}

/* 800D0830-800D084C 0CB170 001C+00 1/0 0/0 0/0 .text            onSceneChangeDead__9daAlink_cFUci
 */
void daAlink_c::onSceneChangeDead(u8 param_0, int param_1) {
    if (mActionID != DEAD) {
        return;
    }
    field_0x3012 = param_0;
    field_0x3198 = param_1;
}

/* 800D084C-800D0860 0CB18C 0014+00 1/0 0/0 0/0 .text            checkNoEquipItem__9daAlink_cCFv */
bool daAlink_c::checkNoEquipItem() const {
    return mEquipItem == NO_ITEM;
}

/* 800D0860-800D087C 0CB1A0 001C+00 1/0 0/0 0/0 .text getBoardCutTurnOffsetAngleY__9daAlink_cCFv
 */
s16 daAlink_c::getBoardCutTurnOffsetAngleY() const {
    if (mActionID == BOARD_CUT_TURN) {
        return field_0x3012;
    }
    return 0;
}

/* 800D087C-800D0884 0CB1BC 0008+00 1/0 0/0 0/0 .text            getMagneBootsTopVec__9daAlink_cFv
 */
cXyz* daAlink_c::getMagneBootsTopVec() {
    return &mMagneBootsTopVec;
}

/* 800D0884-800D08B0 0CB1C4 002C+00 1/0 0/0 0/0 .text setCargoCarry__9daAlink_cFP10fopAc_ac_c */
void daAlink_c::setCargoCarry(fopAc_ac_c* p_actor) {
    mSpecialMode = SMODE_CARGO_CARRY;
    mCargoCarryActor.setData(p_actor);
}

/* 800D08B0-800D08DC 0CB1F0 002C+00 1/0 0/0 0/0 .text setGoronSideMove__9daAlink_cFP10fopAc_ac_c
 */
void daAlink_c::setGoronSideMove(fopAc_ac_c* p_actor) {
    mSpecialMode = SMODE_GORON_THROW;
    mCargoCarryActor.setData(p_actor);
}

/* 800D08DC-800D091C 0CB21C 0040+00 1/0 0/0 0/0 .text setSumouReady__9daAlink_cFP10fopAc_ac_c */
void daAlink_c::setSumouReady(fopAc_ac_c* p_actor) {
    mSpecialMode = SMODE_SUMO_READY;
    mCargoCarryActor.setData(p_actor);
    mDemo.setDemoMode(1);
}

/* 800D091C-800D0930 0CB25C 0014+00 1/0 0/0 0/0 .text setSumouPushBackDirection__9daAlink_cFs */
void daAlink_c::setSumouPushBackDirection(s16 param_0) {
    if (mActionID != SUMOU_PUSH) {
        return;
    }
    field_0x3010 = param_0;
}

/* 800D0930-800D0948 0CB270 0018+00 1/0 0/0 0/0 .text            setSumouLoseHeadUp__9daAlink_cFv */
void daAlink_c::setSumouLoseHeadUp() {
    if (mActionID != SUMOU_WIN_LOSE) {
        return;
    }
    mSpecialMode = SMODE_SUMO_LOSE;
}

/* 800D0948-800D095C 0CB288 0014+00 1/0 0/0 0/0 .text checkPriActorOwn__9daAlink_cCFPC10fopAc_ac_c
 */
bool daAlink_c::checkPriActorOwn(fopAc_ac_c const* p_actor) const {
    return field_0x27f4 == p_actor;
}

/* 800D095C-800D0970 0CB29C 0014+00 1/0 0/0 0/0 .text
 * checkWolfEnemyBiteAllOwn__9daAlink_cCFPC10fopAc_ac_c         */
bool daAlink_c::checkWolfEnemyBiteAllOwn(fopAc_ac_c const* p_actor) const {
    return field_0x281c.getActorConst() == p_actor;
}

/* 800D0970-800D0984 0CB2B0 0014+00 1/0 0/0 0/0 .text setWolfEnemyHangBiteAngle__9daAlink_cFs */
void daAlink_c::setWolfEnemyHangBiteAngle(s16 angle) {
    if (mActionID != WOLF_ENEMY_HANG_BITE) {
        return;
    }
    field_0x3010 = angle;
}

/* 800D0984-800D0998 0CB2C4 0014+00 1/0 0/0 0/0 .text setSumouGraspCancelCount__9daAlink_cFi */
void daAlink_c::setSumouGraspCancelCount(int param_0) {
    if (mActionID != SUMOU_PUSH) {
        return;
    }
    mCommonCounter = param_0;
}

/* 800D0998-800D09AC 0CB2D8 0014+00 1/0 0/0 0/0 .text            checkItemSwordEquip__9daAlink_cCFv
 */
bool daAlink_c::checkItemSwordEquip() const {
    return mEquipItem == EQUIP_SWORD;
}

/* 800D09AC-800D09B4 0CB2EC 0008+00 1/0 0/0 0/0 .text            getSinkShapeOffset__9daAlink_cCFv
 */
f32 daAlink_c::getSinkShapeOffset() const {
    return mSinkShapeOffset;
}

/* 800D09B4-800D09C8 0CB2F4 0014+00 1/0 0/0 0/0 .text            checkSinkDead__9daAlink_cCFv */
BOOL daAlink_c::checkSinkDead() const {
    return field_0x2fbd == 0xFF;
}

/* 800D09C8-800D09DC 0CB308 0014+00 1/0 0/0 0/0 .text            checkCutJumpMode__9daAlink_cCFv */
BOOL daAlink_c::checkCutJumpMode() const {
    return mActionID == CUT_JUMP;
}

/* 800D09DC-800D09E4 0CB31C 0008+00 1/0 0/0 0/0 .text getGiantPuzzleAimAngle__9daAlink_cCFv */
s16 daAlink_c::getGiantPuzzleAimAngle() const {
    return mCommonCounter;
}

/* 800D09E4-800D09EC 0CB324 0008+00 1/0 0/0 0/0 .text getSwordChangeWaitTimer__9daAlink_cCFv */
u8 daAlink_c::getSwordChangeWaitTimer() const {
    return mSwordChangeWaitTimer;
}

/* 800D09EC-800D0A14 0CB32C 0028+00 1/0 0/0 0/0 .text            checkMetamorphose__9daAlink_cCFv */
BOOL daAlink_c::checkMetamorphose() const {
    return mActionID == METAMORPHOSE && field_0x300a == 0;
}

/* 800D0A14-800D0A28 0CB354 0014+00 1/0 0/0 0/0 .text checkWolfDownAttackPullOut__9daAlink_cCFv */
BOOL daAlink_c::checkWolfDownAttackPullOut() const {
    return mActionID == WOLF_DOWNATTACK_PULLOUT;
}

/* 800D0A28-800D0A30 0CB368 0008+00 1/0 0/0 0/0 .text            getMidnaAtnPos__9daAlink_cCFv */
// vtable issue
#ifdef NONMATCHING
cXyz* daAlink_c::getMidnaAtnPos() const {
    return &mMidnaAtnPos;
}
#else
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void getMidnaAtnPos__9daAlink_cCFv() {
    // asm bool daAlink_c::getMidnaAtnPos() const {
    nofralloc
#include "asm/d/a/d_a_alink/getMidnaAtnPos__9daAlink_cCFv.s"
}
#pragma pop
#endif

/* 800D0A30-800D0A44 0CB370 0014+00 1/0 0/0 0/0 .text            checkCopyRodEquip__9daAlink_cCFv */
bool daAlink_c::checkCopyRodEquip() const {
    return mEquipItem == COPY_ROD;
}

/* 800D0A44-800D0A6C 0CB384 0028+00 1/0 0/0 0/0 .text checkCanoeFishingGetLeft__9daAlink_cCFv */
bool daAlink_c::checkCanoeFishingGetLeft() const {
    return mActionID == CANOE_FISHING_GET && field_0x300e == 0;
}

/* 800D0A6C-800D0A94 0CB3AC 0028+00 1/0 0/0 0/0 .text checkCanoeFishingGetRight__9daAlink_cCFv */
bool daAlink_c::checkCanoeFishingGetRight() const {
    return mActionID == CANOE_FISHING_GET && field_0x300e == 1;
}

/* 800D0A94-800D0A9C 0CB3D4 0008+00 1/0 0/0 0/0 .text            checkBeeChildDrink__9daAlink_cCFv
 */
u8 daAlink_c::checkBeeChildDrink() const {
    return field_0x2fd3;
}

/* 800D0A9C-800D0AA4 0CB3DC 0008+00 1/0 0/0 0/0 .text            getWolfHowlMgrP__9daAlink_cFv */
Z2WolfHowlMgr* daAlink_c::getWolfHowlMgrP() {
    return &mZ2WolfHowlMgr;
}

/* 800D0AA4-800D0AC8 0CB3E4 0024+00 1/0 0/0 0/0 .text checkWolfHowlSuccessAnime__9daAlink_cCFv */
BOOL daAlink_c::checkWolfHowlSuccessAnime() const {
    return checkUnderMove0BckNoArcWolf(ANM_WOLF_HOWL_SUCCESS);
}

/* 800D0AC8-800D0AF0 0CB408 0028+00 1/0 0/0 0/0 .text            checkOctaIealHang__9daAlink_cCFv */
bool daAlink_c::checkOctaIealHang() const {
    return mActionID == BOSS_ENEMY_HANG && field_0x32cc == 0;
}

/* 800D0AF0-800D0B08 0CB430 0018+00 1/0 0/0 0/0 .text            cancelOctaIealHang__9daAlink_cFv */
void daAlink_c::cancelOctaIealHang() {
    if (mActionID != BOSS_ENEMY_HANG) {
        return;
    }
    field_0x300e = 1;
}

/* 800D0B08-800D0B20 0CB448 0018+00 1/0 0/0 0/0 .text cancelDragonHangBackJump__9daAlink_cFv */
void daAlink_c::cancelDragonHangBackJump() {
    if (mActionID != BOSS_ENEMY_HANG) {
        return;
    }
    field_0x300e = -1;
}

/* 800D0B20-800D0B38 0CB460 0018+00 1/0 0/0 0/0 .text            setOctaIealWildHang__9daAlink_cFv
 */
void daAlink_c::setOctaIealWildHang() {
    if (mActionID != BOSS_ENEMY_HANG) {
        return;
    }
    field_0x3008 = 1;
}

/* 800D0B38-800D0B60 0CB478 0028+00 1/0 0/0 0/0 .text            checkDragonHangRide__9daAlink_cCFv
 */
bool daAlink_c::checkDragonHangRide() const {
    return mActionID == BOSS_ENEMY_HANG && field_0x32cc != 0;
}

/* 800D0B60-800D0B8C 0CB4A0 002C+00 1/0 0/0 0/0 .text playerStartCollisionSE__9daAlink_cFUlUl */
void daAlink_c::playerStartCollisionSE(u32 param_0, u32 param_1) {
    mZ2Link.startCollisionSE(param_0, param_1);
}

/* 800D0B8C-800D0C6C 0CB4CC 00E0+00 1/0 0/0 0/0 .text            __dt__16daAlink_matAnm_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// asm daAlink_matAnm_c::~daAlink_matAnm_c() {
extern "C" asm void __dt__16daAlink_matAnm_cFv() {
    nofralloc
#include "asm/d/a/d_a_alink/__dt__16daAlink_matAnm_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 803B35C8-803B35EC 0106E8 0024+00 2/2 5/5 0/0 .data            __vt__12dBgS_ObjAcch */
SECTION_DATA extern void* __vt__12dBgS_ObjAcch[9] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__12dBgS_ObjAcchFv,
    (void*)NULL,
    (void*)NULL,
    (void*)func_801446DC,
    (void*)NULL,
    (void*)NULL,
    (void*)func_801446D4,
};

/* 800D0C6C-800D0CDC 0CB5AC 0070+00 3/2 0/0 0/0 .text            __dt__12dBgS_ObjAcchFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// asm dBgS_ObjAcch::~dBgS_ObjAcch() {
extern "C" asm void __dt__12dBgS_ObjAcchFv() {
    nofralloc
#include "asm/d/a/d_a_alink/__dt__12dBgS_ObjAcchFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 803B35EC-803B3610 01070C 0014+10 3/3 0/0 0/0 .data            __vt__Q29daAlink_c14hsChainShape_c
 */
SECTION_DATA extern void* __vt__Q29daAlink_c14hsChainShape_c[5 + 4 /* padding */] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)entry__9J3DPacketFP13J3DDrawBuffer,
    (void*)draw__Q29daAlink_c14hsChainShape_cFv,
    (void*)__dt__Q29daAlink_c14hsChainShape_cFv,
    /* padding */
    NULL,
    NULL,
    NULL,
    NULL,
};

/* 800D0CDC-800D0D38 0CB61C 005C+00 1/0 0/0 0/0 .text __dt__Q29daAlink_c14hsChainShape_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm daAlink_c::hsChainShape_c::~hsChainShape_c() {
    nofralloc
#include "asm/d/a/d_a_alink/__dt__Q29daAlink_c14hsChainShape_cFv.s"
}
#pragma pop

/* 800D0D38-800D0E08 0CB678 00D0+00 1/1 0/0 0/0 .text daAlink_searchNightStalker__FP10fopAc_ac_cPv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void daAlink_searchNightStalker(fopAc_ac_c* param_0, void* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/daAlink_searchNightStalker__FP10fopAc_ac_cPv.s"
}
#pragma pop

/* 800D0E08-800D0E98 0CB748 0090+00 1/1 0/0 0/0 .text            checkLightSwordMtrl__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkLightSwordMtrl() {
    nofralloc
#include "asm/d/a/d_a_alink/checkLightSwordMtrl__9daAlink_cFv.s"
}
#pragma pop

/* 800D0E98-800D0ECC 0CB7D8 0034+00 5/5 0/0 0/0 .text            checkSwordEquipAnime__9daAlink_cCFv
 */
BOOL daAlink_c::checkSwordEquipAnime() const {
    return !i_checkNoResetFlg0(FLG0_UNK_1000000) &&
           (checkUpperAnime(0x255) || checkUpperAnime(0x261));
}

/* 800D0ECC-800D0EFC 0CB80C 0030+00 8/8 0/0 0/0 .text            checkCutDashAnime__9daAlink_cCFv */
BOOL daAlink_c::checkCutDashAnime() const {
    return checkUpperAnime(0x80) || checkUpperAnime(0x82) || checkUpperAnime(0x81);
}

/* 800D0EFC-800D0F5C 0CB83C 0060+00 1/1 0/0 0/0 .text
 * checkCutDashEnemyHit__9daAlink_cFR12dCcD_GObjInf             */
BOOL daAlink_c::checkCutDashEnemyHit(dCcD_GObjInf& obj) {
    return obj.ChkAtHit() && checkEnemyGroup(obj.GetAtHitAc());
}

/* 800D0F5C-800D0F90 0CB89C 0034+00 6/6 0/0 0/0 .text            getSwordAtType__9daAlink_cFv */
u32 daAlink_c::getSwordAtType() {
    return checkMasterSwordEquip() ? 0x4000002 : 2;
}

/* 800D0F90-800D102C 0CB8D0 009C+00 3/3 0/0 0/0 .text            initCutTurnAt__9daAlink_cFfi */
void daAlink_c::initCutTurnAt(f32 param_0, int param_1) {
    field_0xFB8.ResetAtHit();
    field_0xFB8.OnAtSetBit();
    field_0xFB8.SetAtType(getSwordAtType());
    field_0xFB8.SetAtHitMark(3);
    field_0xFB8.SetAtSe(1);
    field_0xFB8.SetAtAtp(param_1);
    u8 mtrl;
    if (!i_checkNoResetFlg3(FLG3_UNK_100000)) {
        mtrl = 0;
    } else {
        mtrl = 4;
    }
    field_0xFB8.SetAtMtrl(mtrl);
    field_0xFB8.SetR(param_0);
    field_0x2fd0 = 1;
}

/* 800D102C-800D1088 0CB96C 005C+00 2/2 0/0 0/0 .text            checkCutFinishJumpUp__9daAlink_cFv
 */
#ifdef NONMATCHING
bool daAlink_c::checkCutFinishJumpUp() {
    return checkCutBackState() && (!checkNotBattleStage() && swordSwingTrigger());
}
#else
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm bool daAlink_c::checkCutFinishJumpUp() {
    nofralloc
#include "asm/d/a/d_a_alink/checkCutFinishJumpUp__9daAlink_cFv.s"
}
#pragma pop
#endif

/* 800D1088-800D10E0 0CB9C8 0058+00 2/2 0/0 0/0 .text            changeCutFast__9daAlink_cFv */
void daAlink_c::changeCutFast() {
    deleteEquipItem(0, 0);
    setSwordModel();
    mComboCutCount = 3;
    checkCutAction();
    i_onNoResetFlg0(FLG0_UNK_80000);
}

/* 800D10E0-800D1268 0CBA20 0188+00 1/1 0/0 0/0 .text            checkCutFastReady__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkCutFastReady() {
    nofralloc
#include "asm/d/a/d_a_alink/checkCutFastReady__9daAlink_cFv.s"
}
#pragma pop

bool daPy_py_c::checkWoodSwordEquip() {
    return dComIfGs_getSelectEquipSword() == WOOD_STICK;
}

/* 800D1268-800D1310 0CBBA8 00A8+00 9/9 0/0 0/0 .text            setSwordModel__9daAlink_cFv */
void daAlink_c::setSwordModel() {
    field_0x2fde = 0xFF;
    mEquipItem = EQUIP_SWORD;

    mDoAud_bgmSetSwordUsing(1);
    field_0x2f94 = 0;

    if (checkWoodSwordEquip()) {
        mSwordModel->getModelData()->getMaterialNodePointer(1)->getShape()->hide();
    } else {
        mSwordModel->getModelData()->getMaterialNodePointer(0)->getShape()->show();
    }
}

/* 800D1310-800D13AC 0CBC50 009C+00 2/2 0/0 0/0 .text            offSwordModel__9daAlink_cFv */
void daAlink_c::offSwordModel() {
    mDoAud_bgmSetSwordUsing(0);

    if (mSwordModel == field_0x0668 || mSwordModel == field_0x0660) {
        mSwordModel->getModelData()->getMaterialNodePointer(0)->getShape()->hide();
    } else if (mSwordModel == field_0x0670) {
        field_0x0670->getModelData()->getMaterialNodePointer(1)->getShape()->show();
    }
}

/* 800D13AC-800D13E4 0CBCEC 0038+00 1/1 0/0 0/0 .text            checkCutTypeNoBlur__9daAlink_cCFv
 */
BOOL daAlink_c::checkCutTypeNoBlur() const {
    return mCutType == TYPE_CUT_STAB || mCutType == TYPE_CUT_STAB_COMBO ||
           mCutType == TYPE_CUT_STAB_FINISH || i_checkNoResetFlg0(UNDER_WATER_MOVEMENT);
}

/* 800D13E4-800D1424 0CBD24 0040+00 7/7 0/0 0/0 .text            checkCutTurnInput__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm bool daAlink_c::checkCutTurnInput() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkCutTurnInput__9daAlink_cCFv.s"
}
#pragma pop

/* 800D1424-800D1430 0CBD64 000C+00 7/7 0/0 0/0 .text            getCutTurnDirection__9daAlink_cCFv
 */
int daAlink_c::getCutTurnDirection() const {
    return field_0x3180 < 0;
}

/* 800D1430-800D1454 0CBD70 0024+00 17/17 0/0 0/0 .text            resetCombo__9daAlink_cFi */
void daAlink_c::resetCombo(int param_0) {
    mComboCutCount = 0;
    i_offNoResetFlg0(FLG0_UNK_8000);
    if (param_0 != 0) {
        mRunCutComboCount = 0;
    }
}

/* 800D1454-800D152C 0CBD94 00D8+00 1/1 0/0 0/0 .text            checkComboCnt__9daAlink_cFv */
// something with i_checkAttentionLock
#ifdef NONMATCHING
void daAlink_c::checkComboCnt() {
    if ((mEquipItem == EQUIP_SWORD && mComboCutCount == 2) &&
        (i_checkAttentionLock() && (field_0x122C[0].ChkAtHit() || field_0x122C[1].ChkAtHit() ||
                                    field_0x122C[2].ChkAtHit()))) {
        i_onNoResetFlg0(FLG0_UNK_8000);
    }
    if (field_0x307e > 0) {
        field_0x307e--;
    } else {
        resetCombo(1);
    }
}
#else
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkComboCnt() {
    nofralloc
#include "asm/d/a/d_a_alink/checkComboCnt__9daAlink_cFv.s"
}
#pragma pop
#endif

/* 800D152C-800D1540 0CBE6C 0014+00 22/22 0/0 0/0 .text            setCutType__9daAlink_cFUc */
void daAlink_c::setCutType(u8 type) {
    mCutType = type;
    i_offResetFlg0(RFLG0_UNK_8000000);
}

/* 800D1540-800D1688 0CBE80 0148+00 8/8 0/0 0/0 .text
 * setCylAtParam__9daAlink_cFUl11dCcG_At_SplUcUciff             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setCylAtParam(u32 param_0, dCcG_At_Spl param_1, u8 param_2, u8 param_3,
                                  int param_4, f32 param_5, f32 param_6) {
    nofralloc
#include "asm/d/a/d_a_alink/setCylAtParam__9daAlink_cFUl11dCcG_At_SplUcUciff.s"
}
#pragma pop

/* 800D1688-800D1788 0CBFC8 0100+00 9/9 0/0 0/0 .text
 * setSwordAtParam__9daAlink_cF11dCcG_At_SplUcUciff             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSwordAtParam(dCcG_At_Spl param_0, u8 param_1, u8 param_2, int param_3,
                                    f32 param_4, f32 param_5) {
    nofralloc
#include "asm/d/a/d_a_alink/setSwordAtParam__9daAlink_cF11dCcG_At_SplUcUciff.s"
}
#pragma pop

/* 800D1788-800D17EC 0CC0C8 0064+00 1/1 0/0 1/1 .text
 * notSwordHitVibActor__9daAlink_cFP10fopAc_ac_c                */
bool daAlink_c::notSwordHitVibActor(fopAc_ac_c* p_actor) {
    if (p_actor != NULL && fopAcM_GetGroup(p_actor) == 4) {
        s16 name = fopAcM_GetName(p_actor);
        if (!checkSpecialNpc(p_actor) && name != 0x108 && name != 0x240) {
            return true;
        }
    }
    return false;
}

/* 800D17EC-800D1920 0CC12C 0134+00 4/4 0/0 0/0 .text
 * setSwordHitVibration__9daAlink_cFP12dCcD_GObjInf             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSwordHitVibration(dCcD_GObjInf* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setSwordHitVibration__9daAlink_cFP12dCcD_GObjInf.s"
}
#pragma pop

/* 800D1920-800D1978 0CC260 0058+00 3/3 0/0 0/0 .text checkAtShieldHit__9daAlink_cFR12dCcD_GObjInf
 */
BOOL daAlink_c::checkAtShieldHit(dCcD_GObjInf& param_0) {
    return param_0.ChkAtHit() && param_0.ChkAtShieldHit();
}

/* 800D1978-800D19C8 0CC2B8 0050+00 1/1 0/0 0/0 .text
 * checkCutReverseAt__9daAlink_cFP12dCcD_GObjInf                */
bool daAlink_c::checkCutReverseAt(dCcD_GObjInf* param_0) {
    param_0->GetAtHitAc();
    return checkAtShieldHit(*param_0) ? true : false;
}

/* 800D19C8-800D1E1C 0CC308 0454+00 5/5 0/0 0/0 .text
 * changeCutReverseProc__9daAlink_cFQ29daAlink_c11daAlink_ANM   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm BOOL daAlink_c::changeCutReverseProc(daAlink_c::daAlink_ANM param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/changeCutReverseProc__9daAlink_cFQ29daAlink_c11daAlink_ANM.s"
}
#pragma pop

/* 800D1E1C-800D20B4 0CC75C 0298+00 4/4 0/0 0/0 .text            setCutDash__9daAlink_cFii */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setCutDash(int param_0, int param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/setCutDash__9daAlink_cFii.s"
}
#pragma pop

/* 800D20B4-800D20FC 0CC9F4 0048+00 4/4 0/0 0/0 .text            checkForceSwordSwing__9daAlink_cFv
 */
BOOL daAlink_c::checkForceSwordSwing() {
    return mEquipItem == EQUIP_SWORD && swordSwingTrigger();
}

/* 800D20FC-800D2188 0CCA3C 008C+00 7/7 0/0 0/0 .text            setComboReserb__9daAlink_cFv */
void daAlink_c::setComboReserb() {
    if (i_checkWolf()) {
        field_0x307e = daAlinkHIO_wlAttack_c0::m.mComboDuration;
    } else {
        field_0x307e = daAlinkHIO_cut_c0::m.mComboDuration;
    }
    if (mComboCutCount != 4 && field_0x2fce == 0 && swordSwingTrigger()) {
        i_onNoResetFlg2(UNK_FLG2_2);
    }
}

/* 800D2188-800D21D0 0CCAC8 0048+00 1/1 0/0 0/0 .text            checkComboReserb__9daAlink_cFv */
BOOL daAlink_c::checkComboReserb() {
    return i_checkNoResetFlg2(UNK_FLG2_2) && !checkEventRun();
}

inline u8 i_dComIfGp_getDoStatus() {
    return g_dComIfG_gameInfo.play.getDoStatus();
}

/* 800D21D0-800D2284 0CCB10 00B4+00 1/1 0/0 0/0 .text            commonCutAction__9daAlink_cFv */
bool daAlink_c::commonCutAction() {
    if (mComboCutCount == 4) {
        resetCombo(1);
    }

    if (i_dComIfGp_getDoStatus() == 4) {
        setDoStatus(0);
    }
    mComboCutCount++;

    if (i_checkReinRide()) {
        procHorseCutInit();
        if (mComboCutCount > 1) {
            mComboCutCount = 1;
        }
        return true;
    } else {
        return false;
    }
}

/* 800D2284-800D22BC 0CCBC4 0038+00 13/13 0/0 0/0 .text            setSwordVoiceSe__9daAlink_cFUl */
void daAlink_c::setSwordVoiceSe(u32 sfx_id) {
    if (!i_checkNoResetFlg0(UNDER_WATER_MOVEMENT)) {
        voiceStart(sfx_id);
    }
}

/* 800D22BC-800D2304 0CCBFC 0048+00 3/3 0/0 0/0 .text            setSwordChargeVoiceSe__9daAlink_cFv
 */
void daAlink_c::setSwordChargeVoiceSe() {
    if (mCommonCounter != 0) {
        mCommonCounter--;
        if (mCommonCounter == 0) {
            setSwordVoiceSe(Z2SE_AL_V_TAME);
        }
    }
}

/* 800D2304-800D2368 0CCC44 0064+00 3/3 0/0 0/0 .text            setSwordComboVoice__9daAlink_cFv */
void daAlink_c::setSwordComboVoice() {
    if (mActionID == CUT_JUMP || mComboCutCount == 4) {
        setSwordVoiceSe(Z2SE_AL_V_ATTACK_L);
    } else if (mComboCutCount == 1) {
        setSwordVoiceSe(Z2SE_AL_V_ATTACK_S);
    } else {
        setSwordVoiceSe(Z2SE_AL_V_ATTACK_M);
    }
}

/* 800D2368-800D23C0 0CCCA8 0058+00 3/3 0/0 0/0 .text checkCutTurnInputTrigger__9daAlink_cFv */
bool daAlink_c::checkCutTurnInputTrigger() {
    return swordSwingTrigger() && checkCutTurnInput();
}

/* 800D23C0-800D2684 0CCD00 02C4+00 7/7 0/0 0/0 .text            checkCutAction__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkCutAction() {
    nofralloc
#include "asm/d/a/d_a_alink/checkCutAction__9daAlink_cFv.s"
}
#pragma pop

/* 800D2684-800D26EC 0CCFC4 0068+00 9/9 0/0 0/0 .text            checkCutTurnCharge__9daAlink_cFv */
void daAlink_c::checkCutTurnCharge() {
    if (swordButton()) {
        if (field_0x3012 < 3) {
            field_0x3012++;
        } else {
            i_onResetFlg0(RFLG0_UNK_40);
        }
    } else {
        field_0x3012 = 0;
    }
}

/* 800D26EC-800D2760 0CD02C 0074+00 4/4 0/0 0/0 .text            getCutDirection__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getCutDirection() {
    nofralloc
#include "asm/d/a/d_a_alink/getCutDirection__9daAlink_cFv.s"
}
#pragma pop

/* 800D2760-800D27E4 0CD0A0 0084+00 4/4 0/0 0/0 .text checkCutCancelNextMode__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkCutCancelNextMode(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkCutCancelNextMode__9daAlink_cFi.s"
}
#pragma pop

/* 800D27E4-800D2890 0CD124 00AC+00 4/4 0/0 0/0 .text            checkDoCutAction__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkDoCutAction() {
    nofralloc
#include "asm/d/a/d_a_alink/checkDoCutAction__9daAlink_cFv.s"
}
#pragma pop

/* 800D2890-800D28F4 0CD1D0 0064+00 2/2 0/0 0/0 .text            checkCutBackState__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm BOOL daAlink_c::checkCutBackState() {
    nofralloc
#include "asm/d/a/d_a_alink/checkCutBackState__9daAlink_cFv.s"
}
#pragma pop

/* 800D28F4-800D29D4 0CD234 00E0+00 6/6 0/0 0/0 .text            checkCutHeadState__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkCutHeadState() {
    nofralloc
#include "asm/d/a/d_a_alink/checkCutHeadState__9daAlink_cFv.s"
}
#pragma pop

/* 800D29D4-800D2ABC 0CD314 00E8+00 4/4 0/0 0/0 .text            checkDownAttackState__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkDownAttackState() {
    nofralloc
#include "asm/d/a/d_a_alink/checkDownAttackState__9daAlink_cFv.s"
}
#pragma pop

/* 800D2ABC-800D2B88 0CD3FC 00CC+00 1/1 1/1 0/0 .text checkCutLargeTurnState__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkCutLargeTurnState() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkCutLargeTurnState__9daAlink_cCFv.s"
}
#pragma pop

/* 800D2B88-800D2BFC 0CD4C8 0074+00 2/2 0/0 0/0 .text            cancelCutCharge__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::cancelCutCharge() {
    nofralloc
#include "asm/d/a/d_a_alink/cancelCutCharge__9daAlink_cFv.s"
}
#pragma pop

/* 800D2BFC-800D2C54 0CD53C 0058+00 3/3 0/0 0/0 .text            initCutAtnActorSearch__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::initCutAtnActorSearch() {
    nofralloc
#include "asm/d/a/d_a_alink/initCutAtnActorSearch__9daAlink_cFv.s"
}
#pragma pop

/* 800D2C54-800D2C78 0CD594 0024+00 3/3 0/0 0/0 .text checkCutAtnActorChange__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkCutAtnActorChange() {
    nofralloc
#include "asm/d/a/d_a_alink/checkCutAtnActorChange__9daAlink_cFv.s"
}
#pragma pop

/* 800D2C78-800D2F58 0CD5B8 02E0+00 2/2 0/0 0/0 .text            setCutJumpSpeed__9daAlink_cFi */
// literals, and small issue with JMAFastSqrt instructions
#ifdef NONMATCHING
void daAlink_c::setCutJumpSpeed(int cut_type) {
    if (i_checkNoResetFlg0(UNDER_WATER_MOVEMENT)) {
        mNormalSpeed *= daAlinkHIO_magneBoots_c0::m.mWaterVelocityX;
        mSpeed.y *= daAlinkHIO_magneBoots_c0::m.mWaterVelocityY;
    } else if (checkHeavyStateOn(1, 1)) {
        mSpeed.y *= 1.35f;
    }

    // cut_type 0 = standing jump attack
    if (mTargetedActor != NULL && cut_type == 0) {
        mCollisionRot.y = cLib_targetAngleY(&mCurrent.mPosition, &mTargetedActor->mEyePos);
        cXyz targetPos(mTargetedActor->mEyePos.x - (cM_ssin(mCollisionRot.y) * 70.0f),
                       mTargetedActor->mEyePos.y + 50.0f,
                       mTargetedActor->mEyePos.z - (cM_scos(mCollisionRot.y) * 70.0f));

        if (fopAcM_gc_c::gndCheck(&targetPos)) {
            targetPos.y = fopAcM_gc_c::getGroundY();
        } else {
            targetPos.y = mTargetedActor->mEyePos.y;
        }

        f32 dvar12 = mSpeed.y + mGravity;
        f32 dvar10 = 1.0f / mGravity;
        f32 fvar1 = targetPos.y - (mCurrent.mPosition.y - (dvar10 * (dvar12 * dvar12) * 0.5f));

        if (fvar1 > 0.0f) {
            fvar1 = 0.0f;
        }
        f32 sqrt = JMAFastSqrt(fvar1 * 2.0f * dvar10);
        f32 speedDiv = sqrt - (dvar12 * dvar10);
        f32 squareDist = mCurrent.mPosition.absXZ(targetPos);

        if (squareDist > 500.0f) {
            squareDist = 500.0f;
        }
        mNormalSpeed = squareDist / speedDiv;
    }
}
#else
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setCutJumpSpeed(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setCutJumpSpeed__9daAlink_cFi.s"
}
#pragma pop
#endif

/* 800D2F58-800D31B8 0CD898 0260+00 3/3 0/0 0/0 .text            procCutNormalInit__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCutNormalInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procCutNormalInit__9daAlink_cFi.s"
}
#pragma pop

/* 800D31B8-800D34D8 0CDAF8 0320+00 1/0 0/0 0/0 .text            procCutNormal__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCutNormal() {
    nofralloc
#include "asm/d/a/d_a_alink/procCutNormal__9daAlink_cFv.s"
}
#pragma pop

/* 800D34D8-800D382C 0CDE18 0354+00 4/4 0/0 0/0 .text            procCutFinishInit__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCutFinishInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procCutFinishInit__9daAlink_cFi.s"
}
#pragma pop

/* 800D382C-800D3ADC 0CE16C 02B0+00 1/0 0/0 0/0 .text            procCutFinish__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCutFinish() {
    nofralloc
#include "asm/d/a/d_a_alink/procCutFinish__9daAlink_cFv.s"
}
#pragma pop

/* 800D3ADC-800D3CCC 0CE41C 01F0+00 2/2 0/0 0/0 .text procCutFinishJumpUpInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCutFinishJumpUpInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCutFinishJumpUpInit__9daAlink_cFv.s"
}
#pragma pop

/* 800D3CCC-800D3DD8 0CE60C 010C+00 1/0 0/0 0/0 .text            procCutFinishJumpUp__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCutFinishJumpUp() {
    nofralloc
#include "asm/d/a/d_a_alink/procCutFinishJumpUp__9daAlink_cFv.s"
}
#pragma pop

/* 800D3DD8-800D3ECC 0CE718 00F4+00 1/1 0/0 0/0 .text procCutFinishJumpUpLandInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCutFinishJumpUpLandInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCutFinishJumpUpLandInit__9daAlink_cFv.s"
}
#pragma pop

/* 800D3ECC-800D4068 0CE80C 019C+00 1/0 0/0 0/0 .text procCutFinishJumpUpLand__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCutFinishJumpUpLand() {
    nofralloc
#include "asm/d/a/d_a_alink/procCutFinishJumpUpLand__9daAlink_cFv.s"
}
#pragma pop

/* 800D4068-800D41FC 0CE9A8 0194+00 2/2 0/0 0/0 .text
 * procCutReverseInit__9daAlink_cFQ29daAlink_c11daAlink_ANM     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCutReverseInit(daAlink_c::daAlink_ANM param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procCutReverseInit__9daAlink_cFQ29daAlink_c11daAlink_ANM.s"
}
#pragma pop

/* 800D41FC-800D42FC 0CEB3C 0100+00 1/0 0/0 0/0 .text            procCutReverse__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCutReverse() {
    nofralloc
#include "asm/d/a/d_a_alink/procCutReverse__9daAlink_cFv.s"
}
#pragma pop

/* 800D42FC-800D43F8 0CEC3C 00FC+00 2/2 0/0 0/0 .text            procCutJumpInit__9daAlink_cFi */
bool daAlink_c::procCutJumpInit(int jump_type) {
    commonProcInit(CUT_JUMP);
    setSingleAnimeParam(ANM_CUT_JUMP, &daAlinkHIO_cutJump_c0::m.mCutAnm);
    if (jump_type != 0) {
        mNormalSpeed = daAlinkHIO_cutJump_c0::m.mAirJumpSpeedH;
        mSpeed.y = daAlinkHIO_cutJump_c0::m.mAirJumpSpeedV;
    } else {
        mNormalSpeed = daAlinkHIO_cutJump_c0::m.mBaseJumpSpeedH;
        mSpeed.y = daAlinkHIO_cutJump_c0::m.mBaseJumpSpeedV;
    }
    setCutJumpSpeed(jump_type);
    mCurrent.mAngle.y = mCollisionRot.y;
    setSwordAtParam(dCcG_At_Spl_UNK_01, 3, 1, 3, daAlinkHIO_cut_c0::m.mSwordLength,
                    daAlinkHIO_cut_c0::m.mSwordRadius);
    setCutType(TYPE_CUT_JUMP);
    setSwordComboVoice();
    dComIfGp_setPlayerStatus0(0, 0x8000);
    field_0x3198 = 2;
    return true;
}

/* 800D43F8-800D452C 0CED38 0134+00 1/0 0/0 0/0 .text            procCutJump__9daAlink_cFv */
#ifdef NONMATCHING
bool daAlink_c::procCutJump() {
    if (mCurrent.mAngle.y == mCollisionRot.y && changeCutReverseProc(ANM_CUT_JUMP)) {
        mCurrent.mAngle.y += 0x8000;
        mNormalSpeed = 27.0f;
        cXyz xyz(0.0f, 1.0f, 0.0f);
        dComIfGp_getVibration().StartShock(5, 31, xyz);
    } else if (mCurrent.mAngle.y != mCollisionRot.y) {
        cLib_chaseF(&mNormalSpeed, 5.0f, 1.0f);
    }

    if (checkCutTurnInput()) {
        field_0x3198 = getCutTurnDirection();
    }
    if (mLinkAcch.ChkGroundHit()) {
        procCutJumpLandInit(field_0x3198);
    } else if (mFrameCtrl1[0].getFrame() >= daAlinkHIO_cutJump_c0::m.mStartAttackFrame) {
        if (!i_checkNoResetFlg0(FLG0_UNK_40)) {
            seStartSwordCut(Z2SE_AL_SWORD_SWING_L);
        }
        i_onResetFlg0(RFLG0_UNK_2);
    }
    return true;
}
#else
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm bool daAlink_c::procCutJump() {
    nofralloc
#include "asm/d/a/d_a_alink/procCutJump__9daAlink_cFv.s"
}
#pragma pop
#endif

/* 800D452C-800D4684 0CEE6C 0158+00 1/1 0/0 0/0 .text            procCutJumpLandInit__9daAlink_cFi
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCutJumpLandInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procCutJumpLandInit__9daAlink_cFi.s"
}
#pragma pop

/* 800D4684-800D47DC 0CEFC4 0158+00 1/0 0/0 0/0 .text            procCutJumpLand__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCutJumpLand() {
    nofralloc
#include "asm/d/a/d_a_alink/procCutJumpLand__9daAlink_cFv.s"
}
#pragma pop

/* 800D47DC-800D4A74 0CF11C 0298+00 7/7 0/0 0/0 .text            procCutTurnInit__9daAlink_cFii */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCutTurnInit(int param_0, int param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/procCutTurnInit__9daAlink_cFii.s"
}
#pragma pop

/* 800D4A74-800D4C68 0CF3B4 01F4+00 1/0 0/0 0/0 .text            procCutTurn__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCutTurn() {
    nofralloc
#include "asm/d/a/d_a_alink/procCutTurn__9daAlink_cFv.s"
}
#pragma pop

/* 800D4C68-800D4D04 0CF5A8 009C+00 3/3 0/0 0/0 .text            procCutTurnChargeInit__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCutTurnChargeInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCutTurnChargeInit__9daAlink_cFv.s"
}
#pragma pop

/* 800D4D04-800D4DDC 0CF644 00D8+00 1/0 0/0 0/0 .text            procCutTurnCharge__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCutTurnCharge() {
    nofralloc
#include "asm/d/a/d_a_alink/procCutTurnCharge__9daAlink_cFv.s"
}
#pragma pop

/* 800D4DDC-800D4EFC 0CF71C 0120+00 3/3 0/0 0/0 .text            procCutTurnMoveInit__9daAlink_cFi
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCutTurnMoveInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procCutTurnMoveInit__9daAlink_cFi.s"
}
#pragma pop

/* 800D4EFC-800D53C8 0CF83C 04CC+00 1/0 0/0 0/0 .text            procCutTurnMove__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCutTurnMove() {
    nofralloc
#include "asm/d/a/d_a_alink/procCutTurnMove__9daAlink_cFv.s"
}
#pragma pop

/* 800D53C8-800D57F8 0CFD08 0430+00 2/1 0/0 0/0 .text            procCutDownInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCutDownInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCutDownInit__9daAlink_cFv.s"
}
#pragma pop

/* 800D57F8-800D58A0 0D0138 00A8+00 1/0 0/0 0/0 .text            procCutDown__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCutDown() {
    nofralloc
#include "asm/d/a/d_a_alink/procCutDown__9daAlink_cFv.s"
}
#pragma pop

/* 800D58A0-800D5ADC 0D01E0 023C+00 1/1 0/0 0/0 .text
 * procCutDownLandInit__9daAlink_cFP13fopEn_enemy_c             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCutDownLandInit(fopEn_enemy_c* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procCutDownLandInit__9daAlink_cFP13fopEn_enemy_c.s"
}
#pragma pop

/* 800D5ADC-800D5C88 0D041C 01AC+00 1/0 0/0 0/0 .text            procCutDownLand__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCutDownLand() {
    nofralloc
#include "asm/d/a/d_a_alink/procCutDownLand__9daAlink_cFv.s"
}
#pragma pop

/* 800D5C88-800D5FC8 0D05C8 0340+00 2/1 0/0 0/0 .text            procCutHeadInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCutHeadInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCutHeadInit__9daAlink_cFv.s"
}
#pragma pop

/* 800D5FC8-800D6130 0D0908 0168+00 1/0 0/0 0/0 .text            procCutHead__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCutHead() {
    nofralloc
#include "asm/d/a/d_a_alink/procCutHead__9daAlink_cFv.s"
}
#pragma pop

/* 800D6130-800D618C 0D0A70 005C+00 1/1 0/0 0/0 .text            procCutHeadLandInit__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCutHeadLandInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCutHeadLandInit__9daAlink_cFv.s"
}
#pragma pop

/* 800D618C-800D6238 0D0ACC 00AC+00 1/0 0/0 0/0 .text            procCutHeadLand__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCutHeadLand() {
    nofralloc
#include "asm/d/a/d_a_alink/procCutHeadLand__9daAlink_cFv.s"
}
#pragma pop

/* 800D6238-800D62A0 0D0B78 0068+00 2/2 0/0 0/0 .text procCutLargeJumpChargeInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCutLargeJumpChargeInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCutLargeJumpChargeInit__9daAlink_cFv.s"
}
#pragma pop

/* 800D62A0-800D6374 0D0BE0 00D4+00 1/0 0/0 0/0 .text procCutLargeJumpCharge__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCutLargeJumpCharge() {
    nofralloc
#include "asm/d/a/d_a_alink/procCutLargeJumpCharge__9daAlink_cFv.s"
}
#pragma pop

/* 800D6374-800D6484 0D0CB4 0110+00 2/1 0/0 0/0 .text            procCutLargeJumpInit__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCutLargeJumpInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCutLargeJumpInit__9daAlink_cFv.s"
}
#pragma pop

/* 800D6484-800D66C0 0D0DC4 023C+00 1/0 0/0 0/0 .text            procCutLargeJump__9daAlink_cFv */
bool daAlink_c::procCutLargeJump() {
    daPy_frameCtrl_c* ctrl = &mFrameCtrl1[0];

    if (field_0x3010 != 0) {
        field_0x2f99 = 4;
    }

    if (i_checkModeFlg(2) && checkCutTurnInput()) {
        field_0x3198 = getCutTurnDirection();
    }

    if (mCommonCounter == 0) {
        if (ctrl->checkAnmEnd()) {
            field_0x2f99 = 12;
            setSingleAnimeParam(ANM_CUT_JUMP_LARGE, &daAlinkHIO_cutLargeJump_c0::m.mCutAnm);
            mCommonCounter = 1;
            setSwordVoiceSe(Z2SE_AL_V_JUMP_ATTACK_L_2);
        } else {
            if (ctrl->getFrame() >= lit_7307) {
                field_0x3010 = 1;
            }

            if (!i_checkModeFlg(2) && ctrl->getFrame() >= lit_7808) {
                setJumpMode();
                mNormalSpeed = daAlinkHIO_cutLargeJump_c0::m.mCutSpeedH;
                mSpeed.y = daAlinkHIO_cutLargeJump_c0::m.mCutSpeedV;
                setCutJumpSpeed(0);
            }

            if (ctrl->getFrame() >= daAlinkHIO_cutLargeJump_c0::m.mJumpAttackStartF &&
                ctrl->getFrame() < daAlinkHIO_cutLargeJump_c0::m.mJumpAttackEndF) {
                if (!i_checkNoResetFlg0(FLG0_UNK_40)) {
                    seStartSwordCut(Z2SE_AL_SWORD_SWING_S);
                }
                i_onResetFlg0(2);
            }
        }
    } else {
        if (field_0x300e != 0) {
            field_0x300e--;
            if (field_0x300e == 0) {
                setSwordAtParam(dCcG_At_Spl_UNK_01, 3, 1, 4, daAlinkHIO_cut_c0::m.mSwordLength,
                                daAlinkHIO_cut_c0::m.mSwordRadius);
                setCutType(TYPE_CUT_LARGE_JUMP);
            }
        }

        if (mLinkAcch.ChkGroundHit()) {
            procCutLargeJumpLandInit(field_0x3198);
        } else {
            if (ctrl->getFrame() >= daAlinkHIO_cutLargeJump_c0::m.mCutInitF) {
                if (!i_checkNoResetFlg0(FLG0_UNK_40)) {
                    seStartSwordCut(Z2SE_AL_SWORD_SWING_S);
                }
                i_onResetFlg0(2);
            }
        }
    }
    return true;
}

/* 800D66C0-800D67FC 0D1000 013C+00 1/1 0/0 0/0 .text procCutLargeJumpLandInit__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCutLargeJumpLandInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procCutLargeJumpLandInit__9daAlink_cFi.s"
}
#pragma pop

/* 800D67FC-800D698C 0D113C 0190+00 1/0 0/0 0/0 .text            procCutLargeJumpLand__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCutLargeJumpLand() {
    nofralloc
#include "asm/d/a/d_a_alink/procCutLargeJumpLand__9daAlink_cFv.s"
}
#pragma pop

/* 800D698C-800D6A38 0D12CC 00AC+00 2/1 0/0 0/0 .text procSwordUnequipSpInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSwordUnequipSpInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procSwordUnequipSpInit__9daAlink_cFv.s"
}
#pragma pop

/* 800D6A38-800D6D94 0D1378 035C+00 1/0 0/0 0/0 .text            procSwordUnequipSp__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSwordUnequipSp() {
    nofralloc
#include "asm/d/a/d_a_alink/procSwordUnequipSp__9daAlink_cFv.s"
}
#pragma pop

/* 800D6D94-800D6DA4 0D16D4 0010+00 0/0 0/0 2/2 .text            getFreezeR__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getFreezeR() const {
    nofralloc
#include "asm/d/a/d_a_alink/getFreezeR__9daAlink_cCFv.s"
}
#pragma pop

/* 800D6DA4-800D6DB4 0D16E4 0010+00 0/0 0/0 2/2 .text            getFreezeG__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getFreezeG() const {
    nofralloc
#include "asm/d/a/d_a_alink/getFreezeG__9daAlink_cCFv.s"
}
#pragma pop

/* 800D6DB4-800D6DC4 0D16F4 0010+00 0/0 0/0 2/2 .text            getFreezeB__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getFreezeB() const {
    nofralloc
#include "asm/d/a/d_a_alink/getFreezeB__9daAlink_cCFv.s"
}
#pragma pop

/* 800D6DC4-800D6DF0 0D1704 002C+00 2/2 0/0 0/0 .text checkMiddleBossGoronRoom__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkMiddleBossGoronRoom() {
    nofralloc
#include "asm/d/a/d_a_alink/checkMiddleBossGoronRoom__9daAlink_cFv.s"
}
#pragma pop

/* 800D6DF0-800D6E24 0D1730 0034+00 1/0 0/0 0/0 .text setDkCaught__9daAlink_cFP10fopAc_ac_c */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setDkCaught(fopAc_ac_c* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setDkCaught__9daAlink_cFP10fopAc_ac_c.s"
}
#pragma pop

/* 800D6E24-800D6F00 0D1764 00DC+00 2/2 0/0 0/0 .text            freezeTimerDamage__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::freezeTimerDamage() {
    nofralloc
#include "asm/d/a/d_a_alink/freezeTimerDamage__9daAlink_cFv.s"
}
#pragma pop

/* 800D6F00-800D6F2C 0D1840 002C+00 1/0 0/0 0/0 .text onPressedDamage__9daAlink_cFRC4cXyzs */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::onPressedDamage(cXyz const& param_0, s16 param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/onPressedDamage__9daAlink_cFRC4cXyzs.s"
}
#pragma pop

/* 800D6F2C-800D6FE0 0D186C 00B4+00 3/3 0/0 0/0 .text checkNoLandDamageSlidePolygon__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkNoLandDamageSlidePolygon() {
    nofralloc
#include "asm/d/a/d_a_alink/checkNoLandDamageSlidePolygon__9daAlink_cFv.s"
}
#pragma pop

/* 800D6FE0-800D70A0 0D1920 00C0+00 6/6 0/0 0/0 .text            checkCutLandDamage__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkCutLandDamage() {
    nofralloc
#include "asm/d/a/d_a_alink/checkCutLandDamage__9daAlink_cFv.s"
}
#pragma pop

/* 800D70A0-800D7160 0D19E0 00C0+00 2/2 0/0 0/0 .text checkCaughtEscapeCutTurn__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkCaughtEscapeCutTurn() {
    nofralloc
#include "asm/d/a/d_a_alink/checkCaughtEscapeCutTurn__9daAlink_cFv.s"
}
#pragma pop

/* 800D7160-800D7208 0D1AA0 00A8+00 1/0 0/0 0/0 .text            setThrowDamage__9daAlink_cFsffiii
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm bool daAlink_c::setThrowDamage(s16 param_0, f32 param_1, f32 param_2, int param_3, int param_4,
                                   int param_5) {
    nofralloc
#include "asm/d/a/d_a_alink/setThrowDamage__9daAlink_cFsffiii.s"
}
#pragma pop

/* 800D7208-800D72BC 0D1B48 00B4+00 2/2 0/0 0/0 .text            damageMagnification__9daAlink_cFii
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::damageMagnification(int param_0, int param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/damageMagnification__9daAlink_cFii.s"
}
#pragma pop

/* 800D72BC-800D7478 0D1BFC 01BC+00 6/6 1/1 0/0 .text            setDamagePoint__9daAlink_cFiiii */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setDamagePoint(int param_0, int param_1, int param_2, int param_3) {
    nofralloc
#include "asm/d/a/d_a_alink/setDamagePoint__9daAlink_cFiiii.s"
}
#pragma pop

/* 800D7478-800D74A4 0D1DB8 002C+00 6/6 0/0 0/0 .text            setDamagePointNormal__9daAlink_cFi
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setDamagePointNormal(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setDamagePointNormal__9daAlink_cFi.s"
}
#pragma pop

/* 800D74A4-800D74F4 0D1DE4 0050+00 3/3 0/0 0/0 .text            setLandDamagePoint__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setLandDamagePoint(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setLandDamagePoint__9daAlink_cFi.s"
}
#pragma pop

/* 800D74F4-800D76C4 0D1E34 01D0+00 11/11 0/0 0/0 .text getDamageVec__9daAlink_cFP12dCcD_GObjInf
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getDamageVec(dCcD_GObjInf* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/getDamageVec__9daAlink_cFP12dCcD_GObjInf.s"
}
#pragma pop

/* 800D76C4-800D7768 0D2004 00A4+00 1/1 0/0 0/0 .text            setDashDamage__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setDashDamage() {
    nofralloc
#include "asm/d/a/d_a_alink/setDashDamage__9daAlink_cFv.s"
}
#pragma pop

/* 800D7768-800D77C8 0D20A8 0060+00 2/2 0/0 3/3 .text
 * checkIcePolygonDamage__9daAlink_cFP13cBgS_PolyInfo           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkIcePolygonDamage(cBgS_PolyInfo* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkIcePolygonDamage__9daAlink_cFP13cBgS_PolyInfo.s"
}
#pragma pop

/* 800D77C8-800D7820 0D2108 0058+00 8/8 0/0 0/0 .text checkMagicArmorNoDamage__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkMagicArmorNoDamage() {
    nofralloc
#include "asm/d/a/d_a_alink/checkMagicArmorNoDamage__9daAlink_cFv.s"
}
#pragma pop

/* 800D7820-800D7A98 0D2160 0278+00 1/1 0/0 0/0 .text            checkPolyDamage__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkPolyDamage() {
    nofralloc
#include "asm/d/a/d_a_alink/checkPolyDamage__9daAlink_cFv.s"
}
#pragma pop

/* 800D7A98-800D7B18 0D23D8 0080+00 1/1 0/0 0/0 .text
 * checkElecReturnDamage__9daAlink_cFR12dCcD_GObjInfPP10fopAc_ac_c */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkElecReturnDamage(dCcD_GObjInf& param_0, fopAc_ac_c** param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/checkElecReturnDamage__9daAlink_cFR12dCcD_GObjInfPP10fopAc_ac_c.s"
}
#pragma pop

/* 800D7B18-800D7BE8 0D2458 00D0+00 1/1 0/0 0/0 .text            damageTimerCount__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::damageTimerCount() {
    nofralloc
#include "asm/d/a/d_a_alink/damageTimerCount__9daAlink_cFv.s"
}
#pragma pop

/* 800D7BE8-800D7C14 0D2528 002C+00 3/3 0/0 0/0 .text            checkHugeAttack__9daAlink_cCFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkHugeAttack(int param_0) const {
    nofralloc
#include "asm/d/a/d_a_alink/checkHugeAttack__9daAlink_cCFi.s"
}
#pragma pop

/* 800D7C14-800D7C40 0D2554 002C+00 3/3 0/0 0/0 .text            checkLargeAttack__9daAlink_cCFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkLargeAttack(int param_0) const {
    nofralloc
#include "asm/d/a/d_a_alink/checkLargeAttack__9daAlink_cCFi.s"
}
#pragma pop

/* 800D7C40-800D8F3C 0D2580 12FC+00 1/1 0/0 0/0 .text            checkDamageAction__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkDamageAction() {
    nofralloc
#include "asm/d/a/d_a_alink/checkDamageAction__9daAlink_cFv.s"
}
#pragma pop

/* 800D8F3C-800D9514 0D387C 05D8+00 2/2 0/0 0/0 .text procDamageInit__9daAlink_cFP12dCcD_GObjInfi
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procDamageInit(dCcD_GObjInf* param_0, int param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/procDamageInit__9daAlink_cFP12dCcD_GObjInfi.s"
}
#pragma pop

/* 800D9514-800D96DC 0D3E54 01C8+00 1/0 0/0 0/0 .text            procDamage__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procDamage() {
    nofralloc
#include "asm/d/a/d_a_alink/procDamage__9daAlink_cFv.s"
}
#pragma pop

/* 800D96DC-800D9E88 0D401C 07AC+00 12/12 0/0 0/0 .text
 * procCoLargeDamageInit__9daAlink_cFiissP12dCcD_GObjInfi       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoLargeDamageInit(int param_0, int param_1, s16 param_2, s16 param_3,
                                          dCcD_GObjInf* param_4, int param_5) {
    nofralloc
#include "asm/d/a/d_a_alink/procCoLargeDamageInit__9daAlink_cFiissP12dCcD_GObjInfi.s"
}
#pragma pop

/* 800D9E88-800DA180 0D47C8 02F8+00 1/0 0/0 0/0 .text            procCoLargeDamage__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoLargeDamage() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoLargeDamage__9daAlink_cFv.s"
}
#pragma pop

/* 800DA180-800DA554 0D4AC0 03D4+00 2/2 0/0 0/0 .text procLargeDamageUpInit__9daAlink_cFiiss */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procLargeDamageUpInit(int param_0, int param_1, s16 param_2, s16 param_3) {
    nofralloc
#include "asm/d/a/d_a_alink/procLargeDamageUpInit__9daAlink_cFiiss.s"
}
#pragma pop

/* 800DA554-800DA82C 0D4E94 02D8+00 1/0 0/0 0/0 .text            procLargeDamageUp__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procLargeDamageUp() {
    nofralloc
#include "asm/d/a/d_a_alink/procLargeDamageUp__9daAlink_cFv.s"
}
#pragma pop

/* 800DA82C-800DAC28 0D516C 03FC+00 1/1 0/0 0/0 .text procCoLargeDamageWallInit__9daAlink_cFiiss
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoLargeDamageWallInit(int param_0, int param_1, s16 param_2, s16 param_3) {
    nofralloc
#include "asm/d/a/d_a_alink/procCoLargeDamageWallInit__9daAlink_cFiiss.s"
}
#pragma pop

/* 800DAC28-800DAC84 0D5568 005C+00 1/0 0/0 0/0 .text            procCoLargeDamageWall__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoLargeDamageWall() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoLargeDamageWall__9daAlink_cFv.s"
}
#pragma pop

/* 800DAC84-800DAD90 0D55C4 010C+00 2/2 0/0 0/0 .text            procCoPolyDamageInit__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoPolyDamageInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoPolyDamageInit__9daAlink_cFv.s"
}
#pragma pop

/* 800DAD90-800DAE10 0D56D0 0080+00 1/0 0/0 0/0 .text            procCoPolyDamage__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoPolyDamage() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoPolyDamage__9daAlink_cFv.s"
}
#pragma pop

/* 800DAE10-800DB060 0D5750 0250+00 2/2 0/0 0/0 .text            procLandDamageInit__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procLandDamageInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procLandDamageInit__9daAlink_cFi.s"
}
#pragma pop

/* 800DB060-800DB140 0D59A0 00E0+00 1/0 0/0 0/0 .text            procLandDamage__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procLandDamage() {
    nofralloc
#include "asm/d/a/d_a_alink/procLandDamage__9daAlink_cFv.s"
}
#pragma pop

/* 800DB140-800DB418 0D5A80 02D8+00 1/1 0/0 0/0 .text
 * procCoElecDamageInit__9daAlink_cFP10fopAc_ac_cP12dCcD_GObjInfi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoElecDamageInit(fopAc_ac_c* param_0, dCcD_GObjInf* param_1, int param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/procCoElecDamageInit__9daAlink_cFP10fopAc_ac_cP12dCcD_GObjInfi.s"
}
#pragma pop

/* 800DB418-800DB5B0 0D5D58 0198+00 1/0 0/0 0/0 .text            procCoElecDamage__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoElecDamage() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoElecDamage__9daAlink_cFv.s"
}
#pragma pop

/* 800DB5B0-800DB610 0D5EF0 0060+00 2/2 0/0 0/0 .text            procStEscapeInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procStEscapeInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procStEscapeInit__9daAlink_cFv.s"
}
#pragma pop

/* 800DB610-800DB6A4 0D5F50 0094+00 1/0 0/0 0/0 .text            procStEscape__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procStEscape() {
    nofralloc
#include "asm/d/a/d_a_alink/procStEscape__9daAlink_cFv.s"
}
#pragma pop

/* 800DB6A4-800DB860 0D5FE4 01BC+00 1/1 0/0 0/0 .text            procDkCaughtInit__9daAlink_cFUi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procDkCaughtInit(unsigned int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procDkCaughtInit__9daAlink_cFUi.s"
}
#pragma pop

/* 800DB860-800DBC98 0D61A0 0438+00 1/0 0/0 0/0 .text            procDkCaught__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procDkCaught() {
    nofralloc
#include "asm/d/a/d_a_alink/procDkCaught__9daAlink_cFv.s"
}
#pragma pop

/* 800DBC98-800DBD1C 0D65D8 0084+00 2/2 0/0 0/0 .text            setScreamWaitAnime__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setScreamWaitAnime() {
    nofralloc
#include "asm/d/a/d_a_alink/setScreamWaitAnime__9daAlink_cFv.s"
}
#pragma pop

/* 800DBD1C-800DBDA4 0D665C 0088+00 1/1 0/0 0/0 .text            procScreamWaitInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procScreamWaitInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procScreamWaitInit__9daAlink_cFv.s"
}
#pragma pop

/* 800DBDA4-800DBE00 0D66E4 005C+00 1/0 0/0 0/0 .text            procScreamWait__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procScreamWait() {
    nofralloc
#include "asm/d/a/d_a_alink/procScreamWait__9daAlink_cFv.s"
}
#pragma pop

/* 800DBE00-800DBE74 0D6740 0074+00 1/1 0/0 0/0 .text            procCoSandWallHitInit__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoSandWallHitInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoSandWallHitInit__9daAlink_cFv.s"
}
#pragma pop

/* 800DBE74-800DBED8 0D67B4 0064+00 1/0 0/0 0/0 .text            procCoSandWallHit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoSandWallHit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoSandWallHit__9daAlink_cFv.s"
}
#pragma pop

/* 800DBED8-800DC214 0D6818 033C+00 1/1 0/0 0/0 .text            procCoLavaReturnInit__9daAlink_cFi
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoLavaReturnInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procCoLavaReturnInit__9daAlink_cFi.s"
}
#pragma pop

/* 800DC214-800DC278 0D6B54 0064+00 1/0 0/0 0/0 .text            procCoLavaReturn__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoLavaReturn() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoLavaReturn__9daAlink_cFv.s"
}
#pragma pop

/* 800DC278-800DC474 0D6BB8 01FC+00 1/1 0/0 0/0 .text procCoSwimFreezeReturnInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoSwimFreezeReturnInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoSwimFreezeReturnInit__9daAlink_cFv.s"
}
#pragma pop

/* 800DC474-800DC548 0D6DB4 00D4+00 1/0 0/0 0/0 .text procCoSwimFreezeReturn__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoSwimFreezeReturn() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoSwimFreezeReturn__9daAlink_cFv.s"
}
#pragma pop

/* 800DC548-800DC5A4 0D6E88 005C+00 13/13 0/0 0/0 .text checkEnemyGroup__9daAlink_cFP10fopAc_ac_c
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm BOOL daAlink_c::checkEnemyGroup(fopAc_ac_c* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkEnemyGroup__9daAlink_cFP10fopAc_ac_c.s"
}
#pragma pop

/* 800DC5A4-800DC5DC 0D6EE4 0038+00 4/4 0/0 0/0 .text checkSpecialNpc__9daAlink_cFP10fopAc_ac_c */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm BOOL daAlink_c::checkSpecialNpc(fopAc_ac_c* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkSpecialNpc__9daAlink_cFP10fopAc_ac_c.s"
}
#pragma pop

/* 800DC5DC-800DC678 0D6F1C 009C+00 1/1 0/0 0/0 .text checkShieldAttackEmphasys__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkShieldAttackEmphasys() {
    nofralloc
#include "asm/d/a/d_a_alink/checkShieldAttackEmphasys__9daAlink_cFv.s"
}
#pragma pop

/* 800DC678-800DC79C 0D6FB8 0124+00 5/5 0/0 0/0 .text checkGuardActionChange__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm BOOL daAlink_c::checkGuardActionChange() {
    nofralloc
#include "asm/d/a/d_a_alink/checkGuardActionChange__9daAlink_cFv.s"
}
#pragma pop

/* 800DC79C-800DC8C4 0D70DC 0128+00 3/3 0/0 0/0 .text            stickArrowIncrement__9daAlink_cFi
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::stickArrowIncrement(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/stickArrowIncrement__9daAlink_cFi.s"
}
#pragma pop

/* 800DC8C4-800DCA2C 0D7204 0168+00 0/0 0/0 1/1 .text
 * setArrowShieldActor__9daAlink_cFP10fopAc_ac_ci               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setArrowShieldActor(fopAc_ac_c* param_0, int param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/setArrowShieldActor__9daAlink_cFP10fopAc_ac_ci.s"
}
#pragma pop

/* 800DCA2C-800DCA80 0D736C 0054+00 1/1 0/0 2/2 .text
 * checkWoodShieldEquipNotIronBall__9daAlink_cCFv               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkWoodShieldEquipNotIronBall() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkWoodShieldEquipNotIronBall__9daAlink_cCFv.s"
}
#pragma pop

/* 800DCA80-800DCD74 0D73C0 02F4+00 0/0 0/0 1/1 .text
 * getArrowShieldOffset__9daAlink_cCFPC4cXyzPC5csXyzP4cXyzP4cXyz */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getArrowShieldOffset(cXyz const* param_0, csXyz const* param_1, cXyz* param_2,
                                         cXyz* param_3) const {
    nofralloc
#include "asm/d/a/d_a_alink/getArrowShieldOffset__9daAlink_cCFPC4cXyzPC5csXyzP4cXyzP4cXyz.s"
}
#pragma pop

/* 800DCD74-800DCDF0 0D76B4 007C+00 0/0 0/0 2/2 .text
 * setArrowShieldPos__9daAlink_cCFP4cXyzP5csXyzPC4cXyzPC4cXyz   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setArrowShieldPos(cXyz* param_0, csXyz* param_1, cXyz const* param_2,
                                      cXyz const* param_3) const {
    nofralloc
#include "asm/d/a/d_a_alink/setArrowShieldPos__9daAlink_cCFP4cXyzP5csXyzPC4cXyzPC4cXyz.s"
}
#pragma pop

/* 800DCDF0-800DCE6C 0D7730 007C+00 17/17 0/0 0/0 .text checkUpperGuardAnime__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm BOOL daAlink_c::checkUpperGuardAnime() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkUpperGuardAnime__9daAlink_cCFv.s"
}
#pragma pop

/* 800DCE6C-800DCF04 0D77AC 0098+00 1/0 0/0 0/0 .text            checkPlayerGuard__9daAlink_cCFv */
#ifdef NONMATCHING
BOOL daAlink_c::checkPlayerGuard() const {
    bool ret = true;
    bool bvar2 = true;
    if (!i_checkSmallUpperGuardAnime()) {
        bool bvar1 = false;
        if (i_checkShieldGet() && checkHorseLieAnime()) {
            bvar1 = true;
        }
        if (!bvar1) {
            bvar2 = false;
        }
    }

    if (!bvar2 && !checkUpperGuardAnime()) {
        ret = false;
    }

    return ret;
}
#else
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm BOOL daAlink_c::checkPlayerGuard() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkPlayerGuard__9daAlink_cCFv.s"
}
#pragma pop
#endif

/* 800DCF04-800DCF64 0D7844 0060+00 5/5 0/0 0/0 .text checkPlayerGuardAndAttack__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkPlayerGuardAndAttack() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkPlayerGuardAndAttack__9daAlink_cCFv.s"
}
#pragma pop

/* 800DCF64-800DD008 0D78A4 00A4+00 2/2 0/0 0/0 .text            checkGuardAccept__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkGuardAccept() {
    nofralloc
#include "asm/d/a/d_a_alink/checkGuardAccept__9daAlink_cFv.s"
}
#pragma pop

/* 800DD008-800DD018 0D7948 0010+00 11/11 0/0 0/0 .text            setUpperGuardAnime__9daAlink_cFf
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setUpperGuardAnime(f32 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setUpperGuardAnime__9daAlink_cFf.s"
}
#pragma pop

/* 800DD018-800DD114 0D7958 00FC+00 1/1 0/0 0/0 .text            setShieldGuard__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setShieldGuard() {
    nofralloc
#include "asm/d/a/d_a_alink/setShieldGuard__9daAlink_cFv.s"
}
#pragma pop

/* 800DD114-800DD1D4 0D7A54 00C0+00 1/1 0/0 0/0 .text setGuardSe__9daAlink_cFP12dCcD_GObjInf */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setGuardSe(dCcD_GObjInf* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setGuardSe__9daAlink_cFP12dCcD_GObjInf.s"
}
#pragma pop

/* 800DD1D4-800DD3E4 0D7B14 0210+00 1/1 0/0 0/0 .text setSmallGuard__9daAlink_cFP12dCcD_GObjInf */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSmallGuard(dCcD_GObjInf* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setSmallGuard__9daAlink_cFP12dCcD_GObjInf.s"
}
#pragma pop

/* 800DD3E4-800DD894 0D7D24 04B0+00 1/1 0/0 0/0 .text
 * procGuardSlipInit__9daAlink_cFiP12dCcD_GObjInf               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procGuardSlipInit(int param_0, dCcD_GObjInf* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/procGuardSlipInit__9daAlink_cFiP12dCcD_GObjInf.s"
}
#pragma pop

/* 800DD894-800DDA10 0D81D4 017C+00 1/0 0/0 0/0 .text            procGuardSlip__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procGuardSlip() {
    nofralloc
#include "asm/d/a/d_a_alink/procGuardSlip__9daAlink_cFv.s"
}
#pragma pop

/* 800DDA10-800DDBA8 0D8350 0198+00 2/1 0/0 0/0 .text            procGuardAttackInit__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procGuardAttackInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procGuardAttackInit__9daAlink_cFv.s"
}
#pragma pop

/* 800DDBA8-800DDE58 0D84E8 02B0+00 1/0 0/0 0/0 .text            procGuardAttack__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procGuardAttack() {
    nofralloc
#include "asm/d/a/d_a_alink/procGuardAttack__9daAlink_cFv.s"
}
#pragma pop

/* 800DDE58-800DDF2C 0D8798 00D4+00 2/2 0/0 0/0 .text            procGuardBreakInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procGuardBreakInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procGuardBreakInit__9daAlink_cFv.s"
}
#pragma pop

/* 800DDF2C-800DE008 0D886C 00DC+00 1/0 0/0 0/0 .text            procGuardBreak__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procGuardBreak() {
    nofralloc
#include "asm/d/a/d_a_alink/procGuardBreak__9daAlink_cFv.s"
}
#pragma pop

/* 800DE008-800DE380 0D8948 0378+00 2/2 0/0 0/0 .text            procTurnMoveInit__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm bool daAlink_c::procTurnMoveInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procTurnMoveInit__9daAlink_cFi.s"
}
#pragma pop

/* 800DE380-800DE64C 0D8CC0 02CC+00 1/0 0/0 0/0 .text            procTurnMove__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procTurnMove() {
    nofralloc
#include "asm/d/a/d_a_alink/procTurnMove__9daAlink_cFv.s"
}
#pragma pop

/* 800DE64C-800DE740 0D8F8C 00F4+00 1/1 0/0 2/2 .text            getArrowFlyData__9daAlink_cCFPfPfi
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getArrowFlyData(f32* param_0, f32* param_1, int param_2) const {
    nofralloc
#include "asm/d/a/d_a_alink/getArrowFlyData__9daAlink_cCFPfPfi.s"
}
#pragma pop

/* 800DE740-800DE750 0D9080 0010+00 0/0 0/0 1/1 .text            getArrowIncAtR__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getArrowIncAtR() const {
    nofralloc
#include "asm/d/a/d_a_alink/getArrowIncAtR__9daAlink_cCFv.s"
}
#pragma pop

/* 800DE750-800DE760 0D9090 0010+00 0/0 0/0 1/1 .text getBombArrowFlyExplodeTime__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getBombArrowFlyExplodeTime() const {
    nofralloc
#include "asm/d/a/d_a_alink/getBombArrowFlyExplodeTime__9daAlink_cCFv.s"
}
#pragma pop

/* 800DE760-800DE770 0D90A0 0010+00 0/0 0/0 1/1 .text getArrowIncAtMaxStart__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getArrowIncAtMaxStart() const {
    nofralloc
#include "asm/d/a/d_a_alink/getArrowIncAtMaxStart__9daAlink_cCFv.s"
}
#pragma pop

/* 800DE770-800DE780 0D90B0 0010+00 0/0 0/0 1/1 .text            getArrowIncAtMax__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getArrowIncAtMax() const {
    nofralloc
#include "asm/d/a/d_a_alink/getArrowIncAtMax__9daAlink_cCFv.s"
}
#pragma pop

/* 800DE780-800DE7D4 0D90C0 0054+00 10/10 0/0 0/0 .text checkBowAndSlingItem__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm BOOL daAlink_c::checkBowAndSlingItem(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkBowAndSlingItem__9daAlink_cFi.s"
}
#pragma pop

/* 800DE7D4-800DE884 0D9114 00B0+00 1/1 0/0 0/0 .text            setSlingModel__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSlingModel() {
    nofralloc
#include "asm/d/a/d_a_alink/setSlingModel__9daAlink_cFv.s"
}
#pragma pop

/* 800DE884-800DE990 0D91C4 010C+00 0/0 1/1 1/1 .text checkBowCameraArrowPosP__9daAlink_cFPsPs */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkBowCameraArrowPosP(s16* param_0, s16* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/checkBowCameraArrowPosP__9daAlink_cFPsPs.s"
}
#pragma pop

/* 800DE990-800DE9B8 0D92D0 0028+00 1/0 0/0 0/0 .text            checkArrowChargeEnd__9daAlink_cCFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm bool daAlink_c::checkArrowChargeEnd() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkArrowChargeEnd__9daAlink_cCFv.s"
}
#pragma pop

/* 800DE9B8-800DE9E8 0D92F8 0030+00 3/3 0/0 0/0 .text            checkBowReadyAnime__9daAlink_cCFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkBowReadyAnime() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkBowReadyAnime__9daAlink_cCFv.s"
}
#pragma pop

/* 800DE9E8-800DEA3C 0D9328 0054+00 16/16 0/0 0/0 .text            checkBowAnime__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkBowAnime() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkBowAnime__9daAlink_cCFv.s"
}
#pragma pop

/* 800DEA3C-800DEAE4 0D937C 00A8+00 2/2 0/0 0/0 .text            makeArrow__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::makeArrow() {
    nofralloc
#include "asm/d/a/d_a_alink/makeArrow__9daAlink_cFv.s"
}
#pragma pop

/* 800DEAE4-800DEB8C 0D9424 00A8+00 3/3 0/0 0/0 .text            deleteArrow__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::deleteArrow() {
    nofralloc
#include "asm/d/a/d_a_alink/deleteArrow__9daAlink_cFv.s"
}
#pragma pop

/* 800DEB8C-800DEBC8 0D94CC 003C+00 6/6 0/0 0/0 .text            setBowOrSlingStatus__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setBowOrSlingStatus() {
    nofralloc
#include "asm/d/a/d_a_alink/setBowOrSlingStatus__9daAlink_cFv.s"
}
#pragma pop

/* 800DEBC8-800DED88 0D9508 01C0+00 1/1 0/0 0/0 .text            changeArrowType__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::changeArrowType() {
    nofralloc
#include "asm/d/a/d_a_alink/changeArrowType__9daAlink_cFv.s"
}
#pragma pop

/* 800DED88-800DEE1C 0D96C8 0094+00 1/1 0/0 0/0 .text cancelBowMoveRideNotAtn__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::cancelBowMoveRideNotAtn() {
    nofralloc
#include "asm/d/a/d_a_alink/cancelBowMoveRideNotAtn__9daAlink_cFv.s"
}
#pragma pop

/* 800DEE1C-800DEEDC 0D975C 00C0+00 3/3 0/0 0/0 .text            cancelBowMove__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::cancelBowMove() {
    nofralloc
#include "asm/d/a/d_a_alink/cancelBowMove__9daAlink_cFv.s"
}
#pragma pop

/* 800DEEDC-800DEFB8 0D981C 00DC+00 3/3 0/0 0/0 .text            setBowReadyAnime__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setBowReadyAnime() {
    nofralloc
#include "asm/d/a/d_a_alink/setBowReadyAnime__9daAlink_cFv.s"
}
#pragma pop

/* 800DEFB8-800DF0BC 0D98F8 0104+00 2/2 0/0 0/0 .text            setBowReloadAnime__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setBowReloadAnime() {
    nofralloc
#include "asm/d/a/d_a_alink/setBowReloadAnime__9daAlink_cFv.s"
}
#pragma pop

/* 800DF0BC-800DF798 0D99FC 06DC+00 2/2 0/0 0/0 .text checkUpperItemActionBow__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkUpperItemActionBow() {
    nofralloc
#include "asm/d/a/d_a_alink/checkUpperItemActionBow__9daAlink_cFv.s"
}
#pragma pop

/* 800DF798-800DF814 0DA0D8 007C+00 1/1 0/0 0/0 .text checkUpperItemActionBowFly__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkUpperItemActionBowFly() {
    nofralloc
#include "asm/d/a/d_a_alink/checkUpperItemActionBowFly__9daAlink_cFv.s"
}
#pragma pop

/* 800DF814-800DFAE8 0DA154 02D4+00 4/4 0/0 0/0 .text            checkNextActionBow__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkNextActionBow() {
    nofralloc
#include "asm/d/a/d_a_alink/checkNextActionBow__9daAlink_cFv.s"
}
#pragma pop

/* 800DFAE8-800DFBC8 0DA428 00E0+00 1/1 0/0 0/0 .text            setBowModel__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setBowModel() {
    nofralloc
#include "asm/d/a/d_a_alink/setBowModel__9daAlink_cFv.s"
}
#pragma pop

/* 800DFBC8-800DFC28 0DA508 0060+00 4/4 0/0 0/0 .text            checkBowGrabLeftHand__9daAlink_cCFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm bool daAlink_c::checkBowGrabLeftHand() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkBowGrabLeftHand__9daAlink_cCFv.s"
}
#pragma pop

/* 800DFC28-800DFC70 0DA568 0048+00 6/6 0/0 0/0 .text            setBowHangAnime__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setBowHangAnime() {
    nofralloc
#include "asm/d/a/d_a_alink/setBowHangAnime__9daAlink_cFv.s"
}
#pragma pop

/* 800DFC70-800DFCD8 0DA5B0 0068+00 3/3 0/0 0/0 .text            setBowNormalAnime__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setBowNormalAnime() {
    nofralloc
#include "asm/d/a/d_a_alink/setBowNormalAnime__9daAlink_cFv.s"
}
#pragma pop

/* 800DFCD8-800DFD6C 0DA618 0094+00 3/3 0/0 0/0 .text            setBowSight__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setBowSight() {
    nofralloc
#include "asm/d/a/d_a_alink/setBowSight__9daAlink_cFv.s"
}
#pragma pop

/* 800DFD6C-800DFDDC 0DA6AC 0070+00 1/1 0/0 0/0 .text            procBowSubjectInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procBowSubjectInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procBowSubjectInit__9daAlink_cFv.s"
}
#pragma pop

/* 800DFDDC-800DFE3C 0DA71C 0060+00 1/0 0/0 0/0 .text            procBowSubject__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procBowSubject() {
    nofralloc
#include "asm/d/a/d_a_alink/procBowSubject__9daAlink_cFv.s"
}
#pragma pop

/* 800DFE3C-800DFEC0 0DA77C 0084+00 1/1 0/0 0/0 .text            procBowMoveInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procBowMoveInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procBowMoveInit__9daAlink_cFv.s"
}
#pragma pop

/* 800DFEC0-800DFFE0 0DA800 0120+00 1/0 0/0 0/0 .text            procBowMove__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procBowMove() {
    nofralloc
#include "asm/d/a/d_a_alink/procBowMove__9daAlink_cFv.s"
}
#pragma pop

/* 800DFFE0-800E0010 0DA920 0030+00 0/0 0/0 1/1 .text checkBoomerangLockAccept__9daAlink_cFv */
BOOL daAlink_c::checkBoomerangLockAccept() {
    return mSight.getDrawFlg() && i_dComIfGp_checkPlayerStatus0(0, 0x80000);
}

/* 800E0010-800E00B0 0DA950 00A0+00 0/0 0/0 1/1 .text            getBoomSpeed__9daAlink_cFv */
// small regalloc
#ifdef NONMATCHING
f32 daAlink_c::getBoomSpeed() {
    f32 speed;
    if (checkBoomerangChargeEndWait()) {
        speed = daAlinkHIO_boom_c0::m.field_0x38;
    } else {
        speed = daAlinkHIO_boom_c0::m.field_0x34;
    }

    if (i_checkModeFlg(0x400) && mRideActor.getActor() != NULL && mSpeedF > FLOAT_LABEL(lit_6108)) {
        speed += mSpeedF;
    }

    return speed;
}
#else
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm f32 daAlink_c::getBoomSpeed() {
    nofralloc
#include "asm/d/a/d_a_alink/getBoomSpeed__9daAlink_cFv.s"
}
#pragma pop
#endif

/* 800E00B0-800E00C0 0DA9F0 0010+00 0/0 0/0 1/1 .text            getBoomCatchSpeed__9daAlink_cCFv */
f32 daAlink_c::getBoomCatchSpeed() const {
    return daAlinkHIO_boom_c0::m.mCatchSpeed;
}

/* 800E00C0-800E011C 0DAA00 005C+00 1/1 0/0 1/1 .text            getBoomFlyMax__9daAlink_cCFv */
f32 daAlink_c::getBoomFlyMax() const {
    if (i_checkModeFlg(0x400) && !checkCanoeRide()) {
        return daAlinkHIO_boom_c0::m.field_0x40;
    } else {
        return daAlinkHIO_boom_c0::m.field_0x3c;
    }
}

/* 800E011C-800E0190 0DAA5C 0074+00 1/1 0/0 2/2 .text            getBoomLockMax__9daAlink_cFv */
f32 daAlink_c::getBoomLockMax() {
    f32 max = getBoomFlyMax();

    if (checkBossBabaRoom()) {
        return lit_12475;
    } else if (daAlinkHIO_boom_c0::m.field_0x44 > max) {
        return daAlinkHIO_boom_c0::m.field_0x44;
    } else {
        return max;
    }
}

/* 800E0190-800E01A0 0DAAD0 0010+00 0/0 0/0 1/1 .text            getBoomBgThroughTime__9daAlink_cCFv
 */
s16 daAlink_c::getBoomBgThroughTime() const {
    return daAlinkHIO_boom_c0::m.mBgThroughTime;
}

/* 800E01A0-800E01CC 0DAAE0 002C+00 1/1 0/0 0/0 .text            checkBossBabaRoom__9daAlink_cFv */
bool daAlink_c::checkBossBabaRoom() {
    return checkStageName("D_MN05A");
}

/* 800E01CC-800E0210 0DAB0C 0044+00 0/0 1/1 0/0 .text
 * cancelBoomerangLock__9daAlink_cFP10fopAc_ac_c                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::cancelBoomerangLock(fopAc_ac_c* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/cancelBoomerangLock__9daAlink_cFP10fopAc_ac_c.s"
}
#pragma pop

/* 800E0210-800E0244 0DAB50 0034+00 2/2 0/0 0/0 .text            getBoomerangActor__9daAlink_cFv */
fopAc_ac_c* daAlink_c::getBoomerangActor() {
    if (mThrowBoomerangActor.getID() != 0xFFFFFFFF) {
        return mThrowBoomerangActor.getActor();
    }

    if (mEquipItem == BOOMERANG) {
        return mItemActor.getActor();
    }

    return NULL;
}

/* 800E0244-800E02B8 0DAB84 0074+00 0/0 1/1 0/0 .text checkBoomerangChargeEnd__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm bool daAlink_c::checkBoomerangChargeEnd() {
    nofralloc
#include "asm/d/a/d_a_alink/checkBoomerangChargeEnd__9daAlink_cFv.s"
}
#pragma pop

/* 800E02B8-800E03D0 0DABF8 0118+00 0/0 1/1 0/0 .text
 * checkBoomerangCarry__9daAlink_cFP10fopAc_ac_c                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkBoomerangCarry(fopAc_ac_c* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkBoomerangCarry__9daAlink_cFP10fopAc_ac_c.s"
}
#pragma pop

/* 800E03D0-800E0440 0DAD10 0070+00 6/6 0/0 0/0 .text initBoomerangUpperAnimeSpeed__9daAlink_cFi
 */
void daAlink_c::initBoomerangUpperAnimeSpeed(int param_0) {
    if (!checkBoomerangThrowAnime()) {
        if (param_0 != 0) {
            f32 tmp = FLOAT_LABEL(lit_6108);
            mFrameCtrl2[2].setRate(tmp);
            mFrameCtrl2[2].setFrame(tmp);
            getNowAnmPackUpper(UPPER_NOW)->setFrame(tmp);
        } else {
            mFrameCtrl2[2].setRate(daAlinkHIO_boom_c0::m.field_0x2c);
        }
    }
}

/* 800E0440-800E04AC 0DAD80 006C+00 9/9 0/0 0/0 .text            checkBoomerangAnime__9daAlink_cCFv
 */
BOOL daAlink_c::checkBoomerangAnime() const {
    return checkBoomerangReadyAnime() || checkBoomerangThrowAnime();
}

/* 800E04AC-800E04E8 0DADEC 003C+00 13/13 0/0 0/0 .text checkBoomerangThrowAnime__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm BOOL daAlink_c::checkBoomerangThrowAnime() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkBoomerangThrowAnime__9daAlink_cCFv.s"
}
#pragma pop

/* 800E04E8-800E055C 0DAE28 0074+00 1/1 0/0 0/0 .text setBoomerangReadyQuake__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setBoomerangReadyQuake() {
    nofralloc
#include "asm/d/a/d_a_alink/setBoomerangReadyQuake__9daAlink_cFv.s"
}
#pragma pop

/* 800E055C-800E05E8 0DAE9C 008C+00 2/2 0/0 0/0 .text setBoomerangReadyAnime__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setBoomerangReadyAnime() {
    nofralloc
#include "asm/d/a/d_a_alink/setBoomerangReadyAnime__9daAlink_cFv.s"
}
#pragma pop

/* 800E05E8-800E0630 0DAF28 0048+00 2/2 0/0 0/0 .text setThrowBoomerangAnime__9daAlink_cFv */
void daAlink_c::setThrowBoomerangAnime() {
    setUpperAnimeParam(0x53, UPPER_NOW, &daAlinkHIO_boom_c0::m.mThrowAnm);
    cancelItemUseQuake(0);
}

/* 800E0630-800E06B8 0DAF70 0088+00 2/2 0/0 0/0 .text setBoomerangCatchAnime__9daAlink_cFv */
void daAlink_c::setBoomerangCatchAnime() {
    setUpperAnimeParam(0x52, UPPER_NOW, &daAlinkHIO_boom_c0::m.mCatchAnm);
    setFacePriBck(0xE8);
    field_0x2f97 = 254;
    if (mEquipItem != COPY_ROD) {
        seStartOnlyReverb(JA_SE_LK_BOOM_CATCH);
    }
}

/* 800E06B8-800E08C4 0DAFF8 020C+00 1/1 0/0 0/0 .text            throwBoomerang__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::throwBoomerang() {
    nofralloc
#include "asm/d/a/d_a_alink/throwBoomerang__9daAlink_cFv.s"
}
#pragma pop

/* 800E08C4-800E0A9C 0DB204 01D8+00 0/0 0/0 1/1 .text            returnBoomerang__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::returnBoomerang(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/returnBoomerang__9daAlink_cFi.s"
}
#pragma pop

/* 800E0A9C-800E0B58 0DB3DC 00BC+00 2/2 0/0 0/0 .text checkUpperItemActionBoomerang__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkUpperItemActionBoomerang() {
    nofralloc
#include "asm/d/a/d_a_alink/checkUpperItemActionBoomerang__9daAlink_cFv.s"
}
#pragma pop

/* 800E0B58-800E0BE4 0DB498 008C+00 1/1 0/0 0/0 .text
 * checkUpperItemActionBoomerangFly__9daAlink_cFv               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkUpperItemActionBoomerangFly() {
    nofralloc
#include "asm/d/a/d_a_alink/checkUpperItemActionBoomerangFly__9daAlink_cFv.s"
}
#pragma pop

/* 800E0BE4-800E0D8C 0DB524 01A8+00 4/4 0/0 0/0 .text checkNextActionBoomerang__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkNextActionBoomerang() {
    nofralloc
#include "asm/d/a/d_a_alink/checkNextActionBoomerang__9daAlink_cFv.s"
}
#pragma pop

/* 800E0D8C-800E0E64 0DB6CC 00D8+00 1/1 0/0 0/0 .text checkBoomerangCatchAction__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkBoomerangCatchAction() {
    nofralloc
#include "asm/d/a/d_a_alink/checkBoomerangCatchAction__9daAlink_cFv.s"
}
#pragma pop

/* 800E0E64-800E0F10 0DB7A4 00AC+00 3/3 0/0 0/0 .text            setBoomerangSight__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setBoomerangSight() {
    nofralloc
#include "asm/d/a/d_a_alink/setBoomerangSight__9daAlink_cFv.s"
}
#pragma pop

/* 800E0F10-800E0FA0 0DB850 0090+00 1/1 0/0 0/0 .text procBoomerangSubjectInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procBoomerangSubjectInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procBoomerangSubjectInit__9daAlink_cFv.s"
}
#pragma pop

/* 800E0FA0-800E1060 0DB8E0 00C0+00 1/0 0/0 0/0 .text            procBoomerangSubject__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procBoomerangSubject() {
    nofralloc
#include "asm/d/a/d_a_alink/procBoomerangSubject__9daAlink_cFv.s"
}
#pragma pop

/* 800E1060-800E10F4 0DB9A0 0094+00 1/1 0/0 0/0 .text            procBoomerangMoveInit__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procBoomerangMoveInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procBoomerangMoveInit__9daAlink_cFv.s"
}
#pragma pop

/* 800E10F4-800E11D8 0DBA34 00E4+00 1/0 0/0 0/0 .text            procBoomerangMove__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procBoomerangMove() {
    nofralloc
#include "asm/d/a/d_a_alink/procBoomerangMove__9daAlink_cFv.s"
}
#pragma pop

/* 800E11D8-800E1248 0DBB18 0070+00 1/1 0/0 0/0 .text procBoomerangCatchInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procBoomerangCatchInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procBoomerangCatchInit__9daAlink_cFv.s"
}
#pragma pop

/* 800E1248-800E12E0 0DBB88 0098+00 1/0 0/0 0/0 .text            procBoomerangCatch__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procBoomerangCatch() {
    nofralloc
#include "asm/d/a/d_a_alink/procBoomerangCatch__9daAlink_cFv.s"
}
#pragma pop

/* 800E12E0-800E1310 0DBC20 0030+00 1/1 0/0 0/0 .text            checkLv6BossRoom__9daAlink_cFv */
BOOL daAlink_c::checkLv6BossRoom() {
    return checkStageName("D_MN06A");
}

/* 800E1310-800E1320 0DBC50 0010+00 0/0 0/0 1/1 .text            getCopyRodBallSpeed__9daAlink_cCFv
 */
f32 daAlink_c::getCopyRodBallSpeed() const {
    return daAlinkHIO_copyRod_c0::m.mBallSpeed;
}

/* 800E1320-800E1330 0DBC60 0010+00 0/0 0/0 1/1 .text getCopyRodBallReturnSpeed__9daAlink_cCFv */
f32 daAlink_c::getCopyRodBallReturnSpeed() const {
    return daAlinkHIO_copyRod_c0::m.mBallReturnSpeed;
}

/* 800E1330-800E1374 0DBC70 0044+00 3/3 0/0 2/2 .text            getCopyRodBallDisMax__9daAlink_cCFv
 */
f32 daAlink_c::getCopyRodBallDisMax() const {
    if (checkLv6BossRoom()) {
        return daAlinkHIO_copyRod_c0::m.mBossBallMaxDistance;
    }

    return daAlinkHIO_copyRod_c0::m.mBallMaxDistance;
}

/* 800E1374-800E1390 0DBCB4 001C+00 6/6 0/0 7/7 .text getCopyRodControllActor__9daAlink_cFv */
fopAc_ac_c* daAlink_c::getCopyRodControllActor() {
    if (mCopyRodAcKeep.getActor() != NULL) {
        return static_cast<daCrod_c*>(mCopyRodAcKeep.getActor())->getControllActor();
    }

    return NULL;
}

/* 800E1390-800E13AC 0DBCD0 001C+00 0/0 4/4 1/1 .text            getCopyRodCameraActor__9daAlink_cFv
 */
fopAc_ac_c* daAlink_c::getCopyRodCameraActor() {
    if (mCopyRodAcKeep.getActor() != NULL) {
        return static_cast<daCrod_c*>(mCopyRodAcKeep.getActor())->getCameraActor();
    }

    return NULL;
}

/* 800E13AC-800E1408 0DBCEC 005C+00 2/2 0/0 0/0 .text initCopyRodUpperAnimeSpeed__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::initCopyRodUpperAnimeSpeed(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/initCopyRodUpperAnimeSpeed__9daAlink_cFi.s"
}
#pragma pop

/* void daAlink_c::initCopyRodUpperAnimeSpeed(int param_0) {
    if (checkCopyRodThrowAnime()) {
        if (param_1 == 0) {
            mFrameCtrl2[2].setRate();
        }
        f32 tmp = FLOAT_LABEL(lit_6108);
        mFrameCtrl2[2].setRate(tmp);
        mFrameCtrl2[2].setFrame(tmp);

    }
} */

/* 800E1408-800E145C 0DBD48 0054+00 2/2 0/0 0/0 .text            checkForestOldCentury__9daAlink_cFv
 */
BOOL daAlink_c::checkForestOldCentury() {
    return checkStageName("F_SP117") && dComIfGp_roomControl_getStayNo() == 2;
}

/* 800E145C-800E1530 0DBD9C 00D4+00 1/0 0/0 0/0 .text            checkCopyRodTopUse__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm BOOL daAlink_c::checkCopyRodTopUse() {
    nofralloc
#include "asm/d/a/d_a_alink/checkCopyRodTopUse__9daAlink_cFv.s"
}
#pragma pop

/* 800E1530-800E158C 0DBE70 005C+00 4/4 0/0 0/0 .text            checkCopyRodAnime__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkCopyRodAnime() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkCopyRodAnime__9daAlink_cCFv.s"
}
#pragma pop

/* 800E158C-800E15FC 0DBECC 0070+00 2/2 0/0 0/0 .text setCopyRodControllAnime__9daAlink_cFv */
void daAlink_c::setCopyRodControllAnime() {
    if (checkNoUpperAnime() && getCopyRodControllActor()) {
        setUpperAnimeBaseSpeed(0x202, FLOAT_LABEL(lit_6108), lit_6109);
        field_0x2f96 = 2;
        field_0x2f97 = 5;
        field_0x33e8 = FLOAT_LABEL(lit_6108);
    }
}

/* 800E15FC-800E1748 0DBF3C 014C+00 1/1 0/0 0/0 .text
 * setCopyRodControllUpperSpeedRate__9daAlink_cFv               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setCopyRodControllUpperSpeedRate() {
    nofralloc
#include "asm/d/a/d_a_alink/setCopyRodControllUpperSpeedRate__9daAlink_cFv.s"
}
#pragma pop

/* 800E1748-800E1840 0DC088 00F8+00 2/2 0/0 0/0 .text            setCopyRodModel__9daAlink_cFv */
void daAlink_c::setCopyRodModel() {
    JKRHeap* heap = setItemHeap();
    J3DModelData* mdl_data = loadAramBmd(0x315, 0x5400);
    mHeldItemModel = initModel(mdl_data, 0x80000, 0x1000000);
    field_0x0724 = loadAramItemBrk(0x323, mHeldItemModel);
    mDoExt_setCurrentHeap(heap);
    field_0x0724->setFrame(FLOAT_LABEL(lit_6108));
    field_0x2f94 = 2;
    field_0x122C[0].SetAtSpl(dCcG_At_Spl_UNK_0);
    field_0x122C[0].SetAtAtp(0);
    field_0x122C[0].SetAtSe(20);
    field_0x122C[0].SetAtHitMark(1);
    field_0x122C[0].OnAtSetBit();
    field_0x122C[0].SetAtHitCallback(NULL);
    field_0x122C[0].SetAtMtrl(0);
    mHeldItemModel->i_setBaseTRMtx(field_0x0650->i_getAnmMtx(field_0x30c0));
    mHeldItemModel->calc();
}

/* 800E1840-800E191C 0DC180 00DC+00 2/2 0/0 0/0 .text            setCopyRodReadyAnime__9daAlink_cFv
 */
// regalloc
#ifdef NONMATCHING
void daAlink_c::setCopyRodReadyAnime() {
    f32 tmp;
    if (i_checkAttentionLock()) {
        tmp = daAlinkHIO_boom_c0::m.valc;
    } else {
        tmp = FLOAT_LABEL(lit_6108);
    }

    setUpperAnimeBaseSpeed(0x54, tmp, lit_6109);
    if (checkCopyRodTopUse()) {
        seStartSwordCut(Z2SE_AL_COPYROD_READY);
    } else {
        seStartSwordCut(Z2SE_AL_COPYROD_READY_OFF);
    }
    field_0x122C[0].SetR(lit_8676);
    field_0x122C[0].SetAtType(0x1000000);
    initLockAt();
}
#else
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setCopyRodReadyAnime() {
    nofralloc
#include "asm/d/a/d_a_alink/setCopyRodReadyAnime__9daAlink_cFv.s"
}
#pragma pop
#endif

/* 800E191C-800E1A30 0DC25C 0114+00 1/1 0/0 0/0 .text            throwCopyRod__9daAlink_cFv */
void daAlink_c::throwCopyRod() {
    daCrod_c* copy_rod = static_cast<daCrod_c*>(mItemActor.getActor());
    i_onNoResetFlg1(FLG1_UNK_10000);

    if (checkCopyRodTopUse()) {
        copy_rod->setThrow();
        mCopyRodAcKeep = mItemActor;
        i_onNoResetFlg3(COPY_ROD_THROW_AFTER);
        mItemActor.clearData();
    }
    dComIfGp_clearPlayerStatus0(0, 0x80);
    mFastShotTime = -1;
    voiceStart(Z2SE_AL_V_ATTACK_S);
    seStartSwordCut(Z2SE_AL_COPYROD_SWING);

    if (mLinkAcch.ChkGroundHit()) {
        if (checkZeroSpeedF()) {
            field_0x2f98 = 3;
            procAtnActorWaitInit();
        } else {
            procAtnActorMoveInit();
        }
        field_0x2060->initOldFrameMorf(FLOAT_LABEL(lit_6108), 0, 35);
    }
}

/* 800E1A30-800E1ADC 0DC370 00AC+00 0/0 0/0 1/1 .text            returnCopyRod__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::returnCopyRod() {
    nofralloc
#include "asm/d/a/d_a_alink/returnCopyRod__9daAlink_cFv.s"
}
#pragma pop

/* void daAlink_c::returnCopyRod() {
    i_offNoResetFlg3(COPY_ROD_THROW_AFTER);

    if (mEquipItem == 0x46) {
        mItemActor = mCopyRodAcKeep;
        i_onNoResetFlg0(FLG0_UNK_20);
        cXyz tmp(0, 1, 0);
        dComIfGp_getVibration().StartShock(1, 1, tmp);
    }
    mCopyRodAcKeep.clearData();
} */

/* 800E1ADC-800E1BB4 0DC41C 00D8+00 2/2 0/0 0/0 .text checkUpperItemActionCopyRod__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkUpperItemActionCopyRod() {
    nofralloc
#include "asm/d/a/d_a_alink/checkUpperItemActionCopyRod__9daAlink_cFv.s"
}
#pragma pop

/* 800E1BB4-800E1C44 0DC4F4 0090+00 1/1 0/0 0/0 .text checkUpperItemActionCopyRodFly__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkUpperItemActionCopyRodFly() {
    nofralloc
#include "asm/d/a/d_a_alink/checkUpperItemActionCopyRodFly__9daAlink_cFv.s"
}
#pragma pop

/* 800E1C44-800E1D6C 0DC584 0128+00 2/2 0/0 0/0 .text checkNextActionCopyRod__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkNextActionCopyRod() {
    nofralloc
#include "asm/d/a/d_a_alink/checkNextActionCopyRod__9daAlink_cFv.s"
}
#pragma pop

/* 800E1D6C-800E1E20 0DC6AC 00B4+00 1/1 0/0 0/0 .text            setCopyRodSight__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setCopyRodSight() {
    nofralloc
#include "asm/d/a/d_a_alink/setCopyRodSight__9daAlink_cFv.s"
}
#pragma pop

/* 800E1E20-800E1EB0 0DC760 0090+00 1/1 0/0 0/0 .text procCopyRodSubjectInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCopyRodSubjectInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCopyRodSubjectInit__9daAlink_cFv.s"
}
#pragma pop

/* 800E1EB0-800E1F68 0DC7F0 00B8+00 1/0 0/0 0/0 .text            procCopyRodSubject__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCopyRodSubject() {
    nofralloc
#include "asm/d/a/d_a_alink/procCopyRodSubject__9daAlink_cFv.s"
}
#pragma pop

/* 800E1F68-800E1FFC 0DC8A8 0094+00 1/1 0/0 0/0 .text            procCopyRodMoveInit__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCopyRodMoveInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCopyRodMoveInit__9daAlink_cFv.s"
}
#pragma pop

/* 800E1FFC-800E20C8 0DC93C 00CC+00 1/0 0/0 0/0 .text            procCopyRodMove__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCopyRodMove() {
    nofralloc
#include "asm/d/a/d_a_alink/procCopyRodMove__9daAlink_cFv.s"
}
#pragma pop

/* 800E20C8-800E21FC 0DCA08 0134+00 1/1 0/0 0/0 .text            procCopyRodSwingInit__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCopyRodSwingInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCopyRodSwingInit__9daAlink_cFv.s"
}
#pragma pop

/* 800E21FC-800E2308 0DCB3C 010C+00 1/0 0/0 0/0 .text            procCopyRodSwing__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCopyRodSwing() {
    nofralloc
#include "asm/d/a/d_a_alink/procCopyRodSwing__9daAlink_cFv.s"
}
#pragma pop

/* 800E2308-800E23A4 0DCC48 009C+00 1/0 0/0 0/0 .text            procCopyRodReviveInit__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCopyRodReviveInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCopyRodReviveInit__9daAlink_cFv.s"
}
#pragma pop

/* 800E23A4-800E23FC 0DCCE4 0058+00 1/0 0/0 0/0 .text            procCopyRodRevive__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCopyRodRevive() {
    nofralloc
#include "asm/d/a/d_a_alink/procCopyRodRevive__9daAlink_cFv.s"
}
#pragma pop

/* 800E23FC-800E243C 0DCD3C 0040+00 6/6 0/0 0/0 .text            concatMagneBootMtx__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::concatMagneBootMtx() {
    nofralloc
#include "asm/d/a/d_a_alink/concatMagneBootMtx__9daAlink_cFv.s"
}
#pragma pop

/* 800E243C-800E247C 0DCD7C 0040+00 1/1 0/0 0/0 .text            concatMagneBootInvMtx__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::concatMagneBootInvMtx() {
    nofralloc
#include "asm/d/a/d_a_alink/concatMagneBootInvMtx__9daAlink_cFv.s"
}
#pragma pop

/* 800E247C-800E24B0 0DCDBC 0034+00 8/8 0/0 0/0 .text multVecMagneBootInvMtx__9daAlink_cFP4cXyz */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::multVecMagneBootInvMtx(cXyz* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/multVecMagneBootInvMtx__9daAlink_cFP4cXyz.s"
}
#pragma pop

/* 800E24B0-800E251C 0DCDF0 006C+00 2/2 0/0 0/0 .text
 * commonMagneLineCheck__9daAlink_cFP4cXyzP4cXyz                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::commonMagneLineCheck(cXyz* param_0, cXyz* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/commonMagneLineCheck__9daAlink_cFP4cXyzP4cXyz.s"
}
#pragma pop

/* 800E251C-800E2580 0DCE5C 0064+00 2/2 0/0 0/0 .text            checkBootsMoveAnime__9daAlink_cFi
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkBootsMoveAnime(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkBootsMoveAnime__9daAlink_cFi.s"
}
#pragma pop

/* 800E2580-800E2738 0DCEC0 01B8+00 17/17 0/0 0/0 .text            setHeavyBoots__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setHeavyBoots(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setHeavyBoots__9daAlink_cFi.s"
}
#pragma pop

/* 800E2738-800E2808 0DD078 00D0+00 2/2 0/0 0/0 .text getMagneBootsLocalAngleY__9daAlink_cFsi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getMagneBootsLocalAngleY(s16 param_0, int param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/getMagneBootsLocalAngleY__9daAlink_cFsi.s"
}
#pragma pop

/* 800E2808-800E2DC4 0DD148 05BC+00 3/3 0/0 0/0 .text
 * setMagneBootsMtx__9daAlink_cFP13cBgS_PolyInfoi               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setMagneBootsMtx(cBgS_PolyInfo* param_0, int param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/setMagneBootsMtx__9daAlink_cFP13cBgS_PolyInfoi.s"
}
#pragma pop

/* 800E2DC4-800E2F88 0DD704 01C4+00 7/7 0/0 0/0 .text            cancelMagneBootsOn__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::cancelMagneBootsOn() {
    nofralloc
#include "asm/d/a/d_a_alink/cancelMagneBootsOn__9daAlink_cFv.s"
}
#pragma pop

/* 800E2F88-800E3048 0DD8C8 00C0+00 1/1 0/0 0/0 .text            checkMagneBootsFly__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkMagneBootsFly() {
    nofralloc
#include "asm/d/a/d_a_alink/checkMagneBootsFly__9daAlink_cFv.s"
}
#pragma pop

/* 800E3048-800E30DC 0DD988 0094+00 2/2 0/0 0/0 .text            procBootsEquipInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procBootsEquipInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procBootsEquipInit__9daAlink_cFv.s"
}
#pragma pop

/* 800E30DC-800E3218 0DDA1C 013C+00 1/0 0/0 0/0 .text            procBootsEquip__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procBootsEquip() {
    nofralloc
#include "asm/d/a/d_a_alink/procBootsEquip__9daAlink_cFv.s"
}
#pragma pop

/* 800E3218-800E3454 0DDB58 023C+00 1/1 0/0 0/0 .text            procMagneBootsFlyInit__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procMagneBootsFlyInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procMagneBootsFlyInit__9daAlink_cFv.s"
}
#pragma pop

/* 800E3454-800E3760 0DDD94 030C+00 1/0 0/0 0/0 .text            procMagneBootsFly__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procMagneBootsFly() {
    nofralloc
#include "asm/d/a/d_a_alink/procMagneBootsFly__9daAlink_cFv.s"
}
#pragma pop

/* 800E3760-800E3770 0DE0A0 0010+00 0/0 0/0 7/7 .text            getBombExplodeTime__9daAlink_cCFv
 */
s16 daAlink_c::getBombExplodeTime() const {
    return daAlinkHIO_bomb_c0::m.mExplodeTime;
}

/* 800E3770-800E3780 0DE0B0 0010+00 0/0 0/0 2/2 .text            getBombGravity__9daAlink_cCFv */
f32 daAlink_c::getBombGravity() const {
    return daAlinkHIO_bomb_c0::m.mGravity;
}

/* 800E3780-800E3790 0DE0C0 0010+00 0/0 0/0 2/2 .text            getBombMaxFallSpeed__9daAlink_cCFv
 */
f32 daAlink_c::getBombMaxFallSpeed() const {
    return daAlinkHIO_bomb_c0::m.mMaxFallSpeed;
}

/* 800E3790-800E37A0 0DE0D0 0010+00 0/0 0/0 1/1 .text            getBombBoundRate__9daAlink_cCFv */
f32 daAlink_c::getBombBoundRate() const {
    return daAlinkHIO_bomb_c0::m.mBoundRate;
}

/* 800E37A0-800E37B0 0DE0E0 0010+00 0/0 0/0 1/1 .text            getBombStopSpeedY__9daAlink_cCFv */
f32 daAlink_c::getBombStopSpeedY() const {
    return daAlinkHIO_bomb_c0::m.mStopSpeedY;
}

/* 800E37B0-800E37C0 0DE0F0 0010+00 0/0 0/0 1/1 .text            getBombMaxSpeedY__9daAlink_cCFv */
f32 daAlink_c::getBombMaxSpeedY() const {
    return daAlinkHIO_bomb_c0::m.mMaxSpeedY;
}

/* 800E37C0-800E37D0 0DE100 0010+00 0/0 0/0 1/1 .text            getBombEffScale__9daAlink_cCFv */
f32 daAlink_c::getBombEffScale() const {
    return daAlinkHIO_bomb_c0::m.mEffScale;
}

/* 800E37D0-800E37E0 0DE110 0010+00 0/0 0/0 1/1 .text            getBombAtR__9daAlink_cCFv */
f32 daAlink_c::getBombAtR() const {
    return daAlinkHIO_bomb_c0::m.mAtRadius;
}

/* 800E37E0-800E37F0 0DE120 0010+00 0/0 0/0 1/1 .text            getEnemyBombColorR__9daAlink_cCFv
 */
s16 daAlink_c::getEnemyBombColorR() const {
    return daAlinkHIO_bomb_c0::m.mEnemyBombColorR;
}

/* 800E37F0-800E3800 0DE130 0010+00 0/0 0/0 2/2 .text            getBombWaterGravity__9daAlink_cCFv
 */
f32 daAlink_c::getBombWaterGravity() const {
    return daAlinkHIO_bomb_c0::m.mWaterGravity;
}

/* 800E3800-800E3810 0DE140 0010+00 0/0 0/0 2/2 .text getBombWaterMaxFallSpeed__9daAlink_cCFv */
f32 daAlink_c::getBombWaterMaxFallSpeed() const {
    return daAlinkHIO_bomb_c0::m.mWaterMaxFallSpeed;
}

/* 800E3810-800E3820 0DE150 0010+00 0/0 0/0 1/1 .text
 * getBombExplodeWaterEffectLimit__9daAlink_cCFv                */
f32 daAlink_c::getBombExplodeWaterEffectLimit() const {
    return daAlinkHIO_bomb_c0::m.mExplodeWaterEffectLimit;
}

/* 800E3820-800E3830 0DE160 0010+00 0/0 0/0 1/1 .text getBombInsectLimitAngle__9daAlink_cCFv */
s16 daAlink_c::getBombInsectLimitAngle() const {
    return daAlinkHIO_bomb_c0::m.mBombInsectLimitAngle;
}

/* 800E3830-800E3858 0DE170 0028+00 2/2 0/0 0/0 .text daAlink_checkLightBallA__FP10fopAc_ac_c */
static bool daAlink_checkLightBallA(fopAc_ac_c* p_actor) {
    if (fopAcM_GetName(p_actor) == 0x2FC &&
        static_cast<daObjCarry_c*>(p_actor)->getType() == daObjCarry_c::TYPE_BALL_S) {
        return true;
    }
    return false;
}

/* 800E3858-800E3880 0DE198 0028+00 2/2 0/0 0/0 .text daAlink_checkLightBallB__FP10fopAc_ac_c */
static bool daAlink_checkLightBallB(fopAc_ac_c* p_actor) {
    if (fopAcM_GetName(p_actor) == 0x2FC &&
        static_cast<daObjCarry_c*>(p_actor)->getType() == daObjCarry_c::TYPE_BALL_S_2) {
        return true;
    }
    return false;
}

/* 800E3880-800E38EC 0DE1C0 006C+00 1/1 0/0 0/0 .text daAlink_searchLightBall__FP10fopAc_ac_cPv */
static fopAc_ac_c* daAlink_searchLightBall(fopAc_ac_c* p_actor, void* param_1) {
    if ((daPy_py_c::checkCarryStartLightBallA() && daAlink_checkLightBallA(p_actor)) ||
        (daPy_py_c::checkCarryStartLightBallB() && daAlink_checkLightBallB(p_actor))) {
        return p_actor;
    }
    return NULL;
}

/* 800E38EC-800E3994 0DE22C 00A8+00 1/1 0/0 0/0 .text            checkGrabLineCheck__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkGrabLineCheck() {
    nofralloc
#include "asm/d/a/d_a_alink/checkGrabLineCheck__9daAlink_cFv.s"
}
#pragma pop

/* 800E3994-800E3A14 0DE2D4 0080+00 1/0 0/0 0/0 .text
 * setGrabCollisionOffset__9daAlink_cFffP13cBgS_PolyInfo        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setGrabCollisionOffset(f32 param_0, f32 param_1, cBgS_PolyInfo* param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/setGrabCollisionOffset__9daAlink_cFffP13cBgS_PolyInfo.s"
}
#pragma pop

/* 800E3A14-800E3A9C 0DE354 0088+00 1/0 0/0 0/0 .text exchangeGrabActor__9daAlink_cFP10fopAc_ac_c
 */
bool daAlink_c::exchangeGrabActor(fopAc_ac_c* p_actor) {
    fopAc_ac_c* actor = mGrabItemActor.getActor();

    if (actor == NULL) {
        return false;
    }

    fopAcM_cancelCarryNow(actor);
    actor->mCollisionRot.z = 0;
    actor->mCollisionRot.x = 0;
    if (checkGrabCarryActor()) {
        actor->mCurrent.mAngle.z = 0;
        actor->mCurrent.mAngle.x = 0;
    }
    setGrabItemActor(p_actor);
    return true;
}

/* 800E3A9C-800E3BCC 0DE3DC 0130+00 1/0 0/0 0/0 .text setForceGrab__9daAlink_cFP10fopAc_ac_cii */
bool daAlink_c::setForceGrab(fopAc_ac_c* p_actor, int param_1, int param_2) {
    if (((param_1 != 0 || !checkEventRun()) && !i_checkWolf()) &&
        (((mEquipItem == NO_ITEM || (param_2 != 0 && checkHookshotItem(mEquipItem)))) &&
         ((i_checkModeFlg(MODE_UNK_10000000) &&
           (checkHorseNoUpperAnime() || checkHorseTurnAnime())) ||
          param_2 != 0 && checkHookshotAnime()))) {
        deleteEquipItem(1, 0);
        setGrabItemActor(p_actor);
        field_0x33e4 = lit_8785;
        setGrabUpperAnime(daAlinkHIO_basic_c0::m.mAnmBlendFactor);
        return true;
    }
    return false;
}

/* 800E3BCC-800E3C1C 0DE50C 0050+00 2/2 0/0 0/0 .text            getGrabThrowRate__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getGrabThrowRate() {
    nofralloc
#include "asm/d/a/d_a_alink/getGrabThrowRate__9daAlink_cFv.s"
}
#pragma pop

/* 800E3C1C-800E3C6C 0DE55C 0050+00 3/3 0/0 0/0 .text            checkGrabThrowAnime__9daAlink_cCFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkGrabThrowAnime() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkGrabThrowAnime__9daAlink_cCFv.s"
}
#pragma pop

/* 800E3C6C-800E3C9C 0DE5AC 0030+00 25/25 0/0 0/0 .text            checkGrabAnime__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkGrabAnime() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkGrabAnime__9daAlink_cCFv.s"
}
#pragma pop

/* 800E3C9C-800E3CF4 0DE5DC 0058+00 5/5 0/0 0/0 .text checkGrabAnimeAndThrow__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkGrabAnimeAndThrow() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkGrabAnimeAndThrow__9daAlink_cCFv.s"
}
#pragma pop

/* 800E3CF4-800E3D1C 0DE634 0028+00 10/10 0/0 0/0 .text            checkGrabCarryActor__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm BOOL daAlink_c::checkGrabCarryActor() {
    nofralloc
#include "asm/d/a/d_a_alink/checkGrabCarryActor__9daAlink_cFv.s"
}
#pragma pop

/* 800E3D1C-800E3D6C 0DE65C 0050+00 1/1 0/0 0/0 .text checkGrabSlowMoveActor__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkGrabSlowMoveActor() {
    nofralloc
#include "asm/d/a/d_a_alink/checkGrabSlowMoveActor__9daAlink_cFv.s"
}
#pragma pop

/* 800E3D6C-800E3D94 0DE6AC 0028+00 1/1 0/0 0/0 .text            checkGrabHeavyActor__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkGrabHeavyActor() {
    nofralloc
#include "asm/d/a/d_a_alink/checkGrabHeavyActor__9daAlink_cFv.s"
}
#pragma pop

/* 800E3D94-800E3DBC 0DE6D4 0028+00 2/2 0/0 0/0 .text            checkGrabSideActor__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkGrabSideActor() {
    nofralloc
#include "asm/d/a/d_a_alink/checkGrabSideActor__9daAlink_cFv.s"
}
#pragma pop

/* 800E3DBC-800E3F20 0DE6FC 0164+00 5/5 0/0 0/0 .text            setGrabUpperAnime__9daAlink_cFf */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setGrabUpperAnime(f32 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setGrabUpperAnime__9daAlink_cFf.s"
}
#pragma pop

/* 800E3F20-800E3F50 0DE860 0030+00 8/8 0/0 0/0 .text            checkGrabRooster__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkGrabRooster() {
    nofralloc
#include "asm/d/a/d_a_alink/checkGrabRooster__9daAlink_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 80425628-80425634 052348 000C+00 0/1 0/0 0/0 .bss             @4421 */
#pragma push
#pragma force_active on
static u8 lit_4421[12];
#pragma pop

/* 80425634-80425640 052354 000C+00 2/3 0/0 0/0 .bss             l_wolfRopeBaseAnime */
static f32 l_wolfRopeBaseAnime[3];

/* 80425640-8042564C 052360 000C+00 0/1 0/0 0/0 .bss             @14255 */
#pragma push
#pragma force_active on
static u8 lit_14255[12];
#pragma pop

/* 8042564C-80425658 05236C 000C+00 0/1 0/0 0/0 .bss             grabCarryOffset0$14254 */
#pragma push
#pragma force_active on
static u8 grabCarryOffset0[12];
#pragma pop

/* 80425658-80425664 052378 000C+00 0/1 0/0 0/0 .bss             @14259 */
#pragma push
#pragma force_active on
static u8 lit_14259[12];
#pragma pop

/* 80425664-80425670 052384 000C+00 0/1 0/0 0/0 .bss             grabCarryOffset1$14258 */
#pragma push
#pragma force_active on
static u8 grabCarryOffset1[12];
#pragma pop

/* 80425670-8042567C 052390 000C+00 0/1 0/0 0/0 .bss             @14263 */
#pragma push
#pragma force_active on
static u8 lit_14263[12];
#pragma pop

/* 8042567C-80425688 05239C 000C+00 0/1 0/0 0/0 .bss             grabCarryOffset2$14262 */
#pragma push
#pragma force_active on
static u8 grabCarryOffset2[12];
#pragma pop

/* 80425688-80425694 0523A8 000C+00 0/1 0/0 0/0 .bss             @14267 */
#pragma push
#pragma force_active on
static u8 lit_14267[12];
#pragma pop

/* 80425694-804256A0 0523B4 000C+00 0/1 0/0 0/0 .bss             grabCarryOffset3$14266 */
#pragma push
#pragma force_active on
static u8 grabCarryOffset3[12];
#pragma pop

/* 800E3F50-800E4BD4 0DE890 0C84+00 1/1 0/0 0/0 .text            setGrabItemPos__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setGrabItemPos() {
    nofralloc
#include "asm/d/a/d_a_alink/setGrabItemPos__9daAlink_cFv.s"
}
#pragma pop

/* 800E4BD4-800E4DEC 0DF514 0218+00 16/16 0/0 0/0 .text            freeGrabItem__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::freeGrabItem() {
    nofralloc
#include "asm/d/a/d_a_alink/freeGrabItem__9daAlink_cFv.s"
}
#pragma pop

/* 800E4DEC-800E4FA8 0DF72C 01BC+00 1/1 0/0 0/0 .text            setGrabUpperSpeedRate__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setGrabUpperSpeedRate() {
    nofralloc
#include "asm/d/a/d_a_alink/setGrabUpperSpeedRate__9daAlink_cFv.s"
}
#pragma pop

/* 800E4FA8-800E5150 0DF8E8 01A8+00 7/7 0/0 0/0 .text            setCarryArmAngle__9daAlink_cFff */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setCarryArmAngle(f32 param_0, f32 param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/setCarryArmAngle__9daAlink_cFff.s"
}
#pragma pop

/* 800E5150-800E5170 0DFA90 0020+00 1/1 0/0 0/0 .text            checkGrabNotThrow__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkGrabNotThrow() {
    nofralloc
#include "asm/d/a/d_a_alink/checkGrabNotThrow__9daAlink_cFv.s"
}
#pragma pop

/* 800E5170-800E53AC 0DFAB0 023C+00 1/1 0/0 0/0 .text            checkNextActionGrab__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkNextActionGrab() {
    nofralloc
#include "asm/d/a/d_a_alink/checkNextActionGrab__9daAlink_cFv.s"
}
#pragma pop

/* 800E53AC-800E53F8 0DFCEC 004C+00 2/2 0/0 0/0 .text            initGrabNextMode__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::initGrabNextMode() {
    nofralloc
#include "asm/d/a/d_a_alink/initGrabNextMode__9daAlink_cFv.s"
}
#pragma pop

/* 800E53F8-800E57AC 0DFD38 03B4+00 3/3 0/0 0/0 .text            setGrabItemThrow__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setGrabItemThrow() {
    nofralloc
#include "asm/d/a/d_a_alink/setGrabItemThrow__9daAlink_cFv.s"
}
#pragma pop

/* 800E57AC-800E5830 0E00EC 0084+00 2/2 0/0 0/0 .text checkUpperGrabItemThrow__9daAlink_cFf */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkUpperGrabItemThrow(f32 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkUpperGrabItemThrow__9daAlink_cFf.s"
}
#pragma pop

/* 800E5830-800E5B6C 0E0170 033C+00 2/2 0/0 0/0 .text
 * putObjLineCheck__9daAlink_cFR11dBgS_LinChkP4cXyzP10fopAc_ac_c */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::putObjLineCheck(dBgS_LinChk& param_0, cXyz* param_1, fopAc_ac_c* param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/putObjLineCheck__9daAlink_cFR11dBgS_LinChkP4cXyzP10fopAc_ac_c.s"
}
#pragma pop

/* 800E5B6C-800E5BB4 0E04AC 0048+00 3/3 0/0 0/0 .text grabLineCheck__9daAlink_cFP4cXyzP4cXyz */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::grabLineCheck(cXyz* param_0, cXyz* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/grabLineCheck__9daAlink_cFP4cXyzP4cXyz.s"
}
#pragma pop

/* 800E5BB4-800E5CBC 0E04F4 0108+00 6/6 0/0 0/0 .text setGrabItemActor__9daAlink_cFP10fopAc_ac_c
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setGrabItemActor(fopAc_ac_c* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setGrabItemActor__9daAlink_cFP10fopAc_ac_c.s"
}
#pragma pop

/* 800E5CBC-800E5EC8 0E05FC 020C+00 2/2 0/0 0/0 .text            procGrabReadyInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procGrabReadyInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procGrabReadyInit__9daAlink_cFv.s"
}
#pragma pop

/* 800E5EC8-800E5FD0 0E0808 0108+00 1/0 0/0 0/0 .text            procGrabReady__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procGrabReady() {
    nofralloc
#include "asm/d/a/d_a_alink/procGrabReady__9daAlink_cFv.s"
}
#pragma pop

/* 800E5FD0-800E6230 0E0910 0260+00 1/1 0/0 0/0 .text            procGrabUpInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procGrabUpInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procGrabUpInit__9daAlink_cFv.s"
}
#pragma pop

/* 800E6230-800E637C 0E0B70 014C+00 1/0 0/0 0/0 .text            procGrabUp__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procGrabUp() {
    nofralloc
#include "asm/d/a/d_a_alink/procGrabUp__9daAlink_cFv.s"
}
#pragma pop

/* 800E637C-800E63F0 0E0CBC 0074+00 1/0 0/0 0/0 .text            procGrabMiss__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procGrabMiss() {
    nofralloc
#include "asm/d/a/d_a_alink/procGrabMiss__9daAlink_cFv.s"
}
#pragma pop

/* 800E63F0-800E65F8 0E0D30 0208+00 1/1 0/0 0/0 .text            procGrabThrowInit__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procGrabThrowInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procGrabThrowInit__9daAlink_cFi.s"
}
#pragma pop

/* 800E65F8-800E672C 0E0F38 0134+00 1/0 0/0 0/0 .text            procGrabThrow__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procGrabThrow() {
    nofralloc
#include "asm/d/a/d_a_alink/procGrabThrow__9daAlink_cFv.s"
}
#pragma pop

/* 800E672C-800E6914 0E106C 01E8+00 2/2 0/0 0/0 .text            procGrabPutInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procGrabPutInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procGrabPutInit__9daAlink_cFv.s"
}
#pragma pop

/* 800E6914-800E6A9C 0E1254 0188+00 1/0 0/0 0/0 .text            procGrabPut__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procGrabPut() {
    nofralloc
#include "asm/d/a/d_a_alink/procGrabPut__9daAlink_cFv.s"
}
#pragma pop

/* 800E6A9C-800E6C34 0E13DC 0198+00 2/2 0/0 0/0 .text            procGrabWaitInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procGrabWaitInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procGrabWaitInit__9daAlink_cFv.s"
}
#pragma pop

/* 800E6C34-800E6D6C 0E1574 0138+00 1/0 0/0 0/0 .text            procGrabWait__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procGrabWait() {
    nofralloc
#include "asm/d/a/d_a_alink/procGrabWait__9daAlink_cFv.s"
}
#pragma pop

/* 800E6D6C-800E6E0C 0E16AC 00A0+00 2/2 0/0 0/0 .text            procGrabReboundInit__9daAlink_cFi
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procGrabReboundInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procGrabReboundInit__9daAlink_cFi.s"
}
#pragma pop

/* 800E6E0C-800E6EEC 0E174C 00E0+00 1/0 0/0 0/0 .text            procGrabRebound__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procGrabRebound() {
    nofralloc
#include "asm/d/a/d_a_alink/procGrabRebound__9daAlink_cFv.s"
}
#pragma pop

/* 800E6EEC-800E6FE0 0E182C 00F4+00 2/2 0/0 0/0 .text            procGrabStandInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procGrabStandInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procGrabStandInit__9daAlink_cFv.s"
}
#pragma pop

/* 800E6FE0-800E70C0 0E1920 00E0+00 1/0 0/0 0/0 .text            procGrabStand__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procGrabStand() {
    nofralloc
#include "asm/d/a/d_a_alink/procGrabStand__9daAlink_cFv.s"
}
#pragma pop

/* 800E70C0-800E70FC 0E1A00 003C+00 1/1 0/0 0/0 .text
 * checkInsectActorName__9daAlink_cFP10fopAc_ac_c               */
bool daAlink_c::checkInsectActorName(fopAc_ac_c* insectActor) {
    s16 insectName = fopAcM_GetName(insectActor);

    for (int i = 0; i < 12; i++) {
        if (insectName == l_insectNameList[i]) {
            return true;
        }
    }
    return false;
}

/* 800E70FC-800E71D4 0E1A3C 00D8+00 2/2 0/0 0/0 .text            procInsectCatchInit__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procInsectCatchInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procInsectCatchInit__9daAlink_cFv.s"
}
#pragma pop

/* 800E71D4-800E7254 0E1B14 0080+00 1/0 0/0 0/0 .text            procInsectCatch__9daAlink_cFv */
bool daAlink_c::procInsectCatch() {
    daPy_frameCtrl_c* tmp = &mFrameCtrl1[0];

    if (tmp->checkAnmEnd()) {
        checkNextAction(0);
    } else {
        if (tmp->checkPass(field_0x3478)) {
            fopAc_ac_c* tmp2 = field_0x280c.getActor();
            if (tmp2 != NULL) {
                fopAcM_setCarryNow(tmp2, 0);
            }
        }
    }
    return true;
}

/* 800E7254-800E7460 0E1B94 020C+00 2/2 0/0 0/0 .text            procPickUpInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procPickUpInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procPickUpInit__9daAlink_cFv.s"
}
#pragma pop

/* 800E7460-800E75EC 0E1DA0 018C+00 1/0 0/0 0/0 .text            procPickUp__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procPickUp() {
    nofralloc
#include "asm/d/a/d_a_alink/procPickUp__9daAlink_cFv.s"
}
#pragma pop

/* 800E75EC-800E76E0 0E1F2C 00F4+00 3/3 0/0 0/0 .text            procPickPutInit__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procPickPutInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procPickPutInit__9daAlink_cFi.s"
}
#pragma pop

/* 800E76E0-800E7894 0E2020 01B4+00 1/0 0/0 0/0 .text            procPickPut__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procPickPut() {
    nofralloc
#include "asm/d/a/d_a_alink/procPickPut__9daAlink_cFv.s"
}
#pragma pop

/* 800E7894-800E794C 0E21D4 00B8+00 2/2 0/0 0/0 .text checkSetChainPullAnime__9daAlink_cFs */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkSetChainPullAnime(s16 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkSetChainPullAnime__9daAlink_cFs.s"
}
#pragma pop

/* 800E794C-800E7994 0E228C 0048+00 3/3 0/0 0/0 .text            getChainStickAngleY__9daAlink_cCFs
 */
// one instruction off
#ifdef NONMATCHING
s16 daAlink_c::getChainStickAngleY(s16 param_0) const {
    s16 tmp = field_0x2fe2 - param_0;

    if (tmp >= 14336 && tmp < 32640) {
        return param_0 + 32640;
    } else if (tmp <= -14336 && tmp <= -32640) {
        return field_0x2fe2;
    }
    return param_0 - 32640;
}
#else
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm s16 daAlink_c::getChainStickAngleY(s16 param_0) const {
    nofralloc
#include "asm/d/a/d_a_alink/getChainStickAngleY__9daAlink_cCFs.s"
}
#pragma pop
#endif

/* 800E7994-800E79F8 0E22D4 0064+00 1/1 0/0 0/0 .text            checkChainEmphasys__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkChainEmphasys() {
    nofralloc
#include "asm/d/a/d_a_alink/checkChainEmphasys__9daAlink_cFv.s"
}
#pragma pop

/* 800E79F8-800E7AEC 0E2338 00F4+00 4/4 0/0 0/0 .text            searchFmChainPos__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::searchFmChainPos() {
    nofralloc
#include "asm/d/a/d_a_alink/searchFmChainPos__9daAlink_cFv.s"
}
#pragma pop

/* 800E7AEC-800E7BD0 0E242C 00E4+00 0/0 1/1 0/0 .text
 * setFmChainPosFromOut__9daAlink_cFP10fopAc_ac_cP4cXyzi        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setFmChainPosFromOut(fopAc_ac_c* param_0, cXyz* param_1, int param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/setFmChainPosFromOut__9daAlink_cFP10fopAc_ac_cP4cXyzi.s"
}
#pragma pop

/* 800E7BD0-800E7C30 0E2510 0060+00 1/0 0/0 0/0 .text checkChainBlockPushPull__9daAlink_cFv */
bool daAlink_c::checkChainBlockPushPull() {
    if (i_checkFmChainGrabAnime()) {
        fopAc_ac_c* actor = field_0x2844.getActor();
        if (actor != NULL) {
            s16 name = fopAcM_GetName(actor);
            // actor is Cblock || chainSw || Cwall
            if (name == 0x7E || name == 0x16F || name == 0x7F) {
                return true;
            }
        }
    }
    return false;
}

/* 800E7C30-800E7CC0 0E2570 0090+00 2/2 0/0 0/0 .text            procFmChainUpInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procFmChainUpInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procFmChainUpInit__9daAlink_cFv.s"
}
#pragma pop

/* 800E7CC0-800E7DD8 0E2600 0118+00 1/0 0/0 0/0 .text            procFmChainUp__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procFmChainUp() {
    nofralloc
#include "asm/d/a/d_a_alink/procFmChainUp__9daAlink_cFv.s"
}
#pragma pop

/* 800E7DD8-800E7E50 0E2718 0078+00 2/1 0/0 0/0 .text procFmChainStrongPullInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procFmChainStrongPullInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procFmChainStrongPullInit__9daAlink_cFv.s"
}
#pragma pop

/* 800E7E50-800E7ED0 0E2790 0080+00 1/0 0/0 0/0 .text            procFmChainStrongPull__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procFmChainStrongPull() {
    nofralloc
#include "asm/d/a/d_a_alink/procFmChainStrongPull__9daAlink_cFv.s"
}
#pragma pop

/* 800E7ED0-800E7EE4 0E2810 0014+00 9/9 0/0 0/0 .text            setWallGrabStatus__9daAlink_cFUcUc
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setWallGrabStatus(u8 param_0, u8 param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/setWallGrabStatus__9daAlink_cFUcUc.s"
}
#pragma pop

/* 800E7EE4-800E7EF4 0E2824 0010+00 2/2 0/0 0/0 .text            getWallGrabStatus__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getWallGrabStatus() {
    nofralloc
#include "asm/d/a/d_a_alink/getWallGrabStatus__9daAlink_cFv.s"
}
#pragma pop

/* 800E7EF4-800E7F18 0E2834 0024+00 1/1 0/0 0/0 .text            wallGrabTrigger__9daAlink_cFv */
void daAlink_c::wallGrabTrigger() {
    itemTriggerCheck(64);
}

/* 800E7F18-800E7F3C 0E2858 0024+00 4/4 0/0 0/0 .text            wallGrabButton__9daAlink_cFv */
void daAlink_c::wallGrabButton() {
    itemButtonCheck(64);
}

/* 800E7F3C-800E80A4 0E287C 0168+00 4/4 0/0 0/0 .text
 * setPushPullKeepData__9daAlink_cFQ29dBgW_Base13PushPullLabeli */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setPushPullKeepData(dBgW_Base::PushPullLabel param_0, int param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/setPushPullKeepData__9daAlink_cFQ29dBgW_Base13PushPullLabeli.s"
}
#pragma pop

/* 800E80A4-800E8148 0E29E4 00A4+00 2/2 0/0 0/0 .text checkPushPullTurnBlock__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkPushPullTurnBlock() {
    nofralloc
#include "asm/d/a/d_a_alink/checkPushPullTurnBlock__9daAlink_cFv.s"
}
#pragma pop

/* 800E8148-800E8298 0E2A88 0150+00 1/1 0/0 0/0 .text            checkPullBehindWall__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkPullBehindWall() {
    nofralloc
#include "asm/d/a/d_a_alink/checkPullBehindWall__9daAlink_cFv.s"
}
#pragma pop

/* 800E8298-800E82B0 0E2BD8 0018+00 3/3 0/0 0/0 .text            offGoatStopGame__9daAlink_cFv */
void daAlink_c::offGoatStopGame() {
    if (mSpecialMode != SMODE_GOAT_STOP) {
        return;
    } else {
        mSpecialMode = 0;
    }
}

/* 800E82B0-800E8314 0E2BF0 0064+00 4/4 0/0 0/0 .text
 * checkGoatCatchActor__9daAlink_cFP10fopAc_ac_c                */
#ifdef NONMATCHING
BOOL daAlink_c::checkGoatCatchActor(fopAc_ac_c* param_0) {
    s16 name = fopAcM_GetName(param_0);
    bool check = false;

    if (name == 0x1b1 || name == 0x21) {
        if (checkSpecialNpc(param_0) || name == 0x106) {
            check = true;
        }
    }

    return check;
}
#else
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm BOOL daAlink_c::checkGoatCatchActor(fopAc_ac_c* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkGoatCatchActor__9daAlink_cFP10fopAc_ac_c.s"
}
#pragma pop
#endif

/* 800E8314-800E8334 0E2C54 0020+00 2/2 0/0 0/0 .text            getGoatCatchDistance2__9daAlink_cFv
 */
float daAlink_c::getGoatCatchDistance2() {
    if (field_0x27f4->mBase.mProcName == 0x216) {
        return lit_16066;
    }
    return lit_16067;
}

/* 800E8334-800E8354 0E2C74 0020+00 3/3 0/0 0/0 .text            endPushPull__9daAlink_cFv */
void daAlink_c::endPushPull() {
    checkWaitAction();
}

/* 800E8354-800E8428 0E2C94 00D4+00 2/2 0/0 0/0 .text            getPushPullAnimeSpeed__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getPushPullAnimeSpeed() {
    nofralloc
#include "asm/d/a/d_a_alink/getPushPullAnimeSpeed__9daAlink_cFv.s"
}
#pragma pop

/* 800E8428-800E857C 0E2D68 0154+00 4/4 0/0 0/0 .text procCoPushPullWaitInit__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoPushPullWaitInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procCoPushPullWaitInit__9daAlink_cFi.s"
}
#pragma pop

/* 800E857C-800E875C 0E2EBC 01E0+00 1/0 0/0 0/0 .text            procCoPushPullWait__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoPushPullWait() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoPushPullWait__9daAlink_cFv.s"
}
#pragma pop

/* 800E875C-800E89F0 0E309C 0294+00 2/2 0/0 0/0 .text            procCoPushMoveInit__9daAlink_cFii
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoPushMoveInit(int param_0, int param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/procCoPushMoveInit__9daAlink_cFii.s"
}
#pragma pop

/* 800E89F0-800E8D1C 0E3330 032C+00 1/0 0/0 0/0 .text            procCoPushMove__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoPushMove() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoPushMove__9daAlink_cFv.s"
}
#pragma pop

/* 800E8D1C-800E8F44 0E365C 0228+00 2/2 0/0 0/0 .text            procPullMoveInit__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procPullMoveInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procPullMoveInit__9daAlink_cFi.s"
}
#pragma pop

/* 800E8F44-800E91B0 0E3884 026C+00 1/0 0/0 0/0 .text            procPullMove__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procPullMove() {
    nofralloc
#include "asm/d/a/d_a_alink/procPullMove__9daAlink_cFv.s"
}
#pragma pop

/* 800E91B0-800E91C4 0E3AF0 0014+00 1/1 0/0 0/0 .text daAlink_searchGoat__FP10fopAc_ac_cPv */
static fopAc_ac_c* daAlink_searchGoat(fopAc_ac_c* param_0, void* param_1) {
    if (fopAcM_GetName(param_0) == 0x106) {
        return param_0;
    }
    return NULL;
}

/* 800E91C4-800E9210 0E3B04 004C+00 1/0 0/0 0/0 .text            cancelGoronThrowEvent__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::cancelGoronThrowEvent() {
    nofralloc
#include "asm/d/a/d_a_alink/cancelGoronThrowEvent__9daAlink_cFv.s"
}
#pragma pop

/* 800E9210-800E9344 0E3B50 0134+00 2/2 0/0 0/0 .text
 * setGoatStopGameFail__9daAlink_cFP10fopAc_ac_c                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setGoatStopGameFail(fopAc_ac_c* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setGoatStopGameFail__9daAlink_cFP10fopAc_ac_c.s"
}
#pragma pop

/* 800E9344-800E9434 0E3C84 00F0+00 1/1 0/0 0/0 .text            procGoatMoveInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procGoatMoveInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procGoatMoveInit__9daAlink_cFv.s"
}
#pragma pop

/* 800E9434-800E9894 0E3D74 0460+00 1/0 0/0 0/0 .text            procGoatMove__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procGoatMove() {
    nofralloc
#include "asm/d/a/d_a_alink/procGoatMove__9daAlink_cFv.s"
}
#pragma pop

/* 800E9894-800E9BD0 0E41D4 033C+00 3/3 0/0 0/0 .text procGoatCatchInit__9daAlink_cFP10fopAc_ac_cf
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procGoatCatchInit(fopAc_ac_c* param_0, f32 param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/procGoatCatchInit__9daAlink_cFP10fopAc_ac_cf.s"
}
#pragma pop

/* 800E9BD0-800EA2A8 0E4510 06D8+00 1/0 0/0 0/0 .text            procGoatCatch__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procGoatCatch() {
    nofralloc
#include "asm/d/a/d_a_alink/procGoatCatch__9daAlink_cFv.s"
}
#pragma pop

/* 800EA2A8-800EA3AC 0E4BE8 0104+00 2/2 0/0 0/0 .text            procGoatStrokeInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procGoatStrokeInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procGoatStrokeInit__9daAlink_cFv.s"
}
#pragma pop

/* 800EA3AC-800EA3F4 0E4CEC 0048+00 1/0 0/0 0/0 .text            procGoatStroke__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procGoatStroke() {
    nofralloc
#include "asm/d/a/d_a_alink/procGoatStroke__9daAlink_cFv.s"
}
#pragma pop

/* 800EA3F4-800EA4CC 0E4D34 00D8+00 2/2 0/0 0/0 .text            procGoronMoveInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procGoronMoveInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procGoronMoveInit__9daAlink_cFv.s"
}
#pragma pop

/* 800EA4CC-800EA844 0E4E0C 0378+00 1/0 0/0 0/0 .text            procGoronMove__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procGoronMove() {
    nofralloc
#include "asm/d/a/d_a_alink/procGoronMove__9daAlink_cFv.s"
}
#pragma pop

/* 800EA844-800EA8D0 0E5184 008C+00 5/5 0/0 0/0 .text            checkSumouVsActor__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkSumouVsActor() {
    nofralloc
#include "asm/d/a/d_a_alink/checkSumouVsActor__9daAlink_cFv.s"
}
#pragma pop

/* 800EA8D0-800EA908 0E5210 0038+00 5/5 0/0 0/0 .text            cancelSumouMode__9daAlink_cFv */
void daAlink_c::cancelSumouMode() {
    mCargoCarryActor.clearData();
    mSpecialMode = 0;
}

/* 800EA908-800EA92C 0E5248 0024+00 2/2 0/0 0/0 .text            sumouPunchTrigger__9daAlink_cFv */
void daAlink_c::sumouPunchTrigger() {
    itemTriggerCheck(8);
}

/* 800EA92C-800EA950 0E526C 0024+00 5/5 0/0 0/0 .text            setSumouPunchStatus__9daAlink_cFv
 */
void daAlink_c::setSumouPunchStatus() {
    setBStatus(0x44);
}

/* 800EA950-800EAA28 0E5290 00D8+00 4/4 0/0 0/0 .text            procSumouReadyInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSumouReadyInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procSumouReadyInit__9daAlink_cFv.s"
}
#pragma pop

/* 800EAA28-800EAC4C 0E5368 0224+00 1/0 0/0 0/0 .text            procSumouReady__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSumouReady() {
    nofralloc
#include "asm/d/a/d_a_alink/procSumouReady__9daAlink_cFv.s"
}
#pragma pop

/* 800EAC4C-800EAD84 0E558C 0138+00 1/1 0/0 0/0 .text            procSumouMoveInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSumouMoveInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procSumouMoveInit__9daAlink_cFv.s"
}
#pragma pop

/* 800EAD84-800EB208 0E56C4 0484+00 1/0 0/0 0/0 .text            procSumouMove__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSumouMove() {
    nofralloc
#include "asm/d/a/d_a_alink/procSumouMove__9daAlink_cFv.s"
}
#pragma pop

/* 800EB208-800EB2BC 0E5B48 00B4+00 4/4 0/0 0/0 .text            procSumouSideMoveInit__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSumouSideMoveInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procSumouSideMoveInit__9daAlink_cFv.s"
}
#pragma pop

/* 800EB2BC-800EB624 0E5BFC 0368+00 1/0 0/0 0/0 .text            procSumouSideMove__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSumouSideMove() {
    nofralloc
#include "asm/d/a/d_a_alink/procSumouSideMove__9daAlink_cFv.s"
}
#pragma pop

/* 800EB624-800EBCE0 0E5F64 06BC+00 4/4 0/0 0/0 .text            procSumouActionInit__9daAlink_cFiii
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSumouActionInit(int param_0, int param_1, int param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/procSumouActionInit__9daAlink_cFiii.s"
}
#pragma pop

/* 800EBCE0-800EC0F8 0E6620 0418+00 1/0 0/0 0/0 .text            procSumouAction__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSumouAction() {
    nofralloc
#include "asm/d/a/d_a_alink/procSumouAction__9daAlink_cFv.s"
}
#pragma pop

/* 800EC0F8-800EC170 0E6A38 0078+00 1/1 0/0 0/0 .text            procSumouStaggerInit__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSumouStaggerInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procSumouStaggerInit__9daAlink_cFv.s"
}
#pragma pop

/* 800EC170-800EC20C 0E6AB0 009C+00 1/0 0/0 0/0 .text            procSumouStagger__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSumouStagger() {
    nofralloc
#include "asm/d/a/d_a_alink/procSumouStagger__9daAlink_cFv.s"
}
#pragma pop

/* 800EC20C-800EC3D8 0E6B4C 01CC+00 1/1 0/0 0/0 .text            procSumouWinLoseInit__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSumouWinLoseInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procSumouWinLoseInit__9daAlink_cFv.s"
}
#pragma pop

/* 800EC3D8-800EC538 0E6D18 0160+00 1/0 0/0 0/0 .text            procSumouWinLose__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSumouWinLose() {
    nofralloc
#include "asm/d/a/d_a_alink/procSumouWinLose__9daAlink_cFv.s"
}
#pragma pop

/* 800EC538-800EC5F4 0E6E78 00BC+00 1/0 0/0 0/0 .text            procSumouShikoInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSumouShikoInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procSumouShikoInit__9daAlink_cFv.s"
}
#pragma pop

/* 800EC5F4-800EC724 0E6F34 0130+00 1/0 0/0 0/0 .text            procSumouShiko__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSumouShiko() {
    nofralloc
#include "asm/d/a/d_a_alink/procSumouShiko__9daAlink_cFv.s"
}
#pragma pop

/* 800EC724-800EC758 0E7064 0034+00 3/3 0/0 0/0 .text daAlink_searchBoar__FP10fopAc_ac_cPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void daAlink_searchBoar(fopAc_ac_c* param_0, void* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/daAlink_searchBoar__FP10fopAc_ac_cPv.s"
}
#pragma pop

/* 800EC758-800EC76C 0E7098 0014+00 1/1 0/0 0/0 .text daAlink_searchCoach__FP10fopAc_ac_cPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void daAlink_searchCoach(fopAc_ac_c* param_0, void* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/daAlink_searchCoach__FP10fopAc_ac_cPv.s"
}
#pragma pop

/* 800EC76C-800EC7B0 0E70AC 0044+00 3/3 0/0 0/0 .text checkHorseZeldaBowMode__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkHorseZeldaBowMode() {
    nofralloc
#include "asm/d/a/d_a_alink/checkHorseZeldaBowMode__9daAlink_cFv.s"
}
#pragma pop

/* 800EC7B0-800EC7DC 0E70F0 002C+00 4/4 0/0 0/0 .text            setHorseZeldaDamage__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setHorseZeldaDamage() {
    nofralloc
#include "asm/d/a/d_a_alink/setHorseZeldaDamage__9daAlink_cFv.s"
}
#pragma pop

/* 800EC7DC-800EC814 0E711C 0038+00 2/2 0/0 0/0 .text            checkHorseDashAccept__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm bool daAlink_c::checkHorseDashAccept() {
    nofralloc
#include "asm/d/a/d_a_alink/checkHorseDashAccept__9daAlink_cFv.s"
}
#pragma pop

/* 800EC814-800EC87C 0E7154 0068+00 1/1 0/0 0/0 .text            checkCowGame__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkCowGame() {
    nofralloc
#include "asm/d/a/d_a_alink/checkCowGame__9daAlink_cFv.s"
}
#pragma pop

/* 800EC87C-800EC8F8 0E71BC 007C+00 2/2 0/0 0/0 .text            getReinRideDirection__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getReinRideDirection() {
    nofralloc
#include "asm/d/a/d_a_alink/getReinRideDirection__9daAlink_cFv.s"
}
#pragma pop

/* 800EC8F8-800ECA3C 0E7238 0144+00 1/1 0/0 0/0 .text            checkReinRideBgCheck__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkReinRideBgCheck() {
    nofralloc
#include "asm/d/a/d_a_alink/checkReinRideBgCheck__9daAlink_cFv.s"
}
#pragma pop

/* 800ECA3C-800ECAAC 0E737C 0070+00 3/3 0/0 0/0 .text commonInitForceRideRein__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::commonInitForceRideRein() {
    nofralloc
#include "asm/d/a/d_a_alink/commonInitForceRideRein__9daAlink_cFv.s"
}
#pragma pop

/* 800ECAAC-800ECB58 0E73EC 00AC+00 1/1 0/0 0/0 .text            initForceRideBoar__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::initForceRideBoar() {
    nofralloc
#include "asm/d/a/d_a_alink/initForceRideBoar__9daAlink_cFv.s"
}
#pragma pop

/* 800ECB58-800ECBD0 0E7498 0078+00 4/4 0/0 0/0 .text            initForceRideHorse__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::initForceRideHorse() {
    nofralloc
#include "asm/d/a/d_a_alink/initForceRideHorse__9daAlink_cFv.s"
}
#pragma pop

/* 800ECBD0-800ECD90 0E7510 01C0+00 5/5 0/0 0/0 .text            rideGetOff__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::rideGetOff() {
    nofralloc
#include "asm/d/a/d_a_alink/rideGetOff__9daAlink_cFv.s"
}
#pragma pop

/* 800ECD90-800ECDC4 0E76D0 0034+00 1/1 0/0 0/0 .text checkHorseNotDamageReaction__9daAlink_cCFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkHorseNotDamageReaction() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkHorseNotDamageReaction__9daAlink_cCFv.s"
}
#pragma pop

/* 800ECDC4-800ECDEC 0E7704 0028+00 1/1 0/0 2/2 .text checkHorseWaitLashAnime__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkHorseWaitLashAnime() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkHorseWaitLashAnime__9daAlink_cCFv.s"
}
#pragma pop

/* 800ECDEC-800ECE10 0E772C 0024+00 1/1 0/0 0/0 .text checkHorseReinLeftOnly__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkHorseReinLeftOnly() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkHorseReinLeftOnly__9daAlink_cCFv.s"
}
#pragma pop

/* 800ECE10-800ECF04 0E7750 00F4+00 2/2 0/0 0/0 .text            getReinHandType__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getReinHandType() const {
    nofralloc
#include "asm/d/a/d_a_alink/getReinHandType__9daAlink_cCFv.s"
}
#pragma pop

/* 800ECF04-800ECF5C 0E7844 0058+00 5/5 0/0 1/1 .text            checkHorseLieAnime__9daAlink_cCFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm BOOL daAlink_c::checkHorseLieAnime() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkHorseLieAnime__9daAlink_cCFv.s"
}
#pragma pop

/* 800ECF5C-800ECF9C 0E789C 0040+00 0/0 0/0 3/3 .text checkHorseSubjectivity__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkHorseSubjectivity() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkHorseSubjectivity__9daAlink_cCFv.s"
}
#pragma pop

/* 800ECF9C-800ECFF4 0E78DC 0058+00 2/2 0/0 0/0 .text            setHorseSwordUpAnime__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setHorseSwordUpAnime() {
    nofralloc
#include "asm/d/a/d_a_alink/setHorseSwordUpAnime__9daAlink_cFv.s"
}
#pragma pop

/* 800ECFF4-800ED074 0E7934 0080+00 1/1 0/0 0/0 .text setHorseTurnUpperAnime__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setHorseTurnUpperAnime(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setHorseTurnUpperAnime__9daAlink_cFi.s"
}
#pragma pop

/* 800ED074-800ED0D4 0E79B4 0060+00 9/9 0/0 0/0 .text checkHorseNoUpperAnime__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm BOOL daAlink_c::checkHorseNoUpperAnime() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkHorseNoUpperAnime__9daAlink_cCFv.s"
}
#pragma pop

/* 800ED0D4-800ED1F0 0E7A14 011C+00 0/0 0/0 2/2 .text getHorseReinHandPos__9daAlink_cFP4cXyzP4cXyz
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getHorseReinHandPos(cXyz* param_0, cXyz* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/getHorseReinHandPos__9daAlink_cFP4cXyzP4cXyz.s"
}
#pragma pop

/* 800ED1F0-800ED310 0E7B30 0120+00 1/1 0/0 1/1 .text            checkHorseNotGrab__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkHorseNotGrab() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkHorseNotGrab__9daAlink_cCFv.s"
}
#pragma pop

/* 800ED310-800ED4B8 0E7C50 01A8+00 1/1 0/0 0/0 .text            setHorseStirrup__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setHorseStirrup() {
    nofralloc
#include "asm/d/a/d_a_alink/setHorseStirrup__9daAlink_cFv.s"
}
#pragma pop

/* 800ED4B8-800ED4DC 0E7DF8 0024+00 1/1 0/0 0/0 .text            changeBoarRunRide__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::changeBoarRunRide() {
    nofralloc
#include "asm/d/a/d_a_alink/changeBoarRunRide__9daAlink_cFv.s"
}
#pragma pop

/* 800ED4DC-800ED78C 0E7E1C 02B0+00 7/7 0/0 0/0 .text            setSyncHorsePos__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSyncHorsePos() {
    nofralloc
#include "asm/d/a/d_a_alink/setSyncHorsePos__9daAlink_cFv.s"
}
#pragma pop

/* 800ED78C-800ED90C 0E80CC 0180+00 4/4 0/0 0/0 .text            setSyncBoarPos__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSyncBoarPos() {
    nofralloc
#include "asm/d/a/d_a_alink/setSyncBoarPos__9daAlink_cFv.s"
}
#pragma pop

/* 800ED90C-800EDA24 0E824C 0118+00 1/1 0/0 0/0 .text            setSyncBoarRunPos__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSyncBoarRunPos() {
    nofralloc
#include "asm/d/a/d_a_alink/setSyncBoarRunPos__9daAlink_cFv.s"
}
#pragma pop

/* 800EDA24-800EDA78 0E8364 0054+00 33/33 0/0 0/0 .text            setSyncRidePos__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSyncRidePos() {
    nofralloc
#include "asm/d/a/d_a_alink/setSyncRidePos__9daAlink_cFv.s"
}
#pragma pop

/* 800EDA78-800EDB48 0E83B8 00D0+00 6/6 0/0 0/0 .text            setHorseTurnAnime__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setHorseTurnAnime() {
    nofralloc
#include "asm/d/a/d_a_alink/setHorseTurnAnime__9daAlink_cFv.s"
}
#pragma pop

/* 800EDB48-800EDD6C 0E8488 0224+00 2/2 0/0 0/0 .text
 * getBaseHorseAnime__9daAlink_cFPQ29daAlink_c11daAlink_ANM     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getBaseHorseAnime(daAlink_c::daAlink_ANM* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/getBaseHorseAnime__9daAlink_cFPQ29daAlink_c11daAlink_ANM.s"
}
#pragma pop

/* 800EDD6C-800EDE8C 0E86AC 0120+00 9/9 0/0 0/0 .text            checkHorseSpecialProc__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkHorseSpecialProc() {
    nofralloc
#include "asm/d/a/d_a_alink/checkHorseSpecialProc__9daAlink_cFv.s"
}
#pragma pop

/* 800EDE8C-800EDEEC 0E87CC 0060+00 2/2 0/0 0/0 .text checkHorseServiceWaitAnime__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkHorseServiceWaitAnime() {
    nofralloc
#include "asm/d/a/d_a_alink/checkHorseServiceWaitAnime__9daAlink_cFv.s"
}
#pragma pop

/* 800EDEEC-800EE64C 0E882C 0760+00 1/1 0/0 0/0 .text            setSyncHorse__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSyncHorse(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setSyncHorse__9daAlink_cFi.s"
}
#pragma pop

/* 800EE64C-800EE918 0E8F8C 02CC+00 1/1 0/0 0/0 .text            setSyncBoar__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSyncBoar(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setSyncBoar__9daAlink_cFi.s"
}
#pragma pop

/* 800EE918-800EEAE8 0E9258 01D0+00 12/12 0/0 0/0 .text            setSyncRide__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSyncRide(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setSyncRide__9daAlink_cFi.s"
}
#pragma pop

/* 800EEAE8-800EEC98 0E9428 01B0+00 2/2 0/0 0/0 .text setBaseHorseAnimeFrame__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setBaseHorseAnimeFrame() {
    nofralloc
#include "asm/d/a/d_a_alink/setBaseHorseAnimeFrame__9daAlink_cFv.s"
}
#pragma pop

/* 800EEC98-800EED98 0E95D8 0100+00 2/2 0/0 0/0 .text            setBaseBoarAnime__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setBaseBoarAnime() {
    nofralloc
#include "asm/d/a/d_a_alink/setBaseBoarAnime__9daAlink_cFv.s"
}
#pragma pop

/* 800EED98-800EEE30 0E96D8 0098+00 18/18 0/0 0/0 .text            setBaseRideAnime__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setBaseRideAnime() {
    nofralloc
#include "asm/d/a/d_a_alink/setBaseRideAnime__9daAlink_cFv.s"
}
#pragma pop

/* 800EEE30-800EEE5C 0E9770 002C+00 1/1 0/0 0/0 .text checkHorseSwordUpSpped__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkHorseSwordUpSpped() {
    nofralloc
#include "asm/d/a/d_a_alink/checkHorseSwordUpSpped__9daAlink_cFv.s"
}
#pragma pop

/* 800EEE5C-800EEF30 0E979C 00D4+00 2/2 0/0 0/0 .text            setHorseSwordUp__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setHorseSwordUp(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setHorseSwordUp__9daAlink_cFi.s"
}
#pragma pop

/* 800EEF30-800EF050 0E9870 0120+00 9/9 0/0 0/0 .text            setRideSubjectAngle__9daAlink_cFs
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setRideSubjectAngle(s16 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setRideSubjectAngle__9daAlink_cFs.s"
}
#pragma pop

/* 800EF050-800EF0E8 0E9990 0098+00 7/7 0/0 0/0 .text setBodyAngleRideReadyAnime__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setBodyAngleRideReadyAnime() {
    nofralloc
#include "asm/d/a/d_a_alink/setBodyAngleRideReadyAnime__9daAlink_cFv.s"
}
#pragma pop

/* 800EF0E8-800EF198 0E9A28 00B0+00 1/1 0/0 0/0 .text
 * checkHorseGetOffWallCheck__9daAlink_cFP4cXyzP4cXyzs          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkHorseGetOffWallCheck(cXyz* param_0, cXyz* param_1, s16 param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/checkHorseGetOffWallCheck__9daAlink_cFP4cXyzP4cXyzs.s"
}
#pragma pop

/* 800EF198-800EF35C 0E9AD8 01C4+00 2/2 0/0 0/0 .text checkHorseGetOffDirection__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkHorseGetOffDirection() {
    nofralloc
#include "asm/d/a/d_a_alink/checkHorseGetOffDirection__9daAlink_cFv.s"
}
#pragma pop

/* 800EF35C-800EF394 0E9C9C 0038+00 4/4 0/0 0/0 .text            boarForceGetOff__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::boarForceGetOff() {
    nofralloc
#include "asm/d/a/d_a_alink/boarForceGetOff__9daAlink_cFv.s"
}
#pragma pop

/* 800EF394-800EF450 0E9CD4 00BC+00 2/2 0/0 0/0 .text            horseGetOffEnd__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::horseGetOffEnd() {
    nofralloc
#include "asm/d/a/d_a_alink/horseGetOffEnd__9daAlink_cFv.s"
}
#pragma pop

/* 800EF450-800EF598 0E9D90 0148+00 12/12 0/0 0/0 .text checkNextActionHorse__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkNextActionHorse() {
    nofralloc
#include "asm/d/a/d_a_alink/checkNextActionHorse__9daAlink_cFv.s"
}
#pragma pop

/* 800EF598-800EF6B0 0E9ED8 0118+00 2/2 0/0 0/0 .text            checkHorseGetOff__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkHorseGetOff() {
    nofralloc
#include "asm/d/a/d_a_alink/checkHorseGetOff__9daAlink_cFv.s"
}
#pragma pop

/* 800EF6B0-800EF884 0E9FF0 01D4+00 3/3 0/0 0/0 .text checkHorseGetOffAndSetDoStatus__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkHorseGetOffAndSetDoStatus() {
    nofralloc
#include "asm/d/a/d_a_alink/checkHorseGetOffAndSetDoStatus__9daAlink_cFv.s"
}
#pragma pop

/* 800EF884-800EF95C 0EA1C4 00D8+00 2/2 0/0 0/0 .text            setHorseGetOff__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setHorseGetOff(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setHorseGetOff__9daAlink_cFi.s"
}
#pragma pop

/* 800EF95C-800EFDC4 0EA29C 0468+00 1/1 0/0 0/0 .text            procHorseRideInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseRideInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseRideInit__9daAlink_cFv.s"
}
#pragma pop

/* 800EFDC4-800F038C 0EA704 05C8+00 1/0 0/0 0/0 .text            procHorseRide__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseRide() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseRide__9daAlink_cFv.s"
}
#pragma pop

/* 800F038C-800F0620 0EACCC 0294+00 1/1 0/0 0/0 .text            procHorseGetOffInit__9daAlink_cFi
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseGetOffInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseGetOffInit__9daAlink_cFi.s"
}
#pragma pop

/* 800F0620-800F0980 0EAF60 0360+00 1/0 0/0 0/0 .text            procHorseGetOff__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseGetOff() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseGetOff__9daAlink_cFv.s"
}
#pragma pop

/* 800F0980-800F0AA4 0EB2C0 0124+00 16/16 0/0 0/0 .text            procHorseWaitInit__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseWaitInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseWaitInit__9daAlink_cFv.s"
}
#pragma pop

/* 800F0AA4-800F0C6C 0EB3E4 01C8+00 1/0 0/0 0/0 .text            procHorseWait__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseWait() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseWait__9daAlink_cFv.s"
}
#pragma pop

/* 800F0C6C-800F0CE4 0EB5AC 0078+00 1/1 0/0 0/0 .text            procHorseTurnInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseTurnInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseTurnInit__9daAlink_cFv.s"
}
#pragma pop

/* 800F0CE4-800F1060 0EB624 037C+00 1/0 0/0 0/0 .text            procHorseTurn__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseTurn() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseTurn__9daAlink_cFv.s"
}
#pragma pop

/* 800F1060-800F10F8 0EB9A0 0098+00 1/1 0/0 0/0 .text            procHorseJumpInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseJumpInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseJumpInit__9daAlink_cFv.s"
}
#pragma pop

/* 800F10F8-800F1188 0EBA38 0090+00 1/0 0/0 0/0 .text            procHorseJump__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseJump() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseJump__9daAlink_cFv.s"
}
#pragma pop

/* 800F1188-800F1204 0EBAC8 007C+00 1/1 0/0 0/0 .text            procHorseLandInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseLandInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseLandInit__9daAlink_cFv.s"
}
#pragma pop

/* 800F1204-800F1294 0EBB44 0090+00 1/0 0/0 0/0 .text            procHorseLand__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseLand() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseLand__9daAlink_cFv.s"
}
#pragma pop

/* 800F1294-800F12F8 0EBBD4 0064+00 1/1 0/0 0/0 .text procHorseSubjectivityInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseSubjectivityInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseSubjectivityInit__9daAlink_cFv.s"
}
#pragma pop

/* 800F12F8-800F13D8 0EBC38 00E0+00 1/0 0/0 0/0 .text            procHorseSubjectivity__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseSubjectivity() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseSubjectivity__9daAlink_cFv.s"
}
#pragma pop

/* 800F13D8-800F1688 0EBD18 02B0+00 1/1 0/0 0/0 .text            procHorseCutInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseCutInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseCutInit__9daAlink_cFv.s"
}
#pragma pop

/* 800F1688-800F1894 0EBFC8 020C+00 1/0 0/0 0/0 .text            procHorseCut__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseCut() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseCut__9daAlink_cFv.s"
}
#pragma pop

/* 800F1894-800F194C 0EC1D4 00B8+00 3/3 0/0 0/0 .text procHorseCutChargeReadyInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseCutChargeReadyInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseCutChargeReadyInit__9daAlink_cFv.s"
}
#pragma pop

/* 800F194C-800F1AAC 0EC28C 0160+00 1/0 0/0 0/0 .text procHorseCutChargeReady__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseCutChargeReady() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseCutChargeReady__9daAlink_cFv.s"
}
#pragma pop

/* 800F1AAC-800F1BA4 0EC3EC 00F8+00 3/3 0/0 0/0 .text            procHorseCutTurnInit__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseCutTurnInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseCutTurnInit__9daAlink_cFv.s"
}
#pragma pop

/* 800F1BA4-800F1D18 0EC4E4 0174+00 1/0 0/0 0/0 .text            procHorseCutTurn__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseCutTurn() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseCutTurn__9daAlink_cFv.s"
}
#pragma pop

/* 800F1D18-800F2028 0EC658 0310+00 2/2 0/0 0/0 .text
 * procHorseDamageInit__9daAlink_cFP12dCcD_GObjInf              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseDamageInit(dCcD_GObjInf* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseDamageInit__9daAlink_cFP12dCcD_GObjInf.s"
}
#pragma pop

/* 800F2028-800F2150 0EC968 0128+00 1/0 0/0 0/0 .text            procHorseDamage__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseDamage() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseDamage__9daAlink_cFv.s"
}
#pragma pop

/* 800F2150-800F21B4 0ECA90 0064+00 1/1 0/0 0/0 .text procHorseBowSubjectInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseBowSubjectInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseBowSubjectInit__9daAlink_cFv.s"
}
#pragma pop

/* 800F21B4-800F224C 0ECAF4 0098+00 1/0 0/0 0/0 .text            procHorseBowSubject__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseBowSubject() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseBowSubject__9daAlink_cFv.s"
}
#pragma pop

/* 800F224C-800F22A8 0ECB8C 005C+00 1/1 0/0 0/0 .text            procHorseBowMoveInit__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseBowMoveInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseBowMoveInit__9daAlink_cFv.s"
}
#pragma pop

/* 800F22A8-800F2334 0ECBE8 008C+00 1/0 0/0 0/0 .text            procHorseBowMove__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseBowMove() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseBowMove__9daAlink_cFv.s"
}
#pragma pop

/* 800F2334-800F2390 0ECC74 005C+00 2/2 0/0 0/0 .text            procHorseGrabMoveInit__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseGrabMoveInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseGrabMoveInit__9daAlink_cFv.s"
}
#pragma pop

/* 800F2390-800F2454 0ECCD0 00C4+00 1/0 0/0 0/0 .text            procHorseGrabMove__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseGrabMove() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseGrabMove__9daAlink_cFv.s"
}
#pragma pop

/* 800F2454-800F24C8 0ECD94 0074+00 1/1 0/0 0/0 .text procHorseBoomerangSubjectInit__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseBoomerangSubjectInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseBoomerangSubjectInit__9daAlink_cFv.s"
}
#pragma pop

/* 800F24C8-800F25B4 0ECE08 00EC+00 1/0 0/0 0/0 .text procHorseBoomerangSubject__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseBoomerangSubject() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseBoomerangSubject__9daAlink_cFv.s"
}
#pragma pop

/* 800F25B4-800F2628 0ECEF4 0074+00 1/1 0/0 0/0 .text procHorseBoomerangMoveInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseBoomerangMoveInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseBoomerangMoveInit__9daAlink_cFv.s"
}
#pragma pop

/* 800F2628-800F26F4 0ECF68 00CC+00 1/0 0/0 0/0 .text procHorseBoomerangMove__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseBoomerangMove() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseBoomerangMove__9daAlink_cFv.s"
}
#pragma pop

/* 800F26F4-800F2770 0ED034 007C+00 1/1 0/0 0/0 .text procHorseHookshotSubjectInit__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseHookshotSubjectInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseHookshotSubjectInit__9daAlink_cFv.s"
}
#pragma pop

/* 800F2770-800F2824 0ED0B0 00B4+00 1/0 0/0 0/0 .text procHorseHookshotSubject__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseHookshotSubject() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseHookshotSubject__9daAlink_cFv.s"
}
#pragma pop

/* 800F2824-800F2898 0ED164 0074+00 1/1 0/0 0/0 .text procHorseHookshotMoveInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseHookshotMoveInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseHookshotMoveInit__9daAlink_cFv.s"
}
#pragma pop

/* 800F2898-800F2934 0ED1D8 009C+00 1/0 0/0 0/0 .text            procHorseHookshotMove__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseHookshotMove() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseHookshotMove__9daAlink_cFv.s"
}
#pragma pop

/* 800F2934-800F2AD8 0ED274 01A4+00 1/1 0/0 0/0 .text procHorseBottleDrinkInit__9daAlink_cFUs */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseBottleDrinkInit(u16 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseBottleDrinkInit__9daAlink_cFUs.s"
}
#pragma pop

/* 800F2AD8-800F2B4C 0ED418 0074+00 1/0 0/0 0/0 .text            procHorseBottleDrink__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseBottleDrink() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseBottleDrink__9daAlink_cFv.s"
}
#pragma pop

/* 800F2B4C-800F2C78 0ED48C 012C+00 1/1 0/0 0/0 .text procHorseKandelaarPourInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseKandelaarPourInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseKandelaarPourInit__9daAlink_cFv.s"
}
#pragma pop

/* 800F2C78-800F2D84 0ED5B8 010C+00 1/0 0/0 0/0 .text procHorseKandelaarPour__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseKandelaarPour() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseKandelaarPour__9daAlink_cFv.s"
}
#pragma pop

/* 800F2D84-800F2DE4 0ED6C4 0060+00 2/2 0/0 0/0 .text            procHorseComebackInit__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseComebackInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseComebackInit__9daAlink_cFv.s"
}
#pragma pop

/* 800F2DE4-800F2EE0 0ED724 00FC+00 1/0 0/0 0/0 .text            procHorseComeback__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseComeback() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseComeback__9daAlink_cFv.s"
}
#pragma pop

/* 800F2EE0-800F2F98 0ED820 00B8+00 2/2 0/0 0/0 .text            procHorseRunInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseRunInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseRunInit__9daAlink_cFv.s"
}
#pragma pop

/* 800F2F98-800F3430 0ED8D8 0498+00 1/0 0/0 0/0 .text            procHorseRun__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseRun() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseRun__9daAlink_cFv.s"
}
#pragma pop

/* 800F3430-800F3580 0EDD70 0150+00 1/1 0/0 0/0 .text
 * procHorseHangInit__9daAlink_cFP12dCcD_GObjInfi               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseHangInit(dCcD_GObjInf* param_0, int param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseHangInit__9daAlink_cFP12dCcD_GObjInfi.s"
}
#pragma pop

/* 800F3580-800F36E4 0EDEC0 0164+00 1/0 0/0 0/0 .text            procHorseHang__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseHang() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseHang__9daAlink_cFv.s"
}
#pragma pop

/* 800F36E4-800F3754 0EE024 0070+00 1/0 0/0 0/0 .text            procHorseGetKeyInit__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseGetKeyInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseGetKeyInit__9daAlink_cFv.s"
}
#pragma pop

/* 800F3754-800F3818 0EE094 00C4+00 1/0 0/0 0/0 .text            procHorseGetKey__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseGetKey() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseGetKey__9daAlink_cFv.s"
}
#pragma pop

/* 800F3818-800F3894 0EE158 007C+00 1/0 0/0 0/0 .text            procHorseLookDownInit__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseLookDownInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseLookDownInit__9daAlink_cFv.s"
}
#pragma pop

/* 800F3894-800F38E8 0EE1D4 0054+00 1/0 0/0 0/0 .text            procHorseLookDown__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHorseLookDown() {
    nofralloc
#include "asm/d/a/d_a_alink/procHorseLookDown__9daAlink_cFv.s"
}
#pragma pop

/* 800F38E8-800F3998 0EE228 00B0+00 1/1 0/0 0/0 .text            procBoarRunInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procBoarRunInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procBoarRunInit__9daAlink_cFv.s"
}
#pragma pop

/* 800F3998-800F3BB0 0EE2D8 0218+00 1/0 0/0 0/0 .text            procBoarRun__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procBoarRun() {
    nofralloc
#include "asm/d/a/d_a_alink/procBoarRun__9daAlink_cFv.s"
}
#pragma pop

/* 800F3BB0-800F3BDC 0EE4F0 002C+00 1/1 0/0 2/2 .text            getCanoeMaxSpeed__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getCanoeMaxSpeed() const {
    nofralloc
#include "asm/d/a/d_a_alink/getCanoeMaxSpeed__9daAlink_cCFv.s"
}
#pragma pop

/* 800F3BDC-800F3BEC 0EE51C 0010+00 0/0 0/0 1/1 .text            getCanoeBackMaxSpeed__9daAlink_cCFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getCanoeBackMaxSpeed() const {
    nofralloc
#include "asm/d/a/d_a_alink/getCanoeBackMaxSpeed__9daAlink_cCFv.s"
}
#pragma pop

/* 800F3BEC-800F3C18 0EE52C 002C+00 0/0 0/0 1/1 .text            getCanoeCres__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getCanoeCres() const {
    nofralloc
#include "asm/d/a/d_a_alink/getCanoeCres__9daAlink_cCFv.s"
}
#pragma pop

/* 800F3C18-800F3C44 0EE558 002C+00 2/2 0/0 0/0 .text            getCanoeSpeedRate__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getCanoeSpeedRate() const {
    nofralloc
#include "asm/d/a/d_a_alink/getCanoeSpeedRate__9daAlink_cCFv.s"
}
#pragma pop

/* 800F3C44-800F3CCC 0EE584 0088+00 0/0 0/0 1/1 .text            getCanoeMaxRotSpeed__9daAlink_cCFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getCanoeMaxRotSpeed() const {
    nofralloc
#include "asm/d/a/d_a_alink/getCanoeMaxRotSpeed__9daAlink_cCFv.s"
}
#pragma pop

/* 800F3CCC-800F3CD8 0EE60C 000C+00 1/1 0/0 1/1 .text getCanoeLocalPaddleTop__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getCanoeLocalPaddleTop() {
    nofralloc
#include "asm/d/a/d_a_alink/getCanoeLocalPaddleTop__9daAlink_cFv.s"
}
#pragma pop

/* 800F3CD8-800F3CF8 0EE618 0020+00 3/3 0/0 0/0 .text daAlink_searchCanoe__FP10fopAc_ac_cPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void daAlink_searchCanoe(fopAc_ac_c* param_0, void* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/daAlink_searchCanoe__FP10fopAc_ac_cPv.s"
}
#pragma pop

/* 800F3CF8-800F3D58 0EE638 0060+00 0/0 2/2 0/0 .text            checkCanoeRideTandem__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkCanoeRideTandem() {
    nofralloc
#include "asm/d/a/d_a_alink/checkCanoeRideTandem__9daAlink_cFv.s"
}
#pragma pop

/* 800F3D58-800F3DA0 0EE698 0048+00 7/7 0/0 0/0 .text checkFishingRodAndLureItem__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkFishingRodAndLureItem() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkFishingRodAndLureItem__9daAlink_cCFv.s"
}
#pragma pop

/* 800F3DA0-800F3DFC 0EE6E0 005C+00 4/4 0/0 0/0 .text            initFishingRodHand__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::initFishingRodHand() {
    nofralloc
#include "asm/d/a/d_a_alink/initFishingRodHand__9daAlink_cFv.s"
}
#pragma pop

/* 800F3DFC-800F3E4C 0EE73C 0050+00 1/1 0/0 1/1 .text            getCanoePaddleMatrix__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getCanoePaddleMatrix() {
    nofralloc
#include "asm/d/a/d_a_alink/getCanoePaddleMatrix__9daAlink_cFv.s"
}
#pragma pop

/* 800F3E4C-800F3EB8 0EE78C 006C+00 0/0 0/0 4/4 .text
 * checkFishingRodGrab__9daAlink_cCFP10fopAc_ac_c               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkFishingRodGrab(fopAc_ac_c* param_0) const {
    nofralloc
#include "asm/d/a/d_a_alink/checkFishingRodGrab__9daAlink_cCFP10fopAc_ac_c.s"
}
#pragma pop

/* 800F3EB8-800F3F38 0EE7F8 0080+00 0/0 0/0 2/2 .text
 * checkCanoePaddleGrab__9daAlink_cCFP10fopAc_ac_c              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkCanoePaddleGrab(fopAc_ac_c* param_0) const {
    nofralloc
#include "asm/d/a/d_a_alink/checkCanoePaddleGrab__9daAlink_cCFP10fopAc_ac_c.s"
}
#pragma pop

/* 800F3F38-800F3FC4 0EE878 008C+00 0/0 0/0 1/1 .text checkCanoeFishingRodGrabOrPut__9daAlink_cCFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkCanoeFishingRodGrabOrPut() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkCanoeFishingRodGrabOrPut__9daAlink_cCFv.s"
}
#pragma pop

/* 800F3FC4-800F4008 0EE904 0044+00 2/2 0/0 0/0 .text            initCanoeRide__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::initCanoeRide() {
    nofralloc
#include "asm/d/a/d_a_alink/initCanoeRide__9daAlink_cFv.s"
}
#pragma pop

/* 800F4008-800F40E4 0EE948 00DC+00 2/2 0/0 0/0 .text            checkCanoeJumpRide__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm BOOL daAlink_c::checkCanoeJumpRide() {
    nofralloc
#include "asm/d/a/d_a_alink/checkCanoeJumpRide__9daAlink_cFv.s"
}
#pragma pop

/* 800F40E4-800F4140 0EEA24 005C+00 2/2 0/0 0/0 .text            setArmReelAnime__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setArmReelAnime() {
    nofralloc
#include "asm/d/a/d_a_alink/setArmReelAnime__9daAlink_cFv.s"
}
#pragma pop

/* 800F4140-800F4490 0EEA80 0350+00 1/1 0/0 0/0 .text            setFishingWaitAction__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setFishingWaitAction() {
    nofralloc
#include "asm/d/a/d_a_alink/setFishingWaitAction__9daAlink_cFv.s"
}
#pragma pop

/* 800F4490-800F4564 0EEDD0 00D4+00 3/3 0/0 0/0 .text            setFishGetFace__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setFishGetFace() {
    nofralloc
#include "asm/d/a/d_a_alink/setFishGetFace__9daAlink_cFv.s"
}
#pragma pop

/* 800F4564-800F459C 0EEEA4 0038+00 3/3 0/0 0/0 .text
 * setRideCanoeBasePos__9daAlink_cFP10fopAc_ac_c                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setRideCanoeBasePos(fopAc_ac_c* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setRideCanoeBasePos__9daAlink_cFP10fopAc_ac_c.s"
}
#pragma pop

/* 800F459C-800F47D8 0EEEDC 023C+00 20/20 0/0 0/0 .text            setSyncCanoePos__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSyncCanoePos() {
    nofralloc
#include "asm/d/a/d_a_alink/setSyncCanoePos__9daAlink_cFv.s"
}
#pragma pop

/* 800F47D8-800F4924 0EF118 014C+00 19/19 0/0 0/0 .text            canoeCommon__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::canoeCommon() {
    nofralloc
#include "asm/d/a/d_a_alink/canoeCommon__9daAlink_cFv.s"
}
#pragma pop

/* 800F4924-800F4A50 0EF264 012C+00 10/10 0/0 0/0 .text checkNextActionCanoe__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkNextActionCanoe() {
    nofralloc
#include "asm/d/a/d_a_alink/checkNextActionCanoe__9daAlink_cFv.s"
}
#pragma pop

/* 800F4A50-800F4B90 0EF390 0140+00 2/2 0/0 0/0 .text            procCanoeRideInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCanoeRideInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCanoeRideInit__9daAlink_cFv.s"
}
#pragma pop

/* 800F4B90-800F4C78 0EF4D0 00E8+00 1/0 0/0 0/0 .text            procCanoeRide__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCanoeRide() {
    nofralloc
#include "asm/d/a/d_a_alink/procCanoeRide__9daAlink_cFv.s"
}
#pragma pop

/* 800F4C78-800F4D84 0EF5B8 010C+00 4/4 0/0 0/0 .text
 * procCanoeJumpRideInit__9daAlink_cFP10fopAc_ac_c              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCanoeJumpRideInit(fopAc_ac_c* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procCanoeJumpRideInit__9daAlink_cFP10fopAc_ac_c.s"
}
#pragma pop

/* 800F4D84-800F4DF8 0EF6C4 0074+00 1/0 0/0 0/0 .text            procCanoeJumpRide__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCanoeJumpRide() {
    nofralloc
#include "asm/d/a/d_a_alink/procCanoeJumpRide__9daAlink_cFv.s"
}
#pragma pop

/* 800F4DF8-800F5048 0EF738 0250+00 2/2 0/0 0/0 .text            procCanoeGetOffInit__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCanoeGetOffInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCanoeGetOffInit__9daAlink_cFv.s"
}
#pragma pop

/* 800F5048-800F51E4 0EF988 019C+00 1/1 0/0 0/0 .text            procCanoeGetOff__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCanoeGetOff() {
    nofralloc
#include "asm/d/a/d_a_alink/procCanoeGetOff__9daAlink_cFv.s"
}
#pragma pop

/* 800F51E4-800F542C 0EFB24 0248+00 15/15 0/0 0/0 .text            procCanoeWaitInit__9daAlink_cFi
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCanoeWaitInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procCanoeWaitInit__9daAlink_cFi.s"
}
#pragma pop

/* 800F542C-800F571C 0EFD6C 02F0+00 1/0 0/0 0/0 .text            procCanoeWait__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCanoeWait() {
    nofralloc
#include "asm/d/a/d_a_alink/procCanoeWait__9daAlink_cFv.s"
}
#pragma pop

/* 800F571C-800F5A1C 0F005C 0300+00 3/3 0/0 0/0 .text            procCanoeRowInit__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCanoeRowInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procCanoeRowInit__9daAlink_cFi.s"
}
#pragma pop

/* 800F5A1C-800F5D04 0F035C 02E8+00 1/0 0/0 0/0 .text            procCanoeRow__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCanoeRow() {
    nofralloc
#include "asm/d/a/d_a_alink/procCanoeRow__9daAlink_cFv.s"
}
#pragma pop

/* 800F5D04-800F5DB8 0F0644 00B4+00 1/1 0/0 0/0 .text procCanoePaddleShiftInit__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCanoePaddleShiftInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procCanoePaddleShiftInit__9daAlink_cFi.s"
}
#pragma pop

/* 800F5DB8-800F5EA8 0F06F8 00F0+00 1/0 0/0 0/0 .text            procCanoePaddleShift__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCanoePaddleShift() {
    nofralloc
#include "asm/d/a/d_a_alink/procCanoePaddleShift__9daAlink_cFv.s"
}
#pragma pop

/* 800F5EA8-800F5FEC 0F07E8 0144+00 3/3 0/0 0/0 .text procCanoePaddlePutInit__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCanoePaddlePutInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procCanoePaddlePutInit__9daAlink_cFi.s"
}
#pragma pop

/* 800F5FEC-800F6140 0F092C 0154+00 1/0 0/0 0/0 .text            procCanoePaddlePut__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCanoePaddlePut() {
    nofralloc
#include "asm/d/a/d_a_alink/procCanoePaddlePut__9daAlink_cFv.s"
}
#pragma pop

/* 800F6140-800F6188 0F0A80 0048+00 2/2 0/0 0/0 .text procCanoePaddleGrabInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCanoePaddleGrabInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCanoePaddleGrabInit__9daAlink_cFv.s"
}
#pragma pop

/* 800F6188-800F6320 0F0AC8 0198+00 1/0 0/0 0/0 .text            procCanoePaddleGrab__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCanoePaddleGrab() {
    nofralloc
#include "asm/d/a/d_a_alink/procCanoePaddleGrab__9daAlink_cFv.s"
}
#pragma pop

/* 800F6320-800F6394 0F0C60 0074+00 1/1 0/0 0/0 .text            procCanoeRodGrabInit__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCanoeRodGrabInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCanoeRodGrabInit__9daAlink_cFv.s"
}
#pragma pop

/* 800F6394-800F6464 0F0CD4 00D0+00 1/0 0/0 0/0 .text            procCanoeRodGrab__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCanoeRodGrab() {
    nofralloc
#include "asm/d/a/d_a_alink/procCanoeRodGrab__9daAlink_cFv.s"
}
#pragma pop

/* 800F6464-800F659C 0F0DA4 0138+00 6/6 0/0 0/0 .text procCanoeFishingWaitInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCanoeFishingWaitInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCanoeFishingWaitInit__9daAlink_cFv.s"
}
#pragma pop

/* 800F659C-800F67C0 0F0EDC 0224+00 1/0 0/0 0/0 .text            procCanoeFishingWait__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCanoeFishingWait() {
    nofralloc
#include "asm/d/a/d_a_alink/procCanoeFishingWait__9daAlink_cFv.s"
}
#pragma pop

/* 800F67C0-800F6874 0F1100 00B4+00 1/1 0/0 0/0 .text procCanoeFishingReelInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCanoeFishingReelInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCanoeFishingReelInit__9daAlink_cFv.s"
}
#pragma pop

/* 800F6874-800F69D4 0F11B4 0160+00 1/0 0/0 0/0 .text            procCanoeFishingReel__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCanoeFishingReel() {
    nofralloc
#include "asm/d/a/d_a_alink/procCanoeFishingReel__9daAlink_cFv.s"
}
#pragma pop

/* 800F69D4-800F6A70 0F1314 009C+00 1/1 0/0 0/0 .text procCanoeFishingGetInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCanoeFishingGetInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCanoeFishingGetInit__9daAlink_cFv.s"
}
#pragma pop

/* 800F6A70-800F6BEC 0F13B0 017C+00 1/0 0/0 0/0 .text            procCanoeFishingGet__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCanoeFishingGet() {
    nofralloc
#include "asm/d/a/d_a_alink/procCanoeFishingGet__9daAlink_cFv.s"
}
#pragma pop

/* 800F6BEC-800F6C30 0F152C 0044+00 1/1 0/0 0/0 .text procCanoeSubjectivityInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCanoeSubjectivityInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCanoeSubjectivityInit__9daAlink_cFv.s"
}
#pragma pop

/* 800F6C30-800F6D10 0F1570 00E0+00 1/0 0/0 0/0 .text            procCanoeSubjectivity__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCanoeSubjectivity() {
    nofralloc
#include "asm/d/a/d_a_alink/procCanoeSubjectivity__9daAlink_cFv.s"
}
#pragma pop

/* 800F6D10-800F6D64 0F1650 0054+00 1/1 0/0 0/0 .text procCanoeBowSubjectInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCanoeBowSubjectInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCanoeBowSubjectInit__9daAlink_cFv.s"
}
#pragma pop

/* 800F6D64-800F6DF0 0F16A4 008C+00 1/0 0/0 0/0 .text            procCanoeBowSubject__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCanoeBowSubject() {
    nofralloc
#include "asm/d/a/d_a_alink/procCanoeBowSubject__9daAlink_cFv.s"
}
#pragma pop

/* 800F6DF0-800F6E44 0F1730 0054+00 1/1 0/0 0/0 .text            procCanoeBowMoveInit__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCanoeBowMoveInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCanoeBowMoveInit__9daAlink_cFv.s"
}
#pragma pop

/* 800F6E44-800F6EB0 0F1784 006C+00 1/0 0/0 0/0 .text            procCanoeBowMove__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCanoeBowMove() {
    nofralloc
#include "asm/d/a/d_a_alink/procCanoeBowMove__9daAlink_cFv.s"
}
#pragma pop

/* 800F6EB0-800F6EFC 0F17F0 004C+00 2/2 0/0 0/0 .text            procCanoeGrabMoveInit__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCanoeGrabMoveInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCanoeGrabMoveInit__9daAlink_cFv.s"
}
#pragma pop

/* 800F6EFC-800F6FA4 0F183C 00A8+00 1/0 0/0 0/0 .text            procCanoeGrabMove__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCanoeGrabMove() {
    nofralloc
#include "asm/d/a/d_a_alink/procCanoeGrabMove__9daAlink_cFv.s"
}
#pragma pop

/* 800F6FA4-800F7010 0F18E4 006C+00 1/1 0/0 0/0 .text procCanoeBoomerangSubjectInit__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCanoeBoomerangSubjectInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCanoeBoomerangSubjectInit__9daAlink_cFv.s"
}
#pragma pop

/* 800F7010-800F70F0 0F1950 00E0+00 1/0 0/0 0/0 .text procCanoeBoomerangSubject__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCanoeBoomerangSubject() {
    nofralloc
#include "asm/d/a/d_a_alink/procCanoeBoomerangSubject__9daAlink_cFv.s"
}
#pragma pop

/* 800F70F0-800F715C 0F1A30 006C+00 1/1 0/0 0/0 .text procCanoeBoomerangMoveInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCanoeBoomerangMoveInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCanoeBoomerangMoveInit__9daAlink_cFv.s"
}
#pragma pop

/* 800F715C-800F7208 0F1A9C 00AC+00 1/0 0/0 0/0 .text procCanoeBoomerangMove__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCanoeBoomerangMove() {
    nofralloc
#include "asm/d/a/d_a_alink/procCanoeBoomerangMove__9daAlink_cFv.s"
}
#pragma pop

/* 800F7208-800F7274 0F1B48 006C+00 1/1 0/0 0/0 .text procCanoeHookshotSubjectInit__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCanoeHookshotSubjectInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCanoeHookshotSubjectInit__9daAlink_cFv.s"
}
#pragma pop

/* 800F7274-800F731C 0F1BB4 00A8+00 1/0 0/0 0/0 .text procCanoeHookshotSubject__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCanoeHookshotSubject() {
    nofralloc
#include "asm/d/a/d_a_alink/procCanoeHookshotSubject__9daAlink_cFv.s"
}
#pragma pop

/* 800F731C-800F7388 0F1C5C 006C+00 1/1 0/0 0/0 .text procCanoeHookshotMoveInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCanoeHookshotMoveInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCanoeHookshotMoveInit__9daAlink_cFv.s"
}
#pragma pop

/* 800F7388-800F7404 0F1CC8 007C+00 1/0 0/0 0/0 .text            procCanoeHookshotMove__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCanoeHookshotMove() {
    nofralloc
#include "asm/d/a/d_a_alink/procCanoeHookshotMove__9daAlink_cFv.s"
}
#pragma pop

/* 800F7404-800F7550 0F1D44 014C+00 1/1 0/0 0/0 .text procCanoeBottleDrinkInit__9daAlink_cFUs */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCanoeBottleDrinkInit(u16 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procCanoeBottleDrinkInit__9daAlink_cFUs.s"
}
#pragma pop

/* 800F7550-800F75BC 0F1E90 006C+00 1/0 0/0 0/0 .text            procCanoeBottleDrink__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCanoeBottleDrink() {
    nofralloc
#include "asm/d/a/d_a_alink/procCanoeBottleDrink__9daAlink_cFv.s"
}
#pragma pop

/* 800F75BC-800F7684 0F1EFC 00C8+00 1/1 0/0 0/0 .text procCanoeKandelaarPourInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCanoeKandelaarPourInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCanoeKandelaarPourInit__9daAlink_cFv.s"
}
#pragma pop

/* 800F7684-800F7708 0F1FC4 0084+00 1/0 0/0 0/0 .text procCanoeKandelaarPour__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCanoeKandelaarPour() {
    nofralloc
#include "asm/d/a/d_a_alink/procCanoeKandelaarPour__9daAlink_cFv.s"
}
#pragma pop

/* 800F7708-800F7760 0F2048 0058+00 2/2 0/0 0/0 .text setGroundFishingRodActor__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setGroundFishingRodActor() {
    nofralloc
#include "asm/d/a/d_a_alink/setGroundFishingRodActor__9daAlink_cFv.s"
}
#pragma pop

/* 800F7760-800F7814 0F20A0 00B4+00 1/1 0/0 0/0 .text            procFishingCastInit__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procFishingCastInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procFishingCastInit__9daAlink_cFv.s"
}
#pragma pop

/* 800F7814-800F7988 0F2154 0174+00 1/0 0/0 0/0 .text            procFishingCast__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procFishingCast() {
    nofralloc
#include "asm/d/a/d_a_alink/procFishingCast__9daAlink_cFv.s"
}
#pragma pop

/* 800F7988-800F7AA8 0F22C8 0120+00 1/1 0/0 0/0 .text            procFishingFoodInit__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procFishingFoodInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procFishingFoodInit__9daAlink_cFv.s"
}
#pragma pop

/* 800F7AA8-800F7C50 0F23E8 01A8+00 1/0 0/0 0/0 .text            procFishingFood__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procFishingFood() {
    nofralloc
#include "asm/d/a/d_a_alink/procFishingFood__9daAlink_cFv.s"
}
#pragma pop

/* 800F7C50-800F7C74 0F2590 0024+00 2/2 0/0 0/0 .text            getCrawlMoveAnmSpeed__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getCrawlMoveAnmSpeed() {
    nofralloc
#include "asm/d/a/d_a_alink/getCrawlMoveAnmSpeed__9daAlink_cFv.s"
}
#pragma pop

/* 800F7C74-800F7CE8 0F25B4 0074+00 2/2 0/0 0/0 .text            getCrawlMoveSpeed__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getCrawlMoveSpeed() {
    nofralloc
#include "asm/d/a/d_a_alink/getCrawlMoveSpeed__9daAlink_cFv.s"
}
#pragma pop

/* 800F7CE8-800F7E48 0F2628 0160+00 4/4 0/0 0/0 .text setCrawlMoveDirectionArrow__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setCrawlMoveDirectionArrow() {
    nofralloc
#include "asm/d/a/d_a_alink/setCrawlMoveDirectionArrow__9daAlink_cFv.s"
}
#pragma pop

/* 800F7E48-800F81C0 0F2788 0378+00 2/2 0/0 0/0 .text changeCrawlAutoMoveProc__9daAlink_cFP4cXyz
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::changeCrawlAutoMoveProc(cXyz* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/changeCrawlAutoMoveProc__9daAlink_cFP4cXyz.s"
}
#pragma pop

/* 800F81C0-800F85C0 0F2B00 0400+00 2/2 0/0 0/0 .text
 * getCrawlMoveVec__9daAlink_cFP4cXyzP4cXyzP4cXyziiPUc          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getCrawlMoveVec(cXyz* param_0, cXyz* param_1, cXyz* param_2, int param_3,
                                    int param_4, u8* param_5) {
    nofralloc
#include "asm/d/a/d_a_alink/getCrawlMoveVec__9daAlink_cFP4cXyzP4cXyzP4cXyziiPUc.s"
}
#pragma pop

/* 800F85C0-800F8700 0F2F00 0140+00 2/2 0/0 0/0 .text crawlBgCheck__9daAlink_cFP4cXyzP4cXyzi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::crawlBgCheck(cXyz* param_0, cXyz* param_1, int param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/crawlBgCheck__9daAlink_cFP4cXyzP4cXyzi.s"
}
#pragma pop

/* 800F8700-800F88F8 0F3040 01F8+00 2/2 0/0 0/0 .text
 * checkCrawlSideWall__9daAlink_cFP4cXyzP4cXyzP4cXyzP4cXyzPsPs  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkCrawlSideWall(cXyz* param_0, cXyz* param_1, cXyz* param_2, cXyz* param_3,
                                       s16* param_4, s16* param_5) {
    nofralloc
#include "asm/d/a/d_a_alink/checkCrawlSideWall__9daAlink_cFP4cXyzP4cXyzP4cXyzP4cXyzPsPs.s"
}
#pragma pop

/* 800F88F8-800F89E0 0F3238 00E8+00 6/6 0/0 0/0 .text            decideCrawlDoStatus__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::decideCrawlDoStatus() {
    nofralloc
#include "asm/d/a/d_a_alink/decideCrawlDoStatus__9daAlink_cFv.s"
}
#pragma pop

/* 800F89E0-800F8A50 0F3320 0070+00 3/3 0/0 0/0 .text checkNotCrawlStand__9daAlink_cFP4cXyz */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkNotCrawlStand(cXyz* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkNotCrawlStand__9daAlink_cFP4cXyz.s"
}
#pragma pop

/* 800F8A50-800F8B00 0F3390 00B0+00 2/2 0/0 0/0 .text checkNotCrawlStand__9daAlink_cFP4cXyzP4cXyz
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkNotCrawlStand(cXyz* param_0, cXyz* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/checkNotCrawlStand__9daAlink_cFP4cXyzP4cXyz.s"
}
#pragma pop

/* 800F8B00-800F8D04 0F3440 0204+00 2/2 0/0 0/0 .text
 * checkCrawlInHoll__9daAlink_cFP4cXyzP4cXyzP4cXyzi             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkCrawlInHoll(cXyz* param_0, cXyz* param_1, cXyz* param_2, int param_3) {
    nofralloc
#include "asm/d/a/d_a_alink/checkCrawlInHoll__9daAlink_cFP4cXyzP4cXyzP4cXyzi.s"
}
#pragma pop

/* 800F8D04-800F8DBC 0F3644 00B8+00 2/2 0/0 0/0 .text            setCrawlMoveHoll__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setCrawlMoveHoll() {
    nofralloc
#include "asm/d/a/d_a_alink/setCrawlMoveHoll__9daAlink_cFv.s"
}
#pragma pop

/* 800F8DBC-800F8F08 0F36FC 014C+00 1/1 0/0 0/0 .text            setCrawlMoveAngle__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setCrawlMoveAngle() {
    nofralloc
#include "asm/d/a/d_a_alink/setCrawlMoveAngle__9daAlink_cFv.s"
}
#pragma pop

/* 800F8F08-800F8F84 0F3848 007C+00 6/6 0/0 0/0 .text            stopHalfMoveAnime__9daAlink_cFf */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::stopHalfMoveAnime(f32 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/stopHalfMoveAnime__9daAlink_cFf.s"
}
#pragma pop

/* 800F8F84-800F9210 0F38C4 028C+00 2/2 0/0 0/0 .text setCrawlAutoMoveAimPos__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setCrawlAutoMoveAimPos() {
    nofralloc
#include "asm/d/a/d_a_alink/setCrawlAutoMoveAimPos__9daAlink_cFv.s"
}
#pragma pop

/* 800F9210-800F9384 0F3B50 0174+00 2/2 0/0 0/0 .text            procCrawlStartInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCrawlStartInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCrawlStartInit__9daAlink_cFv.s"
}
#pragma pop

/* 800F9384-800F9474 0F3CC4 00F0+00 1/0 0/0 0/0 .text            procCrawlStart__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCrawlStart() {
    nofralloc
#include "asm/d/a/d_a_alink/procCrawlStart__9daAlink_cFv.s"
}
#pragma pop

/* 800F9474-800F95B8 0F3DB4 0144+00 3/3 0/0 0/0 .text            procCrawlMoveInit__9daAlink_cFss */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCrawlMoveInit(s16 param_0, s16 param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/procCrawlMoveInit__9daAlink_cFss.s"
}
#pragma pop

/* 800F95B8-800F99FC 0F3EF8 0444+00 1/0 0/0 0/0 .text            procCrawlMove__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCrawlMove() {
    nofralloc
#include "asm/d/a/d_a_alink/procCrawlMove__9daAlink_cFv.s"
}
#pragma pop

/* 800F99FC-800F9ABC 0F433C 00C0+00 1/1 0/0 0/0 .text procCrawlAutoMoveInit__9daAlink_cFiP4cXyz */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCrawlAutoMoveInit(int param_0, cXyz* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/procCrawlAutoMoveInit__9daAlink_cFiP4cXyz.s"
}
#pragma pop

/* 800F9ABC-800F9D7C 0F43FC 02C0+00 1/0 0/0 0/0 .text            procCrawlAutoMove__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCrawlAutoMove() {
    nofralloc
#include "asm/d/a/d_a_alink/procCrawlAutoMove__9daAlink_cFv.s"
}
#pragma pop

/* 800F9D7C-800F9F30 0F46BC 01B4+00 1/1 0/0 0/0 .text            procCrawlEndInit__9daAlink_cFiss */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCrawlEndInit(int param_0, s16 param_1, s16 param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/procCrawlEndInit__9daAlink_cFiss.s"
}
#pragma pop

/* 800F9F30-800F9FDC 0F4870 00AC+00 1/0 0/0 0/0 .text            procCrawlEnd__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCrawlEnd() {
    nofralloc
#include "asm/d/a/d_a_alink/procCrawlEnd__9daAlink_cFv.s"
}
#pragma pop

/* 800F9FDC-800F9FFC 0F491C 0020+00 2/2 0/0 0/0 .text            getHangMoveAnmSpeed__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getHangMoveAnmSpeed() {
    nofralloc
#include "asm/d/a/d_a_alink/getHangMoveAnmSpeed__9daAlink_cFv.s"
}
#pragma pop

/* 800F9FFC-800FA070 0F493C 0074+00 3/3 0/0 0/0 .text getHangDirectionFromAngle__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getHangDirectionFromAngle() {
    nofralloc
#include "asm/d/a/d_a_alink/getHangDirectionFromAngle__9daAlink_cFv.s"
}
#pragma pop

/* 800FA070-800FA338 0F49B0 02C8+00 2/2 0/0 0/0 .text            hangMoveBgCheck__9daAlink_cFsP4cXyz
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::hangMoveBgCheck(s16 param_0, cXyz* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/hangMoveBgCheck__9daAlink_cFsP4cXyz.s"
}
#pragma pop

/* 800FA338-800FA5C8 0F4C78 0290+00 3/3 0/0 0/0 .text            changeHangMoveProc__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::changeHangMoveProc(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/changeHangMoveProc__9daAlink_cFi.s"
}
#pragma pop

/* 800FA5C8-800FA6E4 0F4F08 011C+00 5/5 0/0 0/0 .text            checkHangFootWall__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkHangFootWall() {
    nofralloc
#include "asm/d/a/d_a_alink/checkHangFootWall__9daAlink_cFv.s"
}
#pragma pop

/* 800FA6E4-800FA78C 0F5024 00A8+00 10/10 0/0 0/0 .text            setHangGroundY__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setHangGroundY() {
    nofralloc
#include "asm/d/a/d_a_alink/setHangGroundY__9daAlink_cFv.s"
}
#pragma pop

/* 800FA78C-800FA85C 0F50CC 00D0+00 5/5 0/0 0/0 .text            changeHangEndProc__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::changeHangEndProc() {
    nofralloc
#include "asm/d/a/d_a_alink/changeHangEndProc__9daAlink_cFv.s"
}
#pragma pop

/* 800FA85C-800FAA7C 0F519C 0220+00 3/3 0/0 0/0 .text checkHangStartSideWall__9daAlink_cFs */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkHangStartSideWall(s16 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkHangStartSideWall__9daAlink_cFs.s"
}
#pragma pop

/* 800FAA7C-800FAE14 0F53BC 0398+00 3/3 0/0 0/0 .text            procHangStartInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHangStartInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procHangStartInit__9daAlink_cFv.s"
}
#pragma pop

/* 800FAE14-800FAECC 0F5754 00B8+00 1/0 0/0 0/0 .text            procHangStart__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHangStart() {
    nofralloc
#include "asm/d/a/d_a_alink/procHangStart__9daAlink_cFv.s"
}
#pragma pop

/* 800FAECC-800FB1A4 0F580C 02D8+00 1/1 0/0 0/0 .text procHangFallStartInit__9daAlink_cFP8cM3dGPla
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHangFallStartInit(cM3dGPla* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procHangFallStartInit__9daAlink_cFP8cM3dGPla.s"
}
#pragma pop

/* 800FB1A4-800FB2A0 0F5AE4 00FC+00 1/0 0/0 0/0 .text            procHangFallStart__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHangFallStart() {
    nofralloc
#include "asm/d/a/d_a_alink/procHangFallStart__9daAlink_cFv.s"
}
#pragma pop

/* 800FB2A0-800FB328 0F5BE0 0088+00 1/1 0/0 0/0 .text            procHangUpInit__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHangUpInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procHangUpInit__9daAlink_cFi.s"
}
#pragma pop

/* 800FB328-800FB43C 0F5C68 0114+00 1/0 0/0 0/0 .text            procHangUp__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHangUp() {
    nofralloc
#include "asm/d/a/d_a_alink/procHangUp__9daAlink_cFv.s"
}
#pragma pop

/* 800FB43C-800FB544 0F5D7C 0108+00 3/3 0/0 0/0 .text            procHangWaitInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHangWaitInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procHangWaitInit__9daAlink_cFv.s"
}
#pragma pop

/* 800FB544-800FB650 0F5E84 010C+00 1/0 0/0 0/0 .text            procHangWait__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHangWait() {
    nofralloc
#include "asm/d/a/d_a_alink/procHangWait__9daAlink_cFv.s"
}
#pragma pop

/* 800FB650-800FB790 0F5F90 0140+00 3/3 0/0 0/0 .text            procHangMoveInit__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHangMoveInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procHangMoveInit__9daAlink_cFi.s"
}
#pragma pop

/* 800FB790-800FBBC8 0F60D0 0438+00 1/0 0/0 0/0 .text            procHangMove__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHangMove() {
    nofralloc
#include "asm/d/a/d_a_alink/procHangMove__9daAlink_cFv.s"
}
#pragma pop

/* 800FBBC8-800FBCD4 0F6508 010C+00 6/6 0/0 0/0 .text            procHangClimbInit__9daAlink_cFf */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHangClimbInit(f32 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procHangClimbInit__9daAlink_cFf.s"
}
#pragma pop

/* 800FBCD4-800FBE04 0F6614 0130+00 1/0 0/0 0/0 .text            procHangClimb__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHangClimb() {
    nofralloc
#include "asm/d/a/d_a_alink/procHangClimb__9daAlink_cFv.s"
}
#pragma pop

/* 800FBE04-800FC0D8 0F6744 02D4+00 3/3 0/0 0/0 .text            procHangWallCatchInit__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHangWallCatchInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procHangWallCatchInit__9daAlink_cFv.s"
}
#pragma pop

/* 800FC0D8-800FC178 0F6A18 00A0+00 1/0 0/0 0/0 .text            procHangWallCatch__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHangWallCatch() {
    nofralloc
#include "asm/d/a/d_a_alink/procHangWallCatch__9daAlink_cFv.s"
}
#pragma pop

/* 800FC178-800FC240 0F6AB8 00C8+00 4/4 0/0 0/0 .text            procHangReadyInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHangReadyInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procHangReadyInit__9daAlink_cFv.s"
}
#pragma pop

/* 800FC240-800FC2F4 0F6B80 00B4+00 1/0 0/0 0/0 .text            procHangReady__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHangReady() {
    nofralloc
#include "asm/d/a/d_a_alink/procHangReady__9daAlink_cFv.s"
}
#pragma pop

/* 800FC2F4-800FC390 0F6C34 009C+00 2/2 0/0 0/0 .text            procHangLeverDownInit__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHangLeverDownInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procHangLeverDownInit__9daAlink_cFv.s"
}
#pragma pop

/* 800FC390-800FC568 0F6CD0 01D8+00 1/0 0/0 0/0 .text            procHangLeverDown__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHangLeverDown() {
    nofralloc
#include "asm/d/a/d_a_alink/procHangLeverDown__9daAlink_cFv.s"
}
#pragma pop

/* 800FC568-800FC5A4 0F6EA8 003C+00 1/0 0/0 0/0 .text changeDragonActor__9daAlink_cFP10fopAc_ac_c
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::changeDragonActor(fopAc_ac_c* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/changeDragonActor__9daAlink_cFP10fopAc_ac_c.s"
}
#pragma pop

/* 800FC5A4-800FC6B4 0F6EE4 0110+00 1/1 0/0 0/0 .text            setDragonHangPos__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setDragonHangPos() {
    nofralloc
#include "asm/d/a/d_a_alink/setDragonHangPos__9daAlink_cFv.s"
}
#pragma pop

/* 800FC6B4-800FC748 0F6FF4 0094+00 1/1 0/0 0/0 .text            setOctaIealHangPos__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setOctaIealHangPos() {
    nofralloc
#include "asm/d/a/d_a_alink/setOctaIealHangPos__9daAlink_cFv.s"
}
#pragma pop

/* 800FC748-800FC77C 0F7088 0034+00 2/2 0/0 0/0 .text            setBossBodyHangPos__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setBossBodyHangPos() {
    nofralloc
#include "asm/d/a/d_a_alink/setBossBodyHangPos__9daAlink_cFv.s"
}
#pragma pop

/* 800FC77C-800FC870 0F70BC 00F4+00 1/1 0/0 0/0 .text
 * procBossBodyHangInit__9daAlink_cFP10fopAc_ac_c               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procBossBodyHangInit(fopAc_ac_c* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procBossBodyHangInit__9daAlink_cFP10fopAc_ac_c.s"
}
#pragma pop

/* 800FC870-800FCF58 0F71B0 06E8+00 1/0 0/0 0/0 .text            procBossBodyHang__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procBossBodyHang() {
    nofralloc
#include "asm/d/a/d_a_alink/procBossBodyHang__9daAlink_cFv.s"
}
#pragma pop

/* 800FCF58-800FCF84 0F7898 002C+00 2/2 0/0 0/0 .text            getLadderUnitCount__9daAlink_cCFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getLadderUnitCount() const {
    nofralloc
#include "asm/d/a/d_a_alink/getLadderUnitCount__9daAlink_cCFv.s"
}
#pragma pop

/* 800FCF84-800FD048 0F78C4 00C4+00 1/1 0/0 0/0 .text            setLadderInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setLadderInit() {
    nofralloc
#include "asm/d/a/d_a_alink/setLadderInit__9daAlink_cFv.s"
}
#pragma pop

/* 800FD048-800FD1F0 0F7988 01A8+00 1/1 0/0 0/0 .text            setLadderPosInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setLadderPosInit() {
    nofralloc
#include "asm/d/a/d_a_alink/setLadderPosInit__9daAlink_cFv.s"
}
#pragma pop

/* 800FD1F0-800FD288 0F7B30 0098+00 2/2 0/0 0/0 .text            setLadderPos__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setLadderPos(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setLadderPos__9daAlink_cFi.s"
}
#pragma pop

/* 800FD288-800FD2AC 0F7BC8 0024+00 2/2 0/0 0/0 .text            getLadderMoveAnmSpeed__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getLadderMoveAnmSpeed() {
    nofralloc
#include "asm/d/a/d_a_alink/getLadderMoveAnmSpeed__9daAlink_cFv.s"
}
#pragma pop

/* 800FD2AC-800FD4A8 0F7BEC 01FC+00 3/3 0/0 0/0 .text            changeLadderMoveProc__9daAlink_cFi
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::changeLadderMoveProc(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/changeLadderMoveProc__9daAlink_cFi.s"
}
#pragma pop

/* 800FD4A8-800FD5E4 0F7DE8 013C+00 5/5 0/0 0/0 .text setMoveBGLadderCorrect__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setMoveBGLadderCorrect() {
    nofralloc
#include "asm/d/a/d_a_alink/setMoveBGLadderCorrect__9daAlink_cFv.s"
}
#pragma pop

/* 800FD5E4-800FD648 0F7F24 0064+00 8/8 0/0 0/0 .text            checkLadderFall__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkLadderFall() {
    nofralloc
#include "asm/d/a/d_a_alink/checkLadderFall__9daAlink_cFv.s"
}
#pragma pop

/* 800FD648-800FD7B0 0F7F88 0168+00 2/2 0/0 0/0 .text            procLadderUpStartInit__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procLadderUpStartInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procLadderUpStartInit__9daAlink_cFv.s"
}
#pragma pop

/* 800FD7B0-800FD824 0F80F0 0074+00 1/0 0/0 0/0 .text            procLadderUpStart__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procLadderUpStart() {
    nofralloc
#include "asm/d/a/d_a_alink/procLadderUpStart__9daAlink_cFv.s"
}
#pragma pop

/* 800FD824-800FD8E8 0F8164 00C4+00 2/2 0/0 0/0 .text            procLadderUpEndInit__9daAlink_cFi
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procLadderUpEndInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procLadderUpEndInit__9daAlink_cFi.s"
}
#pragma pop

/* 800FD8E8-800FD9CC 0F8228 00E4+00 1/0 0/0 0/0 .text            procLadderUpEnd__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procLadderUpEnd() {
    nofralloc
#include "asm/d/a/d_a_alink/procLadderUpEnd__9daAlink_cFv.s"
}
#pragma pop

/* 800FD9CC-800FDB74 0F830C 01A8+00 2/2 0/0 0/0 .text procLadderDownStartInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procLadderDownStartInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procLadderDownStartInit__9daAlink_cFv.s"
}
#pragma pop

/* 800FDB74-800FDC18 0F84B4 00A4+00 1/0 0/0 0/0 .text            procLadderDownStart__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procLadderDownStart() {
    nofralloc
#include "asm/d/a/d_a_alink/procLadderDownStart__9daAlink_cFv.s"
}
#pragma pop

/* 800FDC18-800FDCCC 0F8558 00B4+00 1/1 0/0 0/0 .text            procLadderDownEndInit__9daAlink_cFi
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procLadderDownEndInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procLadderDownEndInit__9daAlink_cFi.s"
}
#pragma pop

/* 800FDCCC-800FDD90 0F860C 00C4+00 1/0 0/0 0/0 .text            procLadderDownEnd__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procLadderDownEnd() {
    nofralloc
#include "asm/d/a/d_a_alink/procLadderDownEnd__9daAlink_cFv.s"
}
#pragma pop

/* 800FDD90-800FDF50 0F86D0 01C0+00 3/3 0/0 0/0 .text procLadderMoveInit__9daAlink_cFiiP4cXyz */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procLadderMoveInit(int param_0, int param_1, cXyz* param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/procLadderMoveInit__9daAlink_cFiiP4cXyz.s"
}
#pragma pop

/* 800FDF50-800FE010 0F8890 00C0+00 1/0 0/0 0/0 .text            procLadderMove__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procLadderMove() {
    nofralloc
#include "asm/d/a/d_a_alink/procLadderMove__9daAlink_cFv.s"
}
#pragma pop

/* 800FE010-800FE034 0F8950 0024+00 3/3 0/0 0/0 .text getClimbMoveUpDownAnmSpeed__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getClimbMoveUpDownAnmSpeed() {
    nofralloc
#include "asm/d/a/d_a_alink/getClimbMoveUpDownAnmSpeed__9daAlink_cFv.s"
}
#pragma pop

/* 800FE034-800FE058 0F8974 0024+00 4/4 0/0 0/0 .text getClimbMoveSideAnmSpeed__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getClimbMoveSideAnmSpeed() {
    nofralloc
#include "asm/d/a/d_a_alink/getClimbMoveSideAnmSpeed__9daAlink_cFv.s"
}
#pragma pop

/* 800FE058-800FE114 0F8998 00BC+00 9/9 0/0 0/0 .text checkClimbCode__9daAlink_cFR13cBgS_PolyInfo
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkClimbCode(cBgS_PolyInfo& param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkClimbCode__9daAlink_cFR13cBgS_PolyInfo.s"
}
#pragma pop

/* 800FE114-800FE174 0F8A54 0060+00 1/1 0/0 0/0 .text            setClimbInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setClimbInit() {
    nofralloc
#include "asm/d/a/d_a_alink/setClimbInit__9daAlink_cFv.s"
}
#pragma pop

/* 800FE174-800FE3C4 0F8AB4 0250+00 8/8 0/0 0/0 .text            setClimbShapeOffset__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setClimbShapeOffset() {
    nofralloc
#include "asm/d/a/d_a_alink/setClimbShapeOffset__9daAlink_cFv.s"
}
#pragma pop

/* 800FE3C4-800FE438 0F8D04 0074+00 1/1 0/0 0/0 .text getClimbDirectionFromAngle__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getClimbDirectionFromAngle() {
    nofralloc
#include "asm/d/a/d_a_alink/getClimbDirectionFromAngle__9daAlink_cFv.s"
}
#pragma pop

/* 800FE438-800FE5A0 0F8D78 0168+00 3/3 0/0 0/0 .text            changeClimbMoveProc__9daAlink_cFi
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::changeClimbMoveProc(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/changeClimbMoveProc__9daAlink_cFi.s"
}
#pragma pop

/* 800FE5A0-800FE6E8 0F8EE0 0148+00 2/2 0/0 0/0 .text checkClimbMoveUpDownProc__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkClimbMoveUpDownProc(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkClimbMoveUpDownProc__9daAlink_cFi.s"
}
#pragma pop

/* 800FE6E8-800FE868 0F9028 0180+00 2/2 0/0 0/0 .text checkClimbMoveSideProc__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkClimbMoveSideProc(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkClimbMoveSideProc__9daAlink_cFi.s"
}
#pragma pop

/* 800FE868-800FEB90 0F91A8 0328+00 6/6 0/0 0/0 .text            setMoveBGClimbCorrect__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setMoveBGClimbCorrect() {
    nofralloc
#include "asm/d/a/d_a_alink/setMoveBGClimbCorrect__9daAlink_cFv.s"
}
#pragma pop

/* 800FEB90-800FEC70 0F94D0 00E0+00 1/1 0/0 0/0 .text
 * checkBgCorrectClimbMove__9daAlink_cFP4cXyzP4cXyz             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkBgCorrectClimbMove(cXyz* param_0, cXyz* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/checkBgCorrectClimbMove__9daAlink_cFP4cXyzP4cXyz.s"
}
#pragma pop

/* 800FEC70-800FED50 0F95B0 00E0+00 2/2 0/0 0/0 .text            checkClimbRoof__9daAlink_cFf */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkClimbRoof(f32 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkClimbRoof__9daAlink_cFf.s"
}
#pragma pop

/* 800FED50-800FEEC0 0F9690 0170+00 2/2 0/0 0/0 .text checkClimbGround__9daAlink_cFP4cXyzf */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkClimbGround(cXyz* param_0, f32 param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/checkClimbGround__9daAlink_cFP4cXyzf.s"
}
#pragma pop

/* 800FEEC0-800FF28C 0F9800 03CC+00 5/5 0/0 0/0 .text            checkBgClimbMove__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkBgClimbMove(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkBgClimbMove__9daAlink_cFi.s"
}
#pragma pop

/* 800FF28C-800FF450 0F9BCC 01C4+00 2/2 0/0 0/0 .text setClimbStartNotGround__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setClimbStartNotGround() {
    nofralloc
#include "asm/d/a/d_a_alink/setClimbStartNotGround__9daAlink_cFv.s"
}
#pragma pop

/* 800FF450-800FF704 0F9D90 02B4+00 2/2 0/0 0/0 .text            procClimbUpStartInit__9daAlink_cFi
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procClimbUpStartInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procClimbUpStartInit__9daAlink_cFi.s"
}
#pragma pop

/* 800FF704-800FF818 0FA044 0114+00 1/0 0/0 0/0 .text            procClimbUpStart__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procClimbUpStart() {
    nofralloc
#include "asm/d/a/d_a_alink/procClimbUpStart__9daAlink_cFv.s"
}
#pragma pop

/* 800FF818-800FF9A8 0FA158 0190+00 1/1 0/0 0/0 .text procClimbDownStartInit__9daAlink_cFs */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procClimbDownStartInit(s16 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procClimbDownStartInit__9daAlink_cFs.s"
}
#pragma pop

/* 800FF9A8-800FFAB0 0FA2E8 0108+00 1/0 0/0 0/0 .text            procClimbDownStart__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procClimbDownStart() {
    nofralloc
#include "asm/d/a/d_a_alink/procClimbDownStart__9daAlink_cFv.s"
}
#pragma pop

/* 800FFAB0-800FFC58 0FA3F0 01A8+00 1/1 0/0 0/0 .text procClimbMoveUpDownInit__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procClimbMoveUpDownInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procClimbMoveUpDownInit__9daAlink_cFi.s"
}
#pragma pop

/* 800FFC58-800FFDB0 0FA598 0158+00 1/0 0/0 0/0 .text            procClimbMoveUpDown__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procClimbMoveUpDown() {
    nofralloc
#include "asm/d/a/d_a_alink/procClimbMoveUpDown__9daAlink_cFv.s"
}
#pragma pop

/* 800FFDB0-800FFF4C 0FA6F0 019C+00 1/1 0/0 0/0 .text            procClimbMoveSideInit__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procClimbMoveSideInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procClimbMoveSideInit__9daAlink_cFv.s"
}
#pragma pop

/* 800FFF4C-801000F8 0FA88C 01AC+00 1/0 0/0 0/0 .text            procClimbMoveSide__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procClimbMoveSide() {
    nofralloc
#include "asm/d/a/d_a_alink/procClimbMoveSide__9daAlink_cFv.s"
}
#pragma pop

/* 801000F8-80100258 0FAA38 0160+00 7/7 0/0 0/0 .text            procClimbWaitInit__9daAlink_cFii */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procClimbWaitInit(int param_0, int param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/procClimbWaitInit__9daAlink_cFii.s"
}
#pragma pop

/* 80100258-801003E4 0FAB98 018C+00 1/0 0/0 0/0 .text            procClimbWait__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procClimbWait() {
    nofralloc
#include "asm/d/a/d_a_alink/procClimbWait__9daAlink_cFv.s"
}
#pragma pop

/* 801003E4-80100464 0FAD24 0080+00 2/2 0/0 0/0 .text            procClimbToRoofInit__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procClimbToRoofInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procClimbToRoofInit__9daAlink_cFv.s"
}
#pragma pop

/* 80100464-801005CC 0FADA4 0168+00 1/0 0/0 0/0 .text            procClimbToRoof__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procClimbToRoof() {
    nofralloc
#include "asm/d/a/d_a_alink/procClimbToRoof__9daAlink_cFv.s"
}
#pragma pop

/* 801005CC-801005F0 0FAF0C 0024+00 2/2 0/0 0/0 .text getRoofHangFMoveAnmSpeed__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getRoofHangFMoveAnmSpeed() const {
    nofralloc
#include "asm/d/a/d_a_alink/getRoofHangFMoveAnmSpeed__9daAlink_cCFv.s"
}
#pragma pop

/* 801005F0-80100614 0FAF30 0024+00 2/2 0/0 0/0 .text getRoofHangSMoveAnmSpeed__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getRoofHangSMoveAnmSpeed() const {
    nofralloc
#include "asm/d/a/d_a_alink/getRoofHangSMoveAnmSpeed__9daAlink_cCFv.s"
}
#pragma pop

/* 80100614-80100668 0FAF54 0054+00 3/3 0/0 0/0 .text
 * setRoofHangHandOnSE__9daAlink_cFP13cBgS_PolyInfo             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setRoofHangHandOnSE(cBgS_PolyInfo* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setRoofHangHandOnSE__9daAlink_cFP13cBgS_PolyInfo.s"
}
#pragma pop

/* 80100668-80100770 0FAFA8 0108+00 3/3 0/0 0/0 .text            checkRoofHangMovePos__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkRoofHangMovePos() {
    nofralloc
#include "asm/d/a/d_a_alink/checkRoofHangMovePos__9daAlink_cFv.s"
}
#pragma pop

/* 80100770-801008EC 0FB0B0 017C+00 5/5 0/0 0/0 .text            commonRoofHangProc__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::commonRoofHangProc() {
    nofralloc
#include "asm/d/a/d_a_alink/commonRoofHangProc__9daAlink_cFv.s"
}
#pragma pop

/* 801008EC-80100A10 0FB22C 0124+00 5/5 0/0 0/0 .text checkNextActionRoofHang__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkNextActionRoofHang() {
    nofralloc
#include "asm/d/a/d_a_alink/checkNextActionRoofHang__9daAlink_cFv.s"
}
#pragma pop

/* 80100A10-80100AE4 0FB350 00D4+00 2/2 0/0 0/0 .text
 * procRoofHangStartInit__9daAlink_cFRC13cBgS_PolyInfoRC4cXyzi  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procRoofHangStartInit(cBgS_PolyInfo const& param_0, cXyz const& param_1,
                                          int param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/procRoofHangStartInit__9daAlink_cFRC13cBgS_PolyInfoRC4cXyzi.s"
}
#pragma pop

/* 80100AE4-80100BB4 0FB424 00D0+00 1/0 0/0 0/0 .text            procRoofHangStart__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procRoofHangStart() {
    nofralloc
#include "asm/d/a/d_a_alink/procRoofHangStart__9daAlink_cFv.s"
}
#pragma pop

/* 80100BB4-80100D38 0FB4F4 0184+00 4/4 0/0 0/0 .text            procRoofHangWaitInit__9daAlink_cFi
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procRoofHangWaitInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procRoofHangWaitInit__9daAlink_cFi.s"
}
#pragma pop

/* 80100D38-80100DA4 0FB678 006C+00 1/0 0/0 0/0 .text            procRoofHangWait__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procRoofHangWait() {
    nofralloc
#include "asm/d/a/d_a_alink/procRoofHangWait__9daAlink_cFv.s"
}
#pragma pop

/* 80100DA4-80100EEC 0FB6E4 0148+00 1/1 0/0 0/0 .text procRoofHangFrontMoveInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procRoofHangFrontMoveInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procRoofHangFrontMoveInit__9daAlink_cFv.s"
}
#pragma pop

/* 80100EEC-8010121C 0FB82C 0330+00 1/0 0/0 0/0 .text            procRoofHangFrontMove__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procRoofHangFrontMove() {
    nofralloc
#include "asm/d/a/d_a_alink/procRoofHangFrontMove__9daAlink_cFv.s"
}
#pragma pop

/* 8010121C-80101308 0FBB5C 00EC+00 1/1 0/0 0/0 .text procRoofHangSideMoveInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procRoofHangSideMoveInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procRoofHangSideMoveInit__9daAlink_cFv.s"
}
#pragma pop

/* 80101308-801013B8 0FBC48 00B0+00 1/0 0/0 0/0 .text            procRoofHangSideMove__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procRoofHangSideMove() {
    nofralloc
#include "asm/d/a/d_a_alink/procRoofHangSideMove__9daAlink_cFv.s"
}
#pragma pop

/* 801013B8-80101534 0FBCF8 017C+00 1/1 0/0 0/0 .text            procRoofHangTurnInit__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procRoofHangTurnInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procRoofHangTurnInit__9daAlink_cFv.s"
}
#pragma pop

/* 80101534-8010163C 0FBE74 0108+00 1/0 0/0 0/0 .text            procRoofHangTurn__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procRoofHangTurn() {
    nofralloc
#include "asm/d/a/d_a_alink/procRoofHangTurn__9daAlink_cFv.s"
}
#pragma pop

/* 8010163C-801016AC 0FBF7C 0070+00 2/2 0/0 0/0 .text            setRoofHangSwitch__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setRoofHangSwitch() {
    nofralloc
#include "asm/d/a/d_a_alink/setRoofHangSwitch__9daAlink_cFv.s"
}
#pragma pop

/* 801016AC-801017AC 0FBFEC 0100+00 1/1 0/0 0/0 .text
 * procRoofSwitchHangInit__9daAlink_cFP10fopAc_ac_c             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procRoofSwitchHangInit(fopAc_ac_c* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procRoofSwitchHangInit__9daAlink_cFP10fopAc_ac_c.s"
}
#pragma pop

/* 801017AC-80101874 0FC0EC 00C8+00 1/0 0/0 0/0 .text            procRoofSwitchHang__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procRoofSwitchHang() {
    nofralloc
#include "asm/d/a/d_a_alink/procRoofSwitchHang__9daAlink_cFv.s"
}
#pragma pop

/* 80101874-80101890 0FC1B4 001C+00 2/2 0/0 0/0 .text            getHangPos__13daObjSwHang_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daObjSwHang_c::getHangPos() {
    nofralloc
#include "asm/d/a/d_a_alink/getHangPos__13daObjSwHang_cFv.s"
}
#pragma pop

/* 80101890-801018E4 0FC1D0 0054+00 6/6 0/0 0/0 .text            checkZoraWearMaskDraw__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkZoraWearMaskDraw() {
    nofralloc
#include "asm/d/a/d_a_alink/checkZoraWearMaskDraw__9daAlink_cFv.s"
}
#pragma pop

/* 801018E4-80101934 0FC224 0050+00 1/1 0/0 0/0 .text checkAcceptUseItemInWater__9daAlink_cCFUs */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkAcceptUseItemInWater(u16 param_0) const {
    nofralloc
#include "asm/d/a/d_a_alink/checkAcceptUseItemInWater__9daAlink_cCFUs.s"
}
#pragma pop

/* 80101934-801019B8 0FC274 0084+00 4/4 0/0 0/0 .text            swimDeleteItem__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::swimDeleteItem() {
    nofralloc
#include "asm/d/a/d_a_alink/swimDeleteItem__9daAlink_cFv.s"
}
#pragma pop

/* 801019B8-80101A18 0FC2F8 0060+00 11/11 0/0 0/0 .text            getZoraSwim__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getZoraSwim() const {
    nofralloc
#include "asm/d/a/d_a_alink/getZoraSwim__9daAlink_cCFv.s"
}
#pragma pop

/* 80101A18-80101AA8 0FC358 0090+00 6/6 0/0 0/0 .text            getSwimFrontMaxSpeed__9daAlink_cCFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getSwimFrontMaxSpeed() const {
    nofralloc
#include "asm/d/a/d_a_alink/getSwimFrontMaxSpeed__9daAlink_cCFv.s"
}
#pragma pop

/* 80101AA8-80101B44 0FC3E8 009C+00 5/5 0/0 0/0 .text            getSwimMaxFallSpeed__9daAlink_cCFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getSwimMaxFallSpeed() const {
    nofralloc
#include "asm/d/a/d_a_alink/getSwimMaxFallSpeed__9daAlink_cCFv.s"
}
#pragma pop

/* 80101B44-80101C94 0FC484 0150+00 1/1 0/0 0/0 .text            checkOxygenTimer__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkOxygenTimer() {
    nofralloc
#include "asm/d/a/d_a_alink/checkOxygenTimer__9daAlink_cFv.s"
}
#pragma pop

/* 80101C94-80101CB8 0FC5D4 0024+00 3/3 0/0 0/0 .text            offOxygenTimer__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::offOxygenTimer() {
    nofralloc
#include "asm/d/a/d_a_alink/offOxygenTimer__9daAlink_cFv.s"
}
#pragma pop

/* 80101CB8-80101CF4 0FC5F8 003C+00 2/2 0/0 0/0 .text checkPossibleWaterInMode__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkPossibleWaterInMode() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkPossibleWaterInMode__9daAlink_cCFv.s"
}
#pragma pop

/* 80101CF4-80101D70 0FC634 007C+00 18/18 0/0 0/0 .text
 * setWaterInAnmRate__9daAlink_cFP16daPy_frameCtrl_cf           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setWaterInAnmRate(daPy_frameCtrl_c* param_0, f32 param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/setWaterInAnmRate__9daAlink_cFP16daPy_frameCtrl_cf.s"
}
#pragma pop

/* 80101D70-801023E4 0FC6B0 0674+00 2/2 0/0 0/0 .text            swimBgCheck__9daAlink_cFf */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::swimBgCheck(f32 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/swimBgCheck__9daAlink_cFf.s"
}
#pragma pop

/* 801023E4-801029C8 0FCD24 05E4+00 3/3 0/0 0/0 .text            setSpeedAndAngleSwim__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSpeedAndAngleSwim() {
    nofralloc
#include "asm/d/a/d_a_alink/setSpeedAndAngleSwim__9daAlink_cFv.s"
}
#pragma pop

/* 801029C8-80102B1C 0FD308 0154+00 3/3 0/0 0/0 .text            checkNextActionSwim__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkNextActionSwim() {
    nofralloc
#include "asm/d/a/d_a_alink/checkNextActionSwim__9daAlink_cFv.s"
}
#pragma pop

/* 80102B1C-80103058 0FD45C 053C+00 3/3 0/0 0/0 .text            checkSwimAction__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkSwimAction(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkSwimAction__9daAlink_cFi.s"
}
#pragma pop

/* 80103058-801032C8 0FD998 0270+00 7/7 0/0 0/0 .text            checkSwimUpAction__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkSwimUpAction() {
    nofralloc
#include "asm/d/a/d_a_alink/checkSwimUpAction__9daAlink_cFv.s"
}
#pragma pop

/* 801032C8-80103398 0FDC08 00D0+00 8/8 0/0 0/0 .text            swimOutAfter__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::swimOutAfter(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/swimOutAfter__9daAlink_cFi.s"
}
#pragma pop

/* 80103398-801033CC 0FDCD8 0034+00 1/1 0/0 0/0 .text            checkSwimFall__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkSwimFall() {
    nofralloc
#include "asm/d/a/d_a_alink/checkSwimFall__9daAlink_cFv.s"
}
#pragma pop

/* 801033CC-80103698 0FDD0C 02CC+00 1/1 0/0 0/0 .text            checkSwimOutAction__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkSwimOutAction() {
    nofralloc
#include "asm/d/a/d_a_alink/checkSwimOutAction__9daAlink_cFv.s"
}
#pragma pop

/* 80103698-80103EE0 0FDFD8 0848+00 4/4 0/0 0/0 .text            setSwimMoveAnime__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSwimMoveAnime() {
    nofralloc
#include "asm/d/a/d_a_alink/setSwimMoveAnime__9daAlink_cFv.s"
}
#pragma pop

/* 80103EE0-80103F08 0FE820 0028+00 5/5 0/0 0/0 .text            checkSwimButtonAccept__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkSwimButtonAccept() {
    nofralloc
#include "asm/d/a/d_a_alink/checkSwimButtonAccept__9daAlink_cFv.s"
}
#pragma pop

/* 80103F08-80103F24 0FE848 001C+00 4/4 0/0 0/0 .text checkUpSwimButtonAccept__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkUpSwimButtonAccept() {
    nofralloc
#include "asm/d/a/d_a_alink/checkUpSwimButtonAccept__9daAlink_cFv.s"
}
#pragma pop

/* 80103F24-80103F94 0FE864 0070+00 2/2 0/0 0/0 .text            checkSwimButtonMove__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkSwimButtonMove() {
    nofralloc
#include "asm/d/a/d_a_alink/checkSwimButtonMove__9daAlink_cFv.s"
}
#pragma pop

/* 80103F94-80103FE8 0FE8D4 0054+00 3/3 0/0 0/0 .text            checkZoraSwimMove__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkZoraSwimMove() {
    nofralloc
#include "asm/d/a/d_a_alink/checkZoraSwimMove__9daAlink_cFv.s"
}
#pragma pop

/* 80103FE8-80104034 0FE928 004C+00 2/2 0/0 0/0 .text            checkSwimNeckUpDown__9daAlink_cCFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkSwimNeckUpDown() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkSwimNeckUpDown__9daAlink_cCFv.s"
}
#pragma pop

/* 80104034-801040F8 0FE974 00C4+00 3/3 0/0 0/0 .text            setSwimUpDownOffset__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSwimUpDownOffset() {
    nofralloc
#include "asm/d/a/d_a_alink/setSwimUpDownOffset__9daAlink_cFv.s"
}
#pragma pop

/* 801040F8-801041E8 0FEA38 00F0+00 2/2 0/0 0/0 .text            procSwimUpInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSwimUpInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procSwimUpInit__9daAlink_cFv.s"
}
#pragma pop

/* 801041E8-801042F8 0FEB28 0110+00 1/0 0/0 0/0 .text            procSwimUp__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSwimUp() {
    nofralloc
#include "asm/d/a/d_a_alink/procSwimUp__9daAlink_cFv.s"
}
#pragma pop

/* 801042F8-801044B4 0FEC38 01BC+00 15/15 0/0 0/0 .text            procSwimWaitInit__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSwimWaitInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procSwimWaitInit__9daAlink_cFi.s"
}
#pragma pop

/* 801044B4-80104670 0FEDF4 01BC+00 1/0 0/0 0/0 .text            procSwimWait__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSwimWait() {
    nofralloc
#include "asm/d/a/d_a_alink/procSwimWait__9daAlink_cFv.s"
}
#pragma pop

/* 80104670-801047B8 0FEFB0 0148+00 9/9 0/0 0/0 .text            procSwimMoveInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSwimMoveInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procSwimMoveInit__9daAlink_cFv.s"
}
#pragma pop

/* 801047B8-80104958 0FF0F8 01A0+00 1/0 0/0 0/0 .text            procSwimMove__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSwimMove() {
    nofralloc
#include "asm/d/a/d_a_alink/procSwimMove__9daAlink_cFv.s"
}
#pragma pop

/* 80104958-80104AA0 0FF298 0148+00 4/4 0/0 0/0 .text            procSwimDiveInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSwimDiveInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procSwimDiveInit__9daAlink_cFv.s"
}
#pragma pop

/* 80104AA0-80104C50 0FF3E0 01B0+00 1/0 0/0 0/0 .text            procSwimDive__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSwimDive() {
    nofralloc
#include "asm/d/a/d_a_alink/procSwimDive__9daAlink_cFv.s"
}
#pragma pop

/* 80104C50-80104D7C 0FF590 012C+00 1/1 0/0 0/0 .text procSwimHookshotSubjectInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSwimHookshotSubjectInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procSwimHookshotSubjectInit__9daAlink_cFv.s"
}
#pragma pop

/* 80104D7C-80104EB8 0FF6BC 013C+00 1/0 0/0 0/0 .text procSwimHookshotSubject__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSwimHookshotSubject() {
    nofralloc
#include "asm/d/a/d_a_alink/procSwimHookshotSubject__9daAlink_cFv.s"
}
#pragma pop

/* 80104EB8-80104FC4 0FF7F8 010C+00 1/1 0/0 0/0 .text procSwimHookshotMoveInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSwimHookshotMoveInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procSwimHookshotMoveInit__9daAlink_cFv.s"
}
#pragma pop

/* 80104FC4-8010519C 0FF904 01D8+00 1/0 0/0 0/0 .text            procSwimHookshotMove__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSwimHookshotMove() {
    nofralloc
#include "asm/d/a/d_a_alink/procSwimHookshotMove__9daAlink_cFv.s"
}
#pragma pop

/* 8010519C-80105728 0FFADC 058C+00 1/1 0/0 0/0 .text
 * procSwimDamageInit__9daAlink_cFP12dCcD_GObjInf               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSwimDamageInit(dCcD_GObjInf* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procSwimDamageInit__9daAlink_cFP12dCcD_GObjInf.s"
}
#pragma pop

/* 80105728-801058A0 100068 0178+00 1/0 0/0 0/0 .text            procSwimDamage__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSwimDamage() {
    nofralloc
#include "asm/d/a/d_a_alink/procSwimDamage__9daAlink_cFv.s"
}
#pragma pop

/* 801058A0-80105A00 1001E0 0160+00 2/2 0/0 0/0 .text            procOctaIealSpitInit__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procOctaIealSpitInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procOctaIealSpitInit__9daAlink_cFv.s"
}
#pragma pop

/* 80105A00-80105A84 100340 0084+00 1/0 0/0 0/0 .text            procOctaIealSpit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procOctaIealSpit() {
    nofralloc
#include "asm/d/a/d_a_alink/procOctaIealSpit__9daAlink_cFv.s"
}
#pragma pop

/* 80105A84-80105A98 1003C4 0014+00 1/1 0/0 0/0 .text daAlink_searchIceLeaf__FP10fopAc_ac_cPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void daAlink_searchIceLeaf(fopAc_ac_c* param_0, void* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/daAlink_searchIceLeaf__FP10fopAc_ac_cPv.s"
}
#pragma pop

/* 80105A98-80105ABC 1003D8 0024+00 3/3 0/0 0/0 .text            checkSnowCode__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkSnowCode() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkSnowCode__9daAlink_cCFv.s"
}
#pragma pop

/* 80105ABC-80105B10 1003FC 0054+00 1/1 0/0 1/1 .text
 * checkSnowCodePolygon__9daAlink_cFR13cBgS_PolyInfo            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkSnowCodePolygon(cBgS_PolyInfo& param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkSnowCodePolygon__9daAlink_cFR13cBgS_PolyInfo.s"
}
#pragma pop

/* 80105B10-80105B58 100450 0048+00 2/2 0/0 0/0 .text            checkBoardRestart__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkBoardRestart() {
    nofralloc
#include "asm/d/a/d_a_alink/checkBoardRestart__9daAlink_cFv.s"
}
#pragma pop

/* 80105B58-80106534 100498 09DC+00 7/7 0/0 0/0 .text            boardCommon__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::boardCommon(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/boardCommon__9daAlink_cFi.s"
}
#pragma pop

/* 80106534-8010658C 100E74 0058+00 6/6 0/0 0/0 .text            setCommonBoardAnime__9daAlink_cFi
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setCommonBoardAnime(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setCommonBoardAnime__9daAlink_cFi.s"
}
#pragma pop

/* 8010658C-80106618 100ECC 008C+00 5/5 0/0 0/0 .text            checkNextActionBoard__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkNextActionBoard() {
    nofralloc
#include "asm/d/a/d_a_alink/checkNextActionBoard__9daAlink_cFv.s"
}
#pragma pop

/* 80106618-80106650 100F58 0038+00 2/2 0/0 0/0 .text checkBoardSwordTriggerAction__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkBoardSwordTriggerAction() {
    nofralloc
#include "asm/d/a/d_a_alink/checkBoardSwordTriggerAction__9daAlink_cFv.s"
}
#pragma pop

/* 80106650-801066B8 100F90 0068+00 3/3 0/0 0/0 .text
 * commonProcBoardInit__9daAlink_cFQ29daAlink_c12daAlink_PROC   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::commonProcBoardInit(daAlink_c::daAlink_PROC param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/commonProcBoardInit__9daAlink_cFQ29daAlink_c12daAlink_PROC.s"
}
#pragma pop

/* 801066B8-801066EC 100FF8 0034+00 1/1 0/0 0/0 .text            getBoardRowAnmSpeed__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getBoardRowAnmSpeed() {
    nofralloc
#include "asm/d/a/d_a_alink/getBoardRowAnmSpeed__9daAlink_cFv.s"
}
#pragma pop

/* 801066EC-80106774 10102C 0088+00 3/3 0/0 0/0 .text            setBoardLandAnime__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setBoardLandAnime() {
    nofralloc
#include "asm/d/a/d_a_alink/setBoardLandAnime__9daAlink_cFv.s"
}
#pragma pop

/* 80106774-801069D0 1010B4 025C+00 1/1 0/0 0/0 .text            procBoardRideInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procBoardRideInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procBoardRideInit__9daAlink_cFv.s"
}
#pragma pop

/* 801069D0-80106A38 101310 0068+00 1/0 0/0 0/0 .text            procBoardRide__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procBoardRide() {
    nofralloc
#include "asm/d/a/d_a_alink/procBoardRide__9daAlink_cFv.s"
}
#pragma pop

/* 80106A38-80106BCC 101378 0194+00 13/13 0/0 0/0 .text
 * procBoardWaitInit__9daAlink_cFP10fopAc_ac_c                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procBoardWaitInit(fopAc_ac_c* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procBoardWaitInit__9daAlink_cFP10fopAc_ac_c.s"
}
#pragma pop

/* 80106BCC-80106E88 10150C 02BC+00 1/0 0/0 0/0 .text            procBoardWait__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procBoardWait() {
    nofralloc
#include "asm/d/a/d_a_alink/procBoardWait__9daAlink_cFv.s"
}
#pragma pop

/* 80106E88-80106F00 1017C8 0078+00 1/1 0/0 0/0 .text            procBoardRowInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procBoardRowInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procBoardRowInit__9daAlink_cFv.s"
}
#pragma pop

/* 80106F00-80107060 101840 0160+00 1/0 0/0 0/0 .text            procBoardRow__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procBoardRow() {
    nofralloc
#include "asm/d/a/d_a_alink/procBoardRow__9daAlink_cFv.s"
}
#pragma pop

/* 80107060-801070DC 1019A0 007C+00 1/1 0/0 0/0 .text            procBoardTurnInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procBoardTurnInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procBoardTurnInit__9daAlink_cFv.s"
}
#pragma pop

/* 801070DC-80107218 101A1C 013C+00 1/0 0/0 0/0 .text            procBoardTurn__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procBoardTurn() {
    nofralloc
#include "asm/d/a/d_a_alink/procBoardTurn__9daAlink_cFv.s"
}
#pragma pop

/* 80107218-80107300 101B58 00E8+00 4/4 0/0 0/0 .text            procBoardJumpInit__9daAlink_cFfi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procBoardJumpInit(f32 param_0, int param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/procBoardJumpInit__9daAlink_cFfi.s"
}
#pragma pop

/* 80107300-801073D0 101C40 00D0+00 1/0 0/0 0/0 .text            procBoardJump__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procBoardJump() {
    nofralloc
#include "asm/d/a/d_a_alink/procBoardJump__9daAlink_cFv.s"
}
#pragma pop

/* 801073D0-80107418 101D10 0048+00 1/1 0/0 0/0 .text procBoardSubjectivityInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procBoardSubjectivityInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procBoardSubjectivityInit__9daAlink_cFv.s"
}
#pragma pop

/* 80107418-801074AC 101D58 0094+00 1/0 0/0 0/0 .text            procBoardSubjectivity__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procBoardSubjectivity() {
    nofralloc
#include "asm/d/a/d_a_alink/procBoardSubjectivity__9daAlink_cFv.s"
}
#pragma pop

/* 801074AC-8010755C 101DEC 00B0+00 3/3 0/0 0/0 .text            procBoardCutInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procBoardCutInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procBoardCutInit__9daAlink_cFv.s"
}
#pragma pop

/* 8010755C-801075D4 101E9C 0078+00 1/0 0/0 0/0 .text            procBoardCut__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procBoardCut() {
    nofralloc
#include "asm/d/a/d_a_alink/procBoardCut__9daAlink_cFv.s"
}
#pragma pop

/* 801075D4-80107744 101F14 0170+00 2/2 0/0 0/0 .text            procBoardCutTurnInit__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procBoardCutTurnInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procBoardCutTurnInit__9daAlink_cFv.s"
}
#pragma pop

/* 80107744-80107900 102084 01BC+00 1/0 0/0 0/0 .text            procBoardCutTurn__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procBoardCutTurn() {
    nofralloc
#include "asm/d/a/d_a_alink/procBoardCutTurn__9daAlink_cFv.s"
}
#pragma pop

/* 80107900-801083C8 102240 0AC8+00 1/0 0/0 0/0 .text draw__Q29daAlink_c14hsChainShape_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void draw__Q29daAlink_c14hsChainShape_cFv() {
    // asm void daAlink_c::hsChainShape_c::draw() {
    nofralloc
#include "asm/d/a/d_a_alink/draw__Q29daAlink_c14hsChainShape_cFv.s"
}
#pragma pop

/* 801083C8-8010859C 102D08 01D4+00 1/1 0/0 0/0 .text
 * hookshotAtHitCallBack__9daAlink_cFP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::hookshotAtHitCallBack(dCcD_GObjInf* param_0, fopAc_ac_c* param_1,
                                          dCcD_GObjInf* param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/hookshotAtHitCallBack__9daAlink_cFP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf.s"
}
#pragma pop

/* 8010859C-801085BC 102EDC 0020+00 1/1 0/0 0/0 .text
 * daAlink_hookshotAtHitCallBack__FP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void daAlink_hookshotAtHitCallBack(fopAc_ac_c* param_0, dCcD_GObjInf* param_1,
                                              fopAc_ac_c* param_2, dCcD_GObjInf* param_3) {
    nofralloc
#include "asm/d/a/d_a_alink/daAlink_hookshotAtHitCallBack__FP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf.s"
}
#pragma pop

/* 801085BC-80108600 102EFC 0044+00 1/0 0/0 0/0 .text            getHookshotTopPos__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm bool daAlink_c::getHookshotTopPos() {
    nofralloc
#include "asm/d/a/d_a_alink/getHookshotTopPos__9daAlink_cFv.s"
}
#pragma pop

/* 80108600-80108668 102F40 0068+00 1/0 0/0 0/0 .text checkHookshotReturnMode__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm bool daAlink_c::checkHookshotReturnMode() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkHookshotReturnMode__9daAlink_cCFv.s"
}
#pragma pop

/* 80108668-801086DC 102FA8 0074+00 1/0 0/0 0/0 .text checkHookshotShootReturnMode__9daAlink_cCFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm bool daAlink_c::checkHookshotShootReturnMode() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkHookshotShootReturnMode__9daAlink_cCFv.s"
}
#pragma pop

/* 801086DC-8010871C 10301C 0040+00 6/6 0/0 0/0 .text            resetHookshotMode__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::resetHookshotMode() {
    nofralloc
#include "asm/d/a/d_a_alink/resetHookshotMode__9daAlink_cFv.s"
}
#pragma pop

/* 8010871C-80108784 10305C 0068+00 0/0 0/0 1/1 .text
 * setEnemyBombHookshot__9daAlink_cFP10fopAc_ac_c               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setEnemyBombHookshot(fopAc_ac_c* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setEnemyBombHookshot__9daAlink_cFP10fopAc_ac_c.s"
}
#pragma pop

/* 80108784-801087B0 1030C4 002C+00 3/3 0/0 0/0 .text            checkLv7BossRoom__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkLv7BossRoom() {
    nofralloc
#include "asm/d/a/d_a_alink/checkLv7BossRoom__9daAlink_cFv.s"
}
#pragma pop

/* 801087B0-80108828 1030F0 0078+00 6/6 0/0 0/0 .text
 * checkHookshotStickBG__9daAlink_cFR13cBgS_PolyInfo            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkHookshotStickBG(cBgS_PolyInfo& param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkHookshotStickBG__9daAlink_cFR13cBgS_PolyInfo.s"
}
#pragma pop

/* 80108828-80108864 103168 003C+00 4/4 0/0 0/0 .text            cancelHookshotCarry__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::cancelHookshotCarry() {
    nofralloc
#include "asm/d/a/d_a_alink/cancelHookshotCarry__9daAlink_cFv.s"
}
#pragma pop

/* 80108864-801088A0 1031A4 003C+00 2/2 0/0 0/0 .text changeHookshotDrawModel__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::changeHookshotDrawModel() {
    nofralloc
#include "asm/d/a/d_a_alink/changeHookshotDrawModel__9daAlink_cFv.s"
}
#pragma pop

/* 801088A0-801088C8 1031E0 0028+00 6/6 0/0 0/0 .text checkHookshotRoofLv7Boss__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkHookshotRoofLv7Boss() {
    nofralloc
#include "asm/d/a/d_a_alink/checkHookshotRoofLv7Boss__9daAlink_cFv.s"
}
#pragma pop

/* 801088C8-80108980 103208 00B8+00 2/2 0/0 0/0 .text            checkChaseHookshot__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkChaseHookshot() {
    nofralloc
#include "asm/d/a/d_a_alink/checkChaseHookshot__9daAlink_cFv.s"
}
#pragma pop

/* 80108980-801089E8 1032C0 0068+00 2/2 0/0 0/0 .text checkOctaIealSpecialCollect__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkOctaIealSpecialCollect() {
    nofralloc
#include "asm/d/a/d_a_alink/checkOctaIealSpecialCollect__9daAlink_cFv.s"
}
#pragma pop

/* 801089E8-80108A18 103328 0030+00 5/5 0/0 0/0 .text            checkBossOctaIealRoom__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkBossOctaIealRoom() {
    nofralloc
#include "asm/d/a/d_a_alink/checkBossOctaIealRoom__9daAlink_cFv.s"
}
#pragma pop

/* 80108A18-80108A3C 103358 0024+00 19/19 0/0 0/0 .text            checkHookshotWait__9daAlink_cCFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkHookshotWait() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkHookshotWait__9daAlink_cCFv.s"
}
#pragma pop

/* 80108A3C-80108A90 10337C 0054+00 1/1 0/0 0/0 .text            setHookshotCatchNow__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setHookshotCatchNow() {
    nofralloc
#include "asm/d/a/d_a_alink/setHookshotCatchNow__9daAlink_cFv.s"
}
#pragma pop

/* 80108A90-80108B34 1033D0 00A4+00 1/0 0/0 0/0 .text setHookshotCarryOffset__9daAlink_cFUiPC4cXyz
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm bool daAlink_c::setHookshotCarryOffset(unsigned int param_0, cXyz const* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/setHookshotCarryOffset__9daAlink_cFUiPC4cXyz.s"
}
#pragma pop

/* 80108B34-80108DB4 103474 0280+00 1/1 0/0 0/0 .text            setHookshotModel__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setHookshotModel() {
    nofralloc
#include "asm/d/a/d_a_alink/setHookshotModel__9daAlink_cFv.s"
}
#pragma pop

/* 80108DB4-80108EEC 1036F4 0138+00 6/6 0/0 0/0 .text            setHookshotSight__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setHookshotSight() {
    nofralloc
#include "asm/d/a/d_a_alink/setHookshotSight__9daAlink_cFv.s"
}
#pragma pop

/* 80108EEC-80108F64 10382C 0078+00 1/1 0/0 0/0 .text            cancelHookshotShot__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::cancelHookshotShot() {
    nofralloc
#include "asm/d/a/d_a_alink/cancelHookshotShot__9daAlink_cFv.s"
}
#pragma pop

/* 80108F64-8010903C 1038A4 00D8+00 4/4 0/0 0/0 .text            cancelHookshotMove__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::cancelHookshotMove() {
    nofralloc
#include "asm/d/a/d_a_alink/cancelHookshotMove__9daAlink_cFv.s"
}
#pragma pop

/* 8010903C-80109070 10397C 0034+00 2/2 0/0 0/0 .text
 * checkHookshotReadyMaterialOffMode__9daAlink_cCFv             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkHookshotReadyMaterialOffMode() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkHookshotReadyMaterialOffMode__9daAlink_cCFv.s"
}
#pragma pop

/* 80109070-801090EC 1039B0 007C+00 5/5 0/0 0/0 .text setHookshotReadyMaterial__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setHookshotReadyMaterial() {
    nofralloc
#include "asm/d/a/d_a_alink/setHookshotReadyMaterial__9daAlink_cFv.s"
}
#pragma pop

/* 801090EC-80109170 103A2C 0084+00 8/8 0/0 0/0 .text initHookshotUpperAnimeSpeed__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::initHookshotUpperAnimeSpeed(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/initHookshotUpperAnimeSpeed__9daAlink_cFi.s"
}
#pragma pop

/* 80109170-801091E4 103AB0 0074+00 4/4 0/0 0/0 .text            initHookshotReady__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::initHookshotReady() {
    nofralloc
#include "asm/d/a/d_a_alink/initHookshotReady__9daAlink_cFv.s"
}
#pragma pop

/* 801091E4-80109284 103B24 00A0+00 1/1 0/0 0/0 .text            setHookshotReadyAnime__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setHookshotReadyAnime() {
    nofralloc
#include "asm/d/a/d_a_alink/setHookshotReadyAnime__9daAlink_cFv.s"
}
#pragma pop

/* 80109284-801095C8 103BC4 0344+00 3/3 0/0 0/0 .text checkUpperItemActionHookshot__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkUpperItemActionHookshot() {
    nofralloc
#include "asm/d/a/d_a_alink/checkUpperItemActionHookshot__9daAlink_cFv.s"
}
#pragma pop

/* 801095C8-801097A0 103F08 01D8+00 7/7 0/0 0/0 .text checkNextActionHookshot__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkNextActionHookshot() {
    nofralloc
#include "asm/d/a/d_a_alink/checkNextActionHookshot__9daAlink_cFv.s"
}
#pragma pop

/* 801097A0-80109890 1040E0 00F0+00 2/2 0/0 0/0 .text            setHookshotReturnEnd__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setHookshotReturnEnd() {
    nofralloc
#include "asm/d/a/d_a_alink/setHookshotReturnEnd__9daAlink_cFv.s"
}
#pragma pop

/* 80109890-80109AAC 1041D0 021C+00 3/3 0/0 0/0 .text setHookshotHangMoveBGCollect__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setHookshotHangMoveBGCollect() {
    nofralloc
#include "asm/d/a/d_a_alink/setHookshotHangMoveBGCollect__9daAlink_cFv.s"
}
#pragma pop

/* 80109AAC-80109BDC 1043EC 0130+00 2/2 0/0 0/0 .text            setHookshotTopPosFly__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setHookshotTopPosFly() {
    nofralloc
#include "asm/d/a/d_a_alink/setHookshotTopPosFly__9daAlink_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 804256A0-804256AC 0523C0 000C+00 0/1 0/0 0/0 .bss             @29722 */
#pragma push
#pragma force_active on
static u8 lit_29722[12];
#pragma pop

/* 804256AC-804256B8 0523CC 000C+00 1/2 0/0 0/0 .bss             l_hookSnowSandHitScale */
static u8 l_hookSnowSandHitScale[12];

/* 80109BDC-8010B2DC 10451C 1700+00 1/1 0/0 0/0 .text            setHookshotPos__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setHookshotPos() {
    nofralloc
#include "asm/d/a/d_a_alink/setHookshotPos__9daAlink_cFv.s"
}
#pragma pop

/* 8010B2DC-8010B35C 105C1C 0080+00 2/2 0/0 0/0 .text setHookshotRoofWaitAnime__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setHookshotRoofWaitAnime() {
    nofralloc
#include "asm/d/a/d_a_alink/setHookshotRoofWaitAnime__9daAlink_cFv.s"
}
#pragma pop

/* 8010B35C-8010B3AC 105C9C 0050+00 2/2 0/0 0/0 .text setHookshotWallWaitAnime__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setHookshotWallWaitAnime() {
    nofralloc
#include "asm/d/a/d_a_alink/setHookshotWallWaitAnime__9daAlink_cFv.s"
}
#pragma pop

/* 8010B3AC-8010B644 105CEC 0298+00 2/2 0/0 0/0 .text            hookshotRoofTurn__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::hookshotRoofTurn() {
    nofralloc
#include "asm/d/a/d_a_alink/hookshotRoofTurn__9daAlink_cFv.s"
}
#pragma pop

/* 8010B644-8010B720 105F84 00DC+00 3/3 0/0 0/0 .text
 * initHookshotRoofWaitActor__9daAlink_cFP10fopAc_ac_c          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::initHookshotRoofWaitActor(fopAc_ac_c* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/initHookshotRoofWaitActor__9daAlink_cFP10fopAc_ac_c.s"
}
#pragma pop

/* 8010B720-8010B84C 106060 012C+00 2/2 0/0 0/0 .text            checkNextHookPoint__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkNextHookPoint() {
    nofralloc
#include "asm/d/a/d_a_alink/checkNextHookPoint__9daAlink_cFv.s"
}
#pragma pop

/* 8010B84C-8010B96C 10618C 0120+00 2/2 0/0 0/0 .text            checkLandHookshotHang__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkLandHookshotHang() {
    nofralloc
#include "asm/d/a/d_a_alink/checkLandHookshotHang__9daAlink_cFv.s"
}
#pragma pop

/* 8010B96C-8010BA6C 1062AC 0100+00 3/3 0/0 0/0 .text commonHookshotRoofWait__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::commonHookshotRoofWait() {
    nofralloc
#include "asm/d/a/d_a_alink/commonHookshotRoofWait__9daAlink_cFv.s"
}
#pragma pop

/* 8010BA6C-8010BAA8 1063AC 003C+00 2/2 0/0 0/0 .text commonHookshotWallWait__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::commonHookshotWallWait() {
    nofralloc
#include "asm/d/a/d_a_alink/commonHookshotWallWait__9daAlink_cFv.s"
}
#pragma pop

/* 8010BAA8-8010BB48 1063E8 00A0+00 1/1 0/0 0/0 .text procHookshotSubjectInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHookshotSubjectInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procHookshotSubjectInit__9daAlink_cFv.s"
}
#pragma pop

/* 8010BB48-8010BC08 106488 00C0+00 1/0 0/0 0/0 .text            procHookshotSubject__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHookshotSubject() {
    nofralloc
#include "asm/d/a/d_a_alink/procHookshotSubject__9daAlink_cFv.s"
}
#pragma pop

/* 8010BC08-8010BCA4 106548 009C+00 1/1 0/0 0/0 .text            procHookshotMoveInit__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHookshotMoveInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procHookshotMoveInit__9daAlink_cFv.s"
}
#pragma pop

/* 8010BCA4-8010BD90 1065E4 00EC+00 1/0 0/0 0/0 .text            procHookshotMove__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHookshotMove() {
    nofralloc
#include "asm/d/a/d_a_alink/procHookshotMove__9daAlink_cFv.s"
}
#pragma pop

/* 8010BD90-8010BEF0 1066D0 0160+00 2/2 0/0 0/0 .text            procHookshotFlyInit__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHookshotFlyInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procHookshotFlyInit__9daAlink_cFv.s"
}
#pragma pop

/* 8010BEF0-8010C830 106830 0940+00 2/1 0/0 0/0 .text            procHookshotFly__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHookshotFly() {
    nofralloc
#include "asm/d/a/d_a_alink/procHookshotFly__9daAlink_cFv.s"
}
#pragma pop

/* 8010C830-8010C9F4 107170 01C4+00 4/4 0/0 0/0 .text
 * procHookshotRoofWaitInit__9daAlink_cFiP10fopAc_ac_ci         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHookshotRoofWaitInit(int param_0, fopAc_ac_c* param_1, int param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/procHookshotRoofWaitInit__9daAlink_cFiP10fopAc_ac_ci.s"
}
#pragma pop

/* 8010C9F4-8010CC80 107334 028C+00 1/0 0/0 0/0 .text            procHookshotRoofWait__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHookshotRoofWait() {
    nofralloc
#include "asm/d/a/d_a_alink/procHookshotRoofWait__9daAlink_cFv.s"
}
#pragma pop

/* 8010CC80-8010CD60 1075C0 00E0+00 1/1 0/0 0/0 .text
 * procHookshotRoofShootInit__9daAlink_cFP10fopAc_ac_c          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHookshotRoofShootInit(fopAc_ac_c* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procHookshotRoofShootInit__9daAlink_cFP10fopAc_ac_c.s"
}
#pragma pop

/* 8010CD60-8010CF6C 1076A0 020C+00 1/0 0/0 0/0 .text            procHookshotRoofShoot__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHookshotRoofShoot() {
    nofralloc
#include "asm/d/a/d_a_alink/procHookshotRoofShoot__9daAlink_cFv.s"
}
#pragma pop

/* 8010CF6C-8010D034 1078AC 00C8+00 1/1 0/0 0/0 .text
 * procHookshotRoofBootsInit__9daAlink_cFP10fopAc_ac_c          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHookshotRoofBootsInit(fopAc_ac_c* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procHookshotRoofBootsInit__9daAlink_cFP10fopAc_ac_c.s"
}
#pragma pop

/* 8010D034-8010D174 107974 0140+00 1/0 0/0 0/0 .text            procHookshotRoofBoots__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHookshotRoofBoots() {
    nofralloc
#include "asm/d/a/d_a_alink/procHookshotRoofBoots__9daAlink_cFv.s"
}
#pragma pop

/* 8010D174-8010D38C 107AB4 0218+00 3/3 0/0 0/0 .text procHookshotWallWaitInit__9daAlink_cFisi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHookshotWallWaitInit(int param_0, s16 param_1, int param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/procHookshotWallWaitInit__9daAlink_cFisi.s"
}
#pragma pop

/* 8010D38C-8010D5F4 107CCC 0268+00 1/0 0/0 0/0 .text            procHookshotWallWait__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHookshotWallWait() {
    nofralloc
#include "asm/d/a/d_a_alink/procHookshotWallWait__9daAlink_cFv.s"
}
#pragma pop

/* 8010D5F4-8010D6CC 107F34 00D8+00 1/1 0/0 0/0 .text procHookshotWallShootInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHookshotWallShootInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procHookshotWallShootInit__9daAlink_cFv.s"
}
#pragma pop

/* 8010D6CC-8010D93C 10800C 0270+00 1/0 0/0 0/0 .text            procHookshotWallShoot__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHookshotWallShoot() {
    nofralloc
#include "asm/d/a/d_a_alink/procHookshotWallShoot__9daAlink_cFv.s"
}
#pragma pop

/* 8010D93C-8010D94C 10827C 0010+00 0/0 0/0 1/1 .text            getSpinnerGravity__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getSpinnerGravity() const {
    nofralloc
#include "asm/d/a/d_a_alink/getSpinnerGravity__9daAlink_cCFv.s"
}
#pragma pop

/* 8010D94C-8010D95C 10828C 0010+00 0/0 0/0 1/1 .text getSpinnerMaxFallSpeed__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getSpinnerMaxFallSpeed() const {
    nofralloc
#include "asm/d/a/d_a_alink/getSpinnerMaxFallSpeed__9daAlink_cCFv.s"
}
#pragma pop

/* 8010D95C-8010D96C 10829C 0010+00 0/0 0/0 1/1 .text            getSpinnerJumpRate__9daAlink_cCFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getSpinnerJumpRate() const {
    nofralloc
#include "asm/d/a/d_a_alink/getSpinnerJumpRate__9daAlink_cCFv.s"
}
#pragma pop

/* 8010D96C-8010D9B0 1082AC 0044+00 1/1 0/0 2/2 .text getSpinnerRideMoveTime__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getSpinnerRideMoveTime() {
    nofralloc
#include "asm/d/a/d_a_alink/getSpinnerRideMoveTime__9daAlink_cFv.s"
}
#pragma pop

/* 8010D9B0-8010D9F4 1082F0 0044+00 1/1 0/0 3/3 .text            getSpinnerRideSpeedF__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getSpinnerRideSpeedF() {
    nofralloc
#include "asm/d/a/d_a_alink/getSpinnerRideSpeedF__9daAlink_cFv.s"
}
#pragma pop

/* 8010D9F4-8010DA04 108334 0010+00 0/0 0/0 1/1 .text getSpinnerRideDecSpeedMax__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getSpinnerRideDecSpeedMax() const {
    nofralloc
#include "asm/d/a/d_a_alink/getSpinnerRideDecSpeedMax__9daAlink_cCFv.s"
}
#pragma pop

/* 8010DA04-8010DA14 108344 0010+00 0/0 0/0 1/1 .text getSpinnerRideDecSpeedMin__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getSpinnerRideDecSpeedMin() const {
    nofralloc
#include "asm/d/a/d_a_alink/getSpinnerRideDecSpeedMin__9daAlink_cCFv.s"
}
#pragma pop

/* 8010DA14-8010DA24 108354 0010+00 0/0 0/0 1/1 .text getSpinnerRideDecSpeedRate__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getSpinnerRideDecSpeedRate() const {
    nofralloc
#include "asm/d/a/d_a_alink/getSpinnerRideDecSpeedRate__9daAlink_cCFv.s"
}
#pragma pop

/* 8010DA24-8010DA34 108364 0010+00 0/0 0/0 1/1 .text getSpinnerRideRotAngleMax__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getSpinnerRideRotAngleMax() const {
    nofralloc
#include "asm/d/a/d_a_alink/getSpinnerRideRotAngleMax__9daAlink_cCFv.s"
}
#pragma pop

/* 8010DA34-8010DA44 108374 0010+00 0/0 0/0 1/1 .text getSpinnerRideRotAngleMin__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getSpinnerRideRotAngleMin() const {
    nofralloc
#include "asm/d/a/d_a_alink/getSpinnerRideRotAngleMin__9daAlink_cCFv.s"
}
#pragma pop

/* 8010DA44-8010DA98 108384 0054+00 1/0 0/0 0/0 .text onSpinnerPathForceRemove__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::onSpinnerPathForceRemove() {
    nofralloc
#include "asm/d/a/d_a_alink/onSpinnerPathForceRemove__9daAlink_cFv.s"
}
#pragma pop

/* 8010DA98-8010DAFC 1083D8 0064+00 1/0 0/0 0/0 .text            checkSpinnerPathMove__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm bool daAlink_c::checkSpinnerPathMove() {
    nofralloc
#include "asm/d/a/d_a_alink/checkSpinnerPathMove__9daAlink_cFv.s"
}
#pragma pop

/* 8010DAFC-8010DB28 10843C 002C+00 2/2 0/0 0/0 .text            checkLv4BossRoom__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkLv4BossRoom() {
    nofralloc
#include "asm/d/a/d_a_alink/checkLv4BossRoom__9daAlink_cFv.s"
}
#pragma pop

/* 8010DB28-8010DBC8 108468 00A0+00 1/0 0/0 0/0 .text checkSpinnerTriggerAttack__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm bool daAlink_c::checkSpinnerTriggerAttack() {
    nofralloc
#include "asm/d/a/d_a_alink/checkSpinnerTriggerAttack__9daAlink_cFv.s"
}
#pragma pop

/* 8010DBC8-8010DC64 108508 009C+00 2/2 0/0 0/0 .text            setSpinnerSyncPos__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSpinnerSyncPos() {
    nofralloc
#include "asm/d/a/d_a_alink/setSpinnerSyncPos__9daAlink_cFv.s"
}
#pragma pop

/* 8010DC64-8010DDCC 1085A4 0168+00 1/1 0/0 0/0 .text            procSpinnerReadyInit__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSpinnerReadyInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procSpinnerReadyInit__9daAlink_cFv.s"
}
#pragma pop

/* 8010DDCC-8010DE64 10870C 0098+00 1/0 0/0 0/0 .text            procSpinnerReady__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSpinnerReady() {
    nofralloc
#include "asm/d/a/d_a_alink/procSpinnerReady__9daAlink_cFv.s"
}
#pragma pop

/* 8010DE64-8010DE78 1087A4 0014+00 1/1 0/0 0/0 .text            setSpinnerStatus__9daAlink_cFUcUc
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSpinnerStatus(u8 param_0, u8 param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/setSpinnerStatus__9daAlink_cFUcUc.s"
}
#pragma pop

/* 8010DE78-8010DF4C 1087B8 00D4+00 2/2 0/0 0/0 .text            procSpinnerWaitInit__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSpinnerWaitInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procSpinnerWaitInit__9daAlink_cFv.s"
}
#pragma pop

/* 8010DF4C-8010E48C 10888C 0540+00 1/0 0/0 0/0 .text            procSpinnerWait__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSpinnerWait() {
    nofralloc
#include "asm/d/a/d_a_alink/procSpinnerWait__9daAlink_cFv.s"
}
#pragma pop

/* 8010E48C-8010E52C 108DCC 00A0+00 1/1 0/0 0/0 .text            bottleModelCallBack__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::bottleModelCallBack() {
    nofralloc
#include "asm/d/a/d_a_alink/bottleModelCallBack__9daAlink_cFv.s"
}
#pragma pop

/* 8010E52C-8010E568 108E6C 003C+00 1/1 0/0 0/0 .text daAlink_bottleModelCallBack__FP8J3DJointi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void daAlink_bottleModelCallBack(J3DJoint* param_0, int param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/daAlink_bottleModelCallBack__FP8J3DJointi.s"
}
#pragma pop

/* 8010E568-8010E584 108EA8 001C+00 1/0 0/0 0/0 .text getBottleOpenAppearItem__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm s32 daAlink_c::getBottleOpenAppearItem() const {
    nofralloc
#include "asm/d/a/d_a_alink/getBottleOpenAppearItem__9daAlink_cCFv.s"
}
#pragma pop

/* 8010E584-8010E5D8 108EC4 0054+00 2/2 0/0 0/0 .text checkOilBottleItemNotGet__9daAlink_cFUs */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkOilBottleItemNotGet(u16 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkOilBottleItemNotGet__9daAlink_cFUs.s"
}
#pragma pop

/* 8010E5D8-8010EAC4 108F18 04EC+00 7/7 0/0 0/0 .text            setBottleModel__9daAlink_cFUs */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setBottleModel(u16 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setBottleModel__9daAlink_cFUs.s"
}
#pragma pop

/* 8010EAC4-8010F45C 109404 0998+00 3/3 0/0 0/0 .text            commonBottleDrink__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::commonBottleDrink(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/commonBottleDrink__9daAlink_cFi.s"
}
#pragma pop

/* 8010F45C-8010F54C 109D9C 00F0+00 2/2 0/0 0/0 .text            makeFairy__9daAlink_cFP4cXyzUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::makeFairy(cXyz* param_0, u32 param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/makeFairy__9daAlink_cFP4cXyzUl.s"
}
#pragma pop

/* 8010F54C-8010F698 109E8C 014C+00 2/2 0/0 0/0 .text            procBottleDrinkInit__9daAlink_cFUs
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procBottleDrinkInit(u16 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procBottleDrinkInit__9daAlink_cFUs.s"
}
#pragma pop

/* 8010F698-8010F6F4 109FD8 005C+00 1/0 0/0 0/0 .text            procBottleDrink__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procBottleDrink() {
    nofralloc
#include "asm/d/a/d_a_alink/procBottleDrink__9daAlink_cFv.s"
}
#pragma pop

/* 8010F6F4-8010F8E4 10A034 01F0+00 1/1 0/0 0/0 .text            procBottleOpenInit__9daAlink_cFUs
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procBottleOpenInit(u16 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procBottleOpenInit__9daAlink_cFUs.s"
}
#pragma pop

/* 8010F8E4-8010FC38 10A224 0354+00 1/0 0/0 0/0 .text            procBottleOpen__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procBottleOpen() {
    nofralloc
#include "asm/d/a/d_a_alink/procBottleOpen__9daAlink_cFv.s"
}
#pragma pop

/* 8010FC38-8010FF58 10A578 0320+00 4/4 0/0 0/0 .text
 * procBottleSwingInit__9daAlink_cFP10fopAc_ac_ci               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procBottleSwingInit(fopAc_ac_c* param_0, int param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/procBottleSwingInit__9daAlink_cFP10fopAc_ac_ci.s"
}
#pragma pop

/* 8010FF58-801102D0 10A898 0378+00 1/0 0/0 0/0 .text            procBottleSwing__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procBottleSwing() {
    nofralloc
#include "asm/d/a/d_a_alink/procBottleSwing__9daAlink_cFv.s"
}
#pragma pop

/* 801102D0-80110518 10AC10 0248+00 2/2 0/0 0/0 .text            procBottleGetInit__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procBottleGetInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procBottleGetInit__9daAlink_cFi.s"
}
#pragma pop

/* 80110518-80110648 10AE58 0130+00 1/0 0/0 0/0 .text            procBottleGet__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procBottleGet() {
    nofralloc
#include "asm/d/a/d_a_alink/procBottleGet__9daAlink_cFv.s"
}
#pragma pop

/* 80110648-80110654 10AF88 000C+00 0/0 1/0 0/0 .text            Insect_Release__9dInsect_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dInsect_c::Insect_Release() {
    nofralloc
#include "asm/d/a/d_a_alink/Insect_Release__9dInsect_cFv.s"
}
#pragma pop

/* 80110654-80110668 10AF94 0014+00 1/1 0/0 0/0 .text daAlink_searchTagKandelaar__FP10fopAc_ac_cPv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void daAlink_searchTagKandelaar(fopAc_ac_c* param_0, void* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/daAlink_searchTagKandelaar__FP10fopAc_ac_cPv.s"
}
#pragma pop

/* 80110668-801106E8 10AFA8 0080+00 1/1 0/0 0/0 .text daAlink_searchTagKtOnFire__FP10fopAc_ac_cPv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void daAlink_searchTagKtOnFire(fopAc_ac_c* param_0, void* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/daAlink_searchTagKtOnFire__FP10fopAc_ac_cPv.s"
}
#pragma pop

/* 801106E8-8011078C 10B028 00A4+00 1/0 0/0 0/0 .text            setKandelaarMtx__9daAlink_cFPA4_fii
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setKandelaarMtx(f32 (*param_0)[4], int param_1, int param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/setKandelaarMtx__9daAlink_cFPA4_fii.s"
}
#pragma pop

/* 8011078C-801107BC 10B0CC 0030+00 2/2 0/0 0/0 .text checkWaterInKandelaarOffset__9daAlink_cFf */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkWaterInKandelaarOffset(f32 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkWaterInKandelaarOffset__9daAlink_cFf.s"
}
#pragma pop

/* 801107BC-80110840 10B0FC 0084+00 2/2 0/0 0/0 .text            checkWaterInKandelaar__9daAlink_cFf
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkWaterInKandelaar(f32 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkWaterInKandelaar__9daAlink_cFf.s"
}
#pragma pop

/* 80110840-8011087C 10B180 003C+00 13/13 0/0 0/0 .text            offKandelaarModel__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::offKandelaarModel() {
    nofralloc
#include "asm/d/a/d_a_alink/offKandelaarModel__9daAlink_cFv.s"
}
#pragma pop

/* 8011087C-801108B4 10B1BC 0038+00 1/0 0/0 0/0 .text            checkUseKandelaar__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm bool daAlink_c::checkUseKandelaar(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkUseKandelaar__9daAlink_cFi.s"
}
#pragma pop

/* 801108B4-801108EC 10B1F4 0038+00 1/0 0/0 0/0 .text            checkKandelaarSwing__9daAlink_cCFi
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm bool daAlink_c::checkKandelaarSwing(int param_0) const {
    nofralloc
#include "asm/d/a/d_a_alink/checkKandelaarSwing__9daAlink_cCFi.s"
}
#pragma pop

/* 801108EC-80110BEC 10B22C 0300+00 1/1 0/0 0/0 .text kandelaarModelCallBack__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::kandelaarModelCallBack() {
    nofralloc
#include "asm/d/a/d_a_alink/kandelaarModelCallBack__9daAlink_cFv.s"
}
#pragma pop

/* 80110BEC-80110C28 10B52C 003C+00 1/1 0/0 0/0 .text daAlink_kandelaarModelCallBack__FP8J3DJointi
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void daAlink_kandelaarModelCallBack(J3DJoint* param_0, int param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/daAlink_kandelaarModelCallBack__FP8J3DJointi.s"
}
#pragma pop

/* 80110C28-80110C6C 10B568 0044+00 1/0 0/0 0/0 .text            getKandelaarFlamePos__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm bool daAlink_c::getKandelaarFlamePos() {
    nofralloc
#include "asm/d/a/d_a_alink/getKandelaarFlamePos__9daAlink_cFv.s"
}
#pragma pop

/* 80110C6C-80110C94 10B5AC 0028+00 3/3 0/0 0/0 .text checkKandelaarEquipAnime__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkKandelaarEquipAnime() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkKandelaarEquipAnime__9daAlink_cCFv.s"
}
#pragma pop

/* 80110C94-80110E80 10B5D4 01EC+00 1/1 0/0 0/0 .text            preKandelaarDraw__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::preKandelaarDraw() {
    nofralloc
#include "asm/d/a/d_a_alink/preKandelaarDraw__9daAlink_cFv.s"
}
#pragma pop

/* 80110E80-80110E84 10B7C0 0004+00 0/0 3/0 0/0 .text
 * setTevColor__11J3DTevBlockFUlPC13J3DGXColorS10               */
void J3DTevBlock::setTevColor(u32 param_0, J3DGXColorS10 const* param_1) {
    /* empty function */
}

/* 80110E84-80110F88 10B7C4 0104+00 4/4 0/0 0/0 .text            setKandelaarModel__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setKandelaarModel() {
    nofralloc
#include "asm/d/a/d_a_alink/setKandelaarModel__9daAlink_cFv.s"
}
#pragma pop

/* 80110F88-80110FE0 10B8C8 0058+00 3/3 0/0 0/0 .text            resetOilBottleModel__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::resetOilBottleModel() {
    nofralloc
#include "asm/d/a/d_a_alink/resetOilBottleModel__9daAlink_cFv.s"
}
#pragma pop

/* 80110FE0-801110B8 10B920 00D8+00 3/3 0/0 0/0 .text commonKandelaarPourInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::commonKandelaarPourInit() {
    nofralloc
#include "asm/d/a/d_a_alink/commonKandelaarPourInit__9daAlink_cFv.s"
}
#pragma pop

/* 801110B8-8011130C 10B9F8 0254+00 3/3 0/0 0/0 .text            commonKandelaarPour__9daAlink_cFi
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::commonKandelaarPour(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/commonKandelaarPour__9daAlink_cFi.s"
}
#pragma pop

/* 8011130C-80111440 10BC4C 0134+00 1/1 0/0 0/0 .text            initKandelaarSwing__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::initKandelaarSwing() {
    nofralloc
#include "asm/d/a/d_a_alink/initKandelaarSwing__9daAlink_cFv.s"
}
#pragma pop

/* 80111440-801115CC 10BD80 018C+00 2/1 0/0 0/0 .text procKandelaarSwingInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procKandelaarSwingInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procKandelaarSwingInit__9daAlink_cFv.s"
}
#pragma pop

/* 801115CC-8011167C 10BF0C 00B0+00 1/0 0/0 0/0 .text            procKandelaarSwing__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procKandelaarSwing() {
    nofralloc
#include "asm/d/a/d_a_alink/procKandelaarSwing__9daAlink_cFv.s"
}
#pragma pop

/* 8011167C-80111724 10BFBC 00A8+00 1/1 0/0 0/0 .text            procKandelaarPourInit__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procKandelaarPourInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procKandelaarPourInit__9daAlink_cFv.s"
}
#pragma pop

/* 80111724-8011174C 10C064 0028+00 1/0 0/0 0/0 .text            procKandelaarPour__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procKandelaarPour() {
    nofralloc
#include "asm/d/a/d_a_alink/procKandelaarPour__9daAlink_cFv.s"
}
#pragma pop

/* 8011174C-80111770 10C08C 0024+00 1/1 0/0 0/0 .text daAlink_searchWhistle__FP10fopAc_ac_cPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void daAlink_searchWhistle(fopAc_ac_c* param_0, void* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/daAlink_searchWhistle__FP10fopAc_ac_cPv.s"
}
#pragma pop

/* 80111770-80111784 10C0B0 0014+00 1/1 0/0 0/0 .text daAlink_searchHawk__FP10fopAc_ac_cPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void daAlink_searchHawk(fopAc_ac_c* param_0, void* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/daAlink_searchHawk__FP10fopAc_ac_cPv.s"
}
#pragma pop

/* ############################################################################################## */
/* 8045069C-804506A4 -00001 0008+00 1/1 0/0 0/0 .sdata           grassWhistleArcName$33096 */
SECTION_SDATA static void* grassWhistleArcName[2] = {
    (void*)(((char*)&d_a_d_a_alink__stringBase0) + 0xAD),
    (void*)(((char*)&d_a_d_a_alink__stringBase0) + 0xB4),
};

/* 80111784-8011181C 10C0C4 0098+00 1/1 0/0 0/0 .text            setGrassWhistleModel__9daAlink_cFi
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setGrassWhistleModel(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setGrassWhistleModel__9daAlink_cFi.s"
}
#pragma pop

/* 8011181C-80111894 10C15C 0078+00 1/1 0/0 0/0 .text            setHorseWhistleModel__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setHorseWhistleModel() {
    nofralloc
#include "asm/d/a/d_a_alink/setHorseWhistleModel__9daAlink_cFv.s"
}
#pragma pop

/* 80111894-801119D8 10C1D4 0144+00 2/2 0/0 0/0 .text procGrassWhistleGetInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procGrassWhistleGetInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procGrassWhistleGetInit__9daAlink_cFv.s"
}
#pragma pop

/* 801119D8-80111A9C 10C318 00C4+00 1/0 0/0 0/0 .text            procGrassWhistleGet__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procGrassWhistleGet() {
    nofralloc
#include "asm/d/a/d_a_alink/procGrassWhistleGet__9daAlink_cFv.s"
}
#pragma pop

/* 80111A9C-80111CA4 10C3DC 0208+00 2/2 0/0 0/0 .text
 * procGrassWhistleWaitInit__9daAlink_cFiiisP4cXyz              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procGrassWhistleWaitInit(int param_0, int param_1, int param_2, s16 param_3,
                                             cXyz* param_4) {
    nofralloc
#include "asm/d/a/d_a_alink/procGrassWhistleWaitInit__9daAlink_cFiiisP4cXyz.s"
}
#pragma pop

/* 80111CA4-80111FF0 10C5E4 034C+00 1/0 0/0 0/0 .text            procGrassWhistleWait__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procGrassWhistleWait() {
    nofralloc
#include "asm/d/a/d_a_alink/procGrassWhistleWait__9daAlink_cFv.s"
}
#pragma pop

/* 80111FF0-801120C8 10C930 00D8+00 2/2 0/0 0/0 .text procCoHorseCallWaitInit__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoHorseCallWaitInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procCoHorseCallWaitInit__9daAlink_cFi.s"
}
#pragma pop

/* 801120C8-801121B4 10CA08 00EC+00 1/0 0/0 0/0 .text            procCoHorseCallWait__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoHorseCallWait() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoHorseCallWait__9daAlink_cFv.s"
}
#pragma pop

/* 801121B4-80112220 10CAF4 006C+00 1/0 0/0 0/0 .text            procHawkCatchInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHawkCatchInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procHawkCatchInit__9daAlink_cFv.s"
}
#pragma pop

/* 80112220-80112278 10CB60 0058+00 1/0 0/0 0/0 .text            procHawkCatch__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHawkCatch() {
    nofralloc
#include "asm/d/a/d_a_alink/procHawkCatch__9daAlink_cFv.s"
}
#pragma pop

/* 80112278-80112304 10CBB8 008C+00 2/2 0/0 0/0 .text            procHawkSubjectInit__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHawkSubjectInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procHawkSubjectInit__9daAlink_cFv.s"
}
#pragma pop

/* 80112304-8011243C 10CC44 0138+00 1/0 0/0 0/0 .text            procHawkSubject__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHawkSubject() {
    nofralloc
#include "asm/d/a/d_a_alink/procHawkSubject__9daAlink_cFv.s"
}
#pragma pop

/* 8011243C-80112458 10CD7C 001C+00 1/0 0/0 0/0 .text            getIronBallCenterPos__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm bool daAlink_c::getIronBallCenterPos() {
    nofralloc
#include "asm/d/a/d_a_alink/getIronBallCenterPos__9daAlink_cFv.s"
}
#pragma pop

/* 80112458-80112474 10CD98 001C+00 1/0 0/0 0/0 .text            getIronBallBgHit__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm bool daAlink_c::getIronBallBgHit() const {
    nofralloc
#include "asm/d/a/d_a_alink/getIronBallBgHit__9daAlink_cCFv.s"
}
#pragma pop

/* 80112474-801124B4 10CDB4 0040+00 0/0 2/2 1/1 .text checkIronBallThrowMode__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkIronBallThrowMode() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkIronBallThrowMode__9daAlink_cCFv.s"
}
#pragma pop

/* 801124B4-801124FC 10CDF4 0048+00 0/0 1/1 1/1 .text checkIronBallThrowReturnMode__9daAlink_cCFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkIronBallThrowReturnMode() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkIronBallThrowReturnMode__9daAlink_cCFv.s"
}
#pragma pop

/* 801124FC-80112524 10CE3C 0028+00 1/0 0/0 0/0 .text            checkIronBallReturn__9daAlink_cCFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm bool daAlink_c::checkIronBallReturn() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkIronBallReturn__9daAlink_cCFv.s"
}
#pragma pop

/* 80112524-80112568 10CE64 0044+00 1/0 0/0 0/0 .text checkIronBallGroundStop__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm bool daAlink_c::checkIronBallGroundStop() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkIronBallGroundStop__9daAlink_cCFv.s"
}
#pragma pop

/* 80112568-80112628 10CEA8 00C0+00 5/5 0/0 0/0 .text setIronBallWaitUpperAnime__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setIronBallWaitUpperAnime(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setIronBallWaitUpperAnime__9daAlink_cFi.s"
}
#pragma pop

/* 80112628-801126F8 10CF68 00D0+00 1/1 0/0 0/0 .text            checkIronBallDelete__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkIronBallDelete() {
    nofralloc
#include "asm/d/a/d_a_alink/checkIronBallDelete__9daAlink_cFv.s"
}
#pragma pop

/* 801126F8-80112768 10D038 0070+00 2/2 0/0 0/0 .text            setIronBallReturn__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setIronBallReturn(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setIronBallReturn__9daAlink_cFi.s"
}
#pragma pop

/* 80112768-801127F0 10D0A8 0088+00 2/2 0/0 0/0 .text            setIronBallBgCheckPos__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setIronBallBgCheckPos() {
    nofralloc
#include "asm/d/a/d_a_alink/setIronBallBgCheckPos__9daAlink_cFv.s"
}
#pragma pop

/* 801127F0-80112C80 10D130 0490+00 1/1 0/0 0/0 .text            setIronBallModel__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setIronBallModel() {
    nofralloc
#include "asm/d/a/d_a_alink/setIronBallModel__9daAlink_cFv.s"
}
#pragma pop

/* 80112C80-80112C84 10D5C0 0004+00 2/2 2/2 0/0 .text            __ct__5csXyzFv */
extern "C" void __ct__5csXyzFv() {
    /* empty function */
}

/* 80112C84-80112E7C 10D5C4 01F8+00 1/1 0/0 0/0 .text
 * setIronBallGroundVec__9daAlink_cFPC4cXyzP4cXyz               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setIronBallGroundVec(cXyz const* param_0, cXyz* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/setIronBallGroundVec__9daAlink_cFPC4cXyzP4cXyz.s"
}
#pragma pop

/* 80112E7C-80113CA0 10D7BC 0E24+00 1/1 0/0 0/0 .text            setIronBallChainPos__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setIronBallChainPos() {
    nofralloc
#include "asm/d/a/d_a_alink/setIronBallChainPos__9daAlink_cFv.s"
}
#pragma pop

/* 80113CA0-80113D58 10E5E0 00B8+00 1/1 0/0 0/0 .text checkIronBallReturnChange__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkIronBallReturnChange() {
    nofralloc
#include "asm/d/a/d_a_alink/checkIronBallReturnChange__9daAlink_cFv.s"
}
#pragma pop

/* 80113D58-801150E4 10E698 138C+00 1/1 0/0 0/0 .text            setIronBallPos__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setIronBallPos() {
    nofralloc
#include "asm/d/a/d_a_alink/setIronBallPos__9daAlink_cFv.s"
}
#pragma pop

/* 801150E4-8011510C 10FA24 0028+00 10/10 0/0 0/0 .text            checkIronBallAnime__9daAlink_cCFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm BOOL daAlink_c::checkIronBallAnime() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkIronBallAnime__9daAlink_cCFv.s"
}
#pragma pop

/* 8011510C-801151E0 10FA4C 00D4+00 1/1 0/0 0/0 .text            setIronBallReadyAnime__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setIronBallReadyAnime() {
    nofralloc
#include "asm/d/a/d_a_alink/setIronBallReadyAnime__9daAlink_cFv.s"
}
#pragma pop

/* 801151E0-80115254 10FB20 0074+00 2/2 0/0 0/0 .text            setIronBallBaseAnime__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setIronBallBaseAnime() {
    nofralloc
#include "asm/d/a/d_a_alink/setIronBallBaseAnime__9daAlink_cFv.s"
}
#pragma pop

/* 80115254-801153F8 10FB94 01A4+00 1/1 0/0 0/0 .text checkUpperItemActionIronBall__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkUpperItemActionIronBall() {
    nofralloc
#include "asm/d/a/d_a_alink/checkUpperItemActionIronBall__9daAlink_cFv.s"
}
#pragma pop

/* 801153F8-801154E4 10FD38 00EC+00 2/2 0/0 0/0 .text checkNextActionIronBall__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkNextActionIronBall() {
    nofralloc
#include "asm/d/a/d_a_alink/checkNextActionIronBall__9daAlink_cFv.s"
}
#pragma pop

/* 801154E4-80115564 10FE24 0080+00 1/1 0/0 0/0 .text procIronBallSubjectInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procIronBallSubjectInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procIronBallSubjectInit__9daAlink_cFv.s"
}
#pragma pop

/* 80115564-801155EC 10FEA4 0088+00 1/0 0/0 0/0 .text            procIronBallSubject__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procIronBallSubject() {
    nofralloc
#include "asm/d/a/d_a_alink/procIronBallSubject__9daAlink_cFv.s"
}
#pragma pop

/* 801155EC-80115674 10FF2C 0088+00 1/1 0/0 0/0 .text            procIronBallMoveInit__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procIronBallMoveInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procIronBallMoveInit__9daAlink_cFv.s"
}
#pragma pop

/* 80115674-8011577C 10FFB4 0108+00 1/0 0/0 0/0 .text            procIronBallMove__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procIronBallMove() {
    nofralloc
#include "asm/d/a/d_a_alink/procIronBallMove__9daAlink_cFv.s"
}
#pragma pop

/* 8011577C-80115860 1100BC 00E4+00 1/1 0/0 0/0 .text            procIronBallThrowInit__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procIronBallThrowInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procIronBallThrowInit__9daAlink_cFv.s"
}
#pragma pop

/* 80115860-801159F0 1101A0 0190+00 1/0 0/0 0/0 .text            procIronBallThrow__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procIronBallThrow() {
    nofralloc
#include "asm/d/a/d_a_alink/procIronBallThrow__9daAlink_cFv.s"
}
#pragma pop

/* 801159F0-80115AA0 110330 00B0+00 2/2 0/0 0/0 .text procIronBallReturnInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procIronBallReturnInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procIronBallReturnInit__9daAlink_cFv.s"
}
#pragma pop

/* 80115AA0-80115C20 1103E0 0180+00 1/0 0/0 0/0 .text            procIronBallReturn__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procIronBallReturn() {
    nofralloc
#include "asm/d/a/d_a_alink/procIronBallReturn__9daAlink_cFv.s"
}
#pragma pop

inline BOOL i_dComIfGp_event_runCheck() {
    return g_dComIfG_gameInfo.play.getEvent().runCheck();
}

/* 80115C20-80115C50 110560 0030+00 72/72 0/0 0/0 .text            checkEventRun__9daAlink_cCFv */
BOOL daAlink_c::checkEventRun() const {
    return i_dComIfGp_event_runCheck() || checkPlayerDemoMode();
}

/* 80115C50-80115D08 110590 00B8+00 2/2 0/0 0/0 .text            createNpcTks__9daAlink_cFP4cXyziUl
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::createNpcTks(cXyz* param_0, int param_1, u32 param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/createNpcTks__9daAlink_cFP4cXyziUl.s"
}
#pragma pop

/* 80115D08-80115EC0 110648 01B8+00 1/0 0/0 0/0 .text            checkSetNpcTks__9daAlink_cFP4cXyzii
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm bool daAlink_c::checkSetNpcTks(cXyz* param_0, int param_1, int param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/checkSetNpcTks__9daAlink_cFP4cXyzii.s"
}
#pragma pop

/* 80115EC0-80116E60 110800 0FA0+00 1/1 0/0 0/0 .text            checkDemoAction__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkDemoAction() {
    nofralloc
#include "asm/d/a/d_a_alink/checkDemoAction__9daAlink_cFv.s"
}
#pragma pop

/* 80116E60-80116E9C 1117A0 003C+00 4/4 0/0 0/0 .text            checkDemoMoveMode__9daAlink_cCFUl
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkDemoMoveMode(u32 param_0) const {
    nofralloc
#include "asm/d/a/d_a_alink/checkDemoMoveMode__9daAlink_cCFUl.s"
}
#pragma pop

/* 80116E9C-80117064 1117DC 01C8+00 1/1 0/0 0/0 .text setDemoMoveData__9daAlink_cFPUlPC4cXyz */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setDemoMoveData(u32* param_0, cXyz const* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/setDemoMoveData__9daAlink_cFPUlPC4cXyz.s"
}
#pragma pop

/* 80117064-801171F4 1119A4 0190+00 1/1 0/0 0/0 .text setNoDrawSwordShield__9daAlink_cFiUs */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setNoDrawSwordShield(int param_0, u16 param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/setNoDrawSwordShield__9daAlink_cFiUs.s"
}
#pragma pop

/* 801171F4-80117B90 111B34 099C+00 1/1 0/0 0/0 .text            setDemoData__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setDemoData() {
    nofralloc
#include "asm/d/a/d_a_alink/setDemoData__9daAlink_cFv.s"
}
#pragma pop

/* 80117B90-80117C34 1124D0 00A4+00 1/1 0/0 0/0 .text            resetDemoBck__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::resetDemoBck() {
    nofralloc
#include "asm/d/a/d_a_alink/resetDemoBck__9daAlink_cFv.s"
}
#pragma pop

/* 80117C34-80117C90 112574 005C+00 3/3 0/0 0/0 .text            endHighModel__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::endHighModel() {
    nofralloc
#include "asm/d/a/d_a_alink/endHighModel__9daAlink_cFv.s"
}
#pragma pop

/* 80117C90-80117CF8 1125D0 0068+00 21/21 0/0 0/0 .text            resetSpecialEvent__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::resetSpecialEvent() {
    nofralloc
#include "asm/d/a/d_a_alink/resetSpecialEvent__9daAlink_cFv.s"
}
#pragma pop

/* 80117CF8-801180EC 112638 03F4+00 4/4 0/0 0/0 .text            endDemoMode__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::endDemoMode() {
    nofralloc
#include "asm/d/a/d_a_alink/endDemoMode__9daAlink_cFv.s"
}
#pragma pop

/* 801180EC-80118170 112A2C 0084+00 2/2 0/0 0/0 .text            getDemoLookActor__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getDemoLookActor() {
    nofralloc
#include "asm/d/a/d_a_alink/getDemoLookActor__9daAlink_cFv.s"
}
#pragma pop

/* 80118170-801181A0 112AB0 0030+00 4/4 0/0 0/0 .text            checkFlyAtnWait__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkFlyAtnWait() {
    nofralloc
#include "asm/d/a/d_a_alink/checkFlyAtnWait__9daAlink_cFv.s"
}
#pragma pop

/* 801181A0-801182D4 112AE0 0134+00 2/2 0/0 0/0 .text            setGetItemFace__9daAlink_cFUs */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setGetItemFace(u16 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setGetItemFace__9daAlink_cFUs.s"
}
#pragma pop

/* 801182D4-80118308 112C14 0034+00 2/2 0/0 0/0 .text checkGrabTalkActor__9daAlink_cFP10fopAc_ac_c
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkGrabTalkActor(fopAc_ac_c* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkGrabTalkActor__9daAlink_cFP10fopAc_ac_c.s"
}
#pragma pop

/* 80118308-8011856C 112C48 0264+00 2/2 0/0 0/0 .text            setTalkStartBack__9daAlink_cFP4cXyz
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setTalkStartBack(cXyz* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setTalkStartBack__9daAlink_cFP4cXyz.s"
}
#pragma pop

/* 8011856C-80118654 112EAC 00E8+00 4/4 0/0 0/0 .text setShapeAngleToTalkActor__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setShapeAngleToTalkActor() {
    nofralloc
#include "asm/d/a/d_a_alink/setShapeAngleToTalkActor__9daAlink_cFv.s"
}
#pragma pop

/* 80118654-801186D4 112F94 0080+00 2/2 0/0 0/0 .text            setTalkAnime__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setTalkAnime() {
    nofralloc
#include "asm/d/a/d_a_alink/setTalkAnime__9daAlink_cFv.s"
}
#pragma pop

/* 801186D4-80118778 113014 00A4+00 2/2 0/0 0/0 .text            setTradeItemAnime__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setTradeItemAnime() {
    nofralloc
#include "asm/d/a/d_a_alink/setTradeItemAnime__9daAlink_cFv.s"
}
#pragma pop

/* 80118778-801187B4 1130B8 003C+00 3/3 0/0 0/0 .text            setTradeItemOutHand__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setTradeItemOutHand() {
    nofralloc
#include "asm/d/a/d_a_alink/setTradeItemOutHand__9daAlink_cFv.s"
}
#pragma pop

/* 801187B4-80118840 1130F4 008C+00 5/5 0/0 0/0 .text            checkEndMessage__9daAlink_cFUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkEndMessage(u32 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkEndMessage__9daAlink_cFUl.s"
}
#pragma pop

/* 80118840-801188B0 113180 0070+00 1/1 0/0 0/0 .text setDemoRightHandIndex__9daAlink_cFUs */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setDemoRightHandIndex(u16 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setDemoRightHandIndex__9daAlink_cFUs.s"
}
#pragma pop

/* 801188B0-8011894C 1131F0 009C+00 1/1 0/0 0/0 .text            setDemoLeftHandIndex__9daAlink_cFUs
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setDemoLeftHandIndex(u16 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setDemoLeftHandIndex__9daAlink_cFUs.s"
}
#pragma pop

/* 8011894C-801189F8 11328C 00AC+00 1/1 0/0 0/0 .text            setDemoRide__9daAlink_cFUs */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setDemoRide(u16 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setDemoRide__9daAlink_cFUs.s"
}
#pragma pop

/* 801189F8-80118AD0 113338 00D8+00 1/1 0/0 0/0 .text
 * setDemoBodyBck__9daAlink_cFP13dDemo_actor_cUs                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setDemoBodyBck(dDemo_actor_c* param_0, u16 param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/setDemoBodyBck__9daAlink_cFP13dDemo_actor_cUs.s"
}
#pragma pop

/* 80118AD0-80118B34 113410 0064+00 1/1 0/0 0/0 .text            checkFinalBattle__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkFinalBattle() {
    nofralloc
#include "asm/d/a/d_a_alink/checkFinalBattle__9daAlink_cFv.s"
}
#pragma pop

/* 80118B34-80118BF4 113474 00C0+00 3/3 0/0 0/0 .text            checkRestartDead__9daAlink_cFii */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkRestartDead(int param_0, int param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/checkRestartDead__9daAlink_cFii.s"
}
#pragma pop

/* 80118BF4-80118C98 113534 00A4+00 2/2 0/0 0/0 .text            setDeadRideSyncPos__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setDeadRideSyncPos() {
    nofralloc
#include "asm/d/a/d_a_alink/setDeadRideSyncPos__9daAlink_cFv.s"
}
#pragma pop

/* 80118C98-80118D7C 1135D8 00E4+00 5/5 0/0 0/0 .text            checkDeadHP__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkDeadHP() {
    nofralloc
#include "asm/d/a/d_a_alink/checkDeadHP__9daAlink_cFv.s"
}
#pragma pop

/* 80118D7C-80118FF8 1136BC 027C+00 3/3 0/0 0/0 .text            checkDeadAction__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkDeadAction(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkDeadAction__9daAlink_cFi.s"
}
#pragma pop

/* 80118FF8-801190A4 113938 00AC+00 1/1 0/0 0/0 .text
 * setHighModelBck__9daAlink_cFP13mDoExt_bckAnmUs               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setHighModelBck(mDoExt_bckAnm* param_0, u16 param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/setHighModelBck__9daAlink_cFP13mDoExt_bckAnmUs.s"
}
#pragma pop

/* 801190A4-80119134 1139E4 0090+00 1/1 0/0 0/0 .text            setHighModelFaceBtk__9daAlink_cFUs
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setHighModelFaceBtk(u16 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setHighModelFaceBtk__9daAlink_cFUs.s"
}
#pragma pop

/* 80119134-801191C4 113A74 0090+00 1/1 0/0 0/0 .text
 * setDemoBrk__9daAlink_cFPP15J3DAnmTevRegKeyP8J3DModelUs       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setDemoBrk(J3DAnmTevRegKey** param_0, J3DModel* param_1, u16 param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/setDemoBrk__9daAlink_cFPP15J3DAnmTevRegKeyP8J3DModelUs.s"
}
#pragma pop

/* 801191C4-80119464 113B04 02A0+00 1/1 0/0 0/0 .text
 * setStickAnmData__9daAlink_cFP10J3DAnmBaseiiUsi               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setStickAnmData(J3DAnmBase* param_0, int param_1, int param_2, u16 param_3,
                                    int param_4) {
    nofralloc
#include "asm/d/a/d_a_alink/setStickAnmData__9daAlink_cFP10J3DAnmBaseiiUsi.s"
}
#pragma pop

/* ############################################################################################## */
/* 804256B8-804256CC 0523D8 0014+00 1/1 0/0 0/0 .bss             dummy$36763 */
static u8 dummy[20];

/* 80119464-801195C0 113DA4 015C+00 1/1 0/0 0/0 .text
 * daAlink_c_getDemoIDData__FP13dDemo_actor_cPiPiPiPUsPiPi      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void daAlink_c_getDemoIDData(dDemo_actor_c* param_0, int* param_1, int* param_2,
                                        int* param_3, u16* param_4, int* param_5, int* param_6) {
    nofralloc
#include "asm/d/a/d_a_alink/daAlink_c_getDemoIDData__FP13dDemo_actor_cPiPiPiPUsPiPi.s"
}
#pragma pop

/* 801195C0-801195F8 113F00 0038+00 7/0 0/0 0/0 .text            procDemoCommon__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procDemoCommon() {
    nofralloc
#include "asm/d/a/d_a_alink/procDemoCommon__9daAlink_cFv.s"
}
#pragma pop

/* 801195F8-801196D8 113F38 00E0+00 1/1 0/0 0/0 .text            procCoToolDemoInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoToolDemoInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoToolDemoInit__9daAlink_cFv.s"
}
#pragma pop

/* 801196D8-80119D98 114018 06C0+00 1/0 0/0 0/0 .text            procCoToolDemo__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoToolDemo() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoToolDemo__9daAlink_cFv.s"
}
#pragma pop

/* 80119D98-80119F64 1146D8 01CC+00 1/1 0/0 0/0 .text            procCoTalkInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoTalkInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoTalkInit__9daAlink_cFv.s"
}
#pragma pop

/* 80119F64-8011A214 1148A4 02B0+00 1/0 0/0 0/0 .text            procCoTalk__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoTalk() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoTalk__9daAlink_cFv.s"
}
#pragma pop

/* 8011A214-8011A42C 114B54 0218+00 1/0 0/0 0/0 .text procCoOpenTreasureInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoOpenTreasureInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoOpenTreasureInit__9daAlink_cFv.s"
}
#pragma pop

/* 8011A42C-8011A4C0 114D6C 0094+00 1/0 0/0 0/0 .text            procCoOpenTreasure__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoOpenTreasure() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoOpenTreasure__9daAlink_cFv.s"
}
#pragma pop

/* 8011A4C0-8011A5CC 114E00 010C+00 1/0 0/0 0/0 .text            procCoUnequipInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoUnequipInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoUnequipInit__9daAlink_cFv.s"
}
#pragma pop

/* 8011A5CC-8011A688 114F0C 00BC+00 1/0 0/0 0/0 .text            procCoUnequip__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoUnequip() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoUnequip__9daAlink_cFv.s"
}
#pragma pop

/* 8011A688-8011A6FC 114FC8 0074+00 4/4 0/0 0/0 .text            setGetSubBgm__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setGetSubBgm(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setGetSubBgm__9daAlink_cFi.s"
}
#pragma pop

/* 8011A6FC-8011A798 11503C 009C+00 1/0 0/0 0/0 .text checkTreasureRupeeReturn__9daAlink_cCFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm bool daAlink_c::checkTreasureRupeeReturn(int param_0) const {
    nofralloc
#include "asm/d/a/d_a_alink/checkTreasureRupeeReturn__9daAlink_cCFi.s"
}
#pragma pop

/* 8011A798-8011AC28 1150D8 0490+00 2/1 0/0 0/0 .text            procCoGetItemInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoGetItemInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoGetItemInit__9daAlink_cFv.s"
}
#pragma pop

/* 8011AC28-8011B3F0 115568 07C8+00 1/0 0/0 0/0 .text            procCoGetItem__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoGetItem() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoGetItem__9daAlink_cFv.s"
}
#pragma pop

/* 8011B3F0-8011B46C 115D30 007C+00 1/0 0/0 0/0 .text            procCoTurnBackInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoTurnBackInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoTurnBackInit__9daAlink_cFv.s"
}
#pragma pop

/* 8011B46C-8011B57C 115DAC 0110+00 1/0 0/0 0/0 .text            procCoTurnBack__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoTurnBack() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoTurnBack__9daAlink_cFv.s"
}
#pragma pop

/* 8011B57C-8011B71C 115EBC 01A0+00 1/0 0/0 0/0 .text            procDoorOpenInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procDoorOpenInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procDoorOpenInit__9daAlink_cFv.s"
}
#pragma pop

/* 8011B71C-8011B914 11605C 01F8+00 1/0 0/0 0/0 .text            procDoorOpen__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procDoorOpen() {
    nofralloc
#include "asm/d/a/d_a_alink/procDoorOpen__9daAlink_cFv.s"
}
#pragma pop

/* 8011B914-8011BA20 116254 010C+00 1/1 0/0 0/0 .text            procCoLookWaitInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoLookWaitInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoLookWaitInit__9daAlink_cFv.s"
}
#pragma pop

/* 8011BA20-8011BABC 116360 009C+00 1/0 0/0 0/0 .text            procCoLookWait__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoLookWait() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoLookWait__9daAlink_cFv.s"
}
#pragma pop

/* 8011BABC-8011BB40 1163FC 0084+00 1/0 0/0 0/0 .text procCoDemoPushPullWaitInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoDemoPushPullWaitInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoDemoPushPullWaitInit__9daAlink_cFv.s"
}
#pragma pop

/* 8011BB40-8011BC14 116480 00D4+00 1/0 0/0 0/0 .text procCoDemoPushMoveInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoDemoPushMoveInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoDemoPushMoveInit__9daAlink_cFv.s"
}
#pragma pop

/* 8011BC14-8011BC74 116554 0060+00 2/2 0/0 0/0 .text            setMonkeyMoveAnime__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setMonkeyMoveAnime() {
    nofralloc
#include "asm/d/a/d_a_alink/setMonkeyMoveAnime__9daAlink_cFv.s"
}
#pragma pop

/* 8011BC74-8011BD18 1165B4 00A4+00 1/0 0/0 0/0 .text            procMonkeyMoveInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procMonkeyMoveInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procMonkeyMoveInit__9daAlink_cFv.s"
}
#pragma pop

/* 8011BD18-8011BD6C 116658 0054+00 1/0 0/0 0/0 .text            procMonkeyMove__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procMonkeyMove() {
    nofralloc
#include "asm/d/a/d_a_alink/procMonkeyMove__9daAlink_cFv.s"
}
#pragma pop

/* 8011BD6C-8011BDF0 1166AC 0084+00 1/0 0/0 0/0 .text procDemoBoomerangCatchInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procDemoBoomerangCatchInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procDemoBoomerangCatchInit__9daAlink_cFv.s"
}
#pragma pop

/* 8011BDF0-8011BE54 116730 0064+00 1/0 0/0 0/0 .text procDemoBoomerangCatch__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procDemoBoomerangCatch() {
    nofralloc
#include "asm/d/a/d_a_alink/procDemoBoomerangCatch__9daAlink_cFv.s"
}
#pragma pop

/* 8011BE54-8011C1B4 116794 0360+00 2/2 0/0 0/0 .text            procCoDeadInit__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoDeadInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procCoDeadInit__9daAlink_cFi.s"
}
#pragma pop

/* 8011C1B4-8011C62C 116AF4 0478+00 1/0 0/0 0/0 .text            procCoDead__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoDead() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoDead__9daAlink_cFv.s"
}
#pragma pop

/* 8011C62C-8011C760 116F6C 0134+00 1/0 0/0 0/0 .text            procCoLookAroundInit__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoLookAroundInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoLookAroundInit__9daAlink_cFv.s"
}
#pragma pop

/* 8011C760-8011C81C 1170A0 00BC+00 1/0 0/0 0/0 .text            procCoLookAround__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoLookAround() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoLookAround__9daAlink_cFv.s"
}
#pragma pop

/* 8011C81C-8011C890 11715C 0074+00 1/0 0/0 0/0 .text            procBossAtnWaitInit__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procBossAtnWaitInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procBossAtnWaitInit__9daAlink_cFv.s"
}
#pragma pop

/* 8011C890-8011C904 1171D0 0074+00 1/0 0/0 0/0 .text            procCoQuakeWaitInit__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoQuakeWaitInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoQuakeWaitInit__9daAlink_cFv.s"
}
#pragma pop

/* 8011C904-8011C9D0 117244 00CC+00 1/0 0/0 0/0 .text            procCoCaughtInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoCaughtInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoCaughtInit__9daAlink_cFv.s"
}
#pragma pop

/* 8011C9D0-8011CA4C 117310 007C+00 1/0 0/0 0/0 .text            procLookUpInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procLookUpInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procLookUpInit__9daAlink_cFv.s"
}
#pragma pop

/* 8011CA4C-8011CA98 11738C 004C+00 1/0 0/0 0/0 .text            procLookUp__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procLookUp() {
    nofralloc
#include "asm/d/a/d_a_alink/procLookUp__9daAlink_cFv.s"
}
#pragma pop

/* 8011CA98-8011CB20 1173D8 0088+00 1/0 0/0 0/0 .text procLookUpToGetItemInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procLookUpToGetItemInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procLookUpToGetItemInit__9daAlink_cFv.s"
}
#pragma pop

/* 8011CB20-8011CBD4 117460 00B4+00 1/0 0/0 0/0 .text            procLookUpToGetItem__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procLookUpToGetItem() {
    nofralloc
#include "asm/d/a/d_a_alink/procLookUpToGetItem__9daAlink_cFv.s"
}
#pragma pop

/* 8011CBD4-8011CCA8 117514 00D4+00 1/0 0/0 0/0 .text            procHandPatInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHandPatInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procHandPatInit__9daAlink_cFv.s"
}
#pragma pop

/* 8011CCA8-8011CDE0 1175E8 0138+00 1/0 0/0 0/0 .text            procHandPat__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procHandPat() {
    nofralloc
#include "asm/d/a/d_a_alink/procHandPat__9daAlink_cFv.s"
}
#pragma pop

/* 8011CDE0-8011CF60 117720 0180+00 1/0 0/0 0/0 .text            procCoFogDeadInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoFogDeadInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoFogDeadInit__9daAlink_cFv.s"
}
#pragma pop

/* 8011CF60-8011D0A0 1178A0 0140+00 1/0 0/0 0/0 .text            procCoFogDead__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoFogDead() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoFogDead__9daAlink_cFv.s"
}
#pragma pop

/* 8011D0A0-8011D110 1179E0 0070+00 1/0 0/0 0/0 .text            procWolfSmellWaitInit__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfSmellWaitInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfSmellWaitInit__9daAlink_cFv.s"
}
#pragma pop

/* 8011D110-8011D1F4 117A50 00E4+00 1/0 0/0 0/0 .text            procCoNodInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoNodInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoNodInit__9daAlink_cFv.s"
}
#pragma pop

/* 8011D1F4-8011D268 117B34 0074+00 1/0 0/0 0/0 .text            procCoNod__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoNod() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoNod__9daAlink_cFv.s"
}
#pragma pop

/* 8011D268-8011D304 117BA8 009C+00 1/0 0/0 0/0 .text            procCoEyeAwayInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoEyeAwayInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoEyeAwayInit__9daAlink_cFv.s"
}
#pragma pop

/* 8011D304-8011D3CC 117C44 00C8+00 1/0 0/0 0/0 .text            procCoGlareInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoGlareInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoGlareInit__9daAlink_cFv.s"
}
#pragma pop

/* 8011D3CC-8011D474 117D0C 00A8+00 1/0 0/0 0/0 .text            procCoGlare__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoGlare() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoGlare__9daAlink_cFv.s"
}
#pragma pop

/* 8011D474-8011D4D4 117DB4 0060+00 1/0 0/0 0/0 .text            procGoatStopReadyInit__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procGoatStopReadyInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procGoatStopReadyInit__9daAlink_cFv.s"
}
#pragma pop

/* 8011D4D4-8011D544 117E14 0070+00 1/0 0/0 0/0 .text            procGoatStopReady__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procGoatStopReady() {
    nofralloc
#include "asm/d/a/d_a_alink/procGoatStopReady__9daAlink_cFv.s"
}
#pragma pop

/* 8011D544-8011D64C 117E84 0108+00 2/1 0/0 0/0 .text            procCoGetReadySitInit__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoGetReadySitInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoGetReadySitInit__9daAlink_cFv.s"
}
#pragma pop

/* 8011D64C-8011D6D0 117F8C 0084+00 1/0 0/0 0/0 .text            procCoGetReadySit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoGetReadySit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoGetReadySit__9daAlink_cFv.s"
}
#pragma pop

/* 8011D6D0-8011D7D4 118010 0104+00 1/0 0/0 0/0 .text            procCoTwGateInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoTwGateInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoTwGateInit__9daAlink_cFv.s"
}
#pragma pop

/* 8011D7D4-8011D82C 118114 0058+00 1/0 0/0 0/0 .text            procCoTwGate__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoTwGate() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoTwGate__9daAlink_cFv.s"
}
#pragma pop

/* 8011D82C-8011D8F8 11816C 00CC+00 1/0 0/0 0/0 .text procWolfSnowEscapeInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfSnowEscapeInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfSnowEscapeInit__9daAlink_cFv.s"
}
#pragma pop

/* 8011D8F8-8011DB04 118238 020C+00 1/0 0/0 0/0 .text            procWolfSnowEscape__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfSnowEscape() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfSnowEscape__9daAlink_cFv.s"
}
#pragma pop

/* 8011DB04-8011DB9C 118444 0098+00 1/0 0/0 0/0 .text            procZoraMoveInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procZoraMoveInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procZoraMoveInit__9daAlink_cFv.s"
}
#pragma pop

/* 8011DB9C-8011DDD4 1184DC 0238+00 1/0 0/0 0/0 .text            procZoraMove__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procZoraMove() {
    nofralloc
#include "asm/d/a/d_a_alink/procZoraMove__9daAlink_cFv.s"
}
#pragma pop

/* 8011DDD4-8011DED8 118714 0104+00 1/0 0/0 0/0 .text procLookAroundTurnInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procLookAroundTurnInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procLookAroundTurnInit__9daAlink_cFv.s"
}
#pragma pop

/* 8011DED8-8011DF68 118818 0090+00 1/0 0/0 0/0 .text            procLookAroundTurn__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procLookAroundTurn() {
    nofralloc
#include "asm/d/a/d_a_alink/procLookAroundTurn__9daAlink_cFv.s"
}
#pragma pop

/* 8011DF68-8011E060 1188A8 00F8+00 1/0 0/0 0/0 .text            procTradeItemOutInit__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procTradeItemOutInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procTradeItemOutInit__9daAlink_cFv.s"
}
#pragma pop

/* 8011E060-8011E3D8 1189A0 0378+00 1/0 0/0 0/0 .text            procTradeItemOut__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procTradeItemOut() {
    nofralloc
#include "asm/d/a/d_a_alink/procTradeItemOut__9daAlink_cFv.s"
}
#pragma pop

/* 8011E3D8-8011E448 118D18 0070+00 2/2 0/0 0/0 .text            checkLetterItem__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkLetterItem(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkLetterItem__9daAlink_cFi.s"
}
#pragma pop

/* 8011E448-8011E57C 118D88 0134+00 1/1 0/0 0/0 .text            procNotUseItemInit__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procNotUseItemInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procNotUseItemInit__9daAlink_cFi.s"
}
#pragma pop

/* 8011E57C-8011E6E0 118EBC 0164+00 1/0 0/0 0/0 .text            procNotUseItem__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procNotUseItem() {
    nofralloc
#include "asm/d/a/d_a_alink/procNotUseItem__9daAlink_cFv.s"
}
#pragma pop

/* 8011E6E0-8011E748 119020 0068+00 1/0 0/0 0/0 .text            procSwordReadyInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSwordReadyInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procSwordReadyInit__9daAlink_cFv.s"
}
#pragma pop

/* 8011E748-8011E83C 119088 00F4+00 1/0 0/0 0/0 .text            procSwordReady__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSwordReady() {
    nofralloc
#include "asm/d/a/d_a_alink/procSwordReady__9daAlink_cFv.s"
}
#pragma pop

/* 8011E83C-8011E8E0 11917C 00A4+00 2/2 0/0 0/0 .text            setSwordPushAnime__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSwordPushAnime() {
    nofralloc
#include "asm/d/a/d_a_alink/setSwordPushAnime__9daAlink_cFv.s"
}
#pragma pop

/* 8011E8E0-8011E960 119220 0080+00 1/0 0/0 0/0 .text            procSwordPushInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSwordPushInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procSwordPushInit__9daAlink_cFv.s"
}
#pragma pop

/* 8011E960-8011E9F8 1192A0 0098+00 1/0 0/0 0/0 .text            procSwordPush__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procSwordPush() {
    nofralloc
#include "asm/d/a/d_a_alink/procSwordPush__9daAlink_cFv.s"
}
#pragma pop

/* 8011E9F8-8011EA78 119338 0080+00 1/0 0/0 0/0 .text            procGanonFinishInit__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procGanonFinishInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procGanonFinishInit__9daAlink_cFv.s"
}
#pragma pop

/* 8011EA78-8011EAE8 1193B8 0070+00 1/0 0/0 0/0 .text            procGanonFinish__9daAlink_cFv */
bool daAlink_c::procGanonFinish() {
    i_onEndResetFlg1(GANON_FINISH);
    mCurrent.mPosition = field_0x37c8;
    if (mFrameCtrl1[0].checkAnmEnd()) {
        setSingleAnimeBaseMorf(ANM_GANON_FINISH, lit_6041);
    }
    return true;
}

/* 8011EAE8-8011EB8C 119428 00A4+00 1/0 0/0 0/0 .text            procCutFastReadyInit__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCutFastReadyInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procCutFastReadyInit__9daAlink_cFv.s"
}
#pragma pop

/* 8011EB8C-8011EBDC 1194CC 0050+00 1/0 0/0 0/0 .text            procCutFastReady__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCutFastReady() {
    nofralloc
#include "asm/d/a/d_a_alink/procCutFastReady__9daAlink_cFv.s"
}
#pragma pop

/* 8011EBDC-8011EC60 11951C 0084+00 1/0 0/0 0/0 .text procMasterSwordStickInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procMasterSwordStickInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procMasterSwordStickInit__9daAlink_cFv.s"
}
#pragma pop

/* 8011EC60-8011ED18 1195A0 00B8+00 1/0 0/0 0/0 .text            procMasterSwordStick__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procMasterSwordStick() {
    nofralloc
#include "asm/d/a/d_a_alink/procMasterSwordStick__9daAlink_cFv.s"
}
#pragma pop

/* 8011ED18-8011ED8C 119658 0074+00 1/0 0/0 0/0 .text procMasterSwordPullInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm bool daAlink_c::procMasterSwordPullInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procMasterSwordPullInit__9daAlink_cFv.s"
}
#pragma pop

/* 8011ED8C-8011EE40 1196CC 00B4+00 1/0 0/0 0/0 .text            procMasterSwordPull__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procMasterSwordPull() {
    nofralloc
#include "asm/d/a/d_a_alink/procMasterSwordPull__9daAlink_cFv.s"
}
#pragma pop

/* 8011EE40-8011EE94 119780 0054+00 5/5 0/0 0/0 .text            checkLv7DungeonShop__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm BOOL daAlink_c::checkLv7DungeonShop() {
    nofralloc
#include "asm/d/a/d_a_alink/checkLv7DungeonShop__9daAlink_cFv.s"
}
#pragma pop

/* 8011EE94-8011EFB8 1197D4 0124+00 1/1 0/0 0/0 .text procDungeonWarpReadyInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procDungeonWarpReadyInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procDungeonWarpReadyInit__9daAlink_cFv.s"
}
#pragma pop

/* 8011EFB8-8011F084 1198F8 00CC+00 1/0 0/0 0/0 .text            procDungeonWarpReady__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procDungeonWarpReady() {
    nofralloc
#include "asm/d/a/d_a_alink/procDungeonWarpReady__9daAlink_cFv.s"
}
#pragma pop

/* 8011F084-8011F0F4 1199C4 0070+00 1/0 0/0 0/0 .text            procDungeonWarpInit__9daAlink_cFv
 */
#ifdef NONMATCHING
bool daAlink_c::procDungeonWarpInit() {
    if (!commonProcInitNotSameProc((daAlink_PROC)0xeb)) {
        mCommonCounter = 0;
        field_0x3012 = 0;
        setSpecialGravity(0.0f, mMaxFallSpeed, 0);
        field_0x300e = 0;
        field_0x3010 = 0;
    }
}
#else
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procDungeonWarpInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procDungeonWarpInit__9daAlink_cFv.s"
}
#pragma pop
#endif

/* 8011F0F4-8011F360 119A34 026C+00 1/0 0/0 0/0 .text            procDungeonWarp__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procDungeonWarp() {
    nofralloc
#include "asm/d/a/d_a_alink/procDungeonWarp__9daAlink_cFv.s"
}
#pragma pop

/* 8011F360-8011F460 119CA0 0100+00 2/1 0/0 0/0 .text procDungeonWarpSceneStartInit__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procDungeonWarpSceneStartInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procDungeonWarpSceneStartInit__9daAlink_cFv.s"
}
#pragma pop

/* 8011F460-8011F5D4 119DA0 0174+00 1/0 0/0 0/0 .text procDungeonWarpSceneStart__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procDungeonWarpSceneStart() {
    nofralloc
#include "asm/d/a/d_a_alink/procDungeonWarpSceneStart__9daAlink_cFv.s"
}
#pragma pop

/* 8011F5D4-8011F658 119F14 0084+00 2/2 0/0 0/0 .text daAlink_searchPortal__FP10fopAc_ac_cPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void daAlink_searchPortal(fopAc_ac_c* param_0, void* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/daAlink_searchPortal__FP10fopAc_ac_cPv.s"
}
#pragma pop

/* 8011F658-8011F7D8 119F98 0180+00 1/1 0/0 0/0 .text            checkAcceptWarp__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkAcceptWarp() {
    nofralloc
#include "asm/d/a/d_a_alink/checkAcceptWarp__9daAlink_cFv.s"
}
#pragma pop

/* 8011F7D8-8011F8B8 11A118 00E0+00 2/2 0/0 0/0 .text            dungeonReturnWarp__9daAlink_cFv */
void daAlink_c::dungeonReturnWarp() {
    cXyz pos = dComIfGs_getWarpPlayerPos();
    s16 angle = dComIfGs_getWarpPlayerAngleY();
    s8 room = dComIfGs_getWarpRoomNo();
    char name[8];
    strcpy(name, dComIfGs_getWarpStageName());

    dComIfGs_setRestartRoom(pos, angle, room);
    dComIfGp_setNextStage(name, -1, dComIfGs_getRestartRoomNo(), -1, FLOAT_LABEL(lit_6108), 12, 0,
                          0, 0, 1, 0);
    u32 data = setParamData(dComIfGs_getRestartRoomNo(), 0, 0xCA, 0);
    dComIfGs_setRestartRoomParam(data);
}

/* 8011F8B8-8011F9EC 11A1F8 0134+00 1/0 0/0 0/0 .text            skipPortalObjWarp__9daAlink_cFv */
void daAlink_c::skipPortalObjWarp() {
    if (mActionID == WARP && field_0x300e <= 0) {
        return;
    }

    if (i_checkNoResetFlg3(FLG3_UNK_2000000) &&
        (dComIfGp_TargetWarpPt_get() == 9 && dComIfGp_TransportWarp_check())) {
        dStage_changeScene(2, FLOAT_LABEL(lit_6108), 0, fopAcM_GetRoomNo(this), mCollisionRot.y,
                           -1);
    } else {
        u32 data = setParamData(dMeter2Info_getWarpRoomNo(), 0, 0xCA, 0);
        dComIfGs_setTurnRestart(dMeter2Info_getWarpPos(), dMeter2Info_getWarpPlayerNo(),
                                dMeter2Info_getWarpRoomNo(), data);
        dComIfGp_setNextStage(dMeter2Info_getWarpStageName(), -4, dMeter2Info_getWarpRoomNo(), -1,
                              FLOAT_LABEL(lit_6108), 0, 1, 0, mCollisionRot.y, 1, 0);
    }

    if (mActionID == WARP) {
        field_0x300e = -1;
    }
}

/* 8011F9EC-8011FBC0 11A32C 01D4+00 1/1 0/0 0/0 .text            checkWarpStart__9daAlink_cFv */
void daAlink_c::checkWarpStart() {
    if (dMeter2Info_getWarpStatus() != 0) {
        if (dMeter2Info_getWarpStatus() == 3 || dComIfGp_event_compulsory(this, 0, 0xFFFF)) {
            i_onNoResetFlg0(0x4000);
            if (dMeter2Info_getWarpStatus() == 3) {
                const char* portal;
                if (!i_checkMidnaRide()) {
                    if (dComIfGp_TargetWarpPt_get() == 3) {
                        mEvtInfo.setArchiveName("Obj_kbrg");
                        portal = kBridgePortal;
                    } else if (dComIfGp_TargetWarpPt_get() == 6) {
                        mEvtInfo.setArchiveName("Obj_obrg");
                        portal = oBridgePortal;
                    } else if (dComIfGp_TargetWarpPt_get() == 9) {
                        mEvtInfo.setArchiveName("M_VolcBom");
                        portal = volcBomPortal;
                    } else if (dComIfGp_TargetWarpPt_get() == 8) {
                        mEvtInfo.setArchiveName("SCanCrs");
                        portal = cannonPortal;
                    } else {
                        portal = defaultPortal;
                    }
                } else {
                    dComIfGp_TargetWarpPt_set(0xFF);
                    portal = defaultPortal;
                }
                fopAcM_orderOtherEvent(this, portal, 0xFFFF, 1, 1);
            } else {
                mDemo.i_setSpecialDemoType();
                if (dMeter2Info_getWarpStatus() == 1) {
                    stage_stag_info_class* stag_info = dComIfGp_getStageStagInfo();
                    u32 tmp = dStage_stagInfo_GetEscapeWarp(stag_info);
                    dStage_changeScene(tmp, FLOAT_LABEL(lit_6108), 0, -1, mCollisionRot.y, -1);
                } else {
                    dungeonReturnWarp();
                }
            }
        }
        g_meter2_info.resetWarpStatus();
    }
}

/* 8011FBC0-8011FD4C 11A500 018C+00 3/3 0/0 0/0 .text            warpModelTexScroll__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::warpModelTexScroll() {
    nofralloc
#include "asm/d/a/d_a_alink/warpModelTexScroll__9daAlink_cFv.s"
}
#pragma pop

/* 8011FD4C-80120124 11A68C 03D8+00 2/2 0/0 0/0 .text            procCoWarpInit__9daAlink_cFii */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoWarpInit(int param_0, int param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/procCoWarpInit__9daAlink_cFii.s"
}
#pragma pop

/* 80120124-80120440 11AA64 031C+00 1/0 0/0 0/0 .text            procCoWarp__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procCoWarp() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoWarp__9daAlink_cFv.s"
}
#pragma pop

/* 80120440-80120474 11AD80 0034+00 1/0 0/0 0/0 .text            commonWaitTurnInit__9daAlink_cFv */
void daAlink_c::commonWaitTurnInit() {
    if (i_checkWolf()) {
        procWolfWaitTurnInit();
    } else {
        procWaitTurnInit();
    }
}

/* 80120474-80120500 11ADB4 008C+00 2/1 0/0 0/0 .text            commonGrabPutInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::commonGrabPutInit() {
    nofralloc
#include "asm/d/a/d_a_alink/commonGrabPutInit__9daAlink_cFv.s"
}
#pragma pop

/* 80120500-80120534 11AE40 0034+00 3/3 0/0 0/0 .text commonLargeDamageUpInit__9daAlink_cFiiss */
void daAlink_c::commonLargeDamageUpInit(int param_0, int param_1, s16 param_2, s16 param_3) {
    if (i_checkWolf()) {
        procWolfLargeDamageUpInit(param_0, param_1, param_2, param_3);
    } else {
        procLargeDamageUpInit(param_0, param_1, param_2, param_3);
    }
}

/* 80120534-80120580 11AE74 004C+00 4/4 0/0 0/0 .text            commonFallInit__9daAlink_cFi */
void daAlink_c::commonFallInit(int param_0) {
    if (i_checkWolf()) {
        procWolfFallInit(param_0, daAlinkHIO_wlAutoJump_c0::m.field_0x54);
    } else {
        procFallInit(param_0, daAlinkHIO_autoJump_c0::m.field_0x70);
    }
}

/* 80120580-80120634 11AEC0 00B4+00 21/21 0/0 0/0 .text
 * setEmitter__9daAlink_cFPUlUsPC4cXyzPC5csXyz                  */
// matches with literal
#ifdef NONMATCHING
void daAlink_c::setEmitter(u32* param_0, u16 param_1, cXyz const* param_2, csXyz const* param_3) {
    *param_0 = dComIfGp_particle_set(*param_0, param_1, param_2, &mTevStr, param_3, NULL, 0xFF,
                                     NULL, 0xFF, NULL, NULL, NULL);
    dComIfGp_particle_levelEmitterOnEventMove(*param_0);
    dComIfGp_particle_getEmitter(*param_0);
}
#else
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setEmitter(u32* param_0, u16 param_1, cXyz const* param_2,
                               csXyz const* param_3) {
    nofralloc
#include "asm/d/a/d_a_alink/setEmitter__9daAlink_cFPUlUsPC4cXyzPC5csXyz.s"
}
#pragma pop
#endif

/* 80120634-801206C4 11AF74 0090+00 4/4 0/0 0/0 .text
 * setEmitterPolyColor__9daAlink_cFPUlUsR13cBgS_PolyInfoPC4cXyzPC5csXyz */
void daAlink_c::setEmitterPolyColor(u32* param_0, u16 param_1, cBgS_PolyInfo& param_2,
                                    cXyz const* param_3, csXyz const* param_4) {
    *param_0 = dComIfGp_particle_setPolyColor(*param_0, param_1, param_2, param_3, &mTevStr,
                                              param_4, NULL, 0, NULL, -1, NULL);
    dComIfGp_particle_levelEmitterOnEventMove(*param_0);
    dComIfGp_particle_getEmitter(*param_0);
}

/* 801206C4-80120778 11B004 00B4+00 2/2 0/0 0/0 .text
 * setEmitterColor__9daAlink_cFPUlUsPC4cXyzPC5csXyz             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setEmitterColor(u32* param_0, u16 param_1, cXyz const* param_2,
                                    csXyz const* param_3) {
    nofralloc
#include "asm/d/a/d_a_alink/setEmitterColor__9daAlink_cFPUlUsPC4cXyzPC5csXyz.s"
}
#pragma pop

/* 80120778-801207BC 11B0B8 0044+00 9/9 0/0 0/0 .text            stopDrawParticle__9daAlink_cFUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::stopDrawParticle(u32 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/stopDrawParticle__9daAlink_cFUl.s"
}
#pragma pop

/* 801207BC-80120880 11B0FC 00C4+00 1/0 0/0 0/0 .text setEffectFrontRollParam__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setEffectFrontRollParam() {
    nofralloc
#include "asm/d/a/d_a_alink/setEffectFrontRollParam__9daAlink_cFv.s"
}
#pragma pop

/* 80120880-80120B00 11B1C0 0280+00 1/0 0/0 0/0 .text            setEffectSlipParam__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setEffectSlipParam() {
    nofralloc
#include "asm/d/a/d_a_alink/setEffectSlipParam__9daAlink_cFv.s"
}
#pragma pop

/* 80120B00-80120DB0 11B440 02B0+00 1/0 0/0 0/0 .text            setEffectRunParam__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setEffectRunParam() {
    nofralloc
#include "asm/d/a/d_a_alink/setEffectRunParam__9daAlink_cFv.s"
}
#pragma pop

/* 80120DB0-80121000 11B6F0 0250+00 1/0 0/0 0/0 .text setEffectSmallLandParam__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setEffectSmallLandParam() {
    nofralloc
#include "asm/d/a/d_a_alink/setEffectSmallLandParam__9daAlink_cFv.s"
}
#pragma pop

/* 80121000-80121004 11B940 0004+00 1/0 0/0 0/0 .text            setEffectLandParam__9daAlink_cFv */
void daAlink_c::setEffectLandParam() {
    /* empty function */
}

/* 80121004-801211C0 11B944 01BC+00 1/0 0/0 0/0 .text            setEffectSumouParam__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setEffectSumouParam() {
    nofralloc
#include "asm/d/a/d_a_alink/setEffectSumouParam__9daAlink_cFv.s"
}
#pragma pop

/* 801211C0-80121214 11BB00 0054+00 46/46 0/0 0/0 .text setFootEffectProcType__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setFootEffectProcType(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setFootEffectProcType__9daAlink_cFi.s"
}
#pragma pop

/* 80121214-80121304 11BB54 00F0+00 1/1 0/0 0/0 .text            setWolfFootOn__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setWolfFootOn(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setWolfFootOn__9daAlink_cFi.s"
}
#pragma pop

/* 80121304-80121388 11BC44 0084+00 1/1 0/0 0/0 .text            setFootMark__9daAlink_cFP4cXyzUsi
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setFootMark(cXyz* param_0, u16 param_1, int param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/setFootMark__9daAlink_cFP4cXyzUsi.s"
}
#pragma pop

/* 80121388-801221F0 11BCC8 0E68+00 1/1 0/0 0/0 .text            setEffect__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setEffect() {
    nofralloc
#include "asm/d/a/d_a_alink/setEffect__9daAlink_cFv.s"
}
#pragma pop

/* 801221F0-801225E8 11CB30 03F8+00 1/1 0/0 0/0 .text            setSumouEffect__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSumouEffect() {
    nofralloc
#include "asm/d/a/d_a_alink/setSumouEffect__9daAlink_cFv.s"
}
#pragma pop

/* 801225E8-80122654 11CF28 006C+00 1/1 0/0 0/0 .text setWaterfallEffect__9daAlink_cFPC4cXyzPUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setWaterfallEffect(cXyz const* param_0, u32* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/setWaterfallEffect__9daAlink_cFPC4cXyzPUl.s"
}
#pragma pop

/* 80122654-8012277C 11CF94 0128+00 1/1 0/0 0/0 .text            setWaterfallEffect__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setWaterfallEffect() {
    nofralloc
#include "asm/d/a/d_a_alink/setWaterfallEffect__9daAlink_cFv.s"
}
#pragma pop

/* 8012277C-801228F4 11D0BC 0178+00 1/1 0/0 0/0 .text            setMagneBootsEffect__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setMagneBootsEffect() {
    nofralloc
#include "asm/d/a/d_a_alink/setMagneBootsEffect__9daAlink_cFv.s"
}
#pragma pop

/* 801228F4-80122BBC 11D234 02C8+00 1/1 0/0 0/0 .text            setSwordChargeEffect__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSwordChargeEffect() {
    nofralloc
#include "asm/d/a/d_a_alink/setSwordChargeEffect__9daAlink_cFv.s"
}
#pragma pop

/* 80122BBC-80122F18 11D4FC 035C+00 1/1 0/0 0/0 .text            setElecDamageEffect__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setElecDamageEffect() {
    nofralloc
#include "asm/d/a/d_a_alink/setElecDamageEffect__9daAlink_cFv.s"
}
#pragma pop

/* 80122F18-80122F78 11D858 0060+00 1/1 0/0 0/0 .text            clearCutTurnEffectID__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::clearCutTurnEffectID() {
    nofralloc
#include "asm/d/a/d_a_alink/clearCutTurnEffectID__9daAlink_cFv.s"
}
#pragma pop

/* 80122F78-801233A4 11D8B8 042C+00 1/1 0/0 0/0 .text            setCutTurnEffect__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setCutTurnEffect() {
    nofralloc
#include "asm/d/a/d_a_alink/setCutTurnEffect__9daAlink_cFv.s"
}
#pragma pop

/* 801233A4-80123434 11DCE4 0090+00 1/1 0/0 0/0 .text            setHorseCutTurnEffect__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setHorseCutTurnEffect() {
    nofralloc
#include "asm/d/a/d_a_alink/setHorseCutTurnEffect__9daAlink_cFv.s"
}
#pragma pop

/* 80123434-801236BC 11DD74 0288+00 1/1 0/0 0/0 .text setCutLargeJumpLandEffect__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setCutLargeJumpLandEffect() {
    nofralloc
#include "asm/d/a/d_a_alink/setCutLargeJumpLandEffect__9daAlink_cFv.s"
}
#pragma pop

/* 801236BC-801237A8 11DFFC 00EC+00 1/1 0/0 0/0 .text            setBootsLightEffect__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setBootsLightEffect() {
    nofralloc
#include "asm/d/a/d_a_alink/setBootsLightEffect__9daAlink_cFv.s"
}
#pragma pop

/* 801237A8-801238FC 11E0E8 0154+00 1/1 0/0 0/0 .text setLightningSwordEffect__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setLightningSwordEffect() {
    nofralloc
#include "asm/d/a/d_a_alink/setLightningSwordEffect__9daAlink_cFv.s"
}
#pragma pop

/* 801238FC-801239B0 11E23C 00B4+00 1/1 0/0 0/0 .text setWolfRollAttackEffect__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setWolfRollAttackEffect() {
    nofralloc
#include "asm/d/a/d_a_alink/setWolfRollAttackEffect__9daAlink_cFv.s"
}
#pragma pop

/* 801239B0-80123BF0 11E2F0 0240+00 1/1 0/0 0/0 .text            setWolfDigEffect__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setWolfDigEffect() {
    nofralloc
#include "asm/d/a/d_a_alink/setWolfDigEffect__9daAlink_cFv.s"
}
#pragma pop

/* 80123BF0-80123C8C 11E530 009C+00 2/2 0/0 0/0 .text
 * setWolfSwimEndEffect__9daAlink_cFPP14JPABaseEmitterPP14JPABaseEmitter */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setWolfSwimEndEffect(JPABaseEmitter** param_0, JPABaseEmitter** param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/setWolfSwimEndEffect__9daAlink_cFPP14JPABaseEmitterPP14JPABaseEmitter.s"
}
#pragma pop

/* 80123C8C-80123D88 11E5CC 00FC+00 1/1 0/0 0/0 .text setWolfLockAttackEffect__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setWolfLockAttackEffect() {
    nofralloc
#include "asm/d/a/d_a_alink/setWolfLockAttackEffect__9daAlink_cFv.s"
}
#pragma pop

/* 80123D88-80123ED0 11E6C8 0148+00 1/1 0/0 0/0 .text setWolfJumpAttackEffect__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setWolfJumpAttackEffect() {
    nofralloc
#include "asm/d/a/d_a_alink/setWolfJumpAttackEffect__9daAlink_cFv.s"
}
#pragma pop

/* 80123ED0-80124144 11E810 0274+00 2/2 0/0 0/0 .text
 * setWolfBarrierHitEffect__9daAlink_cFR11dBgS_LinChk           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setWolfBarrierHitEffect(dBgS_LinChk& param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setWolfBarrierHitEffect__9daAlink_cFR11dBgS_LinChk.s"
}
#pragma pop

/* 80124144-801241E0 11EA84 009C+00 9/9 0/0 0/0 .text            setCutWaterDropEffect__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setCutWaterDropEffect() {
    nofralloc
#include "asm/d/a/d_a_alink/setCutWaterDropEffect__9daAlink_cFv.s"
}
#pragma pop

/* 801241E0-801244E4 11EB20 0304+00 1/1 0/0 0/0 .text            setWaterDropEffect__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setWaterDropEffect() {
    nofralloc
#include "asm/d/a/d_a_alink/setWaterDropEffect__9daAlink_cFv.s"
}
#pragma pop

/* 801244E4-801245EC 11EE24 0108+00 1/1 0/0 0/0 .text            setSwordUpColorEffect__9daAlink_cFv
 */
// matches with literals
#ifdef NONMATCHING
void daAlink_c::setSwordUpColorEffect() {
    f32 max_intensity;
    if (mSwordUpTimer != 0) {
        max_intensity = 1.0f;
    } else {
        max_intensity = 0.0f;
    }
    cLib_chaseF(&mSwordUpColorIntensity, max_intensity, 0.1f);

    for (int i = 0; i < 2; i++) {
        field_0x32b0[i].mColor.r = mSwordUpColorIntensity * swordUpColor[i].r;
        field_0x32b0[i].mColor.g = mSwordUpColorIntensity * swordUpColor[i].g;
        field_0x32b0[i].mColor.b = mSwordUpColorIntensity * swordUpColor[i].b;
    }
}
#else
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSwordUpColorEffect() {
    nofralloc
#include "asm/d/a/d_a_alink/setSwordUpColorEffect__9daAlink_cFv.s"
}
#pragma pop
#endif

/* 801245EC-80124738 11EF2C 014C+00 1/1 0/0 0/0 .text            setSwordCutSplash__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSwordCutSplash() {
    nofralloc
#include "asm/d/a/d_a_alink/setSwordCutSplash__9daAlink_cFv.s"
}
#pragma pop

/* 80124738-801247A8 11F078 0070+00 1/1 0/0 0/0 .text setMetamorphoseEffectStartLink__9daAlink_cFv
 */
void daAlink_c::setMetamorphoseEffectStartLink() {
    setEmitter(&field_0x31f8, 0x24F, &field_0x37c8, NULL);
    setEmitter(&field_0x31fc, 0x250, &field_0x37c8, NULL);
    setEmitter(&field_0x3200, 0x6E8, &cXyz::Zero, NULL);
}

/* 801247A8-801248A8 11F0E8 0100+00 1/1 0/0 0/0 .text            setMetamorphoseEffect__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setMetamorphoseEffect() {
    nofralloc
#include "asm/d/a/d_a_alink/setMetamorphoseEffect__9daAlink_cFv.s"
}
#pragma pop

/* 801248A8-80124A2C 11F1E8 0184+00 1/1 0/0 0/0 .text            setRunSplash__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setRunSplash() {
    nofralloc
#include "asm/d/a/d_a_alink/setRunSplash__9daAlink_cFv.s"
}
#pragma pop

/* 80124A2C-80124B68 11F36C 013C+00 1/0 0/0 0/0 .text
 * execute__29dAlink_bottleWaterPcallBack_cFP14JPABaseEmitterP15JPABaseParticle */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void execute__29dAlink_bottleWaterPcallBack_cFP14JPABaseEmitterP15JPABaseParticle() {
    // asm void dAlink_bottleWaterPcallBack_c::execute(JPABaseEmitter* param_0, JPABaseParticle*
    // param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/execute__29dAlink_bottleWaterPcallBack_cFP14JPABaseEmitterP15JPABaseParticle.s"
}
#pragma pop

/* 80124B68-80124BA4 11F4A8 003C+00 2/2 0/0 0/0 .text            resetFairyEffect__9daAlink_cFv */
void daAlink_c::resetFairyEffect() {
    stopDrawParticle(field_0x3258);
    stopDrawParticle(field_0x325c);
}

/* 80124BA4-80124E28 11F4E4 0284+00 1/1 0/0 0/0 .text            setBottleEffect__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setBottleEffect() {
    nofralloc
#include "asm/d/a/d_a_alink/setBottleEffect__9daAlink_cFv.s"
}
#pragma pop

/* 80124E28-80124EA8 11F768 0080+00 2/2 0/0 0/0 .text clearFirePointDamageEffect__9daAlink_cFi */
void daAlink_c::clearFirePointDamageEffect(int i) {
    firePointEff_c* fire_eff = &field_0x32d8[i];

    if (fire_eff->field_0x0 != 0) {
        stopDrawParticle(fire_eff->field_0x4);
        stopDrawParticle(fire_eff->field_0x8);
    }
    fire_eff->field_0x0 = 0;
    fire_eff->field_0x24 = cXyz::Zero;
}

/* 80124EA8-80124FA4 11F7E8 00FC+00 1/1 0/0 0/0 .text initFirePointDamageEffectAll__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::initFirePointDamageEffectAll() {
    nofralloc
#include "asm/d/a/d_a_alink/initFirePointDamageEffectAll__9daAlink_cFv.s"
}
#pragma pop

/* 80124FA4-80125128 11F8E4 0184+00 1/1 0/0 0/0 .text
 * initFirePointDamageEffect__9daAlink_cFPC4cXyzP12dCcD_GObjInf */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::initFirePointDamageEffect(cXyz const* param_0, dCcD_GObjInf* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/initFirePointDamageEffect__9daAlink_cFPC4cXyzP12dCcD_GObjInf.s"
}
#pragma pop

/* 80125128-80125338 11FA68 0210+00 1/1 0/0 0/0 .text setFirePointDamageEffect__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setFirePointDamageEffect() {
    nofralloc
#include "asm/d/a/d_a_alink/setFirePointDamageEffect__9daAlink_cFv.s"
}
#pragma pop

/* 80125338-80125524 11FC78 01EC+00 1/1 0/0 0/0 .text            setFreezeEffect__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setFreezeEffect() {
    nofralloc
#include "asm/d/a/d_a_alink/setFreezeEffect__9daAlink_cFv.s"
}
#pragma pop

/* 80125524-801255BC 11FE64 0098+00 1/1 0/0 0/0 .text setWoodShieldBurnEffect__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setWoodShieldBurnEffect() {
    nofralloc
#include "asm/d/a/d_a_alink/setWoodShieldBurnEffect__9daAlink_cFv.s"
}
#pragma pop

/* 801255BC-80125628 11FEFC 006C+00 3/3 0/0 0/0 .text clearWoodShieldBurnEffect__9daAlink_cFv */
#ifdef NONMATCHING
void daAlink_c::clearWoodShieldBurnEffect() {
    if (field_0x2fcb != 0) {
        for (int i = 0; i < 2; i++) {
            stopDrawParticle(field_0x3260[i].field_0x0);
        }
        field_0x2fcb = 0;
    }
}
#else
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::clearWoodShieldBurnEffect() {
    nofralloc
#include "asm/d/a/d_a_alink/clearWoodShieldBurnEffect__9daAlink_cFv.s"
}
#pragma pop
#endif

/* 80125628-801256EC 11FF68 00C4+00 1/1 0/0 0/0 .text setWoodShieldBurnOutEffect__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setWoodShieldBurnOutEffect() {
    nofralloc
#include "asm/d/a/d_a_alink/setWoodShieldBurnOutEffect__9daAlink_cFv.s"
}
#pragma pop

/* 801256EC-80125778 12002C 008C+00 2/2 0/0 0/0 .text
 * initBlur__14daAlink_blur_cFfiPC4cXyzPC4cXyzPC4cXyz           */
void daAlink_blur_c::initBlur(f32 param_0, int param_1, cXyz const* param_2, cXyz const* param_3,
                              cXyz const* param_4) {
    field_0x24 = param_0;
    field_0x1c = param_1;
    field_0x2c = *param_4;
    field_0x38[0] = *param_2;
    field_0x308[0] = *param_3;
    field_0x38[1] = field_0x38[0];
    field_0x308[1] = field_0x308[0];
    field_0x14 = 0;
}

/* 80125778-8012589C 1200B8 0124+00 1/1 0/0 0/0 .text
 * setBezierPos__FPC4cXyzPC4cXyzPC4cXyzPC4cXyzfP4cXyz           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void setBezierPos(cXyz const* param_0, cXyz const* param_1, cXyz const* param_2,
                             cXyz const* param_3, f32 param_4, cXyz* param_5) {
    nofralloc
#include "asm/d/a/d_a_alink/setBezierPos__FPC4cXyzPC4cXyzPC4cXyzPC4cXyzfP4cXyz.s"
}
#pragma pop

/* 8012589C-80125B0C 1201DC 0270+00 1/1 0/0 0/0 .text
 * copyBlur__14daAlink_blur_cFPC4cXyzPC4cXyzPC4cXyz             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_blur_c::copyBlur(cXyz const* param_0, cXyz const* param_1, cXyz const* param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/copyBlur__14daAlink_blur_cFPC4cXyzPC4cXyzPC4cXyz.s"
}
#pragma pop

/* 80125B0C-80125BF4 12044C 00E8+00 1/1 0/0 0/0 .text traceBlur__14daAlink_blur_cFPC4cXyzPC4cXyzs
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_blur_c::traceBlur(cXyz const* param_0, cXyz const* param_1, s16 param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/traceBlur__14daAlink_blur_cFPC4cXyzPC4cXyzs.s"
}
#pragma pop

/* ############################################################################################## */
/* 804256CC-804256EC 0523EC 0020+00 1/1 0/0 0/0 .bss             texObj$42524 */
static u8 texObj[32];

/* 804506A4-804506A8 000124 0004+00 1/1 0/0 0/0 .sdata           nColor0$42525 */
SECTION_SDATA static u8 nColor0[4] = {
    0xFF,
    0xFF,
    0xFF,
    0x14,
};

/* 80125BF4-80125F14 120534 0320+00 1/0 0/0 0/0 .text            draw__14daAlink_blur_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void draw__14daAlink_blur_cFv() {
    // asm void daAlink_blur_c::draw() {
    nofralloc
#include "asm/d/a/d_a_alink/draw__14daAlink_blur_cFv.s"
}
#pragma pop

/* 80125F14-80126350 120854 043C+00 1/1 0/0 0/0 .text            create__20daAlink_lockCursor_cFv */
BOOL daAlink_lockCursor_c::create() {
    JKRArchive* arc = dComIfG_getObjectResInfo(l_arcName)->getArchive();

    f32 tmp = FLOAT_LABEL(lit_6108);
    field_0x2c = tmp;
    field_0x4 = false;
    field_0x30 = tmp;

    mScrn = new J2DScreen();
    if (mScrn == NULL) {
        return false;
    }

    mScrn->setPriority("zelda_v_cursor_new_yellow.blo", 0x100000, arc);
    dPaneClass_showNullPane(mScrn);

    void* tmpData = JKRFileLoader::getGlbResource("zelda_v_cursor_new_yellow.bpk", arc);
    field_0x24 = (J2DAnmColorKey*)J2DAnmLoaderDataBase::load(tmpData);
    if (field_0x24 == NULL) {
        return false;
    }

    tmpData = JKRFileLoader::getGlbResource("zelda_v_cursor_new_yellow.bck", arc);
    field_0x28 = (J2DAnmTransformKey*)J2DAnmLoaderDataBase::load(tmpData);
    if (field_0x28 == NULL) {
        return false;
    }

    tmpData = JKRFileLoader::getGlbResource("zelda_v_cursor_new_yellow_02.brk", arc);
    field_0x1c = (J2DAnmTevRegKey*)J2DAnmLoaderDataBase::load(tmpData);
    if (field_0x1c == NULL) {
        return false;
    }

    tmpData = JKRFileLoader::getGlbResource("zelda_v_cursor_new_yellow.brk", arc);
    field_0x20 = (J2DAnmTevRegKey*)J2DAnmLoaderDataBase::load(tmpData);
    if (field_0x20 == NULL) {
        return false;
    }

    field_0xc = mScrn->search('n_all');
    mCursor0 = mScrn->search('cursor0');
    mCursor1 = mScrn->search('cursor1');
    mCursor2 = mScrn->search('cursor2');

    field_0x28->searchUpdateMaterialID(mScrn);
    field_0xc->setAnimation(field_0x28);
    mCursor0->setAnimation(field_0x28);
    mCursor1->setAnimation(field_0x28);
    mCursor2->setAnimation(field_0x28);
    field_0x28->setFrame(FLOAT_LABEL(lit_6108));

    field_0x24->searchUpdateMaterialID(mScrn);
    mCursor0->setAnimation(field_0x24);
    mCursor1->setAnimation(field_0x24);
    mCursor2->setAnimation(field_0x24);
    mScrn->search('flash')->setAnimation(field_0x24);
    field_0x24->setFrame(FLOAT_LABEL(lit_6108));

    field_0x1c->searchUpdateMaterialID(mScrn);
    field_0x20->searchUpdateMaterialID(mScrn);
    mCursor0->setAnimation(field_0x1c);
    mCursor1->setAnimation(field_0x1c);
    mCursor2->setAnimation(field_0x1c);
    mCursor0->setAnimation(field_0x20);
    mCursor1->setAnimation(field_0x20);
    mCursor2->setAnimation(field_0x20);
    f32 tmp2 = FLOAT_LABEL(lit_6108);
    field_0x1c->setFrame(tmp2);
    field_0x20->setFrame(tmp2);

    mScrn->animation();
    mScrn->setUserInfo('n_43');
    field_0xc->setUserInfo(0x20);
    return true;
}

/* 80126350-80126354 120C90 0004+00 0/0 4/0 0/0 .text setAnimation__7J2DPaneFP15J2DAnmTevRegKey */
// void J2DPane::setAnimation(J2DAnmTevRegKey* param_0) {
extern "C" void setAnimation__7J2DPaneFP15J2DAnmTevRegKey() {
    /* empty function */
}

/* 80126354-80126358 120C94 0004+00 0/0 4/0 0/0 .text setAnimation__7J2DPaneFP11J2DAnmColor */
// void J2DPane::setAnimation(J2DAnmColor* param_0) {
extern "C" void setAnimation__7J2DPaneFP11J2DAnmColor() {
    /* empty function */
}

/* 80126358-80126424 120C98 00CC+00 1/1 0/0 0/0 .text            update__20daAlink_lockCursor_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_lockCursor_c::update() {
    nofralloc
#include "asm/d/a/d_a_alink/update__20daAlink_lockCursor_cFv.s"
}
#pragma pop

/* 80126424-80126650 120D64 022C+00 1/0 0/0 0/0 .text            draw__20daAlink_lockCursor_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void draw__20daAlink_lockCursor_cFv() {
    // asm void daAlink_lockCursor_c::draw() {
    nofralloc
#include "asm/d/a/d_a_alink/draw__20daAlink_lockCursor_cFv.s"
}
#pragma pop

/* 80126650-801266C0 120F90 0070+00 1/1 0/0 0/0 .text            create__15daAlink_sight_cFv */
bool daAlink_sight_c::create() {
    if (!mLockCursor.create()) {
        return false;
    }
    ResTIMG* data = (ResTIMG*)dComIfG_getObjectRes(l_arcName, daAlink_c::getSightBti());
    setSightImage(data);
    return true;
}

/* 801266C0-80126710 121000 0050+00 1/0 0/0 0/0 .text            draw__15daAlink_sight_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void draw__15daAlink_sight_cFv() {
    // asm void daAlink_sight_c::draw() {
    nofralloc
#include "asm/d/a/d_a_alink/draw__15daAlink_sight_cFv.s"
}
#pragma pop

/* 80126710-80126740 121050 0030+00 2/2 0/0 0/0 .text            onLockFlg__15daAlink_sight_cFv */
// matches with literals
#ifdef NONMATCHING
void daAlink_sight_c::onLockFlg() {
    if (mLockFlag) {
        return;
    }
    mLockFlag = true;
    mLockCursor.initFrame();
}
#else
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_sight_c::onLockFlg() {
    nofralloc
#include "asm/d/a/d_a_alink/onLockFlg__15daAlink_sight_cFv.s"
}
#pragma pop
#endif

/* 80126740-80126928 121080 01E8+00 2/2 0/0 0/0 .text            changeCommon__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::changeCommon() {
    nofralloc
#include "asm/d/a/d_a_alink/changeCommon__9daAlink_cFv.s"
}
#pragma pop

/* 80126928-80126F3C 121268 0614+00 2/2 0/0 0/0 .text            changeWolf__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::changeWolf() {
    nofralloc
#include "asm/d/a/d_a_alink/changeWolf__9daAlink_cFv.s"
}
#pragma pop

/* 80126F3C-80127C54 12187C 0D18+00 2/2 0/0 0/0 .text            changeLink__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::changeLink(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/changeLink__9daAlink_cFi.s"
}
#pragma pop

/* 80127C54-80127CAC 122594 0058+00 2/2 0/0 0/0 .text            onWolfEyeUp__9daAlink_cFv */
void daAlink_c::onWolfEyeUp() {
    if (mWolfEyeUp == 0) {
        mZ2Link.setWolfEyeOpen(true);
        mWolfEyeUp = daAlinkHIO_wolf_c0::m.mSensesLingerTime;
        field_0x2fd2 = 20;
    }
}

/* 80127CAC-80127CF0 1225EC 0044+00 5/5 0/0 0/0 .text            offWolfEyeUp__9daAlink_cFv */
void daAlink_c::offWolfEyeUp() {
    if (mWolfEyeUp != 0) {
        mWolfEyeUp = 0;
        field_0x2fd2 = 20;
        mZ2Link.setWolfEyeOpen(false);
    }
}

/* 80127CF0-80127D14 122630 0024+00 1/1 0/0 0/0 .text            wolfSenseTrigger__9daAlink_cFv */
BOOL daAlink_c::wolfSenseTrigger() {
    return itemTriggerCheck(1);
}

/* 80127D14-80127D2C 122654 0018+00 1/1 0/0 0/0 .text            setWolfSenceStatus__9daAlink_cFUc
 */
void daAlink_c::setWolfSenceStatus(u8 status) {
    dComIfGp_setXStatus(status, 0);
}

/* 80127D2C-80127D50 12266C 0024+00 1/1 0/0 0/0 .text            wolfClawTrigger__9daAlink_cFv */
void daAlink_c::wolfClawTrigger() {
    itemTriggerCheck(2);
}

/* 80127D50-80127D68 122690 0018+00 2/2 0/0 0/0 .text            setWolfDigStatus__9daAlink_cFUc */
void daAlink_c::setWolfDigStatus(u8 flag) {
    dComIfGp_setYStatus(13, flag);
}

/* 80127D68-80127DC4 1226A8 005C+00 4/4 0/0 0/0 .text checkWolfShapeReverse__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm BOOL daAlink_c::checkWolfShapeReverse() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkWolfShapeReverse__9daAlink_cCFv.s"
}
#pragma pop

/* 80127DC4-80127E08 122704 0044+00 1/1 0/0 0/0 .text            checkWolfSideStep__9daAlink_cCFv */
BOOL daAlink_c::checkWolfSideStep() const {
    return field_0x2f98 != 0 &&
           ((mActionID == WOLF_ATN_WAIT && !i_checkModeFlg(1)) || mActionID == WOLF_SIDESTEP_LAND ||
            mActionID == WOLF_BACKFLIP_LAND);
}

/* 80127E08-80127F20 122748 0118+00 1/1 0/0 0/0 .text            setWolfTailAngle__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setWolfTailAngle() {
    nofralloc
#include "asm/d/a/d_a_alink/setWolfTailAngle__9daAlink_cFv.s"
}
#pragma pop

/* 80127F20-80127F50 122860 0030+00 5/5 0/0 0/0 .text            checkWolfSlowDash__9daAlink_cFv */
BOOL daAlink_c::checkWolfSlowDash() {
    return field_0x2fc7 == 1 || field_0x2fc7 == 3 || field_0x3174 == 11;
}

/* 80127F50-80128478 122890 0528+00 1/1 0/0 0/0 .text            setSpeedAndAngleWolf__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSpeedAndAngleWolf() {
    nofralloc
#include "asm/d/a/d_a_alink/setSpeedAndAngleWolf__9daAlink_cFv.s"
}
#pragma pop

/* 80128478-80128798 122DB8 0320+00 2/2 0/0 0/0 .text setSpeedAndAngleWolfAtn__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSpeedAndAngleWolfAtn() {
    nofralloc
#include "asm/d/a/d_a_alink/setSpeedAndAngleWolfAtn__9daAlink_cFv.s"
}
#pragma pop

/* 80128798-8012880C 1230D8 0074+00 4/4 0/0 0/0 .text            checkWolfAtnWait__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkWolfAtnWait() {
    nofralloc
#include "asm/d/a/d_a_alink/checkWolfAtnWait__9daAlink_cFv.s"
}
#pragma pop

/* void daAlink_c::checkWolfAtnWait() {
    return checkEnemyGroup(mTargetedActor) && mDemo.getDemoMode() == 0x17 || mTargetedActor != NULL
|| fopAcM_GetName(mTargetedActor) == 0x262 ||
} */

/* 8012880C-80128844 12314C 0038+00 27/27 0/0 0/0 .text
 * checkUnderMove0BckNoArcWolf__9daAlink_cCFQ29daAlink_c12daAlink_WANM */
BOOL daAlink_c::checkUnderMove0BckNoArcWolf(daAlink_c::daAlink_WANM anm_id) const {
    return mUnderAnime[0].checkNoSetArcNo() &&
           m_wlAnmDataTable[anm_id].field_0x0 == mUnderAnime[0].getIdx();
}

/* 80128844-80128F0C 123184 06C8+00 11/11 0/0 0/0 .text setBlendWolfMoveAnime__9daAlink_cFf */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setBlendWolfMoveAnime(f32 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setBlendWolfMoveAnime__9daAlink_cFf.s"
}
#pragma pop

/* 80128F0C-80128F5C 12384C 0050+00 2/2 0/0 0/0 .text            checkWolfAtnMoveBack__9daAlink_cFs
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkWolfAtnMoveBack(s16 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkWolfAtnMoveBack__9daAlink_cFs.s"
}
#pragma pop

/* 80128F5C-80129114 12389C 01B8+00 5/5 0/0 0/0 .text setWolfAtnMoveDirection__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setWolfAtnMoveDirection() {
    nofralloc
#include "asm/d/a/d_a_alink/setWolfAtnMoveDirection__9daAlink_cFv.s"
}
#pragma pop

/* 80129114-8012933C 123A54 0228+00 2/2 0/0 0/0 .text setBlendWolfAtnMoveAnime__9daAlink_cFf */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setBlendWolfAtnMoveAnime(f32 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setBlendWolfAtnMoveAnime__9daAlink_cFf.s"
}
#pragma pop

/* 8012933C-8012948C 123C7C 0150+00 1/1 0/0 0/0 .text setBlendWolfAtnBackMoveAnime__9daAlink_cFf
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setBlendWolfAtnBackMoveAnime(f32 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setBlendWolfAtnBackMoveAnime__9daAlink_cFf.s"
}
#pragma pop

/* 8012948C-80129678 123DCC 01EC+00 3/3 0/0 0/0 .text
 * setDoubleAnimeWolf__9daAlink_cFfffQ29daAlink_c12daAlink_WANMQ29daAlink_c12daAlink_WANMif */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setDoubleAnimeWolf(f32 param_0, f32 param_1, f32 param_2,
                                       daAlink_c::daAlink_WANM param_3,
                                       daAlink_c::daAlink_WANM param_4, int param_5, f32 param_6) {
    nofralloc
#include "asm/d/a/d_a_alink/setDoubleAnimeWolf__9daAlink_cFfffQ29daAlink_c12daAlink_WANMQ29daAlink_c12daAlink_WANMif.s"
}
#pragma pop

/* 80129678-801296A8 123FB8 0030+00 35/35 0/0 0/0 .text
 * setSingleAnimeWolfBase__9daAlink_cFQ29daAlink_c12daAlink_WANM */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSingleAnimeWolfBase(daAlink_c::daAlink_WANM param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setSingleAnimeWolfBase__9daAlink_cFQ29daAlink_c12daAlink_WANM.s"
}
#pragma pop

/* 801296A8-801296D8 123FE8 0030+00 3/3 0/0 0/0 .text
 * setSingleAnimeWolfBaseMorf__9daAlink_cFQ29daAlink_c12daAlink_WANMf */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSingleAnimeWolfBaseMorf(daAlink_c::daAlink_WANM param_0, f32 param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/setSingleAnimeWolfBaseMorf__9daAlink_cFQ29daAlink_c12daAlink_WANMf.s"
}
#pragma pop

/* 801296D8-80129704 124018 002C+00 44/44 0/0 0/0 .text
 * setSingleAnimeWolfBaseSpeed__9daAlink_cFQ29daAlink_c12daAlink_WANMff */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSingleAnimeWolfBaseSpeed(daAlink_c::daAlink_WANM param_0, f32 param_1,
                                                f32 param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/setSingleAnimeWolfBaseSpeed__9daAlink_cFQ29daAlink_c12daAlink_WANMff.s"
}
#pragma pop

/* 80129704-80129848 124044 0144+00 29/29 0/0 0/0 .text
 * setSingleAnimeWolf__9daAlink_cFQ29daAlink_c12daAlink_WANMffsf */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSingleAnimeWolf(daAlink_c::daAlink_WANM param_0, f32 param_1, f32 param_2,
                                       s16 param_3, f32 param_4) {
    nofralloc
#include "asm/d/a/d_a_alink/setSingleAnimeWolf__9daAlink_cFQ29daAlink_c12daAlink_WANMffsf.s"
}
#pragma pop

/* 80129848-8012987C 124188 0034+00 53/53 0/0 0/0 .text
 * setSingleAnimeWolfParam__9daAlink_cFQ29daAlink_c12daAlink_WANMPC16daAlinkHIO_anm_c */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSingleAnimeWolfParam(daAlink_c::daAlink_WANM param_0,
                                            daAlinkHIO_anm_c const* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/setSingleAnimeWolfParam__9daAlink_cFQ29daAlink_c12daAlink_WANMPC16daAlinkHIO_anm_c.s"
}
#pragma pop

/* 8012987C-80129958 1241BC 00DC+00 5/5 0/0 0/0 .text            checkWolfLandAction__9daAlink_cFi
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkWolfLandAction(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkWolfLandAction__9daAlink_cFi.s"
}
#pragma pop

inline bool i_dComIfGp_checkPlayerStatus1(int param_0, u32 flag) {
    return g_dComIfG_gameInfo.play.checkPlayerStatus(param_0, 1, flag);
}

/* 80129958-801299A8 124298 0050+00 1/1 0/0 1/1 .text            checkMidnaUseAbility__9daAlink_cCFv
 */
BOOL daAlink_c::checkMidnaUseAbility() const {
    return i_dComIfGp_checkPlayerStatus1(0, 0x800000) || dKy_withwarp_capture_check();
}

/* 801299A8-80129A80 1242E8 00D8+00 1/1 0/0 0/0 .text            checkWolfUseAbility__9daAlink_cFv
 */
void daAlink_c::checkWolfUseAbility() {
    if (mActionID == 0x137) {
        return;
    }

    if (checkMidnaLockJumpPoint() != NULL && !i_checkMidnaRide()) {
        offWolfEyeUp();
    } else {
        if (i_dComIfGs_isEventBit(0x4308) && field_0x2fd2 == 0 && !checkEventRun() &&
            mWolfEyeUp < daAlinkHIO_wolf_c0::m.mSensesLingerTime && wolfSenseTrigger()) {
            if (mWolfEyeUp == 0) {
                onWolfEyeUp();
            } else {
                offWolfEyeUp();
            }
        }
    }
}

/* 80129A80-80129B44 1243C0 00C4+00 13/13 0/0 0/0 .text checkWolfGroundSpecialMode__9daAlink_cFv
 */
bool daAlink_c::checkWolfGroundSpecialMode() {
    if (mLinkAcch.ChkGroundHit() && !i_checkModeFlg(MODE_PLAYER_FLY) &&
        i_checkEndResetFlg0(ERFLG0_UNK_1)) {
        return procCoMetamorphoseInit();
    } else if (mSpecialMode == SMODE_WOLF_PUZZLE || mSpecialMode == 0x28) {
        return procWolfGiantPuzzleInit();
    } else if (checkCargoCarry()) {
        return procWolfCargoCarryInit();
    } else if (checkSlideAction()) {
        return true;
    } else if (i_checkEndResetFlg1(ERFLG1_UNK_1)) {
        return procWolfScreamWaitInit();
    }
    return false;
}

/* 80129B44-8012A02C 124484 04E8+00 46/46 0/0 0/0 .text            checkNextActionWolf__9daAlink_cFi
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkNextActionWolf(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkNextActionWolf__9daAlink_cFi.s"
}
#pragma pop

/* 8012A02C-8012A228 12496C 01FC+00 3/3 0/0 0/0 .text            wolfSideBgCheck__9daAlink_cFs */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::wolfSideBgCheck(s16 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/wolfSideBgCheck__9daAlink_cFs.s"
}
#pragma pop

/* 8012A228-8012A330 124B68 0108+00 4/4 0/0 0/0 .text checkWolfAttackReverse__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkWolfAttackReverse(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkWolfAttackReverse__9daAlink_cFi.s"
}
#pragma pop

/* 8012A330-8012A41C 124C70 00EC+00 1/1 0/0 0/0 .text checkWolfBarrierHitReverse__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkWolfBarrierHitReverse() {
    nofralloc
#include "asm/d/a/d_a_alink/checkWolfBarrierHitReverse__9daAlink_cFv.s"
}
#pragma pop

/* 8012A41C-8012A498 124D5C 007C+00 2/2 0/0 0/0 .text
 * checkWolfBarrierWallHit__9daAlink_cFR13cBgS_PolyInfo         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkWolfBarrierWallHit(cBgS_PolyInfo& param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkWolfBarrierWallHit__9daAlink_cFR13cBgS_PolyInfo.s"
}
#pragma pop

/* 8012A498-8012ACCC 124DD8 0834+00 1/1 0/0 0/0 .text            wolfBgCheck__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::wolfBgCheck() {
    nofralloc
#include "asm/d/a/d_a_alink/wolfBgCheck__9daAlink_cFv.s"
}
#pragma pop

/* 8012ACCC-8012AD1C 12560C 0050+00 1/1 0/0 0/0 .text            changeWolfBlendRate__9daAlink_cFi
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::changeWolfBlendRate(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/changeWolfBlendRate__9daAlink_cFi.s"
}
#pragma pop

/* 8012AD1C-8012B724 12565C 0A08+00 1/1 0/0 0/0 .text            setWolfFootMatrix__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setWolfFootMatrix() {
    nofralloc
#include "asm/d/a/d_a_alink/setWolfFootMatrix__9daAlink_cFv.s"
}
#pragma pop

/* 8012B724-8012BFA8 126064 0884+00 1/1 0/0 0/0 .text            wolfFootBgCheck__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::wolfFootBgCheck() {
    nofralloc
#include "asm/d/a/d_a_alink/wolfFootBgCheck__9daAlink_cFv.s"
}
#pragma pop

/* 8012BFA8-8012C1F4 1268E8 024C+00 6/6 0/0 0/0 .text checkWolfWaitSlipPolygon__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkWolfWaitSlipPolygon() {
    nofralloc
#include "asm/d/a/d_a_alink/checkWolfWaitSlipPolygon__9daAlink_cFv.s"
}
#pragma pop

/* 8012C1F4-8012C308 126B34 0114+00 2/2 0/0 0/0 .text            setWolfWaitSlip__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setWolfWaitSlip() {
    nofralloc
#include "asm/d/a/d_a_alink/setWolfWaitSlip__9daAlink_cFv.s"
}
#pragma pop

/* 8012C308-8012C30C 126C48 0004+00 4/4 0/0 0/0 .text            checkWolfAtnDoCharge__9daAlink_cFv
 */
void daAlink_c::checkWolfAtnDoCharge() {
    /* empty function */
}

/* 8012C30C-8012CB0C 126C4C 0800+00 1/1 0/0 0/0 .text            setWolfChainPos__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setWolfChainPos() {
    nofralloc
#include "asm/d/a/d_a_alink/setWolfChainPos__9daAlink_cFv.s"
}
#pragma pop

/* 8012CB0C-8012CBE4 12744C 00D8+00 1/1 0/0 0/0 .text            setWolfAnmVoice__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setWolfAnmVoice() {
    nofralloc
#include "asm/d/a/d_a_alink/setWolfAnmVoice__9daAlink_cFv.s"
}
#pragma pop

/* 8012CBE4-8012CD28 127524 0144+00 4/4 0/0 0/0 .text procWolfServiceWaitInit__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfServiceWaitInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfServiceWaitInit__9daAlink_cFi.s"
}
#pragma pop

/* 8012CD28-8012CF68 127668 0240+00 1/0 0/0 0/0 .text            procWolfServiceWait__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfServiceWait() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfServiceWait__9daAlink_cFv.s"
}
#pragma pop

/* 8012CF68-8012CFEC 1278A8 0084+00 1/1 0/0 0/0 .text            procWolfTiredWaitInit__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfTiredWaitInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfTiredWaitInit__9daAlink_cFv.s"
}
#pragma pop

/* 8012CFEC-8012D050 12792C 0064+00 1/0 0/0 0/0 .text            procWolfTiredWait__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfTiredWait() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfTiredWait__9daAlink_cFv.s"
}
#pragma pop

/* 8012D050-8012D104 127990 00B4+00 3/2 0/0 0/0 .text procWolfMidnaRideShockInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfMidnaRideShockInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfMidnaRideShockInit__9daAlink_cFv.s"
}
#pragma pop

/* 8012D104-8012D1A8 127A44 00A4+00 1/0 0/0 0/0 .text procWolfMidnaRideShock__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfMidnaRideShock() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfMidnaRideShock__9daAlink_cFv.s"
}
#pragma pop

/* 8012D1A8-8012D2A8 127AE8 0100+00 13/13 0/0 0/0 .text            procWolfWaitInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfWaitInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfWaitInit__9daAlink_cFv.s"
}
#pragma pop

/* 8012D2A8-8012D380 127BE8 00D8+00 1/0 0/0 0/0 .text            procWolfWait__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfWait() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfWait__9daAlink_cFv.s"
}
#pragma pop

/* 8012D380-8012D3E4 127CC0 0064+00 2/2 0/0 0/0 .text            procWolfMoveInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfMoveInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfMoveInit__9daAlink_cFv.s"
}
#pragma pop

/* 8012D3E4-8012D474 127D24 0090+00 1/0 0/0 0/0 .text            procWolfMove__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfMove() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfMove__9daAlink_cFv.s"
}
#pragma pop

/* 8012D474-8012D590 127DB4 011C+00 1/1 0/0 0/0 .text            procWolfDashInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfDashInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfDashInit__9daAlink_cFv.s"
}
#pragma pop

/* 8012D590-8012D8C0 127ED0 0330+00 1/0 0/0 0/0 .text            procWolfDash__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfDash() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfDash__9daAlink_cFv.s"
}
#pragma pop

/* 8012D8C0-8012DA5C 128200 019C+00 2/2 0/0 0/0 .text procWolfDashReverseInit__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfDashReverseInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfDashReverseInit__9daAlink_cFi.s"
}
#pragma pop

/* 8012DA5C-8012DBA8 12839C 014C+00 1/0 0/0 0/0 .text            procWolfDashReverse__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfDashReverse() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfDashReverse__9daAlink_cFv.s"
}
#pragma pop

/* 8012DBA8-8012DC44 1284E8 009C+00 1/1 0/0 0/0 .text procWolfAtnActorMoveInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfAtnActorMoveInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfAtnActorMoveInit__9daAlink_cFv.s"
}
#pragma pop

/* 8012DC44-8012DD08 128584 00C4+00 1/0 0/0 0/0 .text            procWolfAtnActorMove__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfAtnActorMove() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfAtnActorMove__9daAlink_cFv.s"
}
#pragma pop

/* 8012DD08-8012DDB4 128648 00AC+00 1/1 0/0 0/0 .text            procWolfWaitTurnInit__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfWaitTurnInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfWaitTurnInit__9daAlink_cFv.s"
}
#pragma pop

/* 8012DDB4-8012DEC8 1286F4 0114+00 1/0 0/0 0/0 .text            procWolfWaitTurn__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfWaitTurn() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfWaitTurn__9daAlink_cFv.s"
}
#pragma pop

/* 8012DEC8-8012E0AC 128808 01E4+00 2/2 0/0 0/0 .text            procWolfSideStepInit__9daAlink_cFi
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfSideStepInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfSideStepInit__9daAlink_cFi.s"
}
#pragma pop

/* 8012E0AC-8012E1E8 1289EC 013C+00 1/0 0/0 0/0 .text            procWolfSideStep__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfSideStep() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfSideStep__9daAlink_cFv.s"
}
#pragma pop

/* 8012E1E8-8012E2DC 128B28 00F4+00 1/1 0/0 0/0 .text procWolfSideStepLandInit__9daAlink_cFs */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfSideStepLandInit(s16 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfSideStepLandInit__9daAlink_cFs.s"
}
#pragma pop

/* 8012E2DC-8012E398 128C1C 00BC+00 1/0 0/0 0/0 .text            procWolfSideStepLand__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfSideStepLand() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfSideStepLand__9daAlink_cFv.s"
}
#pragma pop

/* 8012E398-8012E508 128CD8 0170+00 3/3 0/0 0/0 .text            procWolfBackJumpInit__9daAlink_cFi
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfBackJumpInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfBackJumpInit__9daAlink_cFi.s"
}
#pragma pop

/* 8012E508-8012E5F4 128E48 00EC+00 1/0 0/0 0/0 .text            procWolfBackJump__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfBackJump() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfBackJump__9daAlink_cFv.s"
}
#pragma pop

/* 8012E5F4-8012E684 128F34 0090+00 1/1 0/0 0/0 .text procWolfBackJumpLandInit__9daAlink_cFss */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfBackJumpLandInit(s16 param_0, s16 param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfBackJumpLandInit__9daAlink_cFss.s"
}
#pragma pop

/* 8012E684-8012E754 128FC4 00D0+00 1/0 0/0 0/0 .text            procWolfBackJumpLand__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfBackJumpLand() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfBackJumpLand__9daAlink_cFv.s"
}
#pragma pop

/* 8012E754-8012E83C 129094 00E8+00 2/2 0/0 0/0 .text            procWolfHowlInit__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfHowlInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfHowlInit__9daAlink_cFi.s"
}
#pragma pop

/* 8012E83C-8012E9C8 12917C 018C+00 1/0 0/0 0/0 .text            procWolfHowl__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfHowl() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfHowl__9daAlink_cFv.s"
}
#pragma pop

/* 8012E9C8-8012EB94 129308 01CC+00 2/2 0/0 0/0 .text            procWolfAutoJumpInit__9daAlink_cFi
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfAutoJumpInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfAutoJumpInit__9daAlink_cFi.s"
}
#pragma pop

/* 8012EB94-8012EDD0 1294D4 023C+00 1/0 0/0 0/0 .text            procWolfAutoJump__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfAutoJump() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfAutoJump__9daAlink_cFv.s"
}
#pragma pop

/* 8012EDD0-8012EFB8 129710 01E8+00 12/12 0/0 0/0 .text            procWolfFallInit__9daAlink_cFif
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfFallInit(int param_0, f32 param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfFallInit__9daAlink_cFif.s"
}
#pragma pop

/* 8012EFB8-8012F138 1298F8 0180+00 1/0 0/0 0/0 .text            procWolfFall__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfFall() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfFall__9daAlink_cFv.s"
}
#pragma pop

/* 8012F138-8012F1F0 129A78 00B8+00 2/2 0/0 0/0 .text            procWolfLandInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfLandInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfLandInit__9daAlink_cFv.s"
}
#pragma pop

/* 8012F1F0-8012F278 129B30 0088+00 1/0 0/0 0/0 .text            procWolfLand__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfLand() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfLand__9daAlink_cFv.s"
}
#pragma pop

/* 8012F278-8012F358 129BB8 00E0+00 1/1 0/0 0/0 .text            procWolfSitInit__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfSitInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfSitInit__9daAlink_cFi.s"
}
#pragma pop

/* 8012F358-8012F41C 129C98 00C4+00 1/0 0/0 0/0 .text            procWolfSit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfSit() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfSit__9daAlink_cFv.s"
}
#pragma pop

/* 8012F41C-8012F500 129D5C 00E4+00 1/1 0/0 0/0 .text            procWolfStepMoveInit__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfStepMoveInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfStepMoveInit__9daAlink_cFv.s"
}
#pragma pop

/* 8012F500-8012F634 129E40 0134+00 1/0 0/0 0/0 .text            procWolfStepMove__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfStepMove() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfStepMove__9daAlink_cFv.s"
}
#pragma pop

/* 8012F634-8012F6EC 129F74 00B8+00 1/1 0/0 0/0 .text            procWolfSlipInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfSlipInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfSlipInit__9daAlink_cFv.s"
}
#pragma pop

/* 8012F6EC-8012F840 12A02C 0154+00 1/0 0/0 0/0 .text            procWolfSlip__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfSlip() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfSlip__9daAlink_cFv.s"
}
#pragma pop

/* 8012F840-8012F9C0 12A180 0180+00 2/2 0/0 0/0 .text            procWolfSlipTurnInit__9daAlink_cFi
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfSlipTurnInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfSlipTurnInit__9daAlink_cFi.s"
}
#pragma pop

/* 8012F9C0-8012FB18 12A300 0158+00 1/0 0/0 0/0 .text            procWolfSlipTurn__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfSlipTurn() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfSlipTurn__9daAlink_cFv.s"
}
#pragma pop

/* 8012FB18-8012FBB4 12A458 009C+00 1/1 0/0 0/0 .text procWolfSlipTurnLandInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfSlipTurnLandInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfSlipTurnLandInit__9daAlink_cFv.s"
}
#pragma pop

/* 8012FBB4-8012FC38 12A4F4 0084+00 1/0 0/0 0/0 .text            procWolfSlipTurnLand__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfSlipTurnLand() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfSlipTurnLand__9daAlink_cFv.s"
}
#pragma pop

/* 8012FC38-8012FD2C 12A578 00F4+00 2/2 0/0 0/0 .text procWolfSlideReadyInit__9daAlink_cFsi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfSlideReadyInit(s16 param_0, int param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfSlideReadyInit__9daAlink_cFsi.s"
}
#pragma pop

/* 8012FD2C-8012FE80 12A66C 0154+00 1/0 0/0 0/0 .text            procWolfSlideReady__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfSlideReady() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfSlideReady__9daAlink_cFv.s"
}
#pragma pop

/* 8012FE80-8012FFA4 12A7C0 0124+00 2/2 0/0 0/0 .text            procWolfSlideInit__9daAlink_cFsi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfSlideInit(s16 param_0, int param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfSlideInit__9daAlink_cFsi.s"
}
#pragma pop

/* 8012FFA4-801300D4 12A8E4 0130+00 1/0 0/0 0/0 .text            procWolfSlide__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfSlide() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfSlide__9daAlink_cFv.s"
}
#pragma pop

/* 801300D4-80130138 12AA14 0064+00 1/1 0/0 0/0 .text            procWolfSlideLandInit__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfSlideLandInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfSlideLandInit__9daAlink_cFv.s"
}
#pragma pop

/* 80130138-801301E4 12AA78 00AC+00 1/0 0/0 0/0 .text            procWolfSlideLand__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfSlideLand() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfSlideLand__9daAlink_cFv.s"
}
#pragma pop

/* 801301E4-80130268 12AB24 0084+00 3/3 0/0 0/0 .text            procWolfWaitSlipInit__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfWaitSlipInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfWaitSlipInit__9daAlink_cFv.s"
}
#pragma pop

/* 80130268-80130440 12ABA8 01D8+00 1/0 0/0 0/0 .text            procWolfWaitSlip__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfWaitSlip() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfWaitSlip__9daAlink_cFv.s"
}
#pragma pop

/* 80130440-801304D4 12AD80 0094+00 2/2 0/0 0/0 .text procWolfSlopeStartInit__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfSlopeStartInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfSlopeStartInit__9daAlink_cFi.s"
}
#pragma pop

/* 801304D4-8013056C 12AE14 0098+00 1/0 0/0 0/0 .text            procWolfSlopeStart__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfSlopeStart() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfSlopeStart__9daAlink_cFv.s"
}
#pragma pop

/* 8013056C-80130580 12AEAC 0014+00 1/1 0/0 0/0 .text daAlink_searchGoldWolf__FP10fopAc_ac_cPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void daAlink_searchGoldWolf(fopAc_ac_c* param_0, void* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/daAlink_searchGoldWolf__FP10fopAc_ac_cPv.s"
}
#pragma pop

/* 80130580-80130654 12AEC0 00D4+00 1/1 0/0 0/0 .text daAlink_searchWolfHowl__FP10fopAc_ac_cPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void daAlink_searchWolfHowl(fopAc_ac_c* param_0, void* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/daAlink_searchWolfHowl__FP10fopAc_ac_cPv.s"
}
#pragma pop

/* 80130654-80130700 12AF94 00AC+00 1/1 0/0 0/0 .text            setWolfHowlNotHappen__9daAlink_cFi
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setWolfHowlNotHappen(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setWolfHowlNotHappen__9daAlink_cFi.s"
}
#pragma pop

/* 80130700-80130BC4 12B040 04C4+00 1/1 0/0 0/0 .text            procWolfHowlDemoInit__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfHowlDemoInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfHowlDemoInit__9daAlink_cFv.s"
}
#pragma pop

/* 80130BC4-801312C8 12B504 0704+00 1/0 0/0 0/0 .text            procWolfHowlDemo__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfHowlDemo() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfHowlDemo__9daAlink_cFv.s"
}
#pragma pop

/* 801312C8-80131408 12BC08 0140+00 1/1 0/0 0/0 .text            setWolfHowling__15daObj_Sekizoa_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daObj_Sekizoa_c::setWolfHowling() {
    nofralloc
#include "asm/d/a/d_a_alink/setWolfHowling__15daObj_Sekizoa_cFv.s"
}
#pragma pop

/* 80131408-80131450 12BD48 0048+00 1/0 0/0 0/0 .text            checkWolfRope__9daAlink_cFv */
#ifdef NONMATCHING
bool daAlink_c::checkWolfRope() {
    bool ret = false;
    bool bvar1 = false;

    if (i_checkModeFlg(MODE_UNK_20000) && field_0x280c.getActor() != NULL) {
        bvar1 = true;
    }

    // actor is Crope
    if (bvar1 && fopAcM_GetName(field_0x280c.getActor()) == 0x2BE) {
        ret = true;
    }
    return ret;
}
#else
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm bool daAlink_c::checkWolfRope() {
    nofralloc
#include "asm/d/a/d_a_alink/checkWolfRope__9daAlink_cFv.s"
}
#pragma pop
#endif

/* 80131450-80131628 12BD90 01D8+00 2/2 0/0 0/0 .text
 * checkWolfRopeHit__9daAlink_cCFP12dCcD_GObjInfPC4cXyzi        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkWolfRopeHit(dCcD_GObjInf* param_0, cXyz const* param_1,
                                     int param_2) const {
    nofralloc
#include "asm/d/a/d_a_alink/checkWolfRopeHit__9daAlink_cCFP12dCcD_GObjInfPC4cXyzi.s"
}
#pragma pop

/* 80131628-801316A4 12BF68 007C+00 2/2 0/0 0/0 .text            checkWolfRopeJumpHang__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkWolfRopeJumpHang() {
    nofralloc
#include "asm/d/a/d_a_alink/checkWolfRopeJumpHang__9daAlink_cFv.s"
}
#pragma pop

/* 801316A4-80131718 12BFE4 0074+00 1/1 0/0 0/0 .text            getWolfRopeMoveSpeed__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getWolfRopeMoveSpeed() {
    nofralloc
#include "asm/d/a/d_a_alink/getWolfRopeMoveSpeed__9daAlink_cFv.s"
}
#pragma pop

/* 80131718-801319F0 12C058 02D8+00 6/6 0/0 0/0 .text            setWolfRopePosY__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setWolfRopePosY() {
    nofralloc
#include "asm/d/a/d_a_alink/setWolfRopePosY__9daAlink_cFv.s"
}
#pragma pop

/* 801319F0-80131A6C 12C330 007C+00 5/5 0/0 0/0 .text initWolfRopeShapeAngle__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::initWolfRopeShapeAngle() {
    nofralloc
#include "asm/d/a/d_a_alink/initWolfRopeShapeAngle__9daAlink_cFv.s"
}
#pragma pop

/* 80131A6C-80131AFC 12C3AC 0090+00 5/5 0/0 0/0 .text            wolfRopeSwingInc__9daAlink_cFf */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::wolfRopeSwingInc(f32 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/wolfRopeSwingInc__9daAlink_cFf.s"
}
#pragma pop

/* 80131AFC-80131C00 12C43C 0104+00 8/8 0/0 0/0 .text            setWolfRopeOffsetY__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setWolfRopeOffsetY(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setWolfRopeOffsetY__9daAlink_cFi.s"
}
#pragma pop

/* 80131C00-80131C74 12C540 0074+00 2/2 0/0 0/0 .text            getDirectionRopeMove__9daAlink_cCFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getDirectionRopeMove() const {
    nofralloc
#include "asm/d/a/d_a_alink/getDirectionRopeMove__9daAlink_cCFv.s"
}
#pragma pop

/* 80131C74-80131DA0 12C5B4 012C+00 5/5 0/0 0/0 .text            procWolfRopeMoveInit__9daAlink_cFii
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfRopeMoveInit(int param_0, int param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfRopeMoveInit__9daAlink_cFii.s"
}
#pragma pop

/* 80131DA0-80132738 12C6E0 0998+00 1/0 0/0 0/0 .text            procWolfRopeMove__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfRopeMove() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfRopeMove__9daAlink_cFv.s"
}
#pragma pop

/* 80132738-80132914 12D078 01DC+00 5/5 0/0 0/0 .text            procWolfRopeHangInit__9daAlink_cFi
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfRopeHangInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfRopeHangInit__9daAlink_cFi.s"
}
#pragma pop

/* 80132914-80132D68 12D254 0454+00 1/0 0/0 0/0 .text            procWolfRopeHang__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfRopeHang() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfRopeHang__9daAlink_cFv.s"
}
#pragma pop

/* 80132D68-80132E88 12D6A8 0120+00 1/1 0/0 0/0 .text            procWolfRopeTurnInit__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfRopeTurnInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfRopeTurnInit__9daAlink_cFv.s"
}
#pragma pop

/* 80132E88-80133054 12D7C8 01CC+00 1/0 0/0 0/0 .text            procWolfRopeTurn__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfRopeTurn() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfRopeTurn__9daAlink_cFv.s"
}
#pragma pop

/* 80133054-80133164 12D994 0110+00 1/1 0/0 0/0 .text procWolfRopeStaggerInit__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfRopeStaggerInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfRopeStaggerInit__9daAlink_cFi.s"
}
#pragma pop

/* 80133164-8013384C 12DAA4 06E8+00 1/0 0/0 0/0 .text            procWolfRopeStagger__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfRopeStagger() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfRopeStagger__9daAlink_cFv.s"
}
#pragma pop

/* 8013384C-80133930 12E18C 00E4+00 1/1 0/0 0/0 .text procWolfRopeSubjectivityInit__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfRopeSubjectivityInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfRopeSubjectivityInit__9daAlink_cFv.s"
}
#pragma pop

/* 80133930-80133D6C 12E270 043C+00 1/0 0/0 0/0 .text procWolfRopeSubjectivity__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfRopeSubjectivity() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfRopeSubjectivity__9daAlink_cFv.s"
}
#pragma pop

/* 80133D6C-80133EF0 12E6AC 0184+00 0/0 0/0 1/1 .text            getWolfTagJumpTime__9daAlink_cCFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getWolfTagJumpTime() const {
    nofralloc
#include "asm/d/a/d_a_alink/getWolfTagJumpTime__9daAlink_cCFv.s"
}
#pragma pop

/* 80133EF0-80134000 12E830 0110+00 3/3 1/1 1/1 .text checkMidnaLockJumpPoint__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm cXyz* daAlink_c::checkMidnaLockJumpPoint() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkMidnaLockJumpPoint__9daAlink_cCFv.s"
}
#pragma pop

/* 80134000-80134838 12E940 0838+00 4/4 0/0 0/0 .text
 * procWolfTagJumpInit__9daAlink_cFP10fopAc_ac_c                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfTagJumpInit(fopAc_ac_c* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfTagJumpInit__9daAlink_cFP10fopAc_ac_c.s"
}
#pragma pop

/* 80134838-80134DB8 12F178 0580+00 1/0 0/0 0/0 .text            procWolfTagJump__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfTagJump() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfTagJump__9daAlink_cFv.s"
}
#pragma pop

/* 80134DB8-80134EBC 12F6F8 0104+00 1/1 0/0 0/0 .text
 * procWolfTagJumpLandInit__9daAlink_cFP10fopAc_ac_c            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfTagJumpLandInit(fopAc_ac_c* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfTagJumpLandInit__9daAlink_cFP10fopAc_ac_c.s"
}
#pragma pop

/* 80134EBC-80135050 12F7FC 0194+00 1/0 0/0 0/0 .text            procWolfTagJumpLand__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfTagJumpLand() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfTagJumpLand__9daAlink_cFv.s"
}
#pragma pop

/* 80135050-801350A4 12F990 0054+00 1/1 0/0 0/0 .text daAlink_searchGiant__FP10fopAc_ac_cPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void daAlink_searchGiant(fopAc_ac_c* param_0, void* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/daAlink_searchGiant__FP10fopAc_ac_cPv.s"
}
#pragma pop

/* 801350A4-80135160 12F9E4 00BC+00 1/1 0/0 0/0 .text daAlink_searchGiantTalk__FP10fopAc_ac_cPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void daAlink_searchGiantTalk(fopAc_ac_c* param_0, void* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/daAlink_searchGiantTalk__FP10fopAc_ac_cPv.s"
}
#pragma pop

/* 80135160-801351F8 12FAA0 0098+00 1/1 0/0 0/0 .text procWolfGiantPuzzleInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm bool daAlink_c::procWolfGiantPuzzleInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfGiantPuzzleInit__9daAlink_cFv.s"
}
#pragma pop

/* 801351F8-80135458 12FB38 0260+00 1/0 0/0 0/0 .text            procWolfGiantPuzzle__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfGiantPuzzle() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfGiantPuzzle__9daAlink_cFv.s"
}
#pragma pop

/* 80135458-801354C8 12FD98 0070+00 2/2 0/0 0/0 .text            setWolfHangGroundY__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setWolfHangGroundY() {
    nofralloc
#include "asm/d/a/d_a_alink/setWolfHangGroundY__9daAlink_cFv.s"
}
#pragma pop

/* 801354C8-801355EC 12FE08 0124+00 2/2 0/0 0/0 .text            changeWolfHangEndProc__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::changeWolfHangEndProc() {
    nofralloc
#include "asm/d/a/d_a_alink/changeWolfHangEndProc__9daAlink_cFv.s"
}
#pragma pop

/* 801355EC-80135668 12FF2C 007C+00 2/2 0/0 0/0 .text            procWolfHangReadyInit__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfHangReadyInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfHangReadyInit__9daAlink_cFv.s"
}
#pragma pop

/* 80135668-801356F0 12FFA8 0088+00 1/0 0/0 0/0 .text            procWolfHangReady__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfHangReady() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfHangReady__9daAlink_cFv.s"
}
#pragma pop

/* 801356F0-80135AF4 130030 0404+00 3/3 0/0 0/0 .text procWolfHangWallCatchInit__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfHangWallCatchInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfHangWallCatchInit__9daAlink_cFi.s"
}
#pragma pop

/* 80135AF4-80135CD8 130434 01E4+00 1/0 0/0 0/0 .text            procWolfHangWallCatch__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfHangWallCatch() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfHangWallCatch__9daAlink_cFv.s"
}
#pragma pop

/* 80135CD8-80135F00 130618 0228+00 1/1 0/0 0/0 .text
 * procWolfHangFallStartInit__9daAlink_cFP8cM3dGPla             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfHangFallStartInit(cM3dGPla* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfHangFallStartInit__9daAlink_cFP8cM3dGPla.s"
}
#pragma pop

/* 80135F00-80136064 130840 0164+00 1/0 0/0 0/0 .text            procWolfHangFallStart__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfHangFallStart() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfHangFallStart__9daAlink_cFv.s"
}
#pragma pop

/* 80136064-801360EC 1309A4 0088+00 1/1 0/0 0/0 .text            setWolfHeadDamage__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setWolfHeadDamage() {
    nofralloc
#include "asm/d/a/d_a_alink/setWolfHeadDamage__9daAlink_cFv.s"
}
#pragma pop

/* 801360EC-80136508 130A2C 041C+00 1/1 0/0 0/0 .text
 * procWolfDamageInit__9daAlink_cFP12dCcD_GObjInf               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfDamageInit(dCcD_GObjInf* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfDamageInit__9daAlink_cFP12dCcD_GObjInf.s"
}
#pragma pop

/* 80136508-80136624 130E48 011C+00 1/0 0/0 0/0 .text            procWolfDamage__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfDamage() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfDamage__9daAlink_cFv.s"
}
#pragma pop

/* 80136624-801369E4 130F64 03C0+00 2/2 0/0 0/0 .text procWolfLargeDamageUpInit__9daAlink_cFiiss
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfLargeDamageUpInit(int param_0, int param_1, s16 param_2, s16 param_3) {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfLargeDamageUpInit__9daAlink_cFiiss.s"
}
#pragma pop

/* 801369E4-80136C18 131324 0234+00 1/0 0/0 0/0 .text            procWolfLargeDamageUp__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfLargeDamageUp() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfLargeDamageUp__9daAlink_cFv.s"
}
#pragma pop

/* 80136C18-80136DE4 131558 01CC+00 1/1 0/0 0/0 .text procWolfLandDamageInit__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfLandDamageInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfLandDamageInit__9daAlink_cFi.s"
}
#pragma pop

/* 80136DE4-80136EC4 131724 00E0+00 1/0 0/0 0/0 .text            procWolfLandDamage__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfLandDamage() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfLandDamage__9daAlink_cFv.s"
}
#pragma pop

/* 80136EC4-80136F54 131804 0090+00 2/2 0/0 0/0 .text setWolfScreamWaitAnime__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setWolfScreamWaitAnime() {
    nofralloc
#include "asm/d/a/d_a_alink/setWolfScreamWaitAnime__9daAlink_cFv.s"
}
#pragma pop

/* 80136F54-80136FF8 131894 00A4+00 1/1 0/0 0/0 .text procWolfScreamWaitInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm bool daAlink_c::procWolfScreamWaitInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfScreamWaitInit__9daAlink_cFv.s"
}
#pragma pop

/* 80136FF8-801370E4 131938 00EC+00 1/0 0/0 0/0 .text            procWolfScreamWait__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfScreamWait() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfScreamWait__9daAlink_cFv.s"
}
#pragma pop

/* 801370E4-8013712C 131A24 0048+00 3/3 0/0 0/0 .text getWolfLieMoveAnmSpeed__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getWolfLieMoveAnmSpeed() {
    nofralloc
#include "asm/d/a/d_a_alink/getWolfLieMoveAnmSpeed__9daAlink_cFv.s"
}
#pragma pop

/* 8013712C-801371A0 131A6C 0074+00 3/3 0/0 0/0 .text            getWolfLieMoveSpeed__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getWolfLieMoveSpeed() {
    nofralloc
#include "asm/d/a/d_a_alink/getWolfLieMoveSpeed__9daAlink_cFv.s"
}
#pragma pop

/* 801371A0-801371FC 131AE0 005C+00 0/0 0/0 2/2 .text checkMidnaDisappearMode__9daAlink_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkMidnaDisappearMode() const {
    nofralloc
#include "asm/d/a/d_a_alink/checkMidnaDisappearMode__9daAlink_cCFv.s"
}
#pragma pop

/* 801371FC-801372B4 131B3C 00B8+00 3/3 0/0 0/0 .text            checkWolfLieContinue__9daAlink_cFi
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkWolfLieContinue(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/checkWolfLieContinue__9daAlink_cFi.s"
}
#pragma pop

/* 801372B4-80137330 131BF4 007C+00 3/3 0/0 0/0 .text checkNextActionWolfFromLie__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkNextActionWolfFromLie() {
    nofralloc
#include "asm/d/a/d_a_alink/checkNextActionWolfFromLie__9daAlink_cFv.s"
}
#pragma pop

/* 80137330-801373F8 131C70 00C8+00 3/3 0/0 0/0 .text            setWolfLieMoveVoice__9daAlink_cFi
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setWolfLieMoveVoice(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setWolfLieMoveVoice__9daAlink_cFi.s"
}
#pragma pop

/* 801373F8-80137420 131D38 0028+00 2/2 0/0 0/0 .text            checkWolfLieCode__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkWolfLieCode() {
    nofralloc
#include "asm/d/a/d_a_alink/checkWolfLieCode__9daAlink_cFv.s"
}
#pragma pop

/* 80137420-8013753C 131D60 011C+00 2/2 0/0 0/0 .text            procWolfLieStartInit__9daAlink_cFi
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfLieStartInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfLieStartInit__9daAlink_cFi.s"
}
#pragma pop

/* 8013753C-80137634 131E7C 00F8+00 1/0 0/0 0/0 .text            procWolfLieStart__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfLieStart() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfLieStart__9daAlink_cFv.s"
}
#pragma pop

/* 80137634-801377F0 131F74 01BC+00 5/5 0/0 0/0 .text            procWolfLieMoveInit__9daAlink_cFi
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfLieMoveInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfLieMoveInit__9daAlink_cFi.s"
}
#pragma pop

/* 801377F0-80137C90 132130 04A0+00 1/0 0/0 0/0 .text            procWolfLieMove__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfLieMove() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfLieMove__9daAlink_cFv.s"
}
#pragma pop

/* 80137C90-80137D4C 1325D0 00BC+00 1/1 0/0 0/0 .text procWolfLieAutoMoveInit__9daAlink_cFiP4cXyz
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfLieAutoMoveInit(int param_0, cXyz* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfLieAutoMoveInit__9daAlink_cFiP4cXyz.s"
}
#pragma pop

/* 80137D4C-80138000 13268C 02B4+00 1/0 0/0 0/0 .text            procWolfLieAutoMove__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfLieAutoMove() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfLieAutoMove__9daAlink_cFv.s"
}
#pragma pop

/* 80138000-80138188 132940 0188+00 2/2 0/0 0/0 .text setSpeedAndAngleSwimWolf__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSpeedAndAngleSwimWolf() {
    nofralloc
#include "asm/d/a/d_a_alink/setSpeedAndAngleSwimWolf__9daAlink_cFv.s"
}
#pragma pop

/* 80138188-801381F8 132AC8 0070+00 2/2 0/0 0/0 .text getWolfSwimMoveAnmSpeed__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::getWolfSwimMoveAnmSpeed() {
    nofralloc
#include "asm/d/a/d_a_alink/getWolfSwimMoveAnmSpeed__9daAlink_cFv.s"
}
#pragma pop

/* 801381F8-801383D8 132B38 01E0+00 2/2 0/0 0/0 .text decideDoStatusSwimWolf__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::decideDoStatusSwimWolf() {
    nofralloc
#include "asm/d/a/d_a_alink/decideDoStatusSwimWolf__9daAlink_cFv.s"
}
#pragma pop

/* 801383D8-80138484 132D18 00AC+00 2/2 0/0 0/0 .text            procWolfSwimUpInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfSwimUpInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfSwimUpInit__9daAlink_cFv.s"
}
#pragma pop

/* 80138484-8013852C 132DC4 00A8+00 1/0 0/0 0/0 .text            procWolfSwimUp__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfSwimUp() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfSwimUp__9daAlink_cFv.s"
}
#pragma pop

/* 8013852C-80138644 132E6C 0118+00 7/7 0/0 0/0 .text            procWolfSwimWaitInit__9daAlink_cFi
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfSwimWaitInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfSwimWaitInit__9daAlink_cFi.s"
}
#pragma pop

/* 80138644-8013871C 132F84 00D8+00 1/0 0/0 0/0 .text            procWolfSwimWait__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfSwimWait() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfSwimWait__9daAlink_cFv.s"
}
#pragma pop

/* 8013871C-801387A0 13305C 0084+00 4/4 0/0 0/0 .text            procWolfSwimMoveInit__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfSwimMoveInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfSwimMoveInit__9daAlink_cFv.s"
}
#pragma pop

/* 801387A0-8013890C 1330E0 016C+00 1/0 0/0 0/0 .text            procWolfSwimMove__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfSwimMove() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfSwimMove__9daAlink_cFv.s"
}
#pragma pop

/* 8013890C-80138A18 13324C 010C+00 2/2 0/0 0/0 .text procWolfSwimEndWaitInit__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfSwimEndWaitInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfSwimEndWaitInit__9daAlink_cFi.s"
}
#pragma pop

/* 80138A18-80138B6C 133358 0154+00 1/0 0/0 0/0 .text            procWolfSwimEndWait__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfSwimEndWait() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfSwimEndWait__9daAlink_cFv.s"
}
#pragma pop

/* 80138B6C-80138C04 1334AC 0098+00 1/0 0/0 0/0 .text
 * onWolfEnemyBiteAll__9daAlink_cFP10fopAc_ac_cQ29daPy_py_c9daPy_FLG2 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm bool daAlink_c::onWolfEnemyBiteAll(fopAc_ac_c* param_0, daPy_py_c::daPy_FLG2 param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/onWolfEnemyBiteAll__9daAlink_cFP10fopAc_ac_cQ29daPy_py_c9daPy_FLG2.s"
}
#pragma pop

/* 80138C04-80138C44 133544 0040+00 4/4 0/0 0/0 .text            resetWolfEnemyBiteAll__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::resetWolfEnemyBiteAll() {
    nofralloc
#include "asm/d/a/d_a_alink/resetWolfEnemyBiteAll__9daAlink_cFv.s"
}
#pragma pop

/* 80138C44-80138CB8 133584 0074+00 1/1 0/0 0/0 .text checkWolfEnemyThrowAction__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkWolfEnemyThrowAction() {
    nofralloc
#include "asm/d/a/d_a_alink/checkWolfEnemyThrowAction__9daAlink_cFv.s"
}
#pragma pop

/* 80138CB8-80138DC0 1335F8 0108+00 1/1 0/0 0/0 .text            setWolfLockDomeModel__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setWolfLockDomeModel() {
    nofralloc
#include "asm/d/a/d_a_alink/setWolfLockDomeModel__9daAlink_cFv.s"
}
#pragma pop

/* 80138DC0-80138F18 133700 0158+00 1/1 0/0 0/0 .text            setWolfBallModel__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setWolfBallModel() {
    nofralloc
#include "asm/d/a/d_a_alink/setWolfBallModel__9daAlink_cFv.s"
}
#pragma pop

/* 80138F18-80139048 133858 0130+00 2/2 0/0 0/0 .text            resetWolfBallGrab__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::resetWolfBallGrab() {
    nofralloc
#include "asm/d/a/d_a_alink/resetWolfBallGrab__9daAlink_cFv.s"
}
#pragma pop

/* 80139048-8013911C 133988 00D4+00 1/1 0/0 0/0 .text            checkWolfLockData__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkWolfLockData() {
    nofralloc
#include "asm/d/a/d_a_alink/checkWolfLockData__9daAlink_cFv.s"
}
#pragma pop

/* 8013911C-8013916C 133A5C 0050+00 1/0 0/0 0/0 .text checkWolfLock__9daAlink_cCFP10fopAc_ac_c */
bool daAlink_c::checkWolfLock(fopAc_ac_c* p_actor) const {
    u32 id = fopAcM_GetID(p_actor);

    for (int i = 0; i < mWolfLockNum; i++) {
        if (id == mWolfLockAcKeep[i].getID()) {
            return true;
        }
    }
    return false;
}

/* 8013916C-801391DC 133AAC 0070+00 1/0 0/0 0/0 .text cancelWolfLock__9daAlink_cFP10fopAc_ac_c */
bool daAlink_c::cancelWolfLock(fopAc_ac_c* p_actor) {
    u32 id = fopAcM_GetID(p_actor);

    for (int i = 0; i < mWolfLockNum; i++) {
        if (id == mWolfLockAcKeep[i].getID()) {
            mWolfLockAcKeep[i].clearData();
            return true;
        }
    }
    return false;
}

/* 801391DC-801391E4 133B1C 0008+00 0/0 0/0 1/1 .text            getWolfLockActorEnd__9daAlink_cFv
 */
fopAc_ac_c* daAlink_c::getWolfLockActorEnd() {
    return mWolfLockAcKeep[0].getActor();
}

/* 801391E4-801392A8 133B24 00C4+00 1/1 0/0 0/0 .text
 * searchWolfLockEnemy__9daAlink_cFP10fopAc_ac_cPv              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::searchWolfLockEnemy(fopAc_ac_c* param_0, void* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/searchWolfLockEnemy__9daAlink_cFP10fopAc_ac_cPv.s"
}
#pragma pop

/* 801392A8-801392E4 133BE8 003C+00 1/1 0/0 0/0 .text
 * daAlink_searchWolfLockEnemy__FP10fopAc_ac_cPv                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void daAlink_searchWolfLockEnemy(fopAc_ac_c* param_0, void* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/daAlink_searchWolfLockEnemy__FP10fopAc_ac_cPv.s"
}
#pragma pop

/* 801392E4-801393A4 133C24 00C0+00 1/1 0/0 0/0 .text            checkWolfComboCnt__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkWolfComboCnt() {
    nofralloc
#include "asm/d/a/d_a_alink/checkWolfComboCnt__9daAlink_cFv.s"
}
#pragma pop

/* 801393A4-801395B4 133CE4 0210+00 4/4 0/0 0/0 .text            checkWolfAttackAction__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkWolfAttackAction() {
    nofralloc
#include "asm/d/a/d_a_alink/checkWolfAttackAction__9daAlink_cFv.s"
}
#pragma pop

/* 801395B4-80139600 133EF4 004C+00 2/2 0/0 0/0 .text
 * setWolfEnemyThrowUpperAnime__9daAlink_cFQ29daAlink_c12daAlink_WANMf */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setWolfEnemyThrowUpperAnime(daAlink_c::daAlink_WANM param_0, f32 param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/setWolfEnemyThrowUpperAnime__9daAlink_cFQ29daAlink_c12daAlink_WANMf.s"
}
#pragma pop

/* 80139600-801396F8 133F40 00F8+00 2/2 0/0 0/0 .text
 * setWolfEnemyHangBitePos__9daAlink_cFP13fopEn_enemy_c         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setWolfEnemyHangBitePos(fopEn_enemy_c* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setWolfEnemyHangBitePos__9daAlink_cFP13fopEn_enemy_c.s"
}
#pragma pop

/* ############################################################################################## */
/* 804256EC-804256F8 05240C 000C+00 0/1 0/0 0/0 .bss             @50952 */
#pragma push
#pragma force_active on
static u8 lit_50952[12];
#pragma pop

/* 804256F8-80425708 052418 000C+04 1/2 0/0 0/0 .bss             l_wolfBiteHitMarkScale */
static u8 l_wolfBiteHitMarkScale[12 + 4 /* padding */];

/* 801396F8-801397A4 134038 00AC+00 1/1 0/0 0/0 .text
 * setWolfBiteDamage__9daAlink_cFP13fopEn_enemy_c               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setWolfBiteDamage(fopEn_enemy_c* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setWolfBiteDamage__9daAlink_cFP13fopEn_enemy_c.s"
}
#pragma pop

/* 801397A4-801398A8 1340E4 0104+00 1/1 0/0 0/0 .text checkWolfLockAttackChargeState__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::checkWolfLockAttackChargeState() {
    nofralloc
#include "asm/d/a/d_a_alink/checkWolfLockAttackChargeState__9daAlink_cFv.s"
}
#pragma pop

/* 801398A8-80139908 1341E8 0060+00 1/1 0/0 0/0 .text procWolfRollAttackChargeInit__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfRollAttackChargeInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfRollAttackChargeInit__9daAlink_cFv.s"
}
#pragma pop

/* 80139908-801399C4 134248 00BC+00 1/0 0/0 0/0 .text procWolfRollAttackCharge__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfRollAttackCharge() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfRollAttackCharge__9daAlink_cFv.s"
}
#pragma pop

/* 801399C4-80139A70 134304 00AC+00 1/1 0/0 0/0 .text procWolfRollAttackMoveInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfRollAttackMoveInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfRollAttackMoveInit__9daAlink_cFv.s"
}
#pragma pop

/* 80139A70-80139DE0 1343B0 0370+00 1/0 0/0 0/0 .text procWolfRollAttackMove__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfRollAttackMove() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfRollAttackMove__9daAlink_cFv.s"
}
#pragma pop

/* 80139DE0-8013A4F8 134720 0718+00 5/5 0/0 0/0 .text procWolfJumpAttackInit__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfJumpAttackInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfJumpAttackInit__9daAlink_cFi.s"
}
#pragma pop

/* 8013A4F8-8013A7EC 134E38 02F4+00 1/0 0/0 0/0 .text            procWolfJumpAttack__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfJumpAttack() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfJumpAttack__9daAlink_cFv.s"
}
#pragma pop

/* 8013A7EC-8013A8A0 13512C 00B4+00 2/2 0/0 0/0 .text procWolfJumpAttackKickInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfJumpAttackKickInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfJumpAttackKickInit__9daAlink_cFv.s"
}
#pragma pop

/* 8013A8A0-8013A8FC 1351E0 005C+00 1/0 0/0 0/0 .text procWolfJumpAttackKick__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfJumpAttackKick() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfJumpAttackKick__9daAlink_cFv.s"
}
#pragma pop

/* 8013A8FC-8013AAC4 13523C 01C8+00 2/2 0/0 0/0 .text
 * procWolfJumpAttackSlideLandInit__9daAlink_cFiii              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfJumpAttackSlideLandInit(int param_0, int param_1, int param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfJumpAttackSlideLandInit__9daAlink_cFiii.s"
}
#pragma pop

/* 8013AAC4-8013AC44 135404 0180+00 1/0 0/0 0/0 .text procWolfJumpAttackSlideLand__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfJumpAttackSlideLand() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfJumpAttackSlideLand__9daAlink_cFv.s"
}
#pragma pop

/* 8013AC44-8013ACF4 135584 00B0+00 1/1 0/0 0/0 .text
 * procWolfJumpAttackNormalLandInit__9daAlink_cFi               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfJumpAttackNormalLandInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfJumpAttackNormalLandInit__9daAlink_cFi.s"
}
#pragma pop

/* 8013ACF4-8013ADF0 135634 00FC+00 1/0 0/0 0/0 .text procWolfJumpAttackNormalLand__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfJumpAttackNormalLand() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfJumpAttackNormalLand__9daAlink_cFv.s"
}
#pragma pop

/* 8013ADF0-8013AFC0 135730 01D0+00 2/2 0/0 0/0 .text procWolfWaitAttackInit__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfWaitAttackInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfWaitAttackInit__9daAlink_cFi.s"
}
#pragma pop

/* 8013AFC0-8013B2A0 135900 02E0+00 1/0 0/0 0/0 .text            procWolfWaitAttack__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfWaitAttack() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfWaitAttack__9daAlink_cFv.s"
}
#pragma pop

/* 8013B2A0-8013B424 135BE0 0184+00 5/5 0/0 0/0 .text procWolfRollAttackInit__9daAlink_cFii */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfRollAttackInit(int param_0, int param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfRollAttackInit__9daAlink_cFii.s"
}
#pragma pop

/* 8013B424-8013B528 135D64 0104+00 1/0 0/0 0/0 .text            procWolfRollAttack__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfRollAttack() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfRollAttack__9daAlink_cFv.s"
}
#pragma pop

/* 8013B528-8013B808 135E68 02E0+00 1/1 0/0 0/0 .text procWolfDownAttackInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfDownAttackInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfDownAttackInit__9daAlink_cFv.s"
}
#pragma pop

/* 8013B808-8013B964 136148 015C+00 1/0 0/0 0/0 .text            procWolfDownAttack__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfDownAttack() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfDownAttack__9daAlink_cFv.s"
}
#pragma pop

/* 8013B964-8013BA44 1362A4 00E0+00 1/1 0/0 0/0 .text
 * procWolfDownAtLandInit__9daAlink_cFP13fopEn_enemy_c          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfDownAtLandInit(fopEn_enemy_c* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfDownAtLandInit__9daAlink_cFP13fopEn_enemy_c.s"
}
#pragma pop

/* 8013BA44-8013BC94 136384 0250+00 1/0 0/0 0/0 .text            procWolfDownAtLand__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfDownAtLand() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfDownAtLand__9daAlink_cFv.s"
}
#pragma pop

/* 8013BC94-8013BD54 1365D4 00C0+00 1/1 0/0 0/0 .text procWolfDownAtMissLandInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfDownAtMissLandInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfDownAtMissLandInit__9daAlink_cFv.s"
}
#pragma pop

/* 8013BD54-8013BE24 136694 00D0+00 1/0 0/0 0/0 .text procWolfDownAtMissLand__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfDownAtMissLand() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfDownAtMissLand__9daAlink_cFv.s"
}
#pragma pop

/* 8013BE24-8013C3E4 136764 05C0+00 2/2 0/0 0/0 .text procWolfLockAttackInit__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfLockAttackInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfLockAttackInit__9daAlink_cFi.s"
}
#pragma pop

/* 8013C3E4-8013C630 136D24 024C+00 1/0 0/0 0/0 .text            procWolfLockAttack__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfLockAttack() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfLockAttack__9daAlink_cFv.s"
}
#pragma pop

/* 8013C630-8013C7A4 136F70 0174+00 1/1 0/0 0/0 .text procWolfLockAttackTurnInit__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfLockAttackTurnInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfLockAttackTurnInit__9daAlink_cFi.s"
}
#pragma pop

/* 8013C7A4-8013C8C8 1370E4 0124+00 1/0 0/0 0/0 .text procWolfLockAttackTurn__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfLockAttackTurn() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfLockAttackTurn__9daAlink_cFv.s"
}
#pragma pop

/* 8013C8C8-8013C9EC 137208 0124+00 1/1 0/0 0/0 .text procWolfAttackReverseInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfAttackReverseInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfAttackReverseInit__9daAlink_cFv.s"
}
#pragma pop

/* 8013C9EC-8013CB48 13732C 015C+00 1/0 0/0 0/0 .text            procWolfAttackReverse__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfAttackReverse() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfAttackReverse__9daAlink_cFv.s"
}
#pragma pop

/* 8013CB48-8013CC5C 137488 0114+00 2/2 0/0 0/0 .text procWolfEnemyThrowInit__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfEnemyThrowInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfEnemyThrowInit__9daAlink_cFi.s"
}
#pragma pop

/* 8013CC5C-8013CCF4 13759C 0098+00 1/0 0/0 0/0 .text            procWolfEnemyThrow__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfEnemyThrow() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfEnemyThrow__9daAlink_cFv.s"
}
#pragma pop

/* 8013CCF4-8013CDEC 137634 00F8+00 1/1 0/0 0/0 .text procWolfEnemyHangBiteInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfEnemyHangBiteInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfEnemyHangBiteInit__9daAlink_cFv.s"
}
#pragma pop

/* 8013CDEC-8013D0D4 13772C 02E8+00 1/0 0/0 0/0 .text            procWolfEnemyHangBite__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfEnemyHangBite() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfEnemyHangBite__9daAlink_cFv.s"
}
#pragma pop

/* 8013D0D4-8013D3FC 137A14 0328+00 1/1 0/0 0/0 .text            procWolfGrabUpInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfGrabUpInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfGrabUpInit__9daAlink_cFv.s"
}
#pragma pop

/* 8013D3FC-8013D588 137D3C 018C+00 1/0 0/0 0/0 .text            procWolfGrabUp__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfGrabUp() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfGrabUp__9daAlink_cFv.s"
}
#pragma pop

/* 8013D588-8013D65C 137EC8 00D4+00 2/2 0/0 0/0 .text            procWolfGrabPutInit__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfGrabPutInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfGrabPutInit__9daAlink_cFv.s"
}
#pragma pop

/* 8013D65C-8013D818 137F9C 01BC+00 1/0 0/0 0/0 .text            procWolfGrabPut__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfGrabPut() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfGrabPut__9daAlink_cFv.s"
}
#pragma pop

/* 8013D818-8013D86C 138158 0054+00 1/1 0/0 0/0 .text            procWolfGrabThrowInit__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfGrabThrowInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfGrabThrowInit__9daAlink_cFv.s"
}
#pragma pop

/* 8013D86C-8013D930 1381AC 00C4+00 1/0 0/0 0/0 .text            procWolfGrabThrow__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfGrabThrow() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfGrabThrow__9daAlink_cFv.s"
}
#pragma pop

/* 8013D930-8013DA8C 138270 015C+00 1/1 0/0 0/0 .text            procWolfPushInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfPushInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfPushInit__9daAlink_cFv.s"
}
#pragma pop

/* 8013DA8C-8013DB58 1383CC 00CC+00 1/0 0/0 0/0 .text            procWolfPush__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfPush() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfPush__9daAlink_cFv.s"
}
#pragma pop

/* 8013DB58-8013DB6C 138498 0014+00 1/1 0/0 0/0 .text daAlink_searchEnemyCargo__FP10fopAc_ac_cPv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void daAlink_searchEnemyCargo(fopAc_ac_c* param_0, void* param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/daAlink_searchEnemyCargo__FP10fopAc_ac_cPv.s"
}
#pragma pop

/* 8013DB6C-8013DC5C 1384AC 00F0+00 3/2 0/0 0/0 .text procWolfCargoCarryInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm bool daAlink_c::procWolfCargoCarryInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfCargoCarryInit__9daAlink_cFv.s"
}
#pragma pop

/* 8013DC5C-8013DDF8 13859C 019C+00 1/0 0/0 0/0 .text            procWolfCargoCarry__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfCargoCarry() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfCargoCarry__9daAlink_cFv.s"
}
#pragma pop

/* 8013DDF8-8013DE70 138738 0078+00 1/1 0/0 0/0 .text            procWolfChainUpInit__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfChainUpInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfChainUpInit__9daAlink_cFv.s"
}
#pragma pop

/* 8013DE70-8013DF30 1387B0 00C0+00 1/0 0/0 0/0 .text            procWolfChainUp__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfChainUp() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfChainUp__9daAlink_cFv.s"
}
#pragma pop

/* 8013DF30-8013E034 138870 0104+00 1/1 0/0 0/0 .text procWolfGanonCatchInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfGanonCatchInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfGanonCatchInit__9daAlink_cFv.s"
}
#pragma pop

/* 8013E034-8013E240 138974 020C+00 1/0 0/0 0/0 .text            procWolfGanonCatch__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfGanonCatch() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfGanonCatch__9daAlink_cFv.s"
}
#pragma pop

/* 8013E240-8013E2A8 138B80 0068+00 1/1 0/0 0/0 .text procWolfChainReadyInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfChainReadyInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfChainReadyInit__9daAlink_cFv.s"
}
#pragma pop

/* 8013E2A8-8013E6C0 138BE8 0418+00 1/0 0/0 0/0 .text            procWolfChainReady__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfChainReady() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfChainReady__9daAlink_cFv.s"
}
#pragma pop

/* 8013E6C0-8013E80C 139000 014C+00 1/1 0/0 0/0 .text            procWolfChainWaitInit__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfChainWaitInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfChainWaitInit__9daAlink_cFv.s"
}
#pragma pop

/* 8013E80C-8013ED44 13914C 0538+00 1/0 0/0 0/0 .text            procWolfChainWait__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfChainWait() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfChainWait__9daAlink_cFv.s"
}
#pragma pop

/* 8013ED44-8013F1F0 139684 04AC+00 1/1 0/0 0/0 .text            procWolfDigInit__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfDigInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfDigInit__9daAlink_cFv.s"
}
#pragma pop

/* 8013F1F0-8013F4A8 139B30 02B8+00 1/0 0/0 0/0 .text            procWolfDig__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfDig() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfDig__9daAlink_cFv.s"
}
#pragma pop

/* 8013F4A8-8013F7C4 139DE8 031C+00 2/2 0/0 0/0 .text procWolfDigThroughInit__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfDigThroughInit(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfDigThroughInit__9daAlink_cFi.s"
}
#pragma pop

/* 8013F7C4-8013F90C 13A104 0148+00 1/0 0/0 0/0 .text            procWolfDigThrough__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfDigThrough() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfDigThrough__9daAlink_cFv.s"
}
#pragma pop

/* 8013F90C-8013FA14 13A24C 0108+00 1/1 0/0 0/0 .text            setSmellSave__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setSmellSave() {
    nofralloc
#include "asm/d/a/d_a_alink/setSmellSave__9daAlink_cFv.s"
}
#pragma pop

/* 8013FA14-8013FC24 13A354 0210+00 1/1 0/0 0/0 .text            procWolfGetSmellInit__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfGetSmellInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfGetSmellInit__9daAlink_cFv.s"
}
#pragma pop

/* 8013FC24-8013FF28 13A564 0304+00 1/0 0/0 0/0 .text            procWolfGetSmell__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::procWolfGetSmell() {
    nofralloc
#include "asm/d/a/d_a_alink/procWolfGetSmell__9daAlink_cFv.s"
}
#pragma pop

/* 8013FF28-8013FF90 13A868 0068+00 2/2 0/0 0/0 .text            setArcName__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setArcName(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setArcName__9daAlink_cFi.s"
}
#pragma pop

/* 8013FF90-8013FFD8 13A8D0 0048+00 2/2 0/0 0/0 .text            setShieldArcName__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setShieldArcName() {
    nofralloc
#include "asm/d/a/d_a_alink/setShieldArcName__9daAlink_cFv.s"
}
#pragma pop

/* 8013FFD8-80140038 13A918 0060+00 1/1 0/0 0/0 .text setOriginalHeap__9daAlink_cFPP10JKRExpHeapUl
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setOriginalHeap(JKRExpHeap** param_0, u32 param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/setOriginalHeap__9daAlink_cFPP10JKRExpHeapUl.s"
}
#pragma pop

/* 80140038-80140064 13A978 002C+00 1/0 0/0 0/0 .text            setClothesChange__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setClothesChange(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/setClothesChange__9daAlink_cFi.s"
}
#pragma pop

/* 80140064-80140070 13A9A4 000C+00 0/0 1/1 0/0 .text            setShieldChange__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setShieldChange() {
    nofralloc
#include "asm/d/a/d_a_alink/setShieldChange__9daAlink_cFv.s"
}
#pragma pop

/* 80140070-801401F8 13A9B0 0188+00 3/3 0/0 0/0 .text            loadModelDVD__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::loadModelDVD() {
    nofralloc
#include "asm/d/a/d_a_alink/loadModelDVD__9daAlink_cFv.s"
}
#pragma pop

/* 801401F8-80140274 13AB38 007C+00 2/2 0/0 0/0 .text            setShieldModel__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::setShieldModel() {
    nofralloc
#include "asm/d/a/d_a_alink/setShieldModel__9daAlink_cFv.s"
}
#pragma pop

/* 80140274-80140338 13ABB4 00C4+00 2/2 0/0 0/0 .text            loadShieldModelDVD__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::loadShieldModelDVD() {
    nofralloc
#include "asm/d/a/d_a_alink/loadShieldModelDVD__9daAlink_cFv.s"
}
#pragma pop

/* 80140338-80140550 13AC78 0218+00 3/3 0/0 0/0 .text            changeModelDataDirect__9daAlink_cFi
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::changeModelDataDirect(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/changeModelDataDirect__9daAlink_cFi.s"
}
#pragma pop

/* 80140550-801406A8 13AE90 0158+00 3/3 0/0 0/0 .text changeModelDataDirectWolf__9daAlink_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::changeModelDataDirectWolf(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/changeModelDataDirectWolf__9daAlink_cFi.s"
}
#pragma pop

/* 801406A8-80140888 13AFE8 01E0+00 0/0 1/1 0/0 .text            initStatusWindow__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::initStatusWindow() {
    nofralloc
#include "asm/d/a/d_a_alink/initStatusWindow__9daAlink_cFv.s"
}
#pragma pop

/* 80140888-80140984 13B1C8 00FC+00 0/0 1/1 0/0 .text statusWindowExecute__9daAlink_cFPC4cXyzs */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::statusWindowExecute(cXyz const* param_0, s16 param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/statusWindowExecute__9daAlink_cFPC4cXyzs.s"
}
#pragma pop

/* 80140984-80140AC8 13B2C4 0144+00 0/0 1/1 0/0 .text            statusWindowDraw__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::statusWindowDraw() {
    nofralloc
#include "asm/d/a/d_a_alink/statusWindowDraw__9daAlink_cFv.s"
}
#pragma pop

/* 80140AC8-80140B88 13B408 00C0+00 0/0 1/1 0/0 .text            resetStatusWindow__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlink_c::resetStatusWindow() {
    nofralloc
#include "asm/d/a/d_a_alink/resetStatusWindow__9daAlink_cFv.s"
}
#pragma pop

/* 80140B88-80140B98 13B4C8 0010+00 1/1 0/0 0/0 .text            __ct__12daAlinkHIO_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm daAlinkHIO_c::daAlinkHIO_c() {
    nofralloc
#include "asm/d/a/d_a_alink/__ct__12daAlinkHIO_cFv.s"
}
#pragma pop

/* 80140B98-80140BD4 13B4D8 003C+00 1/1 0/0 0/0 .text            __dt__17daAlinkHIO_wolf_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm daAlinkHIO_wolf_c::~daAlinkHIO_wolf_c() {
    nofralloc
#include "asm/d/a/d_a_alink/__dt__17daAlinkHIO_wolf_cFv.s"
}
#pragma pop

/* 80140BD4-80140C10 13B514 003C+00 1/1 0/0 0/0 .text            __dt__16daAlinkHIO_cut_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm daAlinkHIO_cut_c::~daAlinkHIO_cut_c() {
    nofralloc
#include "asm/d/a/d_a_alink/__dt__16daAlinkHIO_cut_cFv.s"
}
#pragma pop

/* 80140C10-80140C80 13B550 0070+00 1/0 0/0 0/0 .text            __dt__12daAlinkHIO_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm daAlinkHIO_c::~daAlinkHIO_c() {
    nofralloc
#include "asm/d/a/d_a_alink/__dt__12daAlinkHIO_cFv.s"
}
#pragma pop

/* 80140C80-80140CDC 13B5C0 005C+00 1/0 0/0 0/0 .text            __dt__8dEyeHL_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dEyeHL_c::~dEyeHL_c() {
    nofralloc
#include "asm/d/a/d_a_alink/__dt__8dEyeHL_cFv.s"
}
#pragma pop

/* 80140CDC-80140D24 13B61C 0048+00 0/0 1/0 0/0 .text            __dt__18daPy_sightPacket_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm daPy_sightPacket_c::~daPy_sightPacket_c() {
    nofralloc
#include "asm/d/a/d_a_alink/__dt__18daPy_sightPacket_cFv.s"
}
#pragma pop

/* 80140D24-80140D80 13B664 005C+00 3/2 0/0 0/0 .text            __dt__16daPy_frameCtrl_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// asm daPy_frameCtrl_c::~daPy_frameCtrl_c() {
extern "C" asm void __dt__16daPy_frameCtrl_cFv() {
    nofralloc
#include "asm/d/a/d_a_alink/__dt__16daPy_frameCtrl_cFv.s"
}
#pragma pop

/* 80140D80-80140DCC 13B6C0 004C+00 1/1 0/0 0/0 .text            __ct__16daPy_frameCtrl_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// asm daPy_frameCtrl_c::daPy_frameCtrl_c() {
extern "C" asm void __ct__16daPy_frameCtrl_cFv() {
    nofralloc
#include "asm/d/a/d_a_alink/__ct__16daPy_frameCtrl_cFv.s"
}
#pragma pop

/* 80140DCC-80140DF0 13B70C 0024+00 1/1 0/0 0/0 .text            __defctor__14daPy_anmHeap_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daPy_anmHeap_c::__defctor() {
    nofralloc
#include "asm/d/a/d_a_alink/__defctor__14daPy_anmHeap_cFv.s"
}
#pragma pop

/* 80140DF0-80140E2C 13B730 003C+00 2/2 0/0 0/0 .text            __dt__19mDoExt_AnmRatioPackFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm mDoExt_AnmRatioPack::~mDoExt_AnmRatioPack() {
    nofralloc
#include "asm/d/a/d_a_alink/__dt__19mDoExt_AnmRatioPackFv.s"
}
#pragma pop

/* 80140E2C-80140E40 13B76C 0014+00 1/1 0/0 0/0 .text            __ct__19mDoExt_AnmRatioPackFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm mDoExt_AnmRatioPack::mDoExt_AnmRatioPack() {
    nofralloc
#include "asm/d/a/d_a_alink/__ct__19mDoExt_AnmRatioPackFv.s"
}
#pragma pop

/* 80140E40-80140EB8 13B780 0078+00 4/3 0/0 0/0 .text            __dt__16dBgS_LinkRoofChkFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// asm dBgS_LinkRoofChk::~dBgS_LinkRoofChk() {
extern "C" asm void __dt__16dBgS_LinkRoofChkFv() {
    nofralloc
#include "asm/d/a/d_a_alink/__dt__16dBgS_LinkRoofChkFv.s"
}
#pragma pop

/* 80140EB8-80140F30 13B7F8 0078+00 4/3 0/0 0/0 .text            __dt__15dBgS_LinkGndChkFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// asm dBgS_LinkGndChk::~dBgS_LinkGndChk() {
extern "C" asm void __dt__15dBgS_LinkGndChkFv() {
    nofralloc
#include "asm/d/a/d_a_alink/__dt__15dBgS_LinkGndChkFv.s"
}
#pragma pop

/* 80140F30-80140FA0 13B870 0070+00 3/2 0/0 0/0 .text            __dt__13dBgS_LinkAcchFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// asm dBgS_LinkAcch::~dBgS_LinkAcch() {
extern "C" asm void __dt__13dBgS_LinkAcchFv() {
    nofralloc
#include "asm/d/a/d_a_alink/__dt__13dBgS_LinkAcchFv.s"
}
#pragma pop

/* 80140FA0-80141020 13B8E0 0080+00 1/1 0/0 0/0 .text            __ct__8dCcD_CpsFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// asm dCcD_Cps::dCcD_Cps() {
extern "C" asm void __ct__8dCcD_CpsFv() {
    nofralloc
#include "asm/d/a/d_a_alink/__ct__8dCcD_CpsFv.s"
}
#pragma pop

/* 80141020-801410A4 13B960 0084+00 1/1 0/0 0/0 .text            __ct__8dCcD_CylFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// asm dCcD_Cyl::dCcD_Cyl() {
extern "C" asm void __ct__8dCcD_CylFv() {
    nofralloc
#include "asm/d/a/d_a_alink/__ct__8dCcD_CylFv.s"
}
#pragma pop

/* 801410A4-801410EC 13B9E4 0048+00 0/0 1/0 0/0 .text            __dt__9cCcD_SttsFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// asm cCcD_Stts::~cCcD_Stts() {
extern "C" asm void __dt__9cCcD_SttsFv() {
    nofralloc
#include "asm/d/a/d_a_alink/__dt__9cCcD_SttsFv.s"
}
#pragma pop

/* 801410EC-8014111C 13BA2C 0030+00 1/1 0/0 0/0 .text            __ct__16daPy_actorKeep_cFv */
daPy_actorKeep_c::daPy_actorKeep_c() {
    clearData();
}

/* 8014111C-8014112C 13BA5C 0010+00 1/1 0/0 0/0 .text
 * onNoResetFlg2__9daPy_py_cFQ29daPy_py_c9daPy_FLG2             */
void daPy_py_c::onNoResetFlg2(daPy_FLG2 pFlag) {
    mNoResetFlg2 |= pFlag;
}

/* 8014112C-8014113C 13BA6C 0010+00 1/1 0/0 0/0 .text
 * offNoResetFlg0__9daPy_py_cFQ29daPy_py_c9daPy_FLG0            */
// weird regalloc
#ifdef NONMATCHING
void daPy_py_c::offNoResetFlg0(daPy_FLG0 pFlag) {
    mNoResetFlg0 &= ~pFlag;
}
#else
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daPy_py_c::offNoResetFlg0(daPy_py_c::daPy_FLG0 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/offNoResetFlg0__9daPy_py_cFQ29daPy_py_c9daPy_FLG0.s"
}
#pragma pop
#endif

/* 8014113C-80141190 13BA7C 0054+00 1/1 0/0 0/0 .text            mDoAud_seStartLevel__FUlPC3VecUlSc
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void mDoAud_seStartLevel(u32 param_0, Vec const* param_1, u32 param_2, s8 param_3) {
    nofralloc
#include "asm/d/a/d_a_alink/mDoAud_seStartLevel__FUlPC3VecUlSc.s"
}
#pragma pop

/* 80141190-8014119C 13BAD0 000C+00 1/1 0/0 0/0 .text
 * checkEndResetFlg2__9daPy_py_cCFQ29daPy_py_c11daPy_ERFLG2     */
int daPy_py_c::checkEndResetFlg2(daPy_ERFLG2 pFlag) const {
    return mEndResetFlg2 & pFlag;
}

/* 8014119C-801411B0 13BADC 0014+00 1/1 0/0 0/0 .text            dComIfGp_setBottleStatus__FUcUc */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void dComIfGp_setBottleStatus(u8 param_0, u8 param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/dComIfGp_setBottleStatus__FUcUc.s"
}
#pragma pop

/* 801411B0-801411D4 13BAF0 0024+00 1/1 0/0 0/0 .text            getSumouMode__9daPy_py_cCFv */
bool daPy_py_c::getSumouMode() const {
    return getSumouCameraMode();
}

/* 801411D4-801411E0 13BB14 000C+00 1/1 0/0 0/0 .text
 * checkNoResetFlg3__9daPy_py_cCFQ29daPy_py_c9daPy_FLG3         */
int daPy_py_c::checkNoResetFlg3(daPy_FLG3 pFlag) const {
    return mNoResetFlg3 & pFlag;
}

/* 801411E0-801411F0 13BB20 0010+00 1/1 0/0 0/0 .text            onCondition__11dEvt_info_cFUs */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dEvt_info_c::onCondition(u16 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/onCondition__11dEvt_info_cFUs.s"
}
#pragma pop

/* 801411F0-80141200 13BB30 0010+00 1/1 4/4 0/0 .text            __ct__8cM3dGPlaFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// asm cM3dGPla::cM3dGPla() {
extern "C" asm void __ct__8cM3dGPlaFv() {
    nofralloc
#include "asm/d/a/d_a_alink/__ct__8cM3dGPlaFv.s"
}
#pragma pop

/* 80141200-80141210 13BB40 0010+00 1/1 0/0 0/0 .text            offCondition__11dEvt_info_cFUs */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dEvt_info_c::offCondition(u16 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/offCondition__11dEvt_info_cFUs.s"
}
#pragma pop

/* 80141210-80141230 13BB50 0020+00 1/1 0/0 0/0 .text            checkShieldGet__9daPy_py_cFv */
BOOL daPy_py_c::checkShieldGet() {
    return dComIfGs_getSelectEquipShield() != NO_ITEM;
}

/* 80141230-80141264 13BB70 0034+00 1/1 0/0 0/0 .text            fopAcM_onSwitch__FPC10fopAc_ac_ci
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void fopAcM_onSwitch(fopAc_ac_c const* param_0, int param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/fopAcM_onSwitch__FPC10fopAc_ac_ci.s"
}
#pragma pop

/* 80141264-80141294 13BBA4 0030+00 1/1 0/0 0/0 .text            dComIfGs_isItemFirstBit__FUc */
int dComIfGs_isItemFirstBit(u8 i_no) {
    return g_dComIfG_gameInfo.info.getPlayer().getGetItem().isFirstBit(i_no);
}

/* 80141294-801412A0 13BBD4 000C+00 1/1 0/0 0/0 .text
 * dStage_stagInfo_GetSaveTbl__FP21stage_stag_info_class        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm u8 dStage_stagInfo_GetSaveTbl(stage_stag_info_class* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/dStage_stagInfo_GetSaveTbl__FP21stage_stag_info_class.s"
}
#pragma pop

/* 801412A0-801412B0 13BBE0 0010+00 1/1 0/0 0/0 .text            dComIfGp_getStage__Fv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void dComIfGp_getStage() {
    nofralloc
#include "asm/d/a/d_a_alink/dComIfGp_getStage__Fv.s"
}
#pragma pop

/* 801412B0-801412BC 13BBF0 000C+00 1/1 0/0 0/0 .text            checkEquipHeavyBoots__9daPy_py_cCFv
 */
BOOL daPy_py_c::checkEquipHeavyBoots() const {
    return i_checkNoResetFlg0(EQUIP_HEAVY_BOOTS);
}

/* 801412BC-801412C4 13BBFC 0008+00 1/1 4/4 0/0 .text            fopAcM_GetName__FPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void fopAcM_GetName(void* param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/fopAcM_GetName__FPv.s"
}
#pragma pop

/* 801412C4-801412D4 13BC04 0010+00 1/1 0/0 0/0 .text
 * onNoResetFlg0__9daPy_py_cFQ29daPy_py_c9daPy_FLG0             */
void daPy_py_c::onNoResetFlg0(daPy_FLG0 pFlag) {
    mNoResetFlg0 |= pFlag;
}

/* 801412D4-801412F8 13BC14 0024+00 1/1 0/0 0/0 .text            isOrderOK__14dEvt_control_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dEvt_control_c::isOrderOK() {
    nofralloc
#include "asm/d/a/d_a_alink/isOrderOK__14dEvt_control_cFv.s"
}
#pragma pop

/* 801412F8-80141308 13BC38 0010+00 1/1 0/0 0/0 .text            dComIfGp_getEvent__Fv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void dComIfGp_getEvent() {
    nofralloc
#include "asm/d/a/d_a_alink/dComIfGp_getEvent__Fv.s"
}
#pragma pop

/* 80141308-80141324 13BC48 001C+00 1/1 0/0 0/0 .text            dComIfGp_checkPlayerStatus0__FiUl
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void dComIfGp_checkPlayerStatus0(int param_0, u32 param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/dComIfGp_checkPlayerStatus0__FiUl.s"
}
#pragma pop

/* 80141324-80141340 13BC64 001C+00 1/1 0/0 0/0 .text            dComIfGp_checkPlayerStatus1__FiUl
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void dComIfGp_checkPlayerStatus1(int param_0, u32 param_1) {
    nofralloc
#include "asm/d/a/d_a_alink/dComIfGp_checkPlayerStatus1__FiUl.s"
}
#pragma pop

/* 80141340-8014134C 13BC80 000C+00 1/1 0/0 0/0 .text
 * checkEndResetFlg1__9daPy_py_cCFQ29daPy_py_c11daPy_ERFLG1     */
int daPy_py_c::checkEndResetFlg1(daPy_ERFLG1 pFlag) const {
    return mEndResetFlg1 & pFlag;
}

/* 8014134C-8014135C 13BC8C 0010+00 1/1 0/0 0/0 .text            dComIfGp_getEventManager__Fv */
static dEvent_manager_c& dComIfGp_getEventManager() {
    return g_dComIfG_gameInfo.play.getEvtManager();
}

/* 8014135C-8014136C 13BC9C 0010+00 1/1 0/0 0/0 .text
 * offNoResetFlg1__9daPy_py_cFQ29daPy_py_c9daPy_FLG1            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daPy_py_c::offNoResetFlg1(daPy_py_c::daPy_FLG1 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/offNoResetFlg1__9daPy_py_cFQ29daPy_py_c9daPy_FLG1.s"
}
#pragma pop

/* 8014136C-8014137C 13BCAC 0010+00 1/1 0/0 0/0 .text
 * offNoResetFlg2__9daPy_py_cFQ29daPy_py_c9daPy_FLG2            */
// regalloc
#ifdef NONMATCHING
void daPy_py_c::offNoResetFlg2(daPy_py_c::daPy_FLG2 param_0) {
    mNoResetFlg2 &= ~param_0;
}
#else
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daPy_py_c::offNoResetFlg2(daPy_py_c::daPy_FLG2 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/offNoResetFlg2__9daPy_py_cFQ29daPy_py_c9daPy_FLG2.s"
}
#pragma pop
#endif

/* 8014137C-80141388 13BCBC 000C+00 1/1 0/0 0/0 .text            setSpecialDemoType__11daPy_demo_cFv
 */
void daPy_demo_c::setSpecialDemoType() {
    setDemoType(5);
}

/* 80141388-8014139C 13BCC8 0014+00 1/1 0/0 0/0 .text            checkCommandCatch__11dEvt_info_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm bool dEvt_info_c::checkCommandCatch() {
    nofralloc
#include "asm/d/a/d_a_alink/checkCommandCatch__11dEvt_info_cFv.s"
}
#pragma pop

/* 8014139C-801413CC 13BCDC 0030+00 1/1 1/1 0/0 .text            dComIfGs_isEventBit__FUs */
BOOL dComIfGs_isEventBit(u16 id) {
    return g_dComIfG_gameInfo.info.getEvent().isEventBit(id);
}

/* 801413CC-801413D8 13BD0C 000C+00 1/1 0/0 0/0 .text            checkWolf__9daPy_py_cCFv */
int daPy_py_c::checkWolf() const {
    return i_checkNoResetFlg1(IS_WOLF);
}

/* 801413D8-801413F8 13BD18 0020+00 1/1 0/0 0/0 .text            checkSwordGet__9daPy_py_cFv */
BOOL daPy_py_c::checkSwordGet() {
    return dComIfGs_getSelectEquipSword() != 0xFF;
}

/* 801413F8-80141404 13BD38 000C+00 1/1 0/0 0/0 .text
 * checkResetFlg0__9daPy_py_cCFQ29daPy_py_c10daPy_RFLG0         */
int daPy_py_c::checkResetFlg0(daPy_RFLG0 pFlag) const {
    return mResetFlg0 & pFlag;
}

/* 80141404-80141410 13BD44 000C+00 1/1 0/0 0/0 .text            ChkGroundHit__9dBgS_AcchCFv */
bool dBgS_Acch::ChkGroundHit() const {
    return m_flags & GROUND_HIT;
}

/* 80141410-8014141C 13BD50 000C+00 1/1 0/0 0/0 .text
 * checkNoResetFlg0__9daPy_py_cCFQ29daPy_py_c9daPy_FLG0         */
int daPy_py_c::checkNoResetFlg0(daPy_FLG0 pFlag) const {
    return mNoResetFlg0 & pFlag;
}

/* 8014141C-80141438 13BD5C 001C+00 1/1 0/0 0/0 .text            dComIfGp_getPlayerCameraID__Fi */
#ifdef NONMATCHING
static s32 dComIfGp_getPlayerCameraID(int i) {
    return g_dComIfG_gameInfo.play.getPlayerCameraID(i);
}
#else
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void dComIfGp_getPlayerCameraID(int param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/dComIfGp_getPlayerCameraID__Fi.s"
}
#pragma pop
#endif

/* 80141438-80141450 13BD78 0018+00 1/1 0/0 0/0 .text            dComIfGp_event_chkEventFlag__FUs */
static u16 dComIfGp_event_chkEventFlag(u16 flag) {
    return g_dComIfG_gameInfo.play.getEvent().chkEventFlag(flag);
}

/* 80141450-80141464 13BD90 0014+00 1/1 0/0 0/0 .text            checkCommandDoor__11dEvt_info_cFv
 */
BOOL dEvt_info_c::checkCommandDoor() {
    return mCommand == 3;
}

/* 80141464-801414A4 13BDA4 0040+00 1/1 0/0 0/0 .text
 * dComIfGp_evmng_getMyStaffId__FPCcP10fopAc_ac_ci              */
static s32 dComIfGp_evmng_getMyStaffId(char const* param_0, fopAc_ac_c* param_1, int param_2) {
    return dComIfGp_getPEvtManager()->getMyStaffId(param_0, param_1, param_2);
}

/* 801414A4-801414C0 13BDE4 001C+00 1/1 0/0 0/0 .text            dComIfGp_event_runCheck__Fv */
static BOOL dComIfGp_event_runCheck() {
    return g_dComIfG_gameInfo.play.getEvent().runCheck();
}

/* 801414C0-801414CC 13BE00 000C+00 1/1 0/0 0/0 .text
 * checkNoResetFlg2__9daPy_py_cCFQ29daPy_py_c9daPy_FLG2         */
int daPy_py_c::checkNoResetFlg2(daPy_FLG2 pFlag) const {
    return mNoResetFlg2 & pFlag;
}

/* 801414CC-801414D8 13BE0C 000C+00 1/1 2/2 0/0 .text            checkMagneBootsOn__9daPy_py_cCFv */
int daPy_py_c::checkMagneBootsOn() const {
    return i_checkNoResetFlg0(MAGNE_BOOTS_ON);
}

/* 801414D8-801414E8 13BE18 0010+00 1/1 2/2 0/0 .text            dComIfGp_getHorseActor__Fv */
daHorse_c* dComIfGp_getHorseActor() {
    return (daHorse_c*)g_dComIfG_gameInfo.play.getPlayerPtr(1);
}

/* 801414E8-801414F4 13BE28 000C+00 1/1 0/0 0/0 .text checkBoarSingleBattle__9daPy_py_cCFv */
int daPy_py_c::checkBoarSingleBattle() const {
    return i_checkNoResetFlg2(BOAR_SINGLE_BATTLE);
}

/* 801414F4-80141500 13BE34 000C+00 1/1 0/0 0/0 .text
 * checkEndResetFlg0__9daPy_py_cCFQ29daPy_py_c11daPy_ERFLG0     */
int daPy_py_c::checkEndResetFlg0(daPy_ERFLG0 pFlag) const {
    return mEndResetFlg0 & pFlag;
}

/* 80141500-80141508 13BE40 0008+00 1/0 0/0 0/0 .text            getMidnaAtnPos__9daPy_py_cCFv */
extern "C" bool getMidnaAtnPos__9daPy_py_cCFv() {
    // bool daPy_py_c::getMidnaAtnPos() const {
    return false;
}

/* 80141508-8014150C 13BE48 0004+00 1/0 0/0 0/0 .text setMidnaMsgNum__9daPy_py_cFP10fopAc_ac_cUs
 */
void daPy_py_c::setMidnaMsgNum(fopAc_ac_c* param_0, u16 param_1) {
    /* empty function */
}

/* 8014150C-80141514 13BE4C 0008+00 1/0 0/0 0/0 .text            getModelMtx__9daPy_py_cFv */
MtxP daPy_py_c::getModelMtx() {
    return mCullMtx;
}

/* 80141514-8014151C 13BE54 0008+00 1/0 0/0 0/0 .text            getInvMtx__9daPy_py_cFv */
MtxP daPy_py_c::getInvMtx() {
    return mCullMtx;
}

/* 8014151C-80141524 13BE5C 0008+00 1/0 0/0 0/0 .text            getShadowTalkAtnPos__9daPy_py_cFv
 */
cXyz* daPy_py_c::getShadowTalkAtnPos() {
    return &mCurrent.mPosition;
}

/* 80141524-8014152C 13BE64 0008+00 1/0 0/0 0/0 .text            getLeftItemMatrix__9daPy_py_cFv */
MtxP daPy_py_c::getLeftItemMatrix() {
    return mCullMtx;
}

/* 8014152C-80141534 13BE6C 0008+00 1/0 0/0 0/0 .text            getRightItemMatrix__9daPy_py_cFv */
MtxP daPy_py_c::getRightItemMatrix() {
    return mCullMtx;
}

/* 80141534-8014153C 13BE74 0008+00 1/0 0/0 0/0 .text            getLeftHandMatrix__9daPy_py_cFv */
MtxP daPy_py_c::getLeftHandMatrix() {
    return mCullMtx;
}

/* 8014153C-80141544 13BE7C 0008+00 1/0 0/0 0/0 .text            getRightHandMatrix__9daPy_py_cFv */
MtxP daPy_py_c::getRightHandMatrix() {
    return mCullMtx;
}

/* 80141544-8014154C 13BE84 0008+00 1/0 0/0 0/0 .text getLinkBackBone1Matrix__9daPy_py_cFv */
MtxP daPy_py_c::getLinkBackBone1Matrix() {
    return mCullMtx;
}

/* 8014154C-80141554 13BE8C 0008+00 1/0 0/0 0/0 .text            getWolfMouthMatrix__9daPy_py_cFv */
MtxP daPy_py_c::getWolfMouthMatrix() {
    return mCullMtx;
}

/* 80141554-8014155C 13BE94 0008+00 1/0 0/0 0/0 .text getWolfBackbone2Matrix__9daPy_py_cFv */
MtxP daPy_py_c::getWolfBackbone2Matrix() {
    return mCullMtx;
}

/* 8014155C-80141564 13BE9C 0008+00 1/0 0/0 0/0 .text            getBottleMtx__9daPy_py_cFv */
MtxP daPy_py_c::getBottleMtx() {
    return NULL;
}

/* 80141564-8014156C 13BEA4 0008+00 1/0 0/0 0/0 .text            checkPlayerGuard__9daPy_py_cCFv */
BOOL daPy_py_c::checkPlayerGuard() const {
    return false;
}

/* 8014156C-80141574 13BEAC 0008+00 1/0 0/0 0/0 .text            checkAutoJump__9daPy_py_cCFv */
BOOL daPy_py_c::checkAutoJump() const {
    return false;
}

/* 80141574-8014157C 13BEB4 0008+00 1/0 0/0 0/0 .text            checkSideStep__9daPy_py_cCFv */
bool daPy_py_c::checkSideStep() const {
    return false;
}

/* 8014157C-80141584 13BEBC 0008+00 1/0 0/0 0/0 .text            checkWolfTriggerJump__9daPy_py_cCFv
 */
bool daPy_py_c::checkWolfTriggerJump() const {
    return false;
}

/* 80141584-8014158C 13BEC4 0008+00 1/0 0/0 0/0 .text            checkGuardBreakMode__9daPy_py_cCFv
 */
BOOL daPy_py_c::checkGuardBreakMode() const {
    return false;
}

/* 8014158C-80141594 13BECC 0008+00 1/0 0/0 0/0 .text            checkLv3Slide__9daPy_py_cCFv */
bool daPy_py_c::checkLv3Slide() const {
    return false;
}

/* 80141594-8014159C 13BED4 0008+00 1/0 0/0 0/0 .text checkWolfHowlDemoMode__9daPy_py_cCFv */
bool daPy_py_c::checkWolfHowlDemoMode() const {
    return false;
}

/* 8014159C-801415A4 13BEDC 0008+00 1/0 0/0 0/0 .text checkChainBlockPushPull__9daPy_py_cFv */
bool daPy_py_c::checkChainBlockPushPull() {
    return false;
}

/* 801415A4-801415AC 13BEE4 0008+00 1/0 0/0 0/0 .text            checkElecDamage__9daPy_py_cCFv */
BOOL daPy_py_c::checkElecDamage() const {
    return false;
}

/* 801415AC-801415B4 13BEEC 0008+00 1/0 0/0 0/0 .text checkEmptyBottleSwing__9daPy_py_cCFv */
BOOL daPy_py_c::checkEmptyBottleSwing() const {
    return false;
}

/* 801415B4-801415BC 13BEF4 0008+00 1/0 0/0 0/0 .text            checkBottleSwingMode__9daPy_py_cCFv
 */
BOOL daPy_py_c::checkBottleSwingMode() const {
    return false;
}

/* 801415BC-801415C4 13BEFC 0008+00 1/0 0/0 0/0 .text            checkHawkWait__9daPy_py_cCFv */
BOOL daPy_py_c::checkHawkWait() const {
    return false;
}

/* 801415C4-801415CC 13BF04 0008+00 1/0 0/0 0/0 .text            checkGoatThrow__9daPy_py_cCFv */
BOOL daPy_py_c::checkGoatThrow() const {
    return false;
}

/* 801415CC-801415D4 13BF0C 0008+00 1/0 0/0 0/0 .text            checkGoatThrowAfter__9daPy_py_cCFv
 */
BOOL daPy_py_c::checkGoatThrowAfter() const {
    return false;
}

/* 801415D4-801415DC 13BF14 0008+00 1/0 0/0 0/0 .text            checkWolfTagLockJump__9daPy_py_cCFv
 */
BOOL daPy_py_c::checkWolfTagLockJump() const {
    return false;
}

/* 801415DC-801415E4 13BF1C 0008+00 1/0 0/0 0/0 .text checkWolfTagLockJumpLand__9daPy_py_cCFv */
BOOL daPy_py_c::checkWolfTagLockJumpLand() const {
    return false;
}

/* 801415E4-801415EC 13BF24 0008+00 1/0 0/0 0/0 .text            checkWolfRope__9daPy_py_cFv */
bool daPy_py_c::checkWolfRope() {
    return false;
}

/* 801415EC-801415F4 13BF2C 0008+00 1/0 0/0 0/0 .text            checkWolfRopeHang__9daPy_py_cCFv */
BOOL daPy_py_c::checkWolfRopeHang() const {
    return false;
}

/* 801415F4-801415FC 13BF34 0008+00 1/0 0/0 0/0 .text            checkRollJump__9daPy_py_cCFv */
BOOL daPy_py_c::checkRollJump() const {
    return false;
}

/* 801415FC-80141604 13BF3C 0008+00 1/0 0/0 0/0 .text            checkGoronRideWait__9daPy_py_cCFv
 */
BOOL daPy_py_c::checkGoronRideWait() const {
    return false;
}

/* 80141604-8014160C 13BF44 0008+00 1/0 0/0 0/0 .text            checkWolfChain__9daPy_py_cCFv */
BOOL daPy_py_c::checkWolfChain() const {
    return false;
}

/* 8014160C-80141614 13BF4C 0008+00 1/0 0/0 0/0 .text            checkWolfWait__9daPy_py_cCFv */
BOOL daPy_py_c::checkWolfWait() const {
    return false;
}

/* 80141614-8014161C 13BF54 0008+00 1/0 0/0 0/0 .text            checkWolfJumpAttack__9daPy_py_cCFv
 */
BOOL daPy_py_c::checkWolfJumpAttack() const {
    return false;
}

/* 8014161C-80141624 13BF5C 0008+00 1/0 0/0 0/0 .text            checkWolfRSit__9daPy_py_cCFv */
BOOL daPy_py_c::checkWolfRSit() const {
    return false;
}

/* 80141624-8014162C 13BF64 0008+00 2/0 0/0 0/0 .text            checkBubbleFly__9daPy_py_cCFv */
bool daPy_py_c::checkBubbleFly() const {
    return false;
}

/* 8014162C-80141634 13BF6C 0008+00 1/0 0/0 0/0 .text            checkBottleDrinkEnd__9daPy_py_cCFv
 */
BOOL daPy_py_c::checkBottleDrinkEnd() const {
    return false;
}

/* 80141634-8014163C 13BF74 0008+00 1/0 0/0 0/0 .text            checkWolfDig__9daPy_py_cCFv */
BOOL daPy_py_c::checkWolfDig() const {
    return false;
}

/* 8014163C-80141644 13BF7C 0008+00 1/0 0/0 0/0 .text            checkCutCharge__9daPy_py_cCFv */
BOOL daPy_py_c::checkCutCharge() const {
    return false;
}

/* 80141644-8014164C 13BF84 0008+00 1/0 0/0 0/0 .text            checkCutTurnCharge__9daPy_py_cCFv
 */
BOOL daPy_py_c::checkCutTurnCharge() const {
    return false;
}

/* 8014164C-80141654 13BF8C 0008+00 1/0 0/0 0/0 .text checkCutLargeJumpCharge__9daPy_py_cCFv */
BOOL daPy_py_c::checkCutLargeJumpCharge() const {
    return false;
}

/* 80141654-8014165C 13BF94 0008+00 2/0 0/0 0/0 .text            getBokoFlamePos__9daPy_py_cFP4cXyz
 */
bool daPy_py_c::getBokoFlamePos(cXyz* param_0) {
    return false;
}

/* 8014165C-80141664 13BF9C 0008+00 1/0 0/0 0/0 .text            checkComboCutTurn__9daPy_py_cCFv */
BOOL daPy_py_c::checkComboCutTurn() const {
    return false;
}

/* 80141664-8014166C 13BFA4 0008+00 1/0 0/0 0/0 .text            checkClimbMove__9daPy_py_cCFv */
BOOL daPy_py_c::checkClimbMove() const {
    return false;
}

/* 8014166C-80141674 13BFAC 0008+00 1/0 0/0 0/0 .text            checkGrassWhistle__9daPy_py_cCFv */
BOOL daPy_py_c::checkGrassWhistle() const {
    return false;
}

/* 80141674-8014167C 13BFB4 0008+00 1/0 0/0 0/0 .text            checkBoarRun__9daPy_py_cCFv */
BOOL daPy_py_c::checkBoarRun() const {
    return false;
}

/* 8014167C-80141684 13BFBC 0008+00 2/0 0/0 0/0 .text            checkFmChainPut__9daPy_py_cCFv */
bool daPy_py_c::checkFmChainPut() const {
    return false;
}

/* 80141684-8014168C 13BFC4 0008+00 2/0 0/0 0/0 .text            checkHorseElecDamage__9daPy_py_cCFv
 */
bool daPy_py_c::checkHorseElecDamage() const {
    return false;
}

/* 8014168C-80141694 13BFCC 0008+00 1/0 0/0 0/0 .text getBaseAnimeFrameRate__9daPy_py_cCFv */
float daPy_py_c::getBaseAnimeFrameRate() const {
    return lit_6040;
}

/* 80141694-8014169C 13BFD4 0008+00 1/0 0/0 0/0 .text            getBaseAnimeFrame__9daPy_py_cCFv */
f32 daPy_py_c::getBaseAnimeFrame() const {
    return FLOAT_LABEL(lit_6108);
}

/* 8014169C-801416A0 13BFDC 0004+00 1/0 0/0 0/0 .text            setAnimeFrame__9daPy_py_cFf */
void daPy_py_c::setAnimeFrame(f32 param_0) {
    /* empty function */
}

/* 801416A0-801416A8 13BFE0 0008+00 1/0 0/0 0/0 .text checkWolfLock__9daPy_py_cCFP10fopAc_ac_c */
bool daPy_py_c::checkWolfLock(fopAc_ac_c* param_0) const {
    return false;
}

/* 801416A8-801416B0 13BFE8 0008+00 1/0 0/0 0/0 .text cancelWolfLock__9daPy_py_cFP10fopAc_ac_c */
bool daPy_py_c::cancelWolfLock(fopAc_ac_c* param_0) {
    return false;
}

/* 801416B0-801416B8 13BFF0 0008+00 1/0 0/0 0/0 .text            getItemID__9daPy_py_cCFv */
s32 daPy_py_c::getItemID() const {
    return -1;
}

/* 801416B8-801416C0 13BFF8 0008+00 1/0 0/0 0/0 .text exchangeGrabActor__9daPy_py_cFP10fopAc_ac_c
 */
bool daPy_py_c::exchangeGrabActor(fopAc_ac_c* param_0) {
    return false;
}

/* 801416C0-801416C8 13C000 0008+00 1/0 0/0 0/0 .text setForceGrab__9daPy_py_cFP10fopAc_ac_cii */
bool daPy_py_c::setForceGrab(fopAc_ac_c* param_0, int param_1, int param_2) {
    return false;
}

/* 801416C8-801416CC 13C008 0004+00 1/0 0/0 0/0 .text            setForcePutPos__9daPy_py_cFRC4cXyz
 */
void daPy_py_c::setForcePutPos(cXyz const& param_0) {
    /* empty function */
}

/* 801416CC-801416D4 13C00C 0008+00 1/0 0/0 0/0 .text            checkPlayerNoDraw__9daPy_py_cFv */
bool daPy_py_c::checkPlayerNoDraw() {
    return false;
}

/* 801416D4-801416DC 13C014 0008+00 2/0 0/0 0/0 .text            checkRopeTag__9daPy_py_cFv */
bool daPy_py_c::checkRopeTag() {
    return false;
}

/* 801416DC-801416E0 13C01C 0004+00 1/0 0/0 0/0 .text            voiceStart__9daPy_py_cFUl */
void daPy_py_c::voiceStart(u32 param_0) {
    /* empty function */
}

/* 801416E0-801416E4 13C020 0004+00 1/0 0/0 0/0 .text            seStartOnlyReverb__9daPy_py_cFUl */
void daPy_py_c::seStartOnlyReverb(u32 param_0) {
    /* empty function */
}

/* 801416E4-801416E8 13C024 0004+00 1/0 0/0 0/0 .text seStartOnlyReverbLevel__9daPy_py_cFUl */
void daPy_py_c::seStartOnlyReverbLevel(u32 param_0) {
    /* empty function */
}

/* 801416E8-801416EC 13C028 0004+00 1/0 0/0 0/0 .text            setOutPower__9daPy_py_cFfsi */
void daPy_py_c::setOutPower(f32 param_0, s16 param_1, int param_2) {
    /* empty function */
}

/* 801416EC-801416F0 13C02C 0004+00 1/0 0/0 0/0 .text
 * setGrabCollisionOffset__9daPy_py_cFffP13cBgS_PolyInfo        */
void daPy_py_c::setGrabCollisionOffset(f32 param_0, f32 param_1, cBgS_PolyInfo* param_2) {
    /* empty function */
}

/* 801416F0-801416F4 13C030 0004+00 2/0 0/0 0/0 .text            onMagneGrab__9daPy_py_cFff */
void daPy_py_c::onMagneGrab(f32 param_0, f32 param_1) {
    /* empty function */
}

/* 801416F4-801416FC 13C034 0008+00 1/0 0/0 0/0 .text            getModelJointMtx__9daPy_py_cFUs */
MtxP daPy_py_c::getModelJointMtx(u16 param_0) {
    return NULL;
}

/* 801416FC-80141704 13C03C 0008+00 1/0 0/0 0/0 .text            getHeadMtx__9daPy_py_cFv */
MtxP daPy_py_c::getHeadMtx() {
    return NULL;
}

/* 80141704-8014170C 13C044 0008+00 1/0 0/0 0/0 .text setHookshotCarryOffset__9daPy_py_cFUiPC4cXyz
 */
bool daPy_py_c::setHookshotCarryOffset(unsigned int param_0, cXyz const* param_1) {
    return false;
}

/* 8014170C-80141714 13C04C 0008+00 1/0 0/0 0/0 .text            checkIronBallReturn__9daPy_py_cCFv
 */
bool daPy_py_c::checkIronBallReturn() const {
    return false;
}

/* 80141714-8014171C 13C054 0008+00 1/0 0/0 0/0 .text checkIronBallGroundStop__9daPy_py_cCFv */
bool daPy_py_c::checkIronBallGroundStop() const {
    return false;
}

/* 8014171C-80141724 13C05C 0008+00 1/0 0/0 0/0 .text
 * checkSingleBoarBattleSecondBowReady__9daPy_py_cCFv           */
BOOL daPy_py_c::checkSingleBoarBattleSecondBowReady() const {
    return false;
}

/* 80141724-8014172C 13C064 0008+00 2/0 0/0 0/0 .text checkPointSubWindowMode__9daPy_py_cCFv */
bool daPy_py_c::checkPointSubWindowMode() const {
    return false;
}

/* 8014172C-80141730 13C06C 0004+00 1/0 0/0 0/0 .text            setClothesChange__9daPy_py_cFi */
void daPy_py_c::setClothesChange(int param_0) {
    /* empty function */
}

/* 80141730-80141734 13C070 0004+00 1/0 0/0 0/0 .text setPlayerPosAndAngle__9daPy_py_cFPA4_f */
void daPy_py_c::setPlayerPosAndAngle(f32 (*param_0)[4]) {
    /* empty function */
}

/* 80141734-80141738 13C074 0004+00 1/0 0/0 0/0 .text
 * setPlayerPosAndAngle__9daPy_py_cFPC4cXyzPC5csXyz             */
void daPy_py_c::setPlayerPosAndAngle(cXyz const* param_0, csXyz const* param_1) {
    /* empty function */
}

/* 80141738-8014173C 13C078 0004+00 1/0 0/0 0/0 .text setPlayerPosAndAngle__9daPy_py_cFPC4cXyzsi
 */
void daPy_py_c::setPlayerPosAndAngle(cXyz const* param_0, s16 param_1, int param_2) {
    /* empty function */
}

/* 8014173C-80141744 13C07C 0008+00 1/0 0/0 0/0 .text            setThrowDamage__9daPy_py_cFsffiii
 */
bool daPy_py_c::setThrowDamage(s16 param_0, f32 param_1, f32 param_2, int param_3, int param_4,
                               int param_5) {
    return false;
}

/* 80141744-8014174C 13C084 0008+00 1/0 0/0 0/0 .text            checkSetNpcTks__9daPy_py_cFP4cXyzii
 */
bool daPy_py_c::checkSetNpcTks(cXyz* param_0, int param_1, int param_2) {
    return false;
}

/* 8014174C-80141754 13C08C 0008+00 1/0 0/0 0/0 .text            setRollJump__9daPy_py_cFffs */
bool daPy_py_c::setRollJump(f32 param_0, f32 param_1, s16 param_2) {
    return false;
}

/* 80141754-80141758 13C094 0004+00 1/0 0/0 0/0 .text playerStartCollisionSE__9daPy_py_cFUlUl */
void daPy_py_c::playerStartCollisionSE(u32 param_0, u32 param_1) {
    /* empty function */
}

/* 80141758-8014175C 13C098 0004+00 2/0 0/0 0/0 .text changeTextureAnime__9daPy_py_cFUsUsi */
void daPy_py_c::changeTextureAnime(u16 param_0, u16 param_1, int param_2) {
    /* empty function */
}

/* 8014175C-80141760 13C09C 0004+00 2/0 0/0 0/0 .text cancelChangeTextureAnime__9daPy_py_cFv */
void daPy_py_c::cancelChangeTextureAnime() {
    /* empty function */
}

/* 80141760-80141764 13C0A0 0004+00 1/0 0/0 0/0 .text cancelDungeonWarpReadyNeck__9daPy_py_cFv */
void daPy_py_c::cancelDungeonWarpReadyNeck() {
    /* empty function */
}

/* 80141764-80141768 13C0A4 0004+00 1/0 0/0 0/0 .text
 * onSceneChangeArea__9daPy_py_cFUcUcP10fopAc_ac_c              */
void daPy_py_c::onSceneChangeArea(u8 param_0, u8 param_1, fopAc_ac_c* param_2) {
    /* empty function */
}

/* 80141768-8014176C 13C0A8 0004+00 1/0 0/0 0/0 .text
 * onSceneChangeAreaJump__9daPy_py_cFUcUcP10fopAc_ac_c          */
void daPy_py_c::onSceneChangeAreaJump(u8 param_0, u8 param_1, fopAc_ac_c* param_2) {
    /* empty function */
}

/* 8014176C-80141770 13C0AC 0004+00 1/0 0/0 0/0 .text            onSceneChangeDead__9daPy_py_cFUci
 */
void daPy_py_c::onSceneChangeDead(u8 param_0, int param_1) {
    /* empty function */
}

/* 80141770-80141778 13C0B0 0008+00 1/0 0/0 0/0 .text            getSpinnerActor__9daPy_py_cFv */
fopAc_ac_c* daPy_py_c::getSpinnerActor() {
    return NULL;
}

/* 80141778-80141780 13C0B8 0008+00 1/0 0/0 0/0 .text checkHorseRideNotReady__9daPy_py_cCFv */
BOOL daPy_py_c::checkHorseRideNotReady() const {
    return false;
}

/* 80141780-80141788 13C0C0 0008+00 1/0 0/0 0/0 .text            checkArrowChargeEnd__9daPy_py_cCFv
 */
bool daPy_py_c::checkArrowChargeEnd() const {
    return false;
}

/* 80141788-80141790 13C0C8 0008+00 1/0 0/0 0/0 .text            getSearchBallScale__9daPy_py_cCFv
 */
f32 daPy_py_c::getSearchBallScale() const {
    return FLOAT_LABEL(lit_6108);
}

/* 80141790-80141798 13C0D0 0008+00 1/0 0/0 0/0 .text            checkFastShotTime__9daPy_py_cFv */
s16 daPy_py_c::checkFastShotTime() {
    return 0;
}

/* 80141798-801417A0 13C0D8 0008+00 1/0 0/0 0/0 .text            checkNoEquipItem__9daPy_py_cCFv */
bool daPy_py_c::checkNoEquipItem() const {
    return true;
}

/* 801417A0-801417A8 13C0E0 0008+00 2/0 0/0 0/0 .text            checkFireMaterial__9daPy_py_cCFv */
bool daPy_py_c::checkFireMaterial() const {
    return false;
}

/* 801417A8-801417B0 13C0E8 0008+00 1/0 0/0 0/0 .text            checkKandelaarSwing__9daPy_py_cCFi
 */
bool daPy_py_c::checkKandelaarSwing(int param_0) const {
    return false;
}

/* 801417B0-801417B8 13C0F0 0008+00 1/0 0/0 0/0 .text getBoardCutTurnOffsetAngleY__9daPy_py_cCFv
 */
s16 daPy_py_c::getBoardCutTurnOffsetAngleY() const {
    return 0;
}

/* 801417B8-801417C0 13C0F8 0008+00 2/0 0/0 0/0 .text            getMagneHitPos__9daPy_py_cFv */
cXyz* daPy_py_c::getMagneHitPos() {
    return &mSwordTopPos;
}

/* 801417C0-801417C8 13C100 0008+00 1/0 0/0 0/0 .text            getMagneBootsTopVec__9daPy_py_cFv
 */
cXyz* daPy_py_c::getMagneBootsTopVec() {
    return &mCurrent.mPosition;
}

/* 801417C8-801417D0 13C108 0008+00 1/0 0/0 0/0 .text            checkUseKandelaar__9daPy_py_cFi */
bool daPy_py_c::checkUseKandelaar(int param_0) {
    return false;
}

/* 801417D0-801417D4 13C110 0004+00 1/0 0/0 0/0 .text setDkCaught__9daPy_py_cFP10fopAc_ac_c */
void daPy_py_c::setDkCaught(fopAc_ac_c* param_0) {
    /* empty function */
}

/* 801417D4-801417D8 13C114 0004+00 1/0 0/0 0/0 .text onPressedDamage__9daPy_py_cFRC4cXyzs */
void daPy_py_c::onPressedDamage(cXyz const& param_0, s16 param_1) {
    /* empty function */
}

/* 801417D8-801417E0 13C118 0008+00 1/0 0/0 0/0 .text checkPriActorOwn__9daPy_py_cCFPC10fopAc_ac_c
 */
bool daPy_py_c::checkPriActorOwn(fopAc_ac_c const* param_0) const {
    return false;
}

/* 801417E0-801417E8 13C120 0008+00 1/0 0/0 0/0 .text
 * onWolfEnemyBiteAll__9daPy_py_cFP10fopAc_ac_cQ29daPy_py_c9daPy_FLG2 */
bool daPy_py_c::onWolfEnemyBiteAll(fopAc_ac_c* param_0, daPy_py_c::daPy_FLG2 param_1) {
    return false;
}

/* 801417E8-801417F0 13C128 0008+00 1/0 0/0 0/0 .text
 * checkWolfEnemyBiteAllOwn__9daPy_py_cCFPC10fopAc_ac_c         */
bool daPy_py_c::checkWolfEnemyBiteAllOwn(fopAc_ac_c const* param_0) const {
    return false;
}

/* 801417F0-801417F4 13C130 0004+00 1/0 0/0 0/0 .text setWolfEnemyHangBiteAngle__9daPy_py_cFs */
void daPy_py_c::setWolfEnemyHangBiteAngle(s16 param_0) {
    /* empty function */
}

/* 801417F4-801417F8 13C134 0004+00 1/0 0/0 0/0 .text            setKandelaarMtx__9daPy_py_cFPA4_fii
 */
void daPy_py_c::setKandelaarMtx(f32 (*param_0)[4], int param_1, int param_2) {
    /* empty function */
}

/* 801417F8-80141800 13C138 0008+00 1/0 0/0 0/0 .text getStickAngleFromPlayerShape__9daPy_py_cCFPs
 */
bool daPy_py_c::getStickAngleFromPlayerShape(s16* param_0) const {
    return false;
}

/* 80141800-80141808 13C140 0008+00 1/0 0/0 0/0 .text            checkSpinnerPathMove__9daPy_py_cFv
 */
bool daPy_py_c::checkSpinnerPathMove() {
    return false;
}

/* 80141808-80141810 13C148 0008+00 1/0 0/0 0/0 .text checkSpinnerTriggerAttack__9daPy_py_cFv */
bool daPy_py_c::checkSpinnerTriggerAttack() {
    return false;
}

/* 80141810-80141814 13C150 0004+00 1/0 0/0 0/0 .text onSpinnerPathForceRemove__9daPy_py_cFv */
void daPy_py_c::onSpinnerPathForceRemove() {
    /* empty function */
}

/* 80141814-8014181C 13C154 0008+00 1/0 0/0 0/0 .text            getIronBallBgHit__9daPy_py_cCFv */
bool daPy_py_c::getIronBallBgHit() const {
    return false;
}

/* 8014181C-80141824 13C15C 0008+00 1/0 0/0 0/0 .text            getIronBallCenterPos__9daPy_py_cFv
 */
bool daPy_py_c::getIronBallCenterPos() {
    return false;
}

/* 80141824-8014182C 13C164 0008+00 1/0 0/0 0/0 .text checkCanoeFishingGetLeft__9daPy_py_cCFv */
bool daPy_py_c::checkCanoeFishingGetLeft() const {
    return false;
}

/* 8014182C-80141834 13C16C 0008+00 1/0 0/0 0/0 .text checkCanoeFishingGetRight__9daPy_py_cCFv */
bool daPy_py_c::checkCanoeFishingGetRight() const {
    return false;
}

/* 80141834-8014183C 13C174 0008+00 1/0 0/0 0/0 .text            checkBeeChildDrink__9daPy_py_cCFv
 */
u8 daPy_py_c::checkBeeChildDrink() const {
    return false;
}

/* 8014183C-80141840 13C17C 0004+00 1/0 0/0 0/0 .text            skipPortalObjWarp__9daPy_py_cFv */
void daPy_py_c::skipPortalObjWarp() {
    /* empty function */
}

/* 80141840-80141848 13C180 0008+00 1/0 0/0 0/0 .text checkTreasureRupeeReturn__9daPy_py_cCFi */
bool daPy_py_c::checkTreasureRupeeReturn(int param_0) const {
    return false;
}

/* 80141848-8014184C 13C188 0004+00 1/0 0/0 0/0 .text setSumouReady__9daPy_py_cFP10fopAc_ac_c */
void daPy_py_c::setSumouReady(fopAc_ac_c* param_0) {
    /* empty function */
}

/* 8014184C-80141854 13C18C 0008+00 1/0 0/0 0/0 .text checkAcceptDungeonWarpAlink__9daPy_py_cFi */
bool daPy_py_c::checkAcceptDungeonWarpAlink(int param_0) {
    return false;
}

/* 80141854-8014185C 13C194 0008+00 1/0 0/0 0/0 .text            getSumouCounter__9daPy_py_cCFv */
s16 daPy_py_c::getSumouCounter() const {
    return 0;
}

/* 8014185C-80141864 13C19C 0008+00 1/0 0/0 0/0 .text            checkSumouWithstand__9daPy_py_cCFv
 */
s16 daPy_py_c::checkSumouWithstand() const {
    return 0;
}

/* 80141864-80141868 13C1A4 0004+00 1/0 0/0 0/0 .text            cancelGoronThrowEvent__9daPy_py_cFv
 */
void daPy_py_c::cancelGoronThrowEvent() {
    /* empty function */
}

/* 80141868-8014186C 13C1A8 0004+00 1/0 0/0 0/0 .text setSumouGraspCancelCount__9daPy_py_cFi */
void daPy_py_c::setSumouGraspCancelCount(int param_0) {
    /* empty function */
}

/* 8014186C-80141870 13C1AC 0004+00 1/0 0/0 0/0 .text setSumouPushBackDirection__9daPy_py_cFs */
void daPy_py_c::setSumouPushBackDirection(s16 param_0) {
    /* empty function */
}

/* 80141870-80141874 13C1B0 0004+00 1/0 0/0 0/0 .text            setSumouLoseHeadUp__9daPy_py_cFv */
void daPy_py_c::setSumouLoseHeadUp() {
    /* empty function */
}

/* 80141874-8014187C 13C1B4 0008+00 1/0 0/0 0/0 .text getGiantPuzzleAimAngle__9daPy_py_cCFv */
s16 daPy_py_c::getGiantPuzzleAimAngle() const {
    return mCollisionRot.y;
}

/* 8014187C-80141880 13C1BC 0004+00 1/0 0/0 0/0 .text setGoronSideMove__9daPy_py_cFP10fopAc_ac_c
 */
void daPy_py_c::setGoronSideMove(fopAc_ac_c* param_0) {
    /* empty function */
}

/* 80141880-80141884 13C1C0 0004+00 1/0 0/0 0/0 .text setCargoCarry__9daPy_py_cFP10fopAc_ac_c */
void daPy_py_c::setCargoCarry(fopAc_ac_c* param_0) {
    /* empty function */
}

/* 80141884-8014188C 13C1C4 0008+00 2/0 0/0 0/0 .text            getDpdFarFlg__9daPy_py_cCFv */
bool daPy_py_c::getDpdFarFlg() const {
    return false;
}

/* 8014188C-80141894 13C1CC 0008+00 1/0 0/0 0/0 .text            getHookshotTopPos__9daPy_py_cFv */
bool daPy_py_c::getHookshotTopPos() {
    return false;
}

/* 80141894-8014189C 13C1D4 0008+00 1/0 0/0 0/0 .text checkHookshotReturnMode__9daPy_py_cCFv */
bool daPy_py_c::checkHookshotReturnMode() const {
    return false;
}

/* 8014189C-801418A4 13C1DC 0008+00 1/0 0/0 0/0 .text checkHookshotShootReturnMode__9daPy_py_cCFv
 */
bool daPy_py_c::checkHookshotShootReturnMode() const {
    return false;
}

/* 801418A4-801418AC 13C1E4 0008+00 1/0 0/0 0/0 .text            checkOctaIealHang__9daPy_py_cCFv */
bool daPy_py_c::checkOctaIealHang() const {
    return false;
}

/* 801418AC-801418B0 13C1EC 0004+00 1/0 0/0 0/0 .text            cancelOctaIealHang__9daPy_py_cFv */
void daPy_py_c::cancelOctaIealHang() {
    /* empty function */
}

/* 801418B0-801418B4 13C1F0 0004+00 1/0 0/0 0/0 .text cancelDragonHangBackJump__9daPy_py_cFv */
void daPy_py_c::cancelDragonHangBackJump() {
    /* empty function */
}

/* 801418B4-801418B8 13C1F4 0004+00 1/0 0/0 0/0 .text            setOctaIealWildHang__9daPy_py_cFv
 */
void daPy_py_c::setOctaIealWildHang() {
    /* empty function */
}

/* 801418B8-801418C0 13C1F8 0008+00 1/0 0/0 0/0 .text            checkDragonHangRide__9daPy_py_cCFv
 */
bool daPy_py_c::checkDragonHangRide() const {
    return false;
}

/* 801418C0-801418C4 13C200 0004+00 1/0 0/0 0/0 .text changeDragonActor__9daPy_py_cFP10fopAc_ac_c
 */
void daPy_py_c::changeDragonActor(fopAc_ac_c* param_0) {
    /* empty function */
}

/* 801418C4-801418CC 13C204 0008+00 1/0 0/0 0/0 .text getClothesChangeWaitTimer__9daPy_py_cCFv */
u8 daPy_py_c::getClothesChangeWaitTimer() const {
    return 0;
}

/* 801418CC-801418D4 13C20C 0008+00 1/0 0/0 0/0 .text getShieldChangeWaitTimer__9daPy_py_cCFv */
u8 daPy_py_c::getShieldChangeWaitTimer() const {
    return 0;
}

/* 801418D4-801418DC 13C214 0008+00 1/0 0/0 0/0 .text getSwordChangeWaitTimer__9daPy_py_cCFv */
u8 daPy_py_c::getSwordChangeWaitTimer() const {
    return 0;
}

/* 801418DC-801418E4 13C21C 0008+00 1/0 0/0 0/0 .text            checkMetamorphose__9daPy_py_cCFv */
BOOL daPy_py_c::checkMetamorphose() const {
    return false;
}

/* 801418E4-801418EC 13C224 0008+00 1/0 0/0 0/0 .text checkWolfDownAttackPullOut__9daPy_py_cCFv */
BOOL daPy_py_c::checkWolfDownAttackPullOut() const {
    return false;
}

/* 801418EC-801418F4 13C22C 0008+00 1/0 0/0 0/0 .text checkBootsOrArmorHeavy__9daPy_py_cCFv */
BOOL daPy_py_c::checkBootsOrArmorHeavy() const {
    return false;
}

/* 801418F4-801418FC 13C234 0008+00 1/0 0/0 0/0 .text getBottleOpenAppearItem__9daPy_py_cCFv */
s32 daPy_py_c::getBottleOpenAppearItem() const {
    return -1;
}

/* 801418FC-80141904 13C23C 0008+00 1/0 0/0 0/0 .text            checkItemSwordEquip__9daPy_py_cCFv
 */
bool daPy_py_c::checkItemSwordEquip() const {
    return false;
}

/* 80141904-8014190C 13C244 0008+00 1/0 0/0 0/0 .text            getSinkShapeOffset__9daPy_py_cCFv
 */
f32 daPy_py_c::getSinkShapeOffset() const {
    return FLOAT_LABEL(lit_6108);
}

/* 8014190C-80141914 13C24C 0008+00 1/0 0/0 0/0 .text            checkSinkDead__9daPy_py_cCFv */
BOOL daPy_py_c::checkSinkDead() const {
    return false;
}

/* 80141914-8014191C 13C254 0008+00 1/0 0/0 0/0 .text            checkHorseStart__9daPy_py_cFv */
BOOL daPy_py_c::checkHorseStart() {
    return false;
}

/* 8014191C-80141924 13C25C 0008+00 1/0 0/0 0/0 .text            getWolfHowlMgrP__9daPy_py_cFv */
Z2WolfHowlMgr* daPy_py_c::getWolfHowlMgrP() {
    return NULL;
}

/* 80141924-8014192C 13C264 0008+00 1/0 0/0 0/0 .text checkWolfHowlSuccessAnime__9daPy_py_cCFv */
BOOL daPy_py_c::checkWolfHowlSuccessAnime() const {
    return false;
}

/* 8014192C-80141934 13C26C 0008+00 1/0 0/0 0/0 .text            checkCopyRodTopUse__9daPy_py_cFv */
BOOL daPy_py_c::checkCopyRodTopUse() {
    return false;
}

/* 80141934-8014193C 13C274 0008+00 1/0 0/0 0/0 .text            checkCopyRodEquip__9daPy_py_cCFv */
bool daPy_py_c::checkCopyRodEquip() const {
    return false;
}

/* 8014193C-80141944 13C27C 0008+00 1/0 0/0 0/0 .text            checkCutJumpMode__9daPy_py_cCFv */
BOOL daPy_py_c::checkCutJumpMode() const {
    return false;
}

/* 80141944-8014194C 13C284 0008+00 1/1 0/0 0/0 .text            getZeldaActor__9daHorse_cFv */
fopAc_ac_c* daHorse_c::getZeldaActor() {
    return mZeldaActorKeep.getActor();
}

/* 8014194C-8014195C 13C28C 0010+00 1/1 0/0 0/0 .text            dComIfGp_getDoStatus__Fv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void dComIfGp_getDoStatus() {
    nofralloc
#include "asm/d/a/d_a_alink/dComIfGp_getDoStatus__Fv.s"
}
#pragma pop

/* 8014195C-8014196C 13C29C 0010+00 1/1 5/5 0/0 .text            __ct__4cXyzFfff */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void __ct__4cXyzFfff(f32 param_0, f32 param_1, f32 param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/__ct__4cXyzFfff.s"
}
#pragma pop

/* 8014196C-80141988 13C2AC 001C+00 1/1 0/0 0/0 .text            dMeter2Info_offUseButton__Fi */
static void dMeter2Info_offUseButton(int pButton) {
    g_meter2_info.offUseButton(pButton);
}

/* 80141988-80141990 -00001 0008+00 0/0 0/0 0/0 .text            setLinkState__14Z2CreatureLinkFUc
 */
void Z2CreatureLink::setLinkState(u8 pState) {
    mLinkState = pState;
}

/* 80141990-801419A0 13C2D0 0010+00 1/1 0/0 0/0 .text            dComIfGs_getRupee__Fv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm u16 dComIfGs_getRupee() {
    nofralloc
#include "asm/d/a/d_a_alink/dComIfGs_getRupee__Fv.s"
}
#pragma pop

/* 801419A0-801419B8 13C2E0 0018+00 1/1 0/0 0/0 .text            dComIfGp_setItemRupeeCount__Fl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dComIfGp_setItemRupeeCount(s32 param_0) {
    nofralloc
#include "asm/d/a/d_a_alink/dComIfGp_setItemRupeeCount__Fl.s"
}
#pragma pop

/* 801419B8-801419F4 13C2F8 003C+00 1/1 0/0 0/0 .text dMeter2Info_setFloatingMessage__FUssb */
static void dMeter2Info_setFloatingMessage(u16 pMessageID, s16 pMessageTimer, bool pWakuVisible) {
    g_meter2_info.setFloatingMessage(pMessageID, pMessageTimer, pWakuVisible);
}

/* 801419F4-80141A04 13C334 0010+00 1/1 0/0 0/0 .text            onForcePanic__9daMidna_cFv */
void daMidna_c::onForcePanic() {
    onEndResetStateFlg0(FORCE_PANIC);
}

/* 80141A04-80141A10 13C344 000C+00 1/1 0/0 0/0 .text checkForceNormalColor__9daMidna_cCFv */
u32 daMidna_c::checkForceNormalColor() const {
    return checkStateFlg1(FORCE_NORMAL_COLOR);
}

/* 80141A10-80141A1C 13C350 000C+00 1/1 0/0 0/0 .text            checkForceTiredColor__9daMidna_cCFv
 */
u32 daMidna_c::checkForceTiredColor() const {
    return checkStateFlg1(FORCE_TIRED_COLOR);
}

/* 80141A1C-80141A84 13C35C 0068+00 1/1 0/0 0/0 .text            checkMidnaTired__9daMidna_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm bool daMidna_c::checkMidnaTired() {
    nofralloc
#include "asm/d/a/d_a_alink/checkMidnaTired__9daMidna_cFv.s"
}
#pragma pop

/* 80141A84-80141A94 13C3C4 0010+00 1/1 0/0 0/0 .text            onNoServiceWait__9daMidna_cFv */
void daMidna_c::onNoServiceWait() {
    onEndResetStateFlg0(NO_SERVICE_WAIT);
}

/* 80141A94-80141ACC 13C3D4 0038+00 1/1 0/0 0/0 .text            setControllActorData__8daCrod_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daCrod_c::setControllActorData() {
    nofralloc
#include "asm/d/a/d_a_alink/setControllActorData__8daCrod_cFv.s"
}
#pragma pop

/* 80141ACC-80141AE8 13C40C 001C+00 1/1 0/0 0/0 .text
 * PrmAbstract<Q312daObjMovebox5Act_c5Prm_e>__5daObjFPC10fopAc_ac_cQ312daObjMovebox5Act_c5Prm_eQ312daObjMovebox5Act_c5Prm_e
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void func_80141ACC(void* _this, fopAc_ac_c const* param_0,
                                  daObjMovebox::Act_c::Prm_e param_1,
                                  daObjMovebox::Act_c::Prm_e param_2) {
    nofralloc
#include "asm/d/a/d_a_alink/func_80141ACC.s"
}
#pragma pop

/* 80141AE8-80141B04 13C428 001C+00 1/1 4/4 0/0 .text            cLib_calcTimer<Uc>__FPUc */
extern "C" int func_80141AE8(u8* pTimer) {
    if (*pTimer != 0) {
        *pTimer -= 1;
    }
    return *pTimer;
}

/* ############################################################################################## */
/* 80453344-80453348 001944 0004+00 1/1 0/0 0/0 .sdata2          @77808 */
SECTION_SDATA2 static f32 lit_77808 = 1.2427899837493896f;

/* 80453348-8045334C 001948 0004+00 1/1 0/0 0/0 .sdata2          @77809 */
SECTION_SDATA2 static f32 lit_77809 = 102.00054168701172f;

/* 8045334C-80453350 00194C 0004+00 1/1 0/0 0/0 .sdata2          @77810 */
SECTION_SDATA2 static f32 lit_77810 = -4.248938083648682f;

/* 80453350-80453354 001950 0004+00 1/1 0/0 0/0 .sdata2          @77811 */
SECTION_SDATA2 static f32 lit_77811 = 89.0f;

/* 80453354-80453358 001954 0004+00 1/1 0/0 0/0 .sdata2          @77812 */
SECTION_SDATA2 static f32 lit_77812 = -5.267045021057129f;

/* 80453358-8045335C 001958 0004+00 1/1 0/0 0/0 .sdata2          @77813 */
SECTION_SDATA2 static f32 lit_77813 = 4.313951015472412f;

/* 8045335C-80453360 00195C 0004+00 1/1 0/0 0/0 .sdata2          @77814 */
SECTION_SDATA2 static f32 lit_77814 = 93.9443588256836f;

/* 80453360-80453364 001960 0004+00 1/1 0/0 0/0 .sdata2          @77815 */
SECTION_SDATA2 static f32 lit_77815 = -5.207283020019531f;

/* 80453364-80453368 001964 0004+00 1/1 0/0 0/0 .sdata2          @77816 */
SECTION_SDATA2 static f32 lit_77816 = -4.30098819732666f;

/* 80453368-8045336C 001968 0004+00 1/1 0/0 0/0 .sdata2          @77817 */
SECTION_SDATA2 static f32 lit_77817 = 93.95594787597656f;

/* 8045336C-80453370 00196C 0004+00 1/1 0/0 0/0 .sdata2          @77818 */
SECTION_SDATA2 static f32 lit_77818 = -5.218503952026367f;

/* 80453370-80453374 001970 0004+00 1/1 0/0 0/0 .sdata2          @77819 */
SECTION_SDATA2 static f32 lit_77819 = 225.6999969482422f;

/* 80453374-80453378 001974 0004+00 1/1 0/0 0/0 .sdata2          @77820 */
SECTION_SDATA2 static f32 lit_77820 = 1.809999942779541f;

/* 80453378-8045337C 001978 0004+00 1/1 0/0 0/0 .sdata2          @77821 */
SECTION_SDATA2 static f32 lit_77821 = 186.1699981689453f;

/* 8045337C-80453380 00197C 0004+00 1/1 0/0 0/0 .sdata2          @77822 */
SECTION_SDATA2 static f32 lit_77822 = -20.290000915527344f;

/* 80453380-80453384 001980 0004+00 1/1 0/0 0/0 .sdata2          @77823 */
SECTION_SDATA2 static f32 lit_77823 = -68.208984375f;

/* 80453384-80453388 001984 0004+00 1/1 0/0 0/0 .sdata2          @77824 */
SECTION_SDATA2 static f32 lit_77824 = 41.60992431640625f;

/* 80453388-8045338C 001988 0004+00 1/1 0/0 0/0 .sdata2          @77825 */
SECTION_SDATA2 static f32 lit_77825 = 0.8837890028953552f;

/* 8045338C-80453390 00198C 0004+00 1/1 0/0 0/0 .sdata2          @77826 */
SECTION_SDATA2 static f32 lit_77826 = -72.0f;

/* 80453390-80453394 001990 0004+00 1/1 0/0 0/0 .sdata2          @77827 */
SECTION_SDATA2 static f32 lit_77827 = 88.63934326171875f;

/* 80453394-80453398 001994 0004+00 1/1 0/0 0/0 .sdata2          @77828 */
SECTION_SDATA2 static f32 lit_77828 = -28.49793243408203f;

/* 80453398-8045339C 001998 0004+00 1/1 0/0 0/0 .sdata2          @77829 */
SECTION_SDATA2 static f32 lit_77829 = 0.11516399681568146f;

/* 8045339C-804533A0 00199C 0004+00 1/1 0/0 0/0 .sdata2          @77830 */
SECTION_SDATA2 static f32 lit_77830 = 68.33629608154297f;

/* 804533A0-804533A8 0019A0 0004+04 1/1 0/0 0/0 .sdata2          @77831 */
SECTION_SDATA2 static f32 lit_77831[1 + 1 /* padding */] = {
    -7.667817115783691f,
    /* padding */
    0.0f,
};

/* 80141B04-801446D4 13C444 2BD0+00 0/0 1/0 0/0 .text            __sinit_d_a_alink_cpp */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __sinit_d_a_alink_cpp() {
    nofralloc
#include "asm/d/a/d_a_alink/__sinit_d_a_alink_cpp.s"
}
#pragma pop

#pragma push
#pragma force_active on
REGISTER_CTORS(0x80141B04, __sinit_d_a_alink_cpp);
#pragma pop

/* 801446D4-801446DC 13F014 0008+00 1/0 0/0 0/0 .text            @36@__dt__12dBgS_ObjAcchFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void func_801446D4() {
    nofralloc
#include "asm/d/a/d_a_alink/func_801446D4.s"
}
#pragma pop

/* 801446DC-801446E4 13F01C 0008+00 1/0 0/0 0/0 .text            @20@__dt__12dBgS_ObjAcchFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void func_801446DC() {
    nofralloc
#include "asm/d/a/d_a_alink/func_801446DC.s"
}
#pragma pop

/* 801446E4-801446EC 13F024 0008+00 1/0 0/0 0/0 .text            @36@__dt__13dBgS_LinkAcchFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void func_801446E4() {
    nofralloc
#include "asm/d/a/d_a_alink/func_801446E4.s"
}
#pragma pop

/* 801446EC-801446F4 13F02C 0008+00 1/0 0/0 0/0 .text            @20@__dt__13dBgS_LinkAcchFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void func_801446EC() {
    nofralloc
#include "asm/d/a/d_a_alink/func_801446EC.s"
}
#pragma pop

/* 801446F4-801446FC 13F034 0008+00 1/0 0/0 0/0 .text            @20@__dt__15dBgS_LinkGndChkFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void func_801446F4() {
    nofralloc
#include "asm/d/a/d_a_alink/func_801446F4.s"
}
#pragma pop

/* 801446FC-80144704 13F03C 0008+00 1/0 0/0 0/0 .text            @76@__dt__15dBgS_LinkGndChkFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void func_801446FC() {
    nofralloc
#include "asm/d/a/d_a_alink/func_801446FC.s"
}
#pragma pop

/* 80144704-8014470C 13F044 0008+00 1/0 0/0 0/0 .text            @60@__dt__15dBgS_LinkGndChkFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void func_80144704() {
    nofralloc
#include "asm/d/a/d_a_alink/func_80144704.s"
}
#pragma pop

/* 8014470C-80144714 13F04C 0008+00 1/0 0/0 0/0 .text            @16@__dt__16dBgS_LinkRoofChkFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void func_8014470C() {
    nofralloc
#include "asm/d/a/d_a_alink/func_8014470C.s"
}
#pragma pop

/* 80144714-8014471C 13F054 0008+00 1/0 0/0 0/0 .text            @52@__dt__16dBgS_LinkRoofChkFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void func_80144714() {
    nofralloc
#include "asm/d/a/d_a_alink/func_80144714.s"
}
#pragma pop

/* 8014471C-80144724 13F05C 0008+00 1/0 0/0 0/0 .text            @36@__dt__16dBgS_LinkRoofChkFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void func_8014471C() {
    nofralloc
#include "asm/d/a/d_a_alink/func_8014471C.s"
}
#pragma pop

/* 80392094-80392094 01E6F4 0000+00 0/0 0/0 0/0 .rodata          @stringBase0 */
