/**
 * d_a_alink_whistle.inc
 * Player Horse / Hawk Grass Whistle action handling
 */

#include "d/a/d_a_alink.h"
#include "d/com/d_com_inf_game.h"
#include "d/d_procname.h"
#include "rel/d/a/npc/d_a_npc_tk/d_a_npc_tk.h"
#include "rel/d/a/obj/d_a_obj_yobikusa/d_a_obj_yobikusa.h"

/* 8011174C-80111770 10C08C 0024+00 1/1 0/0 0/0 .text daAlink_searchWhistle__FP10fopAc_ac_cPv */
static fopAc_ac_c* daAlink_searchWhistle(fopAc_ac_c* i_actor, void* i_data) {
    if (daAlink_getAlinkActorClass()->getGrassHowlEventActor() == fopAcM_GetName(i_actor)) {
        return i_actor;
    }

    return NULL;
}

/* 80111770-80111784 10C0B0 0014+00 1/1 0/0 0/0 .text daAlink_searchHawk__FP10fopAc_ac_cPv */
static fopAc_ac_c* daAlink_searchHawk(fopAc_ac_c* i_actor, void* i_data) {
    if (fopAcM_GetName(i_actor) == PROC_NPC_TK) {
        return i_actor;
    }

    return NULL;
}

/* 80111784-8011181C 10C0C4 0098+00 1/1 0/0 0/0 .text            setGrassWhistleModel__9daAlink_cFi
 */
void daAlink_c::setGrassWhistleModel(int modelType) {
    static const char* grassWhistleArcName[] = {
        "J_Tobi",
        "J_Umak",
    };

    JKRHeap* prev_heap = setItemHeap();

    J3DModelData* modeldata = (J3DModelData*)dComIfG_getObjectRes(grassWhistleArcName[modelType],
                                                                  grassWhistleIdx[modelType]);
    mHeldItemModel = mDoExt_J3DModel__create(modeldata, 0x80000, 0x11000084);

    mDoExt_setCurrentHeap(prev_heap);
    mEquipItem = 0x104;
    field_0x2f94 = 2;
}

/* 8011181C-80111894 10C15C 0078+00 1/1 0/0 0/0 .text            setHorseWhistleModel__9daAlink_cFv
 */
void daAlink_c::setHorseWhistleModel() {
    JKRHeap* prev_heap = setItemHeap();

    mHeldItemModel = initModel(loadAramBmd(0x31A, 0x3000), 0);

    mDoExt_setCurrentHeap(prev_heap);
    mEquipItem = HORSE_FLUTE;
    field_0x2f94 = 2;
}

/* 80111894-801119D8 10C1D4 0144+00 2/2 0/0 0/0 .text procGrassWhistleGetInit__9daAlink_cFv */
// matches with literals
#ifdef NONMATCHING
int daAlink_c::procGrassWhistleGetInit() {
    if (mEquipItem != NO_ITEM) {
        return procPreActionUnequipInit(PROC_GRASS_WHISTLE_GET, field_0x27f4);
    }

    commonProcInit(PROC_GRASS_WHISTLE_GET);
    mNormalSpeed = 0.0f;
    current.angle.y = shape_angle.y;
    field_0x2f98 = 4;

    setSingleAnimeParam(ANM_BOTTLE_SWING_DOWN, &daAlinkHIO_bottle_c0::m.mSwingDownAnm);
    field_0x2f92 = 0xFE;
    field_0x280c.setData(field_0x27f4);

    daObjYobikusa_c* yobikusa_p = (daObjYobikusa_c*)field_0x27f4;
    mProcVar2.field_0x300c = yobikusa_p->getType();
    mProcVar3.field_0x300e.x = yobikusa_p->getPathID();
    mProcVar3.field_0x300e.y = yobikusa_p->isPlayerCorrect();
    mProcVar3.field_0x300e.z = yobikusa_p->shape_angle.y + 0x8000;
    field_0x37c8.set(yobikusa_p->current.pos.x + cM_ssin(yobikusa_p->shape_angle.y) * 50.0f,
                     yobikusa_p->current.pos.y + 50.0f,
                     yobikusa_p->current.pos.z + cM_scos(yobikusa_p->shape_angle.y) * 50.0f);
    voiceStart(Z2SE_AL_V_SWING_BOTTLE);
    return 1;
}
#else
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm int daAlink_c::procGrassWhistleGetInit() {
    nofralloc
#include "asm/d/a/d_a_alink/procGrassWhistleGetInit__9daAlink_cFv.s"
}
#pragma pop
#endif

/* 801119D8-80111A9C 10C318 00C4+00 1/0 0/0 0/0 .text            procGrassWhistleGet__9daAlink_cFv
 */
int daAlink_c::procGrassWhistleGet() {
    daPy_frameCtrl_c* frameCtrl_p = mUnderFrameCtrl;

    if (frameCtrl_p->checkAnmEnd()) {
        procGrassWhistleWaitInit(mProcVar2.field_0x300c, mProcVar3.field_0x300e.x,
                                 mProcVar3.field_0x300e.y, mProcVar3.field_0x300e.z, &field_0x37c8);
    } else if (mEquipItem == NO_ITEM && frameCtrl_p->getFrame() >= lit_7710) {
        setGrassWhistleModel(mProcVar2.field_0x300c);

        if (field_0x280c.getActor() != NULL) {
            fopAcM_setCarryNow(field_0x280c.getActor(), 0);
            seStartOnlyReverb(Z2SE_AL_PICKUP_GRASS);
        }
    }

    return 1;
}

/* 80111A9C-80111CA4 10C3DC 0208+00 2/2 0/0 0/0 .text
 * procGrassWhistleWaitInit__9daAlink_cFiiisP4cXyz              */
// matches with literals
#ifdef NONMATCHING
int daAlink_c::procGrassWhistleWaitInit(int param_0, int param_1, int param_2, s16 param_3,
                                        cXyz* param_4) {
    u16 var_r6;
    if (param_0 == 3) {
        var_r6 = 0xFFFF;
    } else {
        var_r6 = 0xFFF9;
    }

    if (!dComIfGp_event_compulsory(this, NULL, var_r6)) {
        return checkNextAction(0);
    }

    mDemo.setSpecialDemoType();
    commonProcInit(PROC_GRASS_WHISTLE_WAIT);

    if (param_0 == 3) {
        keepItemData();
        setHorseWhistleModel();
        setSingleAnimeBase(ANM_GRASS_WHISTLE_START);
        field_0x3198 = -1;
        field_0x32cc = 0x532;
    } else {
        setSingleAnimeBase(ANM_WAIT);
        mKeepItem = NO_ITEM;

        if (param_0 == 0) {
            field_0x3198 = 0x100;
            field_0x32cc = 0x535;
        } else {
            field_0x3198 = -1;
            field_0x32cc = 0x532;
        }
    }

    setUpperAnimeBaseMorf(getMainBckData(ANM_GRASS_WHISTLE_START)->m_underID, -1.0f);
    setFacePriAnime(ANM_GRASS_WHISTLE_START);
    mProcVar2.field_0x300c = param_0;
    mProcVar3.field_0x300e.x = param_1;

    dCam_getBody()->StartEventCamera(12, fopAcM_GetID(this), 0);
    mProcVar0.field_0x3008 = 0;
    mProcVar3.field_0x300e.y = 0;
    mProcVar3.field_0x300e.z = 0;
    mMsgClassID = -1;
    mNormalSpeed = 0.0f;
    current.angle.y = shape_angle.y;
    field_0x2f98 = 4;

    if (param_2) {
        mLinkGndChk.SetPos(param_4);

        f32 gnd_cross = dComIfG_Bgsp().GroundCross(&mLinkGndChk);
        if (gnd_cross != -1000000000.0f) {
            current.pos.set(param_4->x, gnd_cross, param_4->z);
        }

        shape_angle.y = param_3;
        current.angle.y = shape_angle.y;
    }

    dComIfGp_setPlayerStatus1(0, 0x4000000);
    return 1;
}
#else
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm int daAlink_c::procGrassWhistleWaitInit(int param_0, int param_1, int param_2, s16 param_3,
                                            cXyz* param_4) {
    nofralloc
#include "asm/d/a/d_a_alink/procGrassWhistleWaitInit__9daAlink_cFiiisP4cXyz.s"
}
#pragma pop
#endif

/* 80111CA4-80111FF0 10C5E4 034C+00 1/0 0/0 0/0 .text            procGrassWhistleWait__9daAlink_cFv
 */
// small regalloc
#ifdef NONMATCHING
int daAlink_c::procGrassWhistleWait() {
    if (mProcVar3.field_0x300e.z != 0) {
        if (checkEndMessage(field_0x32cc)) {
            resetSpecialEvent();
            return procWaitInit();
        }

        return 1;
    }

    if (mProcVar0.field_0x3008 < 0) {
        mProcVar0.field_0x3008--;

        if (mProcVar0.field_0x3008 == -3) {
            return procWaitInit();
        }
    } else if (mProcVar0.field_0x3008 != 0) {
        mProcVar0.field_0x3008--;

        if (mProcVar0.field_0x3008 == 0) {
            daHorse_c* horse_p = dComIfGp_getHorseActor();
            daNPC_TK_c* tk_p = (daNPC_TK_c*)fopAcIt_Judge((fopAcIt_JudgeFunc)daAlink_searchWhistle, NULL);

            if (tk_p != NULL) {
                fopAcM_OnStatus(tk_p, 0x800);

                if (field_0x3198 == 0x100) {
                    tk_p->setEvent();
                    tk_p->setHawkPath(mProcVar3.field_0x300e.x);
                }

                mProcVar0.field_0x3008--;
                resetSpecialEvent();
            } else {
                int temp_r4;
                if ((mProcVar2.field_0x300c == 1 || mProcVar2.field_0x300c == 3) && horse_p != NULL) {
                    temp_r4 = horse_p->callHorse(&current.pos);
                } else {
                    temp_r4 = 0;
                }

                if (temp_r4 == 1 || temp_r4 == 4 || temp_r4 == 2) {
                    return procCoHorseCallWaitInit(temp_r4);
                } else if (temp_r4 == 3) {
                    resetSpecialEvent();
                    return procWaitInit();
                }

                setFaceBasicTexture(FTANM_UNK_0);
                mProcVar3.field_0x300e.z = 1;
                return 1;
            }

            setGrassCancelStatus(0);
        }
    } else if (checkAnmEnd(&mUpperFrameCtrl[2])) {
        setGrassCancelStatus(0x12);
        setDoStatus(0x2C);

        if (mProcVar2.field_0x300c == 3 || doTrigger()) {
            setSingleAnimeBaseMorf(ANM_GRASS_WHISTLE_PLAY, 0.0f);
            resetUpperAnime(UPPER_2, -1.0f);
            dComIfGp_event_onHindFlag(6);

            if (mProcVar2.field_0x300c == 0) {
                voiceStart(Z2SE_PLAY_REED_TOBIKUSA);
                mProcVar0.field_0x3008 = 100;

                if (dComIfGs_isEventBit(dSv_event_flag_c::F_0700) &&
                    dComIfGs_isEventBit(dSv_event_flag_c::F_0037))
                {
                    dComIfGs_onEventBit(dSv_event_flag_c::F_0581);
                }
            } else {
                voiceStart(Z2SE_PLAY_REED_UMAKUSA);
                mProcVar0.field_0x3008 = 140;

                if (mProcVar2.field_0x300c == 1) {
                    dComIfGs_onEventBit(dSv_event_flag_c::F_0580);
                }
            }
        } else if (grassCancelTrigger()) {
            resetUpperAnime(UPPER_2, -1.0f);
            resetSpecialEvent();
            procWaitInit();
        }
    } else {
        setGrassCancelStatus(0);
    }

    return 1;
}
#else
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm int daAlink_c::procGrassWhistleWait() {
    nofralloc
#include "asm/d/a/d_a_alink/procGrassWhistleWait__9daAlink_cFv.s"
}
#pragma pop
#endif

/* 80111FF0-801120C8 10C930 00D8+00 2/2 0/0 0/0 .text procCoHorseCallWaitInit__9daAlink_cFi */
int daAlink_c::procCoHorseCallWaitInit(int param_0) {
    commonProcInit(PROC_HORSE_CALL_WAIT);

    if (param_0 == 4) {
        mProcVar3.field_0x300e.y = 2;
    } else if (param_0 == 1) {
        mProcVar3.field_0x300e.y = 0x3D;
    } else {
        mProcVar3.field_0x300e.y = 0x10;
    }

    if (checkWolf()) {
        setSingleAnimeWolfBaseSpeed(WANM_WAIT, daAlinkHIO_wlMove_c0::m.field_0x70, lit_6109);
    } else {
        setSingleAnimeBaseSpeed(ANM_WAIT, daAlinkHIO_move_c0::m.mWaitAnmSpeed, lit_6109);
    }

    setGrassCancelStatus(0);
    dComIfGp_setPlayerStatus1(0, 0x4000000);
    return 1;
}

/* 801120C8-801121B4 10CA08 00EC+00 1/0 0/0 0/0 .text            procCoHorseCallWait__9daAlink_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm int daAlink_c::procCoHorseCallWait() {
    nofralloc
#include "asm/d/a/d_a_alink/procCoHorseCallWait__9daAlink_cFv.s"
}
#pragma pop

/* 801121B4-80112220 10CAF4 006C+00 1/0 0/0 0/0 .text            procHawkCatchInit__9daAlink_cFv */
int daAlink_c::procHawkCatchInit() {
    if (mProcID == PROC_HAWK_SUBJECT || !commonProcInitNotSameProc(PROC_HAWK_CATCH)) {
        return 0;
    }

    setSingleAnimeBase(ANM_HAWK_CATCH);
    deleteEquipItem(FALSE, TRUE);
    return 1;
}

/* 80112220-80112278 10CB60 0058+00 1/0 0/0 0/0 .text            procHawkCatch__9daAlink_cFv */
int daAlink_c::procHawkCatch() {
    if (mUnderFrameCtrl[0].checkAnmEnd()) {
        dComIfGp_evmng_cutEnd(field_0x3184);
        procHawkSubjectInit();
    }

    return 1;
}

/* 80112278-80112304 10CBB8 008C+00 2/2 0/0 0/0 .text            procHawkSubjectInit__9daAlink_cFv
 */
int daAlink_c::procHawkSubjectInit() {
    if (!commonProcInitNotSameProc(PROC_HAWK_SUBJECT)) {
        return 0;
    }

    setSingleAnimeBase(ANM_HAWK_WAIT);

    fopAc_ac_c* hawk_p = (fopAc_ac_c*)fopAcIt_Judge((fopAcIt_JudgeFunc)daAlink_searchHawk, NULL);
    if (hawk_p != NULL) {
        field_0x280c.setData(hawk_p);
    }

    mProcVar2.field_0x300c = 0;
    mBodyAngle.y = 0;
    deleteEquipItem(FALSE, TRUE);
    return 1;
}

/* 80112304-8011243C 10CC44 0138+00 1/0 0/0 0/0 .text            procHawkSubject__9daAlink_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm int daAlink_c::procHawkSubject() {
    nofralloc
#include "asm/d/a/d_a_alink/procHawkSubject__9daAlink_cFv.s"
}
#pragma pop
