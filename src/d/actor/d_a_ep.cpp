//
// Generated By: dol2asm
// Translation Unit: d_a_ep
//

#include "d/actor/d_a_ep.h"
#include "d/d_cc_d.h"
#include "d/d_com_inf_game.h"
#include "m_Do/m_Do_lib.h"
#include "d/d_s_play.h"
#include "dol2asm.h"

// struct mDoLib_clipper {
//     static u8 mClipper[92];
//     static f32 mSystemFar;
// };

// struct daObj {
    // /* 80037900 */ void HitSeStart(cXyz const*, int, dCcD_GObjInf const*, u32);
// };

// struct J3DUClipper {
//     /* 8027378C */ void calcViewFrustum();
// };

// struct J3DModel {};

//
// Forward References:
//

extern "C" static void hahen_draw__FP8ep_class();
extern "C" static void move_calc__FP8ep_classP10ep_hahen_s();
extern "C" static void hahen_normal__FP8ep_classP10ep_hahen_s();
extern "C" static void hahen_water__FP8ep_classP10ep_hahen_s();
extern "C" static void hahen_carry__FP8ep_classP10ep_hahen_s();
extern "C" static void hahen_cast__FP8ep_classP10ep_hahen_s();
extern "C" static void hahen_move__FP8ep_class();
extern "C" static void daEp_Draw__FP8ep_class();
extern "C" static void ep_switch_event_end__FP8ep_class();
extern "C" static void ep_switch_event_begin__FP8ep_class();
extern "C" static void ep_switch_event_move__FP8ep_class();
extern "C" static void ep_move__FP8ep_class();
extern "C" static void daEp_set_mtx__FP8ep_class();
extern "C" static void daEp_Execute__FP8ep_class();
extern "C" static bool daEp_IsDelete__FP8ep_class();
extern "C" static void daEp_Delete__FP8ep_class();
extern "C" static void daEp_CreateHeap__FP10fopAc_ac_c();
extern "C" static void daEp_CreateInit__FP10fopAc_ac_c();
extern "C" static void daEp_Create__FP10fopAc_ac_c();
extern "C" void __ct__8ep_classFv();
extern "C" void __dt__10ep_hahen_sFv();
extern "C" void __ct__10ep_hahen_sFv();
extern "C" void __dt__14dBgS_ObjGndChkFv();
extern "C" void __dt__8cM3dGSphFv();
extern "C" void __dt__8cM3dGCylFv();
extern "C" void __dt__8cM3dGAabFv();
extern "C" void __dt__10dCcD_GSttsFv();
extern "C" void __dt__10cCcD_GSttsFv();
extern "C" static void func_8046AFA4();
extern "C" static void func_8046AFAC();
extern "C" static void func_8046AFB4();
extern "C" extern char const* const d_a_ep__stringBase0;

//
// External References:
//

extern "C" void mDoMtx_XrotS__FPA4_fs();
extern "C" void mDoMtx_XrotM__FPA4_fs();
extern "C" void mDoMtx_YrotS__FPA4_fs();
extern "C" void mDoMtx_YrotM__FPA4_fs();
extern "C" void mDoMtx_ZrotM__FPA4_fs();
extern "C" void mDoExt_modelUpdateDL__FP8J3DModel();
extern "C" void mDoExt_J3DModel__create__FP12J3DModelDataUlUl();
extern "C" void __ct__10fopAc_ac_cFv();
extern "C" void fopAcM_delete__FP10fopAc_ac_c();
extern "C" void fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl();
extern "C" void fopAcM_SetMin__FP10fopAc_ac_cfff();
extern "C" void fopAcM_SetMax__FP10fopAc_ac_cfff();
extern "C" void fopAcM_rollPlayerCrash__FPC10fopAc_ac_cfUlffif();
extern "C" void fopAcM_checkCullingBox__FPA4_fffffff();
extern "C" void fopAcM_orderOtherEvent__FP10fopAc_ac_cPCcUsUsUs();
extern "C" void fopAcM_effSmokeSet1__FPUlPUlPC4cXyzPC5csXyzfPC12dKy_tevstr_ci();
extern "C" void fopAcM_effHamonSet__FPUlPC4cXyzff();
extern "C" void gndCheck__11fopAcM_gc_cFPC4cXyz();
extern "C" void dComIfG_resLoad__FP30request_of_phase_process_classPCc();
extern "C" void dComIfG_resDelete__FP30request_of_phase_process_classPCc();
extern "C" void
dComIfGd_setShadow__FUlScP8J3DModelP4cXyzffffR13cBgS_PolyInfoP12dKy_tevstr_csfP9_GXTexObj();
extern "C" void onSwitch__10dSv_info_cFii();
extern "C" void offSwitch__10dSv_info_cFii();
extern "C" void isSwitch__10dSv_info_cCFii();
extern "C" void HitSeStart__5daObjFPC4cXyziPC12dCcD_GObjInfUl();
extern "C" void getRes__14dRes_control_cFPCclP11dRes_info_ci();
extern "C" void reset__14dEvt_control_cFv();
extern "C" void getEventData__16dEvent_manager_cFs();
extern "C" void getEventIdx__16dEvent_manager_cFPCcUcl();
extern "C" void endCheckOld__16dEvent_manager_cFPCc();
extern "C" void getMyStaffId__16dEvent_manager_cFPCcP10fopAc_ac_ci();
extern "C" void getIsAddvance__16dEvent_manager_cFi();
extern "C" void getMyActIdx__16dEvent_manager_cFiPCPCciii();
extern "C" void cutEnd__16dEvent_manager_cFi();
extern "C" void
set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf();
extern "C" void setSimple__13dPa_control_cFUsPC4cXyzPC12dKy_tevstr_cUcRC8_GXColorRC8_GXColorif();
extern "C" void
set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf();
extern "C" void LockonTarget__12dAttention_cFl();
extern "C" void LockonTruth__12dAttention_cFv();
extern "C" void LineCross__4cBgSFP11cBgS_LinChk();
extern "C" void GroundCross__4cBgSFP11cBgS_GndChk();
extern "C" void __ct__11dBgS_GndChkFv();
extern "C" void __dt__11dBgS_GndChkFv();
extern "C" void __ct__18dBgS_ObjGndChk_SplFv();
extern "C" void __dt__18dBgS_ObjGndChk_SplFv();
extern "C" void __ct__11dBgS_LinChkFv();
extern "C" void __dt__11dBgS_LinChkFv();
extern "C" void Set__11dBgS_LinChkFPC4cXyzPC4cXyzPC10fopAc_ac_c();
extern "C" void SetObj__16dBgS_PolyPassChkFv();
extern "C" void __ct__10dCcD_GSttsFv();
extern "C" void Init__9dCcD_SttsFiiP10fopAc_ac_c();
extern "C" void __ct__12dCcD_GObjInfFv();
extern "C" void ChkTgHit__12dCcD_GObjInfFv();
extern "C" void GetTgHitObj__12dCcD_GObjInfFv();
extern "C" void GetTgHitGObj__12dCcD_GObjInfFv();
extern "C" void Set__8dCcD_CylFRC11dCcD_SrcCyl();
extern "C" void Set__8dCcD_SphFRC11dCcD_SrcSph();
extern "C" void at_power_check__FP11dCcU_AtInfo();
extern "C" void settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c();
extern "C" void setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c();
extern "C" void dKy_plight_set__FP15LIGHT_INFLUENCE();
extern "C" void dKy_plight_cut__FP15LIGHT_INFLUENCE();
extern "C" void GetAc__8cCcD_ObjFv();
extern "C" void Set__4cCcSFP8cCcD_Obj();
extern "C" void __pl__4cXyzCFRC3Vec();
extern "C" void __mi__4cXyzCFRC3Vec();
extern "C" void __ml__4cXyzCFf();
extern "C" void cM_atan2s__Fff();
extern "C" void cM_rndF__Ff();
extern "C" void cM_rndFX__Ff();
extern "C" void SetPos__11cBgS_GndChkFPC4cXyz();
extern "C" void SetC__8cM3dGCylFRC4cXyz();
extern "C" void SetH__8cM3dGCylFf();
extern "C" void SetC__8cM3dGSphFRC4cXyz();
extern "C" void SetR__8cM3dGSphFf();
extern "C" void cLib_addCalc2__FPffff();
extern "C" void cLib_addCalc0__FPfff();
extern "C" void cLib_addCalcAngleS2__FPssss();
extern "C" void MtxTrans__FfffUc();
extern "C" void MtxScale__FfffUc();
extern "C" void MtxPosition__FP4cXyzP4cXyz();
extern "C" void calcViewFrustum__11J3DUClipperFv();
extern "C" void seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc();
extern "C" void __dl__FPv();
extern "C" void __construct_array();
extern "C" void _savegpr_22();
extern "C" void _savegpr_25();
extern "C" void _savegpr_26();
extern "C" void _savegpr_27();
extern "C" void _savegpr_28();
extern "C" void _savegpr_29();
extern "C" void _restgpr_22();
extern "C" void _restgpr_25();
extern "C" void _restgpr_26();
extern "C" void _restgpr_27();
extern "C" void _restgpr_28();
extern "C" void _restgpr_29();
extern "C" extern void* __vt__8dCcD_Sph[36];
extern "C" extern void* __vt__8dCcD_Cyl[36];
extern "C" extern void* __vt__9dCcD_Stts[11];
extern "C" extern void* __vt__12cCcD_SphAttr[25];
extern "C" extern void* __vt__12cCcD_CylAttr[25];
extern "C" extern void* __vt__14cCcD_ShapeAttr[22];
extern "C" extern void* __vt__9cCcD_Stts[8];
extern "C" u8 mClipper__14mDoLib_clipper[92];
extern "C" u8 mGndCheck__11fopAcM_gc_c[84];
extern "C" u8 mSimpleTexObj__21dDlst_shadowControl_c[32];
extern "C" u8 sincosTable___5JMath[65536];
extern "C" f32 mSystemFar__14mDoLib_clipper;
extern "C" f32 mGroundY__11fopAcM_gc_c;
// extern "C" extern u8 pauseTimer__9dScnPly_c[4];
extern "C" u8 mAudioMgrPtr__10Z2AudioMgr[4 + 4 /* padding */];

/* 804681F8-804682F8 000078 0100+00 1/1 0/0 0/0 .text            hahen_draw__FP8ep_class */
static void hahen_draw(ep_class* e_this) {
    // NONMATCHING
    ep_hahen_s* epHahenS = e_this->mHahen;
    g_env_light.settingTevStruct(16, &e_this->current.pos, &e_this->tevStr);

    for (int i = 0; i < 6; i++) {
        g_env_light.setLightTevColorType_MAJI(epHahenS[i].mpModel, &e_this->tevStr);
        mDoExt_modelUpdateDL(epHahenS[i].mpModel);

        if (epHahenS[i].field_0x96 < 2) {
            cXyz local_28(epHahenS[i].field_0x4.x, epHahenS[i].field_0x4.y + 50.0f, epHahenS[i].field_0x4.z);
            epHahenS[i].field_0x9c = dComIfGd_setShadow(epHahenS[i].field_0x9c, 1, epHahenS[i].mpModel,
                &local_28, 200.0f, 0.0f, epHahenS[i].field_0x4.y, epHahenS[i].mGroundY, 
                epHahenS[i].field_0x3c, &e_this->tevStr, 0, 1.0f, 
                dDlst_shadowControl_c::getSimpleTex());
        }
    }
}

/* ############################################################################################## */
/* 8046AFD4-8046AFD8 000010 0004+00 0/2 0/0 0/0 .rodata          @3859 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_3859 = 5.0f;
COMPILER_STRIP_GATE(0x8046AFD4, &lit_3859);
#pragma pop

/* 8046AFD8-8046AFDC 000014 0004+00 0/1 0/0 0/0 .rodata          @3860 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_3860 = -90.0f;
COMPILER_STRIP_GATE(0x8046AFD8, &lit_3860);
#pragma pop

/* 8046AFDC-8046AFE0 000018 0004+00 0/1 0/0 0/0 .rodata          @3861 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_3861 = 100.0f;
COMPILER_STRIP_GATE(0x8046AFDC, &lit_3861);
#pragma pop

/* 8046AFE0-8046AFE4 00001C 0004+00 0/2 0/0 0/0 .rodata          @3862 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_3862 = 35.0f;
COMPILER_STRIP_GATE(0x8046AFE0, &lit_3862);
#pragma pop

/* 8046AFE4-8046AFE8 000020 0004+00 0/2 0/0 0/0 .rodata          @3863 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_3863 = 6.0f;
COMPILER_STRIP_GATE(0x8046AFE4, &lit_3863);
#pragma pop

/* 8046AFE8-8046AFEC 000024 0004+00 0/1 0/0 0/0 .rodata          @3864 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_3864 = -20.0f;
COMPILER_STRIP_GATE(0x8046AFE8, &lit_3864);
#pragma pop

/* 8046AFEC-8046AFF0 000028 0004+00 0/1 0/0 0/0 .rodata          @3865 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_3865 = -3.0f / 10.0f;
COMPILER_STRIP_GATE(0x8046AFEC, &lit_3865);
#pragma pop

/* 8046AFF0-8046AFF4 00002C 0004+00 0/1 0/0 0/0 .rodata          @3866 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_3866 = 17000.0f;
COMPILER_STRIP_GATE(0x8046AFF0, &lit_3866);
#pragma pop

/* 8046AFF4-8046AFF8 000030 0004+00 0/1 0/0 0/0 .rodata          @3867 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_3867 = 10000.0f;
COMPILER_STRIP_GATE(0x8046AFF4, &lit_3867);
#pragma pop

/* 8046AFF8-8046AFFC 000034 0004+00 0/3 0/0 0/0 .rodata          @3868 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_3868 = 0.5f;
COMPILER_STRIP_GATE(0x8046AFF8, &lit_3868);
#pragma pop

/* 8046AFFC-8046B000 000038 0004+00 1/6 0/0 0/0 .rodata          @3869 */
SECTION_RODATA static f32 const lit_3869 = -1.0f;
COMPILER_STRIP_GATE(0x8046AFFC, &lit_3869);

/* 8046B000-8046B004 00003C 0004+00 0/1 0/0 0/0 .rodata          @3870 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_3870 = -10.0f;
COMPILER_STRIP_GATE(0x8046B000, &lit_3870);
#pragma pop

/* 8046B004-8046B00C 000040 0008+00 0/3 0/0 0/0 .rodata          @3871 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const lit_3871[8] = {
    0x3F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x8046B004, &lit_3871);
#pragma pop

/* 8046B00C-8046B014 000048 0008+00 0/3 0/0 0/0 .rodata          @3872 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const lit_3872[8] = {
    0x40, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x8046B00C, &lit_3872);
#pragma pop

/* 8046B014-8046B01C 000050 0008+00 0/3 0/0 0/0 .rodata          @3873 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const lit_3873[8] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x8046B014, &lit_3873);
#pragma pop

/* 8046B01C-8046B020 000058 0004+00 0/2 0/0 0/0 .rodata          @3874 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_3874 = 1.0f / 100.0f;
COMPILER_STRIP_GATE(0x8046B01C, &lit_3874);
#pragma pop

/* 8046B020-8046B024 00005C 0004+00 0/1 0/0 0/0 .rodata          @3875 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_3875 = 11.0f / 10.0f;
COMPILER_STRIP_GATE(0x8046B020, &lit_3875);
#pragma pop

/* 8046B024-8046B028 000060 0004+00 0/1 0/0 0/0 .rodata          @3876 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_3876 = -0.5f;
COMPILER_STRIP_GATE(0x8046B024, &lit_3876);
#pragma pop

/* 8046B028-8046B02C 000064 0004+00 0/1 0/0 0/0 .rodata          @3877 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_3877 = 65536.0f;
COMPILER_STRIP_GATE(0x8046B028, &lit_3877);
#pragma pop

/* 8046B02C-8046B030 000068 0004+00 0/1 0/0 0/0 .rodata          @3878 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_3878 = 7.0f / 10.0f;
COMPILER_STRIP_GATE(0x8046B02C, &lit_3878);
#pragma pop

/* 8046B0F8-8046B104 000000 000C+00 2/2 0/0 0/0 .data            cNullVec__6Z2Calc */
SECTION_DATA static u8 cNullVec__6Z2Calc[12] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 8046B104-8046B118 00000C 0004+10 0/0 0/0 0/0 .data            @1787 */
#pragma push
#pragma force_active on
SECTION_DATA static u32 lit_1787[1 + 4 /* padding */] = {
    0x02000201,
    /* padding */
    0x40080000,
    0x00000000,
    0x3FE00000,
    0x00000000,
};
#pragma pop

/* 8046B118-8046B120 000020 0008+00 1/1 0/0 0/0 .data            w_eff_id$3717 */
SECTION_DATA static u8 w_eff_id[8] = {
    0x01, 0xB8, 0x01, 0xB9, 0x01, 0xBA, 0x01, 0xBB,
};

/* 804682F8-80468A70 000178 0778+00 2/2 0/0 0/0 .text            move_calc__FP8ep_classP10ep_hahen_s
 */
static int move_calc(ep_class* e_this, ep_hahen_s* i_this) {
    // NONMATCHING
}

/* 80468A70-80468A90 0008F0 0020+00 1/1 0/0 0/0 .text hahen_normal__FP8ep_classP10ep_hahen_s */
static void hahen_normal(ep_class* e_this, ep_hahen_s* i_this) {
    move_calc(e_this, i_this);
}

/* ############################################################################################## */
/* 8046B030-8046B034 00006C 0004+00 0/1 0/0 0/0 .rodata          @3959 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_3959 = 60.0f;
COMPILER_STRIP_GATE(0x8046B030, &lit_3959);
#pragma pop

/* 8046B034-8046B038 000070 0004+00 0/3 0/0 0/0 .rodata          @3960 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_3960 = 3.0f;
COMPILER_STRIP_GATE(0x8046B034, &lit_3960);
#pragma pop

/* 8046B038-8046B03C 000074 0004+00 0/1 0/0 0/0 .rodata          @3961 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_3961 = 19.0f / 20.0f;
COMPILER_STRIP_GATE(0x8046B038, &lit_3961);
#pragma pop

/* 8046B03C-8046B040 000078 0004+00 0/1 0/0 0/0 .rodata          @3962 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_3962 = 2.0f;
COMPILER_STRIP_GATE(0x8046B03C, &lit_3962);
#pragma pop

/* 8046B040-8046B044 00007C 0004+00 0/2 0/0 0/0 .rodata          @3963 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_3963 = 1.0f / 20.0f;
COMPILER_STRIP_GATE(0x8046B040, &lit_3963);
#pragma pop

/* 80468A90-80468E50 000910 03C0+00 1/1 0/0 0/0 .text hahen_water__FP8ep_classP10ep_hahen_s */
static void hahen_water(ep_class* e_this, ep_hahen_s* i_this) {
    // NONMATCHING
    fopAc_ac_c* player = dComIfGp_getPlayer(0);
    dBgS_LinChk dStack_8c;
    i_this->field_0x94++;
    if (i_this->field_0x98) {
        i_this->field_0x98--;
    }

    i_this->field_0x10 = i_this->field_0x4;

    f32 x = i_this->field_0x4.x - player->current.pos.x;
    f32 z = i_this->field_0x4.z - player->current.pos.z;
    if (JMAFastSqrt(x * x + z * z) < 60.0f) {
        s16 sVar1 = cM_atan2s(x, z);
        cLib_addCalcAngleS2(&i_this->field_0x28.y, sVar1, 0x10, 200);
        cMtx_YrotS(*calc_mtx, sVar1);

        cXyz local_98(0.0f, 0.0f, 3.0f);
        MtxPosition(&local_98, &i_this->field_0x1c);
    }

    i_this->field_0x4 += i_this->field_0x1c;
    i_this->field_0x1c.y = 0.0f;
    i_this->field_0x4.y = i_this->field_0x34;
    i_this->field_0x1c.x *= 0.95f;
    i_this->field_0x1c.z *= 0.95f;
    i_this->field_0x28.y += i_this->field_0x92;
    cLib_addCalcAngleS2(&i_this->field_0x92, 0, 1, 0x28);

    cLib_addCalcAngleS2(&i_this->field_0x28.z, (200.0f * cM_ssin(i_this->field_0x94 * 0x708)), 1, 0x800);
    cLib_addCalcAngleS2(&i_this->field_0x28.x, 0, 4, 0x1000);

    if (i_this->field_0x98 == 0) {
        cXyz local_bc = i_this->field_0x4 - i_this->field_0x10;
        local_bc.y = 0.0f;

        if (local_bc.abs() > 0.01f) {
            cXyz local_d4 = i_this->field_0x4 + local_bc * 2.0f;
            dStack_8c.Set(&i_this->field_0x10, &local_d4, e_this);

            if (dComIfG_Bgsp().LineCross(&dStack_8c)) {
                i_this->field_0x4 = i_this->field_0x10;
                i_this->field_0x1c.x *= -1.0f;
                i_this->field_0x1c.z *= -1.0f;
                i_this->field_0x98 = 5;
            }
        }
    }

    fopAcM_effHamonSet(&i_this->field_0xa0, &i_this->field_0x4, 1.0f, 0.05f);
}

/* 80468E50-80469034 000CD0 01E4+00 1/1 0/0 0/0 .text hahen_carry__FP8ep_classP10ep_hahen_s */
static void hahen_carry(ep_class* e_this, ep_hahen_s* i_this) {
    // NONMATCHING
    fopAc_ac_c* player = dComIfGp_getPlayer(0);

    if (!fopAcM_checkCarryNow(e_this)) {
        if (fopAcM_GetSpeedF(e_this) > 0.0f) {
            i_this->field_0x97 = 4;
            i_this->field_0x96 = 0;
            i_this->field_0x28.x = 0;
            i_this->field_0x28.z = 0x4000;
            i_this->field_0x28.y = player->shape_angle.y;
            if (dComIfGp_getAttention().Lockon()) {
                i_this->field_0x30 = 80.0f;

                fopAc_ac_c* lockOnTarget = dComIfGp_getAttention().LockonTarget(0);
                if (lockOnTarget) {
                    cXyz local_34, cStack_28;
                    local_34 = lockOnTarget->current.pos - i_this->field_0x4;
                    i_this->field_0x28.y = cM_atan2s(local_34.x, local_34.z);

                    f32 fVar1 = JMAFastSqrt(local_34.x * local_34.x + local_34.z * local_34.z);
                    s16 sVar1 = -cM_atan2s(local_34.y, fVar1);
                    cMtx_XrotS(*calc_mtx, -0x800 + sVar1);

                    local_34.y = 0.0f;
                    local_34.x = 0.0f;
                    local_34.z = i_this->field_0x30;
                    MtxPosition(&local_34, &cStack_28);
                    i_this->field_0x1c.y = cStack_28.y;
                } else {
                    i_this->field_0x1c.y = 10.0f;
                }
            } else {
                i_this->field_0x30 = 70.0f;
                i_this->field_0x1c.y = 30.0f;
            }
        } else {
            i_this->field_0x97 = 1;
            Z2GetAudioMgr()->seStart(Z2SE_OBJ_WOODSTICK_PUT, &i_this->field_0x4, 0, 0, 1.0f, 1.0f, -1.0f, -1.0f, 0);
        }
    }
}

/* 80469034-804690F8 000EB4 00C4+00 1/1 0/0 0/0 .text hahen_cast__FP8ep_classP10ep_hahen_s */
static void hahen_cast(ep_class* e_this, ep_hahen_s* i_this) {
    cXyz local_1c, local_28;

    i_this->field_0x28.x += 0x1450;

    cMtx_YrotS(*calc_mtx, i_this->field_0x28.y);
    local_1c.x = 0.0f;
    local_1c.y = 0.0f;
    local_1c.z = i_this->field_0x30;
    MtxPosition(&local_1c, &local_28);
    i_this->field_0x1c.x = local_28.x;
    i_this->field_0x1c.z = local_28.z;

    if (move_calc(e_this, i_this)) {
        i_this->field_0x97 = 1;
    }

    e_this->mSph2.SetC(i_this->field_0x4);
    dComIfG_Ccsp()->Set(&e_this->mSph2);
}

/* 804690F8-80469568 000F78 0470+00 1/1 0/0 0/0 .text            hahen_move__FP8ep_class */
static void hahen_move(ep_class* e_this) {
    // NONMATCHING
    fopAc_ac_c* player = dComIfGp_getPlayer(0);
    dBgS_LinChk dStack_cc;
    cXyz local_d8;

    if (!fopAcM_checkCarryNow(e_this)) {
        f32 fVar1 = 50.0f;
        bool bVar2 = false;
        for (int i = 0; i < 10; i++) {
            ep_hahen_s* epHahenS = e_this->mHahen;
            for (int j = 0; j < 6; j++) {
                local_d8 = player->current.pos - epHahenS[j].field_0x4;
                if (local_d8.abs() < fVar1) {
                    cLib_onBit<u32>(e_this->attention_info.flags, 0x80);
                    e_this->current.pos = epHahenS[j].field_0x4;
                    e_this->eyePos = e_this->current.pos;
                    e_this->attention_info.position = e_this->eyePos;
                    e_this->shape_angle = epHahenS[j].field_0x28;
                    e_this->current.angle = e_this->shape_angle;
                    e_this->field_0xa78 = j;
                    bVar2 = true;
                    break;
                }
            }

            // if (bVar2) break;
            fVar1 += 20.0f;
        }
    } else {
        cLib_offBit<u32>(e_this->attention_info.flags, 0x80);
        e_this->mHahen[e_this->field_0xa78].field_0x97 = 3;
        e_this->mHahen[e_this->field_0xa78].field_0x4 = e_this->current.pos;
        e_this->mHahen[e_this->field_0xa78].field_0x28 = e_this->shape_angle;
    }

    ep_hahen_s* epHahenS = e_this->mHahen;
    for (int i = 0; i < 6; i++) {
        if (epHahenS[i].field_0x97) {
            epHahenS[i].field_0x98 += -1;
        }
        
        if (e_this->field_0xa79 == 3) {
            if (epHahenS[i].field_0x97 == 1) {
                hahen_normal(e_this, epHahenS);
            } else if (epHahenS[i].field_0x97 == 2) {
                hahen_water(e_this, epHahenS);
            } else if (epHahenS[i].field_0x97 == 3) {
                hahen_carry(e_this, epHahenS);
            } else if (epHahenS[i].field_0x97 == 4) {
                hahen_cast(e_this, epHahenS);
            }
        }

        MtxTrans(epHahenS[i].field_0x4.x, epHahenS[i].field_0x4.y, epHahenS[i].field_0x4.z, 0);
        cMtx_YrotM(*calc_mtx, epHahenS[i].field_0x28.y);
        cMtx_XrotM(*calc_mtx, epHahenS[i].field_0x28.x);
        cMtx_ZrotM(*calc_mtx, epHahenS[i].field_0x28.z);

        cMtx_YrotM(*calc_mtx, 0x4000);
        MtxTrans(3.0f, 0.0f, 0.0f, 1);
        cMtx_XrotM(*calc_mtx, 0x4000);
        MtxScale(1.0f, 0.5, 1.0f, 1);
        epHahenS[i].mpModel->setBaseTRMtx(*calc_mtx);
    }

    if (e_this->field_0xa79 == 2) {
        e_this->field_0xa79 = 3;
    }
}

/* 80469568-804695F8 0013E8 0090+00 1/0 0/0 0/0 .text            daEp_Draw__FP8ep_class */
static int daEp_Draw(ep_class* e_this) {
    if (e_this->mpModel) {
        if (e_this->field_0x602 != 1) {
            g_env_light.settingTevStruct(16, &e_this->current.pos, &e_this->tevStr);
            g_env_light.setLightTevColorType_MAJI(e_this->mpModel->mModelData, &e_this->tevStr);
            mDoExt_modelUpdateDL(e_this->mpModel);
        }
    }

    if (e_this->field_0xa79 != 0) {
        hahen_draw(e_this);
    }

    return 1;
}

/* 804695F8-80469658 001478 0060+00 2/2 0/0 0/0 .text            ep_switch_event_end__FP8ep_class */
static BOOL ep_switch_event_end(ep_class* e_this) {
    int rv = FALSE;
    if (dComIfGp_evmng_endCheck("SHOKUDAI_SWITCH") != 0) {
        dComIfGp_event_reset();
        rv = TRUE;
    }
    return rv;
}

/* 80469658-80469700 0014D8 00A8+00 1/1 0/0 0/0 .text            ep_switch_event_begin__FP8ep_class */
static BOOL ep_switch_event_begin(ep_class* e_this) {
    BOOL rv = 0;

    if (!e_this->eventInfo.checkCommandDemoAccrpt()) {
        fopAcM_orderOtherEvent(e_this, "SHOKUDAI_SWITCH", 0xffff, 1, 0);
    } else {
        e_this->eventInfo.onCondition(2);
        rv = dComIfGp_evmng_getMyStaffId("SHOKUDAI", 0, 0);
        if (rv == -1) {
           ep_switch_event_end(e_this);
        }
    }

    return rv;
}

// /* ############################################################################################## */
// /* 8046B0D0-8046B0D0 00010C 0000+00 0/0 0/0 0/0 .rodata          @stringBase0 */
// #pragma push
// #pragma force_active on
// SECTION_DEAD static char const* const stringBase_8046B0E9 = "WAIT";
// SECTION_DEAD static char const* const stringBase_8046B0EE = "FIRE";
// #pragma pop

/* 8046B120-8046B128 -00001 0008+00 1/1 0/0 0/0 .data            actions$4245 */
// static char* actions[2] = {
//     "WAIT",
//     "FIRE",
// };

/* 80469700-804697F4 001580 00F4+00 1/1 0/0 0/0 .text            ep_switch_event_move__FP8ep_class
 */
static int ep_switch_event_move(ep_class* e_this) {
    // NONMATCHING
    static char* actions[2] = {
        "WAIT",
        "FIRE",
    };

    int rv = 0;

    if (dComIfGp_evmng_getIsAddvance(e_this->field_0xa5c)) {
        rv = dComIfGp_evmng_getMyActIdx(e_this->field_0xa5c, actions, 2, 0, 0);
        if (rv != 1) {
            if (e_this->field_0xa5b == 0) {
                mDoAud_seStart(Z2SE_OBJ_FIRE_IGNITION, &e_this->field_0x634, 0, 0);
            }
        } else {
            rv = 0;
            dComIfGp_evmng_cutEnd(e_this->field_0xa5c);
        }
    }

    return rv;
}

/* ############################################################################################## */
/* 8046B058-8046B05C 000094 0004+00 0/2 0/0 0/0 .rodata          @4461 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_4461 = 15.0f;
COMPILER_STRIP_GATE(0x8046B058, &lit_4461);
#pragma pop

/* 8046B05C-8046B060 000098 0004+00 0/1 0/0 0/0 .rodata          @4462 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_4462 = 235.0f;
COMPILER_STRIP_GATE(0x8046B05C, &lit_4462);
#pragma pop

/* 8046B060-8046B064 00009C 0004+00 0/1 0/0 0/0 .rodata          @4463 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_4463 = -240.0f;
COMPILER_STRIP_GATE(0x8046B060, &lit_4463);
#pragma pop

/* 8046B064-8046B068 0000A0 0004+00 0/2 0/0 0/0 .rodata          @4464 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_4464 = 1.0f / 5.0f;
COMPILER_STRIP_GATE(0x8046B064, &lit_4464);
#pragma pop

/* 8046B068-8046B06C 0000A4 0004+00 0/1 0/0 0/0 .rodata          @4465 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_4465 = 1.0f / 10.0f;
COMPILER_STRIP_GATE(0x8046B068, &lit_4465);
#pragma pop

/* 8046B06C-8046B070 0000A8 0004+00 0/1 0/0 0/0 .rodata          @4466 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_4466 = 500.0f;
COMPILER_STRIP_GATE(0x8046B06C, &lit_4466);
#pragma pop

/* 8046B070-8046B074 0000AC 0004+00 0/2 0/0 0/0 .rodata          @4467 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_4467 = 4.0f;
COMPILER_STRIP_GATE(0x8046B070, &lit_4467);
#pragma pop

/* 8046B128-8046B12C 000030 0004+00 0/1 0/0 0/0 .data            l_particle_fire_A$4270 */
#pragma push
#pragma force_active on
SECTION_DATA static u8 l_particle_fire_A[4] = {
    0x01,
    0x00,
    0x81,
    0x10,
};
#pragma pop

/* 8046B12C-8046B130 000034 0004+00 0/1 0/0 0/0 .data            l_particle_fire_B$4271 */
#pragma push
#pragma force_active on
static u8 l_particle_fire_B[4] = {
    1,
    1,
    0x81,
    17,
};
#pragma pop

/* 8046B130-8046B134 000038 0004+00 0/1 0/0 0/0 .data            l_particle_kagerou$4272 */
#pragma push
#pragma force_active on
SECTION_DATA static u8 l_particle_kagerou[4] = {
    0x01,
    0x03,
    0x81,
    0x12,
};
#pragma pop

/* 804697F4-80469EDC 001674 06E8+00 1/1 0/0 0/0 .text            ep_move__FP8ep_class */
static void ep_move(ep_class* e_this) {
    // NONMATCHING
}

/* 80469EDC-8046A0A8 001D5C 01CC+00 1/1 0/0 0/0 .text            daEp_set_mtx__FP8ep_class */
static void daEp_set_mtx(ep_class* e_this) {
    // NONMATCHING

    if (e_this->mpModel) {
        f32 fVar1 = 70.0f;
        if ((e_this->field_0xa5a & 1) != 0) {
            fVar1 = 140.0f;
        }

        MtxTrans(e_this->current.pos.x, e_this->current.pos.y, e_this->current.pos.z, 0);
        cMtx_YrotM(*calc_mtx, e_this->current.angle.y);
        MtxTrans(0.0f, fVar1, 0.0f, 1);
        cMtx_XrotM(*calc_mtx, e_this->shape_angle.x);
        MtxTrans(0.0f, -fVar1, 0.0f, 1);
        e_this->mpModel->setBaseTRMtx(*calc_mtx);

        e_this->field_0x5dc = e_this->field_0x634;
        e_this->field_0x5f4 = e_this->field_0x5e8;
        
        cXyz local_28;
        local_28.z = 0.0f;
        local_28.x = 0.0f;
        if ((e_this->field_0xa5a & 1) != 0) {
            local_28.y = 280.0f;
        } else {
            local_28.y = 140.0f;
        }
        MtxPosition(&local_28, &e_this->field_0x634);

        e_this->eyePos = e_this->field_0x634;
        e_this->eyePos.z += 20.0f;
        e_this->attention_info.position = e_this->eyePos;
        e_this->attention_info.position.y += 30.0f;

        local_28.y = 0.0f;
        MtxPosition(&local_28, &e_this->field_0x5e8);
    } else {
        e_this->field_0x634 = e_this->current.pos;
    }
}

/* ############################################################################################## */
/* 8046B07C-8046B080 0000B8 0004+00 0/1 0/0 0/0 .rodata          @4627 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_4627 = 8000.0f;
COMPILER_STRIP_GATE(0x8046B07C, &lit_4627);
#pragma pop

/* 8046B080-8046B084 0000BC 0004+00 0/1 0/0 0/0 .rodata          @4628 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_4628 = -100.0f;
COMPILER_STRIP_GATE(0x8046B080, &lit_4628);
#pragma pop

/* 8046B084-8046B088 0000C0 0004+00 0/1 0/0 0/0 .rodata          @4629 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_4629 = -9.0f / 10.0f;
COMPILER_STRIP_GATE(0x8046B084, &lit_4629);
#pragma pop

/* 8046B088-8046B08C 0000C4 0004+00 0/1 0/0 0/0 .rodata          @4630 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_4630 = 1000000.0f;
COMPILER_STRIP_GATE(0x8046B088, &lit_4630);
#pragma pop

/* 8046B08C-8046B090 0000C8 0004+00 0/1 0/0 0/0 .rodata          @4631 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_4631 = -30.0f;
COMPILER_STRIP_GATE(0x8046B08C, &lit_4631);
#pragma pop

/* 8046B090-8046B094 0000CC 0004+00 0/1 0/0 0/0 .rodata          @4632 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_4632 = 180.0f;
COMPILER_STRIP_GATE(0x8046B090, &lit_4632);
#pragma pop

/* 8046B094-8046B098 0000D0 0004+00 0/1 0/0 0/0 .rodata          @4633 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_4633 = 8.0f;
COMPILER_STRIP_GATE(0x8046B094, &lit_4633);
#pragma pop

/* 8046B098-8046B09C 0000D4 0004+00 0/1 0/0 0/0 .rodata          @4634 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_4634 = 11.0f / 20.0f;
COMPILER_STRIP_GATE(0x8046B098, &lit_4634);
#pragma pop

/* 8046B09C-8046B0A0 0000D8 0004+00 0/1 0/0 0/0 .rodata          @4635 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_4635 = 0.75f;
COMPILER_STRIP_GATE(0x8046B09C, &lit_4635);
#pragma pop

/* 8046B0A0-8046B0A4 0000DC 0004+00 0/1 0/0 0/0 .rodata          @4636 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_4636 = 3.0f / 40.0f;
COMPILER_STRIP_GATE(0x8046B0A0, &lit_4636);
#pragma pop

/* 8046B0A4-8046B0A8 0000E0 0004+00 0/1 0/0 0/0 .rodata          @4637 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_4637 = 2.0f / 5.0f;
COMPILER_STRIP_GATE(0x8046B0A4, &lit_4637);
#pragma pop

/* 8046B0A8-8046B0AC 0000E4 0004+00 0/1 0/0 0/0 .rodata          @4638 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_4638 = 1.0f / 25.0f;
COMPILER_STRIP_GATE(0x8046B0A8, &lit_4638);
#pragma pop

/* 8046B0AC-8046B0B0 0000E8 0004+00 1/2 0/0 0/0 .rodata          @4639 */
SECTION_RODATA static f32 const lit_4639 = -160.0f;
COMPILER_STRIP_GATE(0x8046B0AC, &lit_4639);

/* 8046B0B0-8046B0B4 0000EC 0004+00 1/2 0/0 0/0 .rodata          @4640 */
SECTION_RODATA static f32 const lit_4640 = 160.0f;
COMPILER_STRIP_GATE(0x8046B0B0, &lit_4640);

/* 8046B0B4-8046B0B8 0000F0 0004+00 0/1 0/0 0/0 .rodata          @4641 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_4641 = 40.0f;
COMPILER_STRIP_GATE(0x8046B0B4, &lit_4641);
#pragma pop

/* 8046B0B8-8046B0BC 0000F4 0004+00 0/1 0/0 0/0 .rodata          @4642 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_4642 = 110.0f;
COMPILER_STRIP_GATE(0x8046B0B8, &lit_4642);
#pragma pop

/* 8046B0BC-8046B0C0 0000F8 0004+00 0/1 0/0 0/0 .rodata          @4643 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_4643 = 3000.0f;
COMPILER_STRIP_GATE(0x8046B0BC, &lit_4643);
#pragma pop

/* 8046B0C0-8046B0C4 0000FC 0004+00 0/1 0/0 0/0 .rodata          @4644 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_4644 = 1000.0f;
COMPILER_STRIP_GATE(0x8046B0C0, &lit_4644);
#pragma pop

/* 8046B0C4-8046B0C8 000100 0004+00 0/1 0/0 0/0 .rodata          @4645 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_4645 = 2000.0f;
COMPILER_STRIP_GATE(0x8046B0C4, &lit_4645);
#pragma pop

/* 8046B134-8046B13C 00003C 0006+02 1/1 0/0 0/0 .data            eff_name$4560 */
SECTION_DATA static u8 eff_name[6 + 2 /* padding */] = {
    0x83,
    0x40,
    0x83,
    0x41,
    0x83,
    0x42,
    /* padding */
    0x00,
    0x00,
};

/* 8046A0A8-8046A6D4 001F28 062C+00 1/0 0/0 0/0 .text            daEp_Execute__FP8ep_class */
static void daEp_Execute(ep_class* e_this) {
    // NONMATCHING
    e_this->field_0x601 = 0;
    e_this->field_0x602 = 0;
    if (e_this->field_0x640) {
        e_this->field_0x640--;
    }

    if (e_this->mpModel) {
        cXyz local_78 = e_this->current.pos;
        if (e_this->field_0x640 != 0) {
            local_78.y -= 8000.0f;
        }

        e_this->mCyl.SetC(e_this->current.pos);
        dComIfG_Ccsp()->Set(&e_this->mCyl);

        if (e_this->field_0x640 == 0 && e_this->mCyl.ChkTgHit()) {
            e_this->field_0x640 = 10;
            daObj::HitSeStart(&e_this->current.pos, fopAcM_GetRoomNo(e_this), (dCcD_GObjInf*)11, 0x680); // ???
        }

        fopAcM_rollPlayerCrash(e_this, 35.0f, 0, 200.0f, -100.0f, 0, -0.8999999761581421);
        mDoLib_clipper::changeFar(1000000.0f);
        e_this->field_0x602 = fopAcM_checkCullingBox(e_this->mpModel->mBaseTransformMtx, -30.0f, 0.0f, -30.0f, 30.0f, 180.0f, 30.0f);
        mDoLib_clipper::resetFar();
    }

    for (int i = 0; i < 3; i++) {
        if (e_this->field_0x5c8[i]) {
            e_this->field_0x5c8[i]--;
        }
    }

    if (e_this->field_0x5ce && e_this->field_0x5ce < 10000) {
        e_this->field_0x5ce--;
    }

    if (!dComIfGp_event_runCheck() && e_this->field_0xa5b != 0) {
        e_this->field_0xa5b--;
    }

    if (!e_this->field_0x5c8[0]) {
        e_this->field_0x5c8[0] = cM_rndF(5.0f);
        e_this->field_0x5c4 = cM_rndF(4.0f) + 8.0f;
    }

    if (!e_this->field_0x5c8[1]) {
        if (e_this->field_0xa50) {
            e_this->field_0x5c8[1] = cM_rndF(5.0f);
            e_this->field_0x5bc = cM_rndF(0.2f) + 0.55f;
        } else {
            e_this->field_0x5c8[1] = cM_rndF(6.0f) + 3.0f;
            e_this->field_0x5bc = cM_rndF(0.075f) + 0.75f;
        }
    }

    cLib_addCalc2(&e_this->field_0x5c0, e_this->field_0x5c4, 1.0f, 1.0f);
    cLib_addCalc2(&e_this->field_0x5b8, e_this->field_0x5bc, 0.4f, 0.04f);

    mDoLib_clipper::changeFar(1000000.0f);
    e_this->field_0x601 = fopAcM_checkCullingBox(e_this->field_0x570, -160.0f, -160.0f, -160.0f, 160.0f, 160.0f, 160.0f);
    mDoLib_clipper::resetFar();

    if (e_this->field_0xa79 == 0) {
        ep_move(e_this);
        if (e_this->mCyl.ChkTgHit()) {
            e_this->mAtInfo.mpCollider = e_this->mCyl.GetTgHitObj();
            if (e_this->mAtInfo.mpCollider && at_power_check(&e_this->mAtInfo)) {
                if (e_this->mAtInfo.mpCollider->ChkAtType(0x10040) || e_this->mAtInfo.mAttackPower >= 10) {
                    e_this->field_0xa79 = 1;
                    if (e_this->mAtInfo.mHitType == 1) {
                        dScnPly_c::setPauseTimer(2);
                    }

                    mDoAud_seStart(JA_SE_OBJ_BREAK_WOOD_L, &e_this->field_0x634, 0, 0);
                    dKy_plight_cut(&e_this->mLightInf);
                }
            }
        }
    }

    fopAcM_OffStatus(e_this, 0);
    e_this->attention_info.flags = 0;
    cLib_offBit<u32>(e_this->attention_info.flags, 4);

    if (e_this->field_0xa79 == 1) {
        e_this->field_0xa79 = 2;
        e_this->mpModel = NULL;
        ep_hahen_s* epHahenS = e_this->mHahen;
        
        f32 fVar1 = 0.0f;
        f32 fVar2 = 10.0f;
        f32 fVar3 = 3000.0f;
        f32 fVar4 = 20.0f;
        for (int i = 0; i < 6; i++) {
            epHahenS[i].field_0x97 = 1;
            epHahenS[i].field_0x4 = e_this->home.pos;
            if (i < 3) {
                epHahenS[i].field_0x4.y += 40.0f;
                epHahenS[i].field_0x28.z = 0x363c;
            } else {
                epHahenS[i].field_0x4.y += 110.0f;
                epHahenS[i].field_0x28.z = -0x363c;
            }
            epHahenS[i].field_0x28.y = (i * 0x5555) + 1000;

            cMtx_YrotS(*calc_mtx, epHahenS[i].field_0x28.y);
            cXyz local_84(fVar1, fVar1, fVar2);
            cXyz cStack_90;
            MtxPosition(&local_84, &cStack_90);
            epHahenS[i].field_0x4 += cStack_90;

            epHahenS[i].field_0x90 = fVar3 + cM_rndF(1000.0f);
            epHahenS[i].field_0x92 = cM_rndFX(2000.0f);
            epHahenS[i].field_0x1c.y = fVar4 + cM_rndF(15.0f);
            epHahenS[i].field_0x1c.x = cM_rndFX(15.0f);
            epHahenS[i].field_0x1c.z = cM_rndFX(15.0f);
            epHahenS[i].field_0x96 = 0;
        }
    }
}

/* 8046A6D4-8046A6DC 002554 0008+00 1/0 0/0 0/0 .text            daEp_IsDelete__FP8ep_class */
static bool daEp_IsDelete(ep_class* e_this) {
    return true;
}

/* 8046A6DC-8046A724 00255C 0048+00 1/0 0/0 0/0 .text            daEp_Delete__FP8ep_class */
static int daEp_Delete(ep_class* e_this) {
    dComIfG_resDelete(&e_this->mPhase, "Ep");
    dKy_plight_cut(&e_this->mLightInf);
    return 1;
}

/* ############################################################################################## */
/* 8046B13C-8046B15C 000044 0020+00 1/1 0/0 0/0 .data            model_d */
static int model_d[8] = {
    3,4, 5, 6, 6, 6, 6, 6,
};

/* 8046A724-8046A858 0025A4 0134+00 1/1 0/0 0/0 .text            daEp_CreateHeap__FP10fopAc_ac_c */
static int daEp_CreateHeap(fopAc_ac_c* a_this) {
    // NONMATCHING
    ep_class* e_this = (ep_class*)a_this;

    J3DModelData* modelData = (J3DModelData*)dComIfG_getObjectRes("Ep", model_d[e_this->field_0xa5a]);
    JUT_ASSERT(0x855, modelData != 0);

    e_this->mpModel = mDoExt_J3DModel__create(modelData, 0x80000, 0x11000084);
    if (e_this->mpModel == NULL) {
        return 0;
    } else {
        MtxScale(0.0f, 0.0f, 0.0f, 0);
        e_this->mpModel->setBaseTRMtx(*calc_mtx);

        modelData = (J3DModelData*)dComIfG_getObjectRes("Ep", 7);
        JUT_ASSERT(0x884, modelData != 0);

        for (int i = 0; i < 6; i++) {
            e_this->mHahen[i].mpModel = mDoExt_J3DModel__create(modelData, 0x80000, 0x11000084);
            if (e_this->mHahen[i].mpModel == NULL) {
                return 0;
            }
        }
    }

    return 1;
}

/* 8046A858-8046A8D4 0026D8 007C+00 1/1 0/0 0/0 .text            daEp_CreateInit__FP10fopAc_ac_c */
static void daEp_CreateInit(fopAc_ac_c* a_this) {
    // NONMATCHING
    ep_class* e_this = (ep_class*)a_this;

    e_this->field_0x5a4 = 0;
    e_this->field_0x60d = 0;
    e_this->cullMtx = e_this->field_0x570;
    fopAcM_SetMin(e_this, -160.0f, -160.0f, -160.0f);
    fopAcM_SetMax(e_this, 160.0f, 160.0f, 160.0f);
    daEp_set_mtx(e_this);
    e_this->field_0x601 = 0;
    e_this->field_0x602 = 0;
}

/* 8046A8D4-8046AB2C 002754 0258+00 1/0 0/0 0/0 .text            daEp_Create__FP10fopAc_ac_c */
static int daEp_Create(fopAc_ac_c* a_this) {
    // NONMATCHING
    static dCcD_SrcSph sph_src = {
        {
            {0x0, {{0x0, 0x0, 0x10}, {0x20, 0x11}, 0x0}}, // mObj
            {dCcD_SE_NONE, 0x0, 0x0, 0x0, 0x0}, // mGObjAt
            {dCcD_SE_NONE, 0x0, 0x0, 0x1, 0x0}, // mGObjTg
            {0x0}, // mGObjCo
        }, // mObjInf
        {
            {{0.0f, 0.0f, 0.0f}, 40.0f} // mSph
        } // mSphAttr
    };

    static dCcD_SrcCyl co_cyl_src = {
        {
            {0x0, {{0x0, 0x0, 0x0}, {0xd8fbfdbf, 0x1f}, 0x79}}, // mObj
            {dCcD_SE_NONE, 0x0, 0x0, 0x0, 0x0}, // mGObjAt
            {dCcD_SE_NONE, 0x0, 0x0, 0x0, 0x2}, // mGObjTg
            {0x0}, // mGObjCo
        }, // mObjInf
        {
            {0.0f, 0.0f, 0.0f}, // mCenter
            35.0f, // mRadius
            120.0f // mHeight
        } // mCyl
    };

    static dCcD_SrcSph at_sph_src = {
        {
            {0x0, {{AT_TYPE_THROW_OBJ, 0x0, 0x1f}, {0x0, 0x0}, 0x0}}, // mObj
            {dCcD_SE_THROW_OBJ, 0x1, 0x0, 0x0, 0x1}, // mGObjAt
            {dCcD_SE_NONE, 0x0, 0x0, 0x0, 0x2}, // mGObjTg
            {0x0}, // mGObjCo
        }, // mObjInf
        {
            {{0.0f, 0.0f, 0.0f}, 40.0f} // mSph
        } // mSphAttr
    };

    int rv;
    ep_class* i_this = (ep_class*)a_this;
    fopAcM_SetupActor(a_this, ep_class);

    rv = dComIfG_resLoad(&i_this->mPhase, "Ep");
    if (rv == cPhs_COMPLEATE_e) {
        if (fopAcM_GetParam(i_this) & 8) {
            i_this->field_0x60c = fopAcM_GetParam(i_this) & 7;
            i_this->field_0x60c += 1;
            i_this->field_0x60c &= 1;
            i_this->field_0xa5a = -1;
        } else {
            i_this->field_0xa5a = fopAcM_GetParam(i_this) & 7;
            i_this->field_0xa5a += 1;
            i_this->field_0xa5a &= 7;
        }
    
        i_this->field_0x609 = fopAcM_GetParam(i_this) >> 8;
        i_this->field_0x60b = fopAcM_GetParam(i_this) >> 16;
        i_this->field_0x60a = fopAcM_GetParam(i_this) >> 24;

        i_this->mStts.Init(0xff, 0xff, i_this);
        i_this->mSph1.Set(sph_src);
        i_this->mSph1.SetStts(&i_this->mStts);

        if (i_this->field_0x60c == 1) {
            i_this->mSph1.SetR(70.0f);
        }

        if (i_this->field_0xa5a < 0) {
            #ifdef DEBUG
            OSReport("   /////   EP PARAM %x\n");
            #endif
        } else {
            if (!fopAcM_entrySolidHeap(i_this, daEp_CreateHeap, 0x4b000)) {
                return cPhs_ERROR_e;
            }

            i_this->mCyl.Set(co_cyl_src);
            i_this->mCyl.SetStts(&i_this->mStts);
            i_this->mCyl.OnTgNoHitMark();

            if ((i_this->field_0xa5a & 1) != 0) {
                i_this->mCyl.SetH(240.0f);
            }
        }

        daEp_CreateInit(i_this);
        if (i_this->field_0x60a != 0xff) {
            if (!dComIfGs_isSwitch(i_this->field_0x60a, fopAcM_GetRoomNo(i_this))) {
                i_this->field_0x60d = i_this->field_0x60a + 1;
            }
        }

        i_this->field_0x5ce = 20000;
        dKy_plight_set(&i_this->mLightInf);
        i_this->field_0xe6c = cM_rndF(255.0f);
    }

    i_this->field_0xa5c = -1;
    i_this->attention_info.distances[4] = 7;
    fopAcM_OnCarryType(i_this, fopAcM_CARRY_UNK_30);

    i_this->mSph2.Set(at_sph_src);
    i_this->mSph2.SetStts(&i_this->mStts);
    i_this->mSph2.OffAtVsPlayerBit();
    i_this->field_0xa5b = 60;

    return rv;
}

/* ############################################################################################## */
/* 8046B220-8046B240 -00001 0020+00 1/0 0/0 0/0 .data            l_daEp_Method */
SECTION_DATA static void* l_daEp_Method[8] = {
    (void*)daEp_Create__FP10fopAc_ac_c,
    (void*)daEp_Delete__FP8ep_class,
    (void*)daEp_Execute__FP8ep_class,
    (void*)daEp_IsDelete__FP8ep_class,
    (void*)daEp_Draw__FP8ep_class,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
};

/* 8046B240-8046B270 -00001 0030+00 0/0 0/0 1/0 .data            g_profile_EP */
SECTION_DATA extern void* g_profile_EP[12] = {
    (void*)0xFFFFFFFD, (void*)0x0007FFFD,     (void*)0x01050000, (void*)&g_fpcLf_Method,
    (void*)0x00000E70, (void*)NULL,           (void*)NULL,       (void*)&g_fopAc_Method,
    (void*)0x02B30000, (void*)&l_daEp_Method, (void*)0x10244000, (void*)0x000E0000,
};

/* 8046B270-8046B27C 000178 000C+00 2/2 0/0 0/0 .data            __vt__10cCcD_GStts */
SECTION_DATA extern void* __vt__10cCcD_GStts[3] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__10cCcD_GSttsFv,
};

/* 8046B27C-8046B288 000184 000C+00 1/1 0/0 0/0 .data            __vt__10dCcD_GStts */
SECTION_DATA extern void* __vt__10dCcD_GStts[3] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__10dCcD_GSttsFv,
};

/* 8046B288-8046B2B8 000190 0030+00 3/3 0/0 0/0 .data            __vt__14dBgS_ObjGndChk */
SECTION_DATA extern void* __vt__14dBgS_ObjGndChk[12] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__14dBgS_ObjGndChkFv,
    (void*)NULL,
    (void*)NULL,
    (void*)func_8046AFA4,
    (void*)NULL,
    (void*)NULL,
    (void*)func_8046AFB4,
    (void*)NULL,
    (void*)NULL,
    (void*)func_8046AFAC,
};

/* 8046B2B8-8046B2C4 0001C0 000C+00 2/2 0/0 0/0 .data            __vt__8cM3dGSph */
SECTION_DATA extern void* __vt__8cM3dGSph[3] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__8cM3dGSphFv,
};

/* 8046B2C4-8046B2D0 0001CC 000C+00 2/2 0/0 0/0 .data            __vt__8cM3dGCyl */
SECTION_DATA extern void* __vt__8cM3dGCyl[3] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__8cM3dGCylFv,
};

/* 8046B2D0-8046B2DC 0001D8 000C+00 2/2 0/0 0/0 .data            __vt__8cM3dGAab */
SECTION_DATA extern void* __vt__8cM3dGAab[3] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__8cM3dGAabFv,
};

/* 8046AB2C-8046ACC0 0029AC 0194+00 1/1 0/0 0/0 .text            __ct__8ep_classFv */
ep_class::ep_class() {
    // NONMATCHING
}

/* 8046ACC0-8046AD44 002B40 0084+00 1/1 0/0 0/0 .text            __dt__10ep_hahen_sFv */
ep_hahen_s::~ep_hahen_s() {
    // NONMATCHING
}

/* 8046AD44-8046ADB0 002BC4 006C+00 1/1 0/0 0/0 .text            __ct__10ep_hahen_sFv */
ep_hahen_s::ep_hahen_s() {
    // NONMATCHING
}

/* 8046B0D0-8046B0D0 00010C 0000+00 0/0 0/0 0/0 .rodata          @stringBase0 */
