//
// Generated By: dol2asm
// Translation Unit: d/map/d_map
//

#include "d/map/d_map.h"
#include "dol2asm.h"

//
// Types:
//

struct renderingPlusDoor_c {
    /* 8002B0B4 */ ~renderingPlusDoor_c();
};

struct dTres_c {
    struct typeGroupData_c {};

    struct data_s {};

    /* 8009C4B0 */ void getTypeToTypeGroupNo(u8);
};

struct renderingPlusDoorAndCursor_c {
    /* 8002B008 */ ~renderingPlusDoorAndCursor_c();
    /* 800402FC */ void afterDrawPath();
    /* 80040A94 */ void getFirstData(u8);
    /* 80040AB8 */ void getNextData(dTres_c::typeGroupData_c*);
    /* 80040ADC */ void getIconPosition(dTres_c::typeGroupData_c*) const;
};

struct dDrawPath_c {
    struct room_class {};

    struct line_class {};

    struct poly_class {};

    struct group_class {};

    /* 8002ABF0 */ bool isDrawType(int);
    /* 8002AD3C */ ~dDrawPath_c();
    /* 8002AD84 */ void getLineColor(int, int);
    /* 8003CA40 */ void rendering(dDrawPath_c::poly_class const*);
    /* 8003CC24 */ void rendering(dDrawPath_c::room_class const*);
    /* 8003C94C */ void rendering(dDrawPath_c::line_class const*);
    /* 8003CCC4 */ void drawPath();
};

struct Vec {};

struct renderingDAmap_c {
    /* 8002B150 */ ~renderingDAmap_c();
    /* 8003FCC8 */ void init(u8*, u16, u16, u16, u16);
    /* 8003FD08 */ void entry(f32, f32, f32, int, s8);
    /* 8003FD9C */ void isSwitch(dDrawPath_c::group_class const*);
    /* 8003FE18 */ void draw();
    /* 8003FE4C */ void getBackColor() const;
    /* 8003FE54 */ void isRenderingFloor(int);
    /* 8003FE70 */ void isDrawRoom(int, int) const;
    /* 8003FF14 */ void preDrawPath();
    /* 8003FFC4 */ void postDrawPath();
    /* 8003FFEC */ void getRoomNoSingle();
    /* 80040134 */ void getFirstRoomPointer();
    /* 800401E8 */ void getNextRoomPointer();
    /* 800402C0 */ void isDrawPath();
    /* 800402E0 */ bool getFirstDrawLayerNo();
    /* 800402E8 */ void getNextDrawLayerNo(int);
    /* 800409B4 */ void isDrawRoomIcon(int, int) const;
    /* 800409E0 */ void isDrawIconSingle(dTres_c::data_s const*, int, int, bool, bool,
                                         Vec const*) const;
    /* 80040AE4 */ void getIconGroupNumber(u8) const;
};

struct renderingAmap_c {
    /* 800284BC */ void getIconSize(u8) const;
    /* 800284D0 */ void draw();
    /* 800288C4 */ void getDispType() const;
    /* 80028960 */ void beforeDrawPath();
    /* 800289D0 */ void afterDrawPath();
    /* 80028A30 */ void rendering(dDrawPath_c::line_class const*);
    /* 80028B3C */ void rendering(dDrawPath_c::poly_class const*);
    /* 800289F0 */ void rendering(dDrawPath_c::room_class const*);
    /* 80028A10 */ void drawPath();
    /* 80028B04 */ void getPlayerCursorSize();
    /* 80028B10 */ void getRestartCursorSize();
    /* 80028BB4 */ void isDrawOutSideTrim();
    /* 80028C4C */ void getOutSideBlackLineNumber();
    /* 80028C60 */ void isOutSideBlackLine();
    /* 80028C90 */ void getLineWidthSub(int);
    /* 80028CF4 */ void getDecorationLineWidth(int);
    /* 80028DD4 */ void getLineWidth(int);
    /* 80028EE4 */ void getLineColor(int, int);
    /* 80028FB4 */ void getDecoLineColor(int, int);
    /* 80029058 */ void getIconGroupNumber(u8) const;
    /* 80029078 */ void hasMap() const;
    /* 800290C0 */ void isRendDoor() const;
    /* 80029104 */ bool isCheckFloor() const;
    /* 8002910C */ bool isRendRestart() const;
    /* 80029114 */ bool isRendCursor() const;
    /* 8002911C */ void isRendAllRoom() const;
    /* 80029160 */ void getStayType() const;
    /* 80029190 */ void isDrawIconSingle2(dTres_c::data_s const*, bool, bool, int) const;
    /* 8002ADB0 */ ~renderingAmap_c();
    /* 8002AE6C */ renderingAmap_c();
    /* 8002B000 */ bool isRendIcon() const;
};

struct dSv_memBit_c {
    /* 800347E8 */ void isTbox(int) const;
    /* 80034934 */ void isDungeonItem(int) const;
};

struct dSv_info_c {
    /* 80035360 */ void isSwitch(int, int) const;
};

struct dSv_event_flag_c {
    static u8 saveBitLabels[1644 + 4 /* padding */];
};

struct dSv_event_c {
    /* 800349BC */ void isEventBit(u16) const;
};

struct dSv_danBit_c {
    /* 80034BE8 */ void isSwitch(int) const;
};

struct dStage_roomControl_c {
    static u8 mStatus[65792];
};

struct dRes_info_c {};

struct dRes_control_c {
    /* 8003C2EC */ void getRes(char const*, s32, dRes_info_c*, int);
};

struct ResTIMG {};

struct dRenderingMap_c {
    /* 8002AC74 */ ~dRenderingMap_c();
    /* 8003CD38 */ void makeResTIMG(ResTIMG*, u16, u16, u8*, u8*, u16) const;
};

struct dRenderingFDAmap_c {
    /* 8002ABF8 */ ~dRenderingFDAmap_c();
    /* 8003D188 */ void preRenderingMap();
    /* 8003D320 */ void postRenderingMap();
    /* 8003D3C0 */ void renderingDecoration(dDrawPath_c::line_class const*);
};

struct dMpath_c {
    static f32 mMinX;
    static f32 mMaxX;
    static f32 mMinZ;
    static f32 mMaxZ;
};

struct dMap_c {
    /* 80028DF4 */ void getColor(int);
    /* 80029038 */ void getIconPosition(dTres_c::typeGroupData_c*) const;
    /* 800296EC */ void isDrawType(int);
    /* 800296F8 */ void isRendAllRoom() const;
    /* 80029744 */ bool isSpecialOutline();
    /* 8002974C */ void copyPalette();
    /* 8002A064 */ void copyPalette(int, int, f32);
    /* 80029F84 */ void setMapPaletteColorAlphaPer(int, f32);
    /* 800297A8 */ void setMapPaletteColorAlphaPer(int, int, f32);
    /* 80029818 */ void resCopy();
    /* 80029874 */ dMap_c(int, int, int, int);
    /* 80029A1C */ void _remove();
    /* 80029A8C */ void getMapMinMaxXZ(int, f32*, f32*, f32*, f32*);
    /* 80029C10 */ void getPack(int, f32*, f32*);
    /* 80029D78 */ void calcMapCenterXZ(int, f32*, f32*);
    /* 80029E1C */ void calcMapCmPerTexel(int, f32*);
    /* 8002A148 */ void setAmapPaletteColor(int, u8, u8, u8, u8);
    /* 8002A1BC */ void getDispType() const;
    /* 8002A1DC */ void isDrawRoom(int, int) const;
    /* 8002A254 */ void getRoomNoSingle();
    /* 8002A294 */ void isDrawRoomIcon(int, int) const;
    /* 8002A32C */ void _move(f32, f32, int, f32);
    /* 8002AB54 */ void _draw();
    /* 8002ABAC */ void getFirstData(u8);
    /* 8002ABCC */ void getNextData(dTres_c::typeGroupData_c*);
    /* 8002AF20 */ ~dMap_c();
};

struct dMap_HIO_prm_res_dst_s {
    static u8 m_res[4 + 4 /* padding */];
};

struct dMapInfo_n {
    /* 8003ECA0 */ void chkGetCompass();
    /* 8003ECD8 */ void chkGetMap();
    /* 8003ED10 */ void isVisitedRoom(int);
    /* 8003F1F4 */ void getRoomMinMaxXZ(int, f32*, f32*, f32*, f32*);
};

struct dMapInfo_c {
    /* 8003F6C8 */ void move(int, f32);

    static u32 mNextRoomNo;
};

struct dDrawPathWithNormalPattern_c {
    /* 8002ACE0 */ ~dDrawPathWithNormalPattern_c();
};

struct dDlst_base_c {
    /* 8002ABEC */ void draw();
};

struct JMath {
    static u8 sincosTable_[65536];
};

//
// Forward References:
//

extern "C" void getIconSize__15renderingAmap_cCFUc();
extern "C" void draw__15renderingAmap_cFv();
extern "C" void getDispType__15renderingAmap_cCFv();
extern "C" void beforeDrawPath__15renderingAmap_cFv();
extern "C" void afterDrawPath__15renderingAmap_cFv();
extern "C" void rendering__15renderingAmap_cFPCQ211dDrawPath_c10room_class();
extern "C" void drawPath__15renderingAmap_cFv();
extern "C" void rendering__15renderingAmap_cFPCQ211dDrawPath_c10line_class();
extern "C" void getPlayerCursorSize__15renderingAmap_cFv();
extern "C" void getRestartCursorSize__15renderingAmap_cFv();
extern "C" void rendering__15renderingAmap_cFPCQ211dDrawPath_c10poly_class();
extern "C" void isDrawOutSideTrim__15renderingAmap_cFv();
extern "C" void getOutSideBlackLineNumber__15renderingAmap_cFv();
extern "C" void isOutSideBlackLine__15renderingAmap_cFv();
extern "C" void getLineWidthSub__15renderingAmap_cFi();
extern "C" void getDecorationLineWidth__15renderingAmap_cFi();
extern "C" void getLineWidth__15renderingAmap_cFi();
extern "C" void getColor__6dMap_cFi();
extern "C" void getLineColor__15renderingAmap_cFii();
extern "C" void getDecoLineColor__15renderingAmap_cFii();
extern "C" void getIconPosition__6dMap_cCFPQ27dTres_c15typeGroupData_c();
extern "C" void getIconGroupNumber__15renderingAmap_cCFUc();
extern "C" void hasMap__15renderingAmap_cCFv();
extern "C" void isRendDoor__15renderingAmap_cCFv();
extern "C" bool isCheckFloor__15renderingAmap_cCFv();
extern "C" bool isRendRestart__15renderingAmap_cCFv();
extern "C" bool isRendCursor__15renderingAmap_cCFv();
extern "C" void isRendAllRoom__15renderingAmap_cCFv();
extern "C" void getStayType__15renderingAmap_cCFv();
extern "C" void isDrawIconSingle2__15renderingAmap_cCFPCQ27dTres_c6data_sbbi();
extern "C" void isDrawType__6dMap_cFi();
extern "C" void isRendAllRoom__6dMap_cCFv();
extern "C" bool isSpecialOutline__6dMap_cFv();
extern "C" void copyPalette__6dMap_cFv();
extern "C" void setMapPaletteColorAlphaPer__6dMap_cFiif();
extern "C" void resCopy__6dMap_cFv();
extern "C" void __ct__6dMap_cFiiii();
extern "C" void _remove__6dMap_cFv();
extern "C" void getMapMinMaxXZ__6dMap_cFiPfPfPfPf();
extern "C" void getPack__6dMap_cFiPfPf();
extern "C" void calcMapCenterXZ__6dMap_cFiPfPf();
extern "C" void calcMapCmPerTexel__6dMap_cFiPf();
extern "C" void setMapPaletteColorAlphaPer__6dMap_cFif();
extern "C" void copyPalette__6dMap_cFiif();
extern "C" void setAmapPaletteColor__6dMap_cFiUcUcUcUc();
extern "C" void getDispType__6dMap_cCFv();
extern "C" void isDrawRoom__6dMap_cCFii();
extern "C" void getRoomNoSingle__6dMap_cFv();
extern "C" void isDrawRoomIcon__6dMap_cCFii();
extern "C" void _move__6dMap_cFffif();
extern "C" void _draw__6dMap_cFv();
extern "C" void getFirstData__6dMap_cFUc();
extern "C" void getNextData__6dMap_cFPQ27dTres_c15typeGroupData_c();
extern "C" void draw__12dDlst_base_cFv();
extern "C" bool isDrawType__11dDrawPath_cFi();
extern "C" void __dt__18dRenderingFDAmap_cFv();
extern "C" void __dt__15dRenderingMap_cFv();
extern "C" void __dt__28dDrawPathWithNormalPattern_cFv();
extern "C" void __dt__11dDrawPath_cFv();
extern "C" void getLineColor__11dDrawPath_cFii();
extern "C" void __dt__15renderingAmap_cFv();
extern "C" void __ct__15renderingAmap_cFv();
extern "C" void __dt__6dMap_cFv();
extern "C" bool isRendIcon__15renderingAmap_cCFv();
extern "C" void __dt__28renderingPlusDoorAndCursor_cFv();
extern "C" void __dt__19renderingPlusDoor_cFv();
extern "C" void __dt__16renderingDAmap_cFv();
extern "C" extern char const* const d_map_d_map__stringBase0;
extern "C" u8 m_res__22dMap_HIO_prm_res_dst_s[4 + 4 /* padding */];

//
// External References:
//

extern "C" void dComIfGp_isLightDropMapVisible__Fv();
extern "C" void isTbox__12dSv_memBit_cCFi();
extern "C" void isDungeonItem__12dSv_memBit_cCFi();
extern "C" void isEventBit__11dSv_event_cCFUs();
extern "C" void isSwitch__12dSv_danBit_cCFi();
extern "C" void isSwitch__10dSv_info_cCFii();
extern "C" void getRes__14dRes_control_cFPCclP11dRes_info_ci();
extern "C" void rendering__11dDrawPath_cFPCQ211dDrawPath_c10line_class();
extern "C" void rendering__11dDrawPath_cFPCQ211dDrawPath_c10poly_class();
extern "C" void rendering__11dDrawPath_cFPCQ211dDrawPath_c10room_class();
extern "C" void drawPath__11dDrawPath_cFv();
extern "C" void makeResTIMG__15dRenderingMap_cCFP7ResTIMGUsUsPUcPUcUs();
extern "C" void preRenderingMap__18dRenderingFDAmap_cFv();
extern "C" void postRenderingMap__18dRenderingFDAmap_cFv();
extern "C" void renderingDecoration__18dRenderingFDAmap_cFPCQ211dDrawPath_c10line_class();
extern "C" void chkGetCompass__10dMapInfo_nFv();
extern "C" void chkGetMap__10dMapInfo_nFv();
extern "C" void isVisitedRoom__10dMapInfo_nFi();
extern "C" void getRoomMinMaxXZ__10dMapInfo_nFiPfPfPfPf();
extern "C" void move__10dMapInfo_cFif();
extern "C" void init__16renderingDAmap_cFPUcUsUsUsUs();
extern "C" void entry__16renderingDAmap_cFfffiSc();
extern "C" void isSwitch__16renderingDAmap_cFPCQ211dDrawPath_c11group_class();
extern "C" void draw__16renderingDAmap_cFv();
extern "C" void getBackColor__16renderingDAmap_cCFv();
extern "C" void isRenderingFloor__16renderingDAmap_cFi();
extern "C" void isDrawRoom__16renderingDAmap_cCFii();
extern "C" void preDrawPath__16renderingDAmap_cFv();
extern "C" void postDrawPath__16renderingDAmap_cFv();
extern "C" void getRoomNoSingle__16renderingDAmap_cFv();
extern "C" void getFirstRoomPointer__16renderingDAmap_cFv();
extern "C" void getNextRoomPointer__16renderingDAmap_cFv();
extern "C" void isDrawPath__16renderingDAmap_cFv();
extern "C" bool getFirstDrawLayerNo__16renderingDAmap_cFv();
extern "C" void getNextDrawLayerNo__16renderingDAmap_cFi();
extern "C" void afterDrawPath__28renderingPlusDoorAndCursor_cFv();
extern "C" void isDrawRoomIcon__16renderingDAmap_cCFii();
extern "C" void isDrawIconSingle__16renderingDAmap_cCFPCQ27dTres_c6data_siibbPC3Vec();
extern "C" void getFirstData__28renderingPlusDoorAndCursor_cFUc();
extern "C" void getNextData__28renderingPlusDoorAndCursor_cFPQ27dTres_c15typeGroupData_c();
extern "C" void getIconPosition__28renderingPlusDoorAndCursor_cCFPQ27dTres_c15typeGroupData_c();
extern "C" void getIconGroupNumber__16renderingDAmap_cCFUc();
extern "C" void getTypeToTypeGroupNo__7dTres_cFUc();
extern "C" void cLib_memCpy__FPvPCvUl();
extern "C" void* __nw__FUli();
extern "C" void* __nwa__FUli();
extern "C" void __dl__FPv();
extern "C" void __dla__FPv();
extern "C" void DCStoreRange();
extern "C" void GXGetTexBufferSize();
extern "C" void _savegpr_22();
extern "C" void _savegpr_27();
extern "C" void _savegpr_28();
extern "C" void _savegpr_29();
extern "C" void _restgpr_22();
extern "C" void _restgpr_27();
extern "C" void _restgpr_28();
extern "C" void _restgpr_29();
extern "C" void strcmp();
extern "C" u8 saveBitLabels__16dSv_event_flag_c[1644 + 4 /* padding */];
extern "C" extern void* __vt__18dRenderingFDAmap_c[26];
extern "C" extern void* __vt__11dDrawPath_c[16];
extern "C" extern void* __vt__19renderingPlusDoor_c[41];
extern "C" extern void* __vt__28renderingPlusDoorAndCursor_c[47];
extern "C" extern void* __vt__16renderingDAmap_c[38];
extern "C" u8 mStatus__20dStage_roomControl_c[65792];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 g_Counter[12 + 4 /* padding */];
extern "C" u8 sincosTable___5JMath[65536];
extern "C" u32 mNextRoomNo__10dMapInfo_c;
extern "C" extern u8 mNowStayFloorNo__10dMapInfo_c[4];
extern "C" extern u8 mNowStayFloorNoDecisionFlg__10dMapInfo_c[4];
extern "C" f32 mMinX__8dMpath_c;
extern "C" f32 mMaxX__8dMpath_c;
extern "C" f32 mMinZ__8dMpath_c;
extern "C" f32 mMaxZ__8dMpath_c;

//
// Declarations:
//

/* ############################################################################################## */
/* 80378E48-80378E8C 0054A8 0044+00 2/2 0/0 0/0 .rodata          l_iconSize$3698 */
SECTION_RODATA static u8 const l_iconSize[68] = {
    0x3D, 0xF5, 0xC2, 0x8F, 0x3D, 0xF5, 0xC2, 0x8F, 0x3D, 0xA3, 0xD7, 0x0A, 0x3D, 0xF5,
    0xC2, 0x8F, 0x3D, 0xA3, 0xD7, 0x0A, 0x3E, 0x23, 0xD7, 0x0A, 0x3D, 0xF5, 0xC2, 0x8F,
    0x00, 0x00, 0x00, 0x00, 0x3D, 0xF5, 0xC2, 0x8F, 0x3D, 0xA3, 0xD7, 0x0A, 0x3D, 0xA3,
    0xD7, 0x0A, 0x3D, 0xA3, 0xD7, 0x0A, 0x3D, 0xA3, 0xD7, 0x0A, 0x3D, 0xA3, 0xD7, 0x0A,
    0x3D, 0xA3, 0xD7, 0x0A, 0x3D, 0xA3, 0xD7, 0x0A, 0x3D, 0xA3, 0xD7, 0x0A,
};
COMPILER_STRIP_GATE(0x80378E48, &l_iconSize);

/* 800284BC-800284D0 022DFC 0014+00 2/0 0/0 0/0 .text            getIconSize__15renderingAmap_cCFUc
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void renderingAmap_c::getIconSize(u8 param_0) const {
    nofralloc
#include "asm/d/map/d_map/getIconSize__15renderingAmap_cCFUc.s"
}
#pragma pop

/* ############################################################################################## */
/* 80450D80-80450D88 000280 0004+04 10/10 0/0 0/0 .sbss            m_res__22dMap_HIO_prm_res_dst_s
 */
u8 dMap_HIO_prm_res_dst_s::m_res[4 + 4 /* padding */];

/* 80451CA0-80451CA4 0002A0 0004+00 4/4 0/0 0/0 .sdata2          @3745 */
SECTION_SDATA2 static f32 lit_3745 = 0.5f;

/* 80451CA4-80451CA8 0002A4 0004+00 1/1 0/0 0/0 .sdata2          @3746 */
SECTION_SDATA2 static f32 lit_3746 = 65536.0f;

/* 80451CA8-80451CB0 0002A8 0004+04 1/1 0/0 0/0 .sdata2          @3747 */
SECTION_SDATA2 static f32 lit_3747[1 + 1 /* padding */] = {
    32768.0f,
    /* padding */
    0.0f,
};

/* 80451CB0-80451CB8 0002B0 0008+00 5/5 0/0 0/0 .sdata2          @3749 */
SECTION_SDATA2 static f64 lit_3749 = 4503599627370496.0 /* cast u32 to float */;

/* 80451CB8-80451CC0 0002B8 0008+00 4/4 0/0 0/0 .sdata2          @3751 */
SECTION_SDATA2 static f64 lit_3751 = 4503601774854144.0 /* cast s32 to float */;

/* 800284D0-800288C4 022E10 03F4+00 2/0 0/0 0/0 .text            draw__15renderingAmap_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void renderingAmap_c::draw() {
    nofralloc
#include "asm/d/map/d_map/draw__15renderingAmap_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 803A6F08-803A6F28 -00001 0020+00 1/1 0/0 0/0 .data            @3806 */
SECTION_DATA static void* lit_3806[8] = {
    (void*)(((char*)getDispType__15renderingAmap_cCFv) + 0x58),
    (void*)(((char*)getDispType__15renderingAmap_cCFv) + 0x60),
    (void*)(((char*)getDispType__15renderingAmap_cCFv) + 0x68),
    (void*)(((char*)getDispType__15renderingAmap_cCFv) + 0x70),
    (void*)(((char*)getDispType__15renderingAmap_cCFv) + 0x78),
    (void*)(((char*)getDispType__15renderingAmap_cCFv) + 0x58),
    (void*)(((char*)getDispType__15renderingAmap_cCFv) + 0x80),
    (void*)(((char*)getDispType__15renderingAmap_cCFv) + 0x50),
};

/* 800288C4-80028960 023204 009C+00 7/6 0/0 0/0 .text            getDispType__15renderingAmap_cCFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void renderingAmap_c::getDispType() const {
    nofralloc
#include "asm/d/map/d_map/getDispType__15renderingAmap_cCFv.s"
}
#pragma pop

/* 80028960-800289D0 0232A0 0070+00 2/0 0/0 0/0 .text            beforeDrawPath__15renderingAmap_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void renderingAmap_c::beforeDrawPath() {
    nofralloc
#include "asm/d/map/d_map/beforeDrawPath__15renderingAmap_cFv.s"
}
#pragma pop

/* 800289D0-800289F0 023310 0020+00 2/0 0/0 0/0 .text            afterDrawPath__15renderingAmap_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void renderingAmap_c::afterDrawPath() {
    nofralloc
#include "asm/d/map/d_map/afterDrawPath__15renderingAmap_cFv.s"
}
#pragma pop

/* 800289F0-80028A10 023330 0020+00 2/0 0/0 0/0 .text
 * rendering__15renderingAmap_cFPCQ211dDrawPath_c10room_class   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void renderingAmap_c::rendering(dDrawPath_c::room_class const* param_0) {
    nofralloc
#include "asm/d/map/d_map/rendering__15renderingAmap_cFPCQ211dDrawPath_c10room_class.s"
}
#pragma pop

/* 80028A10-80028A30 023350 0020+00 2/0 0/0 0/0 .text            drawPath__15renderingAmap_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void renderingAmap_c::drawPath() {
    nofralloc
#include "asm/d/map/d_map/drawPath__15renderingAmap_cFv.s"
}
#pragma pop

/* 80028A30-80028B04 023370 00D4+00 2/0 0/0 0/0 .text
 * rendering__15renderingAmap_cFPCQ211dDrawPath_c10line_class   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void renderingAmap_c::rendering(dDrawPath_c::line_class const* param_0) {
    nofralloc
#include "asm/d/map/d_map/rendering__15renderingAmap_cFPCQ211dDrawPath_c10line_class.s"
}
#pragma pop

/* 80028B04-80028B10 023444 000C+00 2/0 0/0 0/0 .text getPlayerCursorSize__15renderingAmap_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void renderingAmap_c::getPlayerCursorSize() {
    nofralloc
#include "asm/d/map/d_map/getPlayerCursorSize__15renderingAmap_cFv.s"
}
#pragma pop

/* 80028B10-80028B3C 023450 002C+00 2/0 0/0 0/0 .text getRestartCursorSize__15renderingAmap_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void renderingAmap_c::getRestartCursorSize() {
    nofralloc
#include "asm/d/map/d_map/getRestartCursorSize__15renderingAmap_cFv.s"
}
#pragma pop

/* 80028B3C-80028BB4 02347C 0078+00 2/0 0/0 0/0 .text
 * rendering__15renderingAmap_cFPCQ211dDrawPath_c10poly_class   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void renderingAmap_c::rendering(dDrawPath_c::poly_class const* param_0) {
    nofralloc
#include "asm/d/map/d_map/rendering__15renderingAmap_cFPCQ211dDrawPath_c10poly_class.s"
}
#pragma pop

/* 80028BB4-80028C4C 0234F4 0098+00 4/4 0/0 0/0 .text isDrawOutSideTrim__15renderingAmap_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void renderingAmap_c::isDrawOutSideTrim() {
    nofralloc
#include "asm/d/map/d_map/isDrawOutSideTrim__15renderingAmap_cFv.s"
}
#pragma pop

/* 80028C4C-80028C60 02358C 0014+00 1/1 0/0 0/0 .text
 * getOutSideBlackLineNumber__15renderingAmap_cFv               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void renderingAmap_c::getOutSideBlackLineNumber() {
    nofralloc
#include "asm/d/map/d_map/getOutSideBlackLineNumber__15renderingAmap_cFv.s"
}
#pragma pop

/* 80028C60-80028C90 0235A0 0030+00 1/1 0/0 0/0 .text isOutSideBlackLine__15renderingAmap_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void renderingAmap_c::isOutSideBlackLine() {
    nofralloc
#include "asm/d/map/d_map/isOutSideBlackLine__15renderingAmap_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 80451CC0-80451CC8 0002C0 0005+03 1/1 0/0 0/0 .sdata2          l_lineWidthPatOff$3899 */
SECTION_SDATA2 static u8 l_lineWidthPatOff[5 + 3 /* padding */] = {
    0x00,
    0x00,
    0x06,
    0x00,
    0x00,
    /* padding */
    0x00,
    0x00,
    0x00,
};

/* 80451CC8-80451CD0 0002C8 0005+03 1/1 0/0 0/0 .sdata2          l_lineWidthPatOn$3900 */
SECTION_SDATA2 static u8 l_lineWidthPatOn[5 + 3 /* padding */] = {
    0x06,
    0x06,
    0x06,
    0x00,
    0x00,
    /* padding */
    0x00,
    0x00,
    0x00,
};

/* 80451CD0-80451CD8 0002D0 0005+03 1/1 0/0 0/0 .sdata2          l_lineWidthPatStay$3901 */
SECTION_SDATA2 static u8 l_lineWidthPatStay[5 + 3 /* padding */] = {
    0x06,
    0x06,
    0x0C,
    0x00,
    0x00,
    /* padding */
    0x00,
    0x00,
    0x00,
};

/* 80028C90-80028CF4 0235D0 0064+00 2/2 0/0 0/0 .text getLineWidthSub__15renderingAmap_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void renderingAmap_c::getLineWidthSub(int param_0) {
    nofralloc
#include "asm/d/map/d_map/getLineWidthSub__15renderingAmap_cFi.s"
}
#pragma pop

/* 80028CF4-80028DD4 023634 00E0+00 2/0 0/0 0/0 .text getDecorationLineWidth__15renderingAmap_cFi
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void renderingAmap_c::getDecorationLineWidth(int param_0) {
    nofralloc
#include "asm/d/map/d_map/getDecorationLineWidth__15renderingAmap_cFi.s"
}
#pragma pop

/* 80028DD4-80028DF4 023714 0020+00 2/0 0/0 0/0 .text            getLineWidth__15renderingAmap_cFi
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void renderingAmap_c::getLineWidth(int param_0) {
    nofralloc
#include "asm/d/map/d_map/getLineWidth__15renderingAmap_cFi.s"
}
#pragma pop

/* ############################################################################################## */
/* 80378E8C-80378EB0 0054EC 0024+00 0/1 0/0 0/0 .rodata          l_dungeon_offColor$3937 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const l_dungeon_offColor[36] = {
    0x08, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
    0x04, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00,
    0x1C, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80378E8C, &l_dungeon_offColor);
#pragma pop

/* 80378EB0-80378ED4 005510 0024+00 0/1 0/0 0/0 .rodata          l_dungeon_onColor$3938 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const l_dungeon_onColor[36] = {
    0x28, 0x00, 0x00, 0x00, 0x2C, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00,
    0x04, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00,
    0x3C, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80378EB0, &l_dungeon_onColor);
#pragma pop

/* 80378ED4-80378EF8 005534 0024+00 0/1 0/0 0/0 .rodata          l_dungeon_stayColor$3939 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const l_dungeon_stayColor[36] = {
    0x48, 0x00, 0x00, 0x00, 0x4C, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00,
    0x04, 0x00, 0x00, 0x00, 0x54, 0x00, 0x00, 0x00, 0x58, 0x00, 0x00, 0x00,
    0x5C, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x64, 0x00, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80378ED4, &l_dungeon_stayColor);
#pragma pop

/* 80028DF4-80028EE4 023734 00F0+00 1/0 0/0 0/0 .text            getColor__6dMap_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMap_c::getColor(int param_0) {
    nofralloc
#include "asm/d/map/d_map/getColor__6dMap_cFi.s"
}
#pragma pop

/* ############################################################################################## */
/* 804505F8-80450600 000078 0004+04 1/1 0/0 0/0 .sdata           backColor$3972 */
SECTION_SDATA static u8 backColor[4 + 4 /* padding */] = {
    0x04,
    0x00,
    0x00,
    0x00,
    /* padding */
    0x00,
    0x00,
    0x00,
    0x00,
};

/* 80451CD8-80451CDC 0002D8 0004+00 1/1 0/0 0/0 .sdata2          borderColor0$3975 */
SECTION_SDATA2 static u8 borderColor0[4] = {
    0xB4,
    0x00,
    0x00,
    0x00,
};

/* 80451CDC-80451CE0 0002DC 0004+00 1/1 0/0 0/0 .sdata2          borderColor1$3976 */
SECTION_SDATA2 static u8 borderColor1[4] = {
    0xB8,
    0x00,
    0x00,
    0x00,
};

/* 80028EE4-80028FB4 023824 00D0+00 2/0 0/0 0/0 .text            getLineColor__15renderingAmap_cFii
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void renderingAmap_c::getLineColor(int param_0, int param_1) {
    nofralloc
#include "asm/d/map/d_map/getLineColor__15renderingAmap_cFii.s"
}
#pragma pop

/* ############################################################################################## */
/* 80378EF8-80378F08 005558 0010+00 1/1 0/0 0/0 .rodata          colorTable$3993 */
SECTION_RODATA static u8 const colorTable[16] = {
    0xBC, 0x00, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x00, 0xC4, 0x00, 0x00, 0x00, 0xC8, 0x00, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80378EF8, &colorTable);

/* 80028FB4-80029038 0238F4 0084+00 2/0 0/0 0/0 .text getDecoLineColor__15renderingAmap_cFii */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void renderingAmap_c::getDecoLineColor(int param_0, int param_1) {
    nofralloc
#include "asm/d/map/d_map/getDecoLineColor__15renderingAmap_cFii.s"
}
#pragma pop

/* 80029038-80029058 023978 0020+00 1/0 0/0 0/0 .text
 * getIconPosition__6dMap_cCFPQ27dTres_c15typeGroupData_c       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMap_c::getIconPosition(dTres_c::typeGroupData_c* param_0) const {
    nofralloc
#include "asm/d/map/d_map/getIconPosition__6dMap_cCFPQ27dTres_c15typeGroupData_c.s"
}
#pragma pop

/* 80029058-80029078 023998 0020+00 2/0 0/0 0/0 .text getIconGroupNumber__15renderingAmap_cCFUc */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void renderingAmap_c::getIconGroupNumber(u8 param_0) const {
    nofralloc
#include "asm/d/map/d_map/getIconGroupNumber__15renderingAmap_cCFUc.s"
}
#pragma pop

/* 80029078-800290C0 0239B8 0048+00 2/0 0/0 0/0 .text            hasMap__15renderingAmap_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void renderingAmap_c::hasMap() const {
    nofralloc
#include "asm/d/map/d_map/hasMap__15renderingAmap_cCFv.s"
}
#pragma pop

/* 800290C0-80029104 023A00 0044+00 2/0 0/0 0/0 .text            isRendDoor__15renderingAmap_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void renderingAmap_c::isRendDoor() const {
    nofralloc
#include "asm/d/map/d_map/isRendDoor__15renderingAmap_cCFv.s"
}
#pragma pop

/* 80029104-8002910C 023A44 0008+00 2/0 0/0 0/0 .text            isCheckFloor__15renderingAmap_cCFv
 */
bool renderingAmap_c::isCheckFloor() const {
    return true;
}

/* 8002910C-80029114 023A4C 0008+00 2/0 0/0 0/0 .text            isRendRestart__15renderingAmap_cCFv
 */
bool renderingAmap_c::isRendRestart() const {
    return true;
}

/* 80029114-8002911C 023A54 0008+00 2/0 0/0 0/0 .text            isRendCursor__15renderingAmap_cCFv
 */
bool renderingAmap_c::isRendCursor() const {
    return true;
}

/* 8002911C-80029160 023A5C 0044+00 3/2 0/0 0/0 .text            isRendAllRoom__15renderingAmap_cCFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void renderingAmap_c::isRendAllRoom() const {
    nofralloc
#include "asm/d/map/d_map/isRendAllRoom__15renderingAmap_cCFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 80378F08-80378F24 005568 001C+00 1/1 0/0 0/0 .rodata          l_stayType$4046 */
SECTION_RODATA static u8 const l_stayType[28] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80378F08, &l_stayType);

/* 80029160-80029190 023AA0 0030+00 7/7 0/0 0/0 .text            getStayType__15renderingAmap_cCFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void renderingAmap_c::getStayType() const {
    nofralloc
#include "asm/d/map/d_map/getStayType__15renderingAmap_cCFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 803A6F28-803A6F6C -00001 0044+00 1/1 0/0 0/0 .data            @4259 */
SECTION_DATA static void* lit_4259[17] = {
    (void*)(((char*)isDrawIconSingle2__15renderingAmap_cCFPCQ27dTres_c6data_sbbi) + 0xA0),
    (void*)(((char*)isDrawIconSingle2__15renderingAmap_cCFPCQ27dTres_c6data_sbbi) + 0xE4),
    (void*)(((char*)isDrawIconSingle2__15renderingAmap_cCFPCQ27dTres_c6data_sbbi) + 0x150),
    (void*)(((char*)isDrawIconSingle2__15renderingAmap_cCFPCQ27dTres_c6data_sbbi) + 0x310),
    (void*)(((char*)isDrawIconSingle2__15renderingAmap_cCFPCQ27dTres_c6data_sbbi) + 0x18C),
    (void*)(((char*)isDrawIconSingle2__15renderingAmap_cCFPCQ27dTres_c6data_sbbi) + 0x2AC),
    (void*)(((char*)isDrawIconSingle2__15renderingAmap_cCFPCQ27dTres_c6data_sbbi) + 0x540),
    (void*)(((char*)isDrawIconSingle2__15renderingAmap_cCFPCQ27dTres_c6data_sbbi) + 0x540),
    (void*)(((char*)isDrawIconSingle2__15renderingAmap_cCFPCQ27dTres_c6data_sbbi) + 0xE4),
    (void*)(((char*)isDrawIconSingle2__15renderingAmap_cCFPCQ27dTres_c6data_sbbi) + 0x378),
    (void*)(((char*)isDrawIconSingle2__15renderingAmap_cCFPCQ27dTres_c6data_sbbi) + 0x3C0),
    (void*)(((char*)isDrawIconSingle2__15renderingAmap_cCFPCQ27dTres_c6data_sbbi) + 0x3FC),
    (void*)(((char*)isDrawIconSingle2__15renderingAmap_cCFPCQ27dTres_c6data_sbbi) + 0x41C),
    (void*)(((char*)isDrawIconSingle2__15renderingAmap_cCFPCQ27dTres_c6data_sbbi) + 0x464),
    (void*)(((char*)isDrawIconSingle2__15renderingAmap_cCFPCQ27dTres_c6data_sbbi) + 0x464),
    (void*)(((char*)isDrawIconSingle2__15renderingAmap_cCFPCQ27dTres_c6data_sbbi) + 0x4A0),
    (void*)(((char*)isDrawIconSingle2__15renderingAmap_cCFPCQ27dTres_c6data_sbbi) + 0x4E8),
};

/* 80029190-800296EC 023AD0 055C+00 3/0 0/0 0/0 .text
 * isDrawIconSingle2__15renderingAmap_cCFPCQ27dTres_c6data_sbbi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void renderingAmap_c::isDrawIconSingle2(dTres_c::data_s const* param_0, bool param_1,
                                            bool param_2, int param_3) const {
    nofralloc
#include "asm/d/map/d_map/isDrawIconSingle2__15renderingAmap_cCFPCQ27dTres_c6data_sbbi.s"
}
#pragma pop

/* 800296EC-800296F8 02402C 000C+00 1/0 0/0 0/0 .text            isDrawType__6dMap_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMap_c::isDrawType(int param_0) {
    nofralloc
#include "asm/d/map/d_map/isDrawType__6dMap_cFi.s"
}
#pragma pop

/* 800296F8-80029744 024038 004C+00 1/0 0/0 0/0 .text            isRendAllRoom__6dMap_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMap_c::isRendAllRoom() const {
    nofralloc
#include "asm/d/map/d_map/isRendAllRoom__6dMap_cCFv.s"
}
#pragma pop

/* 80029744-8002974C 024084 0008+00 1/0 0/0 0/0 .text            isSpecialOutline__6dMap_cFv */
bool dMap_c::isSpecialOutline() {
    return false;
}

/* ############################################################################################## */
/* 80451CE0-80451CE4 0002E0 0004+00 4/4 0/0 0/0 .sdata2          @4284 */
SECTION_SDATA2 static f32 lit_4284 = 1.0f;

/* 8002974C-800297A8 02408C 005C+00 1/1 0/0 0/0 .text            copyPalette__6dMap_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMap_c::copyPalette() {
    nofralloc
#include "asm/d/map/d_map/copyPalette__6dMap_cFv.s"
}
#pragma pop

/* 800297A8-80029818 0240E8 0070+00 1/1 0/0 0/0 .text setMapPaletteColorAlphaPer__6dMap_cFiif */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMap_c::setMapPaletteColorAlphaPer(int param_0, int param_1, f32 param_2) {
    nofralloc
#include "asm/d/map/d_map/setMapPaletteColorAlphaPer__6dMap_cFiif.s"
}
#pragma pop

/* 80029818-80029874 024158 005C+00 1/1 0/0 0/0 .text            resCopy__6dMap_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMap_c::resCopy() {
    nofralloc
#include "asm/d/map/d_map/resCopy__6dMap_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 80378F24-80378F24 005584 0000+00 0/0 0/0 0/0 .rodata          @stringBase0 */
#pragma push
#pragma force_active on
SECTION_DEAD static char const* const stringBase_80378F24 = "Always";
#pragma pop

/* 803A6F6C-803A6F88 -00001 001C+00 1/1 0/0 0/0 .data            @4694 */
SECTION_DATA static void* lit_4694[7] = {
    (void*)(((char*)_move__6dMap_cFffif) + 0x350), (void*)(((char*)_move__6dMap_cFffif) + 0x388),
    (void*)(((char*)_move__6dMap_cFffif) + 0x3CC), (void*)(((char*)_move__6dMap_cFffif) + 0x3F8),
    (void*)(((char*)_move__6dMap_cFffif) + 0x484), (void*)(((char*)_move__6dMap_cFffif) + 0x4A8),
    (void*)(((char*)_move__6dMap_cFffif) + 0x4C4),
};

/* 803A6F88-803A6F94 0040A8 000C+00 1/1 48/48 0/0 .data            __vt__12dDlst_base_c */
SECTION_DATA extern void* __vt__12dDlst_base_c[3] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)draw__12dDlst_base_cFv,
};

/* 803A6F94-803A6FD4 0040B4 0040+00 9/9 5/5 0/0 .data __vt__28dDrawPathWithNormalPattern_c */
SECTION_DATA extern void* __vt__28dDrawPathWithNormalPattern_c[16] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)draw__12dDlst_base_cFv,
    (void*)__dt__28dDrawPathWithNormalPattern_cFv,
    (void*)isDrawType__11dDrawPath_cFi,
    (void*)NULL,
    (void*)getLineColor__11dDrawPath_cFii,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
    (void*)drawPath__11dDrawPath_cFv,
    (void*)rendering__11dDrawPath_cFPCQ211dDrawPath_c10line_class,
    (void*)rendering__11dDrawPath_cFPCQ211dDrawPath_c10poly_class,
    (void*)rendering__11dDrawPath_cFPCQ211dDrawPath_c10room_class,
};

/* 803A6FD4-803A7030 0040F4 005C+00 8/8 5/5 0/0 .data            __vt__15dRenderingMap_c */
SECTION_DATA extern void* __vt__15dRenderingMap_c[23] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)draw__12dDlst_base_cFv,
    (void*)__dt__15dRenderingMap_cFv,
    (void*)isDrawType__11dDrawPath_cFi,
    (void*)NULL,
    (void*)getLineColor__11dDrawPath_cFii,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
    (void*)drawPath__11dDrawPath_cFv,
    (void*)rendering__11dDrawPath_cFPCQ211dDrawPath_c10line_class,
    (void*)rendering__11dDrawPath_cFPCQ211dDrawPath_c10poly_class,
    (void*)rendering__11dDrawPath_cFPCQ211dDrawPath_c10room_class,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
};

/* 803A7030-803A70F4 004150 00C4+00 2/2 0/0 0/0 .data            __vt__6dMap_c */
SECTION_DATA extern void* __vt__6dMap_c[49] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)draw__15renderingAmap_cFv,
    (void*)__dt__6dMap_cFv,
    (void*)isDrawType__6dMap_cFi,
    (void*)getColor__6dMap_cFi,
    (void*)getLineColor__15renderingAmap_cFii,
    (void*)getLineWidth__15renderingAmap_cFi,
    (void*)isSwitch__16renderingDAmap_cFPCQ211dDrawPath_c11group_class,
    (void*)isRenderingFloor__16renderingDAmap_cFi,
    (void*)getFirstRoomPointer__16renderingDAmap_cFv,
    (void*)getNextRoomPointer__16renderingDAmap_cFv,
    (void*)drawPath__15renderingAmap_cFv,
    (void*)rendering__15renderingAmap_cFPCQ211dDrawPath_c10line_class,
    (void*)rendering__15renderingAmap_cFPCQ211dDrawPath_c10poly_class,
    (void*)rendering__15renderingAmap_cFPCQ211dDrawPath_c10room_class,
    (void*)beforeDrawPath__15renderingAmap_cFv,
    (void*)afterDrawPath__15renderingAmap_cFv,
    (void*)preDrawPath__16renderingDAmap_cFv,
    (void*)postDrawPath__16renderingDAmap_cFv,
    (void*)isDrawPath__16renderingDAmap_cFv,
    (void*)preRenderingMap__18dRenderingFDAmap_cFv,
    (void*)postRenderingMap__18dRenderingFDAmap_cFv,
    (void*)getBackColor__16renderingDAmap_cCFv,
    (void*)getDecoLineColor__15renderingAmap_cFii,
    (void*)getDecorationLineWidth__15renderingAmap_cFi,
    (void*)getFirstDrawLayerNo__16renderingDAmap_cFv,
    (void*)getNextDrawLayerNo__16renderingDAmap_cFi,
    (void*)isDrawIconSingle__16renderingDAmap_cCFPCQ27dTres_c6data_siibbPC3Vec,
    (void*)getIconGroupNumber__15renderingAmap_cCFUc,
    (void*)hasMap__15renderingAmap_cCFv,
    (void*)isRendAllRoom__6dMap_cCFv,
    (void*)isRendDoor__15renderingAmap_cCFv,
    (void*)isCheckFloor__15renderingAmap_cCFv,
    (void*)isDrawIconSingle2__15renderingAmap_cCFPCQ27dTres_c6data_sbbi,
    (void*)getRoomNoSingle__6dMap_cFv,
    (void*)isDrawRoom__6dMap_cCFii,
    (void*)isDrawRoomIcon__6dMap_cCFii,
    (void*)isRendRestart__15renderingAmap_cCFv,
    (void*)isRendCursor__15renderingAmap_cCFv,
    (void*)isRendIcon__15renderingAmap_cCFv,
    (void*)getIconSize__15renderingAmap_cCFUc,
    (void*)getIconPosition__6dMap_cCFPQ27dTres_c15typeGroupData_c,
    (void*)getFirstData__6dMap_cFUc,
    (void*)getNextData__6dMap_cFPQ27dTres_c15typeGroupData_c,
    (void*)getPlayerCursorSize__15renderingAmap_cFv,
    (void*)getRestartCursorSize__15renderingAmap_cFv,
    (void*)setAmapPaletteColor__6dMap_cFiUcUcUcUc,
    (void*)isSpecialOutline__6dMap_cFv,
};

/* 80451CE4-80451CE8 0002E4 0004+00 7/7 0/0 0/0 .sdata2          @4321 */
SECTION_SDATA2 static u8 lit_4321[4] = {
    0x00,
    0x00,
    0x00,
    0x00,
};

/* 80029874-80029A1C 0241B4 01A8+00 0/0 1/1 0/0 .text            __ct__6dMap_cFiiii */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dMap_c::dMap_c(int param_0, int param_1, int param_2, int param_3) {
    nofralloc
#include "asm/d/map/d_map/__ct__6dMap_cFiiii.s"
}
#pragma pop

/* 80029A1C-80029A8C 02435C 0070+00 1/1 0/0 0/0 .text            _remove__6dMap_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMap_c::_remove() {
    nofralloc
#include "asm/d/map/d_map/_remove__6dMap_cFv.s"
}
#pragma pop

/* 80029A8C-80029C10 0243CC 0184+00 3/3 0/0 0/0 .text            getMapMinMaxXZ__6dMap_cFiPfPfPfPf
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMap_c::getMapMinMaxXZ(int param_0, f32* param_1, f32* param_2, f32* param_3,
                                f32* param_4) {
    nofralloc
#include "asm/d/map/d_map/getMapMinMaxXZ__6dMap_cFiPfPfPfPf.s"
}
#pragma pop

/* 80029C10-80029D78 024550 0168+00 1/1 0/0 0/0 .text            getPack__6dMap_cFiPfPf */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMap_c::getPack(int param_0, f32* param_1, f32* param_2) {
    nofralloc
#include "asm/d/map/d_map/getPack__6dMap_cFiPfPf.s"
}
#pragma pop

/* 80029D78-80029E1C 0246B8 00A4+00 1/1 0/0 0/0 .text            calcMapCenterXZ__6dMap_cFiPfPf */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMap_c::calcMapCenterXZ(int param_0, f32* param_1, f32* param_2) {
    nofralloc
#include "asm/d/map/d_map/calcMapCenterXZ__6dMap_cFiPfPf.s"
}
#pragma pop

/* ############################################################################################## */
/* 80451CE8-80451CEC 0002E8 0004+00 1/1 0/0 0/0 .sdata2          @4503 */
SECTION_SDATA2 static f32 lit_4503 = 10800.0f;

/* 80029E1C-80029F84 02475C 0168+00 1/1 0/0 0/0 .text            calcMapCmPerTexel__6dMap_cFiPf */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMap_c::calcMapCmPerTexel(int param_0, f32* param_1) {
    nofralloc
#include "asm/d/map/d_map/calcMapCmPerTexel__6dMap_cFiPf.s"
}
#pragma pop

/* 80029F84-8002A064 0248C4 00E0+00 1/1 0/0 0/0 .text setMapPaletteColorAlphaPer__6dMap_cFif */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMap_c::setMapPaletteColorAlphaPer(int param_0, f32 param_1) {
    nofralloc
#include "asm/d/map/d_map/setMapPaletteColorAlphaPer__6dMap_cFif.s"
}
#pragma pop

/* 8002A064-8002A148 0249A4 00E4+00 2/2 0/0 0/0 .text            copyPalette__6dMap_cFiif */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMap_c::copyPalette(int param_0, int param_1, f32 param_2) {
    nofralloc
#include "asm/d/map/d_map/copyPalette__6dMap_cFiif.s"
}
#pragma pop

/* 8002A148-8002A1BC 024A88 0074+00 1/0 0/0 0/0 .text setAmapPaletteColor__6dMap_cFiUcUcUcUc */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMap_c::setAmapPaletteColor(int param_0, u8 param_1, u8 param_2, u8 param_3, u8 param_4) {
    nofralloc
#include "asm/d/map/d_map/setAmapPaletteColor__6dMap_cFiUcUcUcUc.s"
}
#pragma pop

/* 8002A1BC-8002A1DC 024AFC 0020+00 2/2 0/0 0/0 .text            getDispType__6dMap_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMap_c::getDispType() const {
    nofralloc
#include "asm/d/map/d_map/getDispType__6dMap_cCFv.s"
}
#pragma pop

/* 8002A1DC-8002A254 024B1C 0078+00 1/0 0/0 0/0 .text            isDrawRoom__6dMap_cCFii */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMap_c::isDrawRoom(int param_0, int param_1) const {
    nofralloc
#include "asm/d/map/d_map/isDrawRoom__6dMap_cCFii.s"
}
#pragma pop

/* 8002A254-8002A294 024B94 0040+00 1/0 0/0 0/0 .text            getRoomNoSingle__6dMap_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMap_c::getRoomNoSingle() {
    nofralloc
#include "asm/d/map/d_map/getRoomNoSingle__6dMap_cFv.s"
}
#pragma pop

/* 8002A294-8002A32C 024BD4 0098+00 1/0 0/0 0/0 .text            isDrawRoomIcon__6dMap_cCFii */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMap_c::isDrawRoomIcon(int param_0, int param_1) const {
    nofralloc
#include "asm/d/map/d_map/isDrawRoomIcon__6dMap_cCFii.s"
}
#pragma pop

/* ############################################################################################## */
/* 80378F24-80378F24 005584 0000+00 0/0 0/0 0/0 .rodata          @stringBase0 */
#pragma push
#pragma force_active on
SECTION_DEAD static char const* const stringBase_80378F2B = "F_SP121";
/* @stringBase0 padding */
SECTION_DEAD static char const* const pad_80378F33 = "\0\0\0\0";
#pragma pop

/* 80451CEC-80451CF0 0002EC 0004+00 1/1 0/0 0/0 .sdata2          @4688 */
SECTION_SDATA2 static f32 lit_4688 = -3710.0f;

/* 80451CF0-80451CF4 0002F0 0004+00 1/1 0/0 0/0 .sdata2          @4689 */
SECTION_SDATA2 static f32 lit_4689 = -22397.0f;

/* 80451CF4-80451CF8 0002F4 0004+00 1/1 0/0 0/0 .sdata2          @4690 */
SECTION_SDATA2 static f32 lit_4690 = 60.0f;

/* 80451CF8-80451CFC 0002F8 0004+00 1/1 0/0 0/0 .sdata2          @4691 */
SECTION_SDATA2 static f32 lit_4691 = 5.0f;

/* 80451CFC-80451D00 0002FC 0004+00 1/1 0/0 0/0 .sdata2          @4692 */
SECTION_SDATA2 static f32 lit_4692 = 20.0f;

/* 8002A32C-8002AB54 024C6C 0828+00 1/0 1/1 0/0 .text            _move__6dMap_cFffif */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMap_c::_move(f32 param_0, f32 param_1, int param_2, f32 param_3) {
    nofralloc
#include "asm/d/map/d_map/_move__6dMap_cFffif.s"
}
#pragma pop

/* 8002AB54-8002ABAC 025494 0058+00 0/0 1/1 0/0 .text            _draw__6dMap_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMap_c::_draw() {
    nofralloc
#include "asm/d/map/d_map/_draw__6dMap_cFv.s"
}
#pragma pop

/* 8002ABAC-8002ABCC 0254EC 0020+00 1/0 0/0 0/0 .text            getFirstData__6dMap_cFUc */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMap_c::getFirstData(u8 param_0) {
    nofralloc
#include "asm/d/map/d_map/getFirstData__6dMap_cFUc.s"
}
#pragma pop

/* 8002ABCC-8002ABEC 02550C 0020+00 1/0 0/0 0/0 .text
 * getNextData__6dMap_cFPQ27dTres_c15typeGroupData_c            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMap_c::getNextData(dTres_c::typeGroupData_c* param_0) {
    nofralloc
#include "asm/d/map/d_map/getNextData__6dMap_cFPQ27dTres_c15typeGroupData_c.s"
}
#pragma pop

/* 8002ABEC-8002ABF0 02552C 0004+00 3/0 3/0 0/0 .text            draw__12dDlst_base_cFv */
void dDlst_base_c::draw() {
    /* empty function */
}

/* 8002ABF0-8002ABF8 025530 0008+00 3/0 7/0 0/0 .text            isDrawType__11dDrawPath_cFi */
bool dDrawPath_c::isDrawType(int param_0) {
    return true;
}

/* 8002ABF8-8002AC74 025538 007C+00 0/0 1/0 0/0 .text            __dt__18dRenderingFDAmap_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dRenderingFDAmap_c::~dRenderingFDAmap_c() {
    nofralloc
#include "asm/d/map/d_map/__dt__18dRenderingFDAmap_cFv.s"
}
#pragma pop

/* 8002AC74-8002ACE0 0255B4 006C+00 1/0 0/0 0/0 .text            __dt__15dRenderingMap_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dRenderingMap_c::~dRenderingMap_c() {
    nofralloc
#include "asm/d/map/d_map/__dt__15dRenderingMap_cFv.s"
}
#pragma pop

/* 8002ACE0-8002AD3C 025620 005C+00 1/0 0/0 0/0 .text __dt__28dDrawPathWithNormalPattern_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dDrawPathWithNormalPattern_c::~dDrawPathWithNormalPattern_c() {
    nofralloc
#include "asm/d/map/d_map/__dt__28dDrawPathWithNormalPattern_cFv.s"
}
#pragma pop

/* 8002AD3C-8002AD84 02567C 0048+00 0/0 1/0 0/0 .text            __dt__11dDrawPath_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dDrawPath_c::~dDrawPath_c() {
    nofralloc
#include "asm/d/map/d_map/__dt__11dDrawPath_cFv.s"
}
#pragma pop

/* 8002AD84-8002ADB0 0256C4 002C+00 2/0 7/0 0/0 .text            getLineColor__11dDrawPath_cFii */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dDrawPath_c::getLineColor(int param_0, int param_1) {
    nofralloc
#include "asm/d/map/d_map/getLineColor__11dDrawPath_cFii.s"
}
#pragma pop

/* ############################################################################################## */
/* 803A70F4-803A71B8 004214 00C4+00 3/3 0/0 0/0 .data            __vt__15renderingAmap_c */
SECTION_DATA extern void* __vt__15renderingAmap_c[49] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)draw__15renderingAmap_cFv,
    (void*)__dt__15renderingAmap_cFv,
    (void*)isDrawType__11dDrawPath_cFi,
    (void*)NULL,
    (void*)getLineColor__15renderingAmap_cFii,
    (void*)getLineWidth__15renderingAmap_cFi,
    (void*)isSwitch__16renderingDAmap_cFPCQ211dDrawPath_c11group_class,
    (void*)isRenderingFloor__16renderingDAmap_cFi,
    (void*)getFirstRoomPointer__16renderingDAmap_cFv,
    (void*)getNextRoomPointer__16renderingDAmap_cFv,
    (void*)drawPath__15renderingAmap_cFv,
    (void*)rendering__15renderingAmap_cFPCQ211dDrawPath_c10line_class,
    (void*)rendering__15renderingAmap_cFPCQ211dDrawPath_c10poly_class,
    (void*)rendering__15renderingAmap_cFPCQ211dDrawPath_c10room_class,
    (void*)beforeDrawPath__15renderingAmap_cFv,
    (void*)afterDrawPath__15renderingAmap_cFv,
    (void*)preDrawPath__16renderingDAmap_cFv,
    (void*)postDrawPath__16renderingDAmap_cFv,
    (void*)isDrawPath__16renderingDAmap_cFv,
    (void*)preRenderingMap__18dRenderingFDAmap_cFv,
    (void*)postRenderingMap__18dRenderingFDAmap_cFv,
    (void*)getBackColor__16renderingDAmap_cCFv,
    (void*)getDecoLineColor__15renderingAmap_cFii,
    (void*)getDecorationLineWidth__15renderingAmap_cFi,
    (void*)getFirstDrawLayerNo__16renderingDAmap_cFv,
    (void*)getNextDrawLayerNo__16renderingDAmap_cFi,
    (void*)isDrawIconSingle__16renderingDAmap_cCFPCQ27dTres_c6data_siibbPC3Vec,
    (void*)getIconGroupNumber__15renderingAmap_cCFUc,
    (void*)hasMap__15renderingAmap_cCFv,
    (void*)isRendAllRoom__15renderingAmap_cCFv,
    (void*)isRendDoor__15renderingAmap_cCFv,
    (void*)isCheckFloor__15renderingAmap_cCFv,
    (void*)isDrawIconSingle2__15renderingAmap_cCFPCQ27dTres_c6data_sbbi,
    (void*)getRoomNoSingle__16renderingDAmap_cFv,
    (void*)isDrawRoom__16renderingDAmap_cCFii,
    (void*)isDrawRoomIcon__16renderingDAmap_cCFii,
    (void*)isRendRestart__15renderingAmap_cCFv,
    (void*)isRendCursor__15renderingAmap_cCFv,
    (void*)isRendIcon__15renderingAmap_cCFv,
    (void*)getIconSize__15renderingAmap_cCFUc,
    (void*)getIconPosition__28renderingPlusDoorAndCursor_cCFPQ27dTres_c15typeGroupData_c,
    (void*)getFirstData__28renderingPlusDoorAndCursor_cFUc,
    (void*)getNextData__28renderingPlusDoorAndCursor_cFPQ27dTres_c15typeGroupData_c,
    (void*)getPlayerCursorSize__15renderingAmap_cFv,
    (void*)getRestartCursorSize__15renderingAmap_cFv,
    (void*)NULL,
    (void*)NULL,
};

/* 8002ADB0-8002AE6C 0256F0 00BC+00 1/0 0/0 0/0 .text            __dt__15renderingAmap_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm renderingAmap_c::~renderingAmap_c() {
    nofralloc
#include "asm/d/map/d_map/__dt__15renderingAmap_cFv.s"
}
#pragma pop

/* 8002AE6C-8002AF20 0257AC 00B4+00 1/1 0/0 0/0 .text            __ct__15renderingAmap_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm renderingAmap_c::renderingAmap_c() {
    nofralloc
#include "asm/d/map/d_map/__ct__15renderingAmap_cFv.s"
}
#pragma pop

/* 8002AF20-8002B000 025860 00E0+00 1/0 0/0 0/0 .text            __dt__6dMap_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dMap_c::~dMap_c() {
    nofralloc
#include "asm/d/map/d_map/__dt__6dMap_cFv.s"
}
#pragma pop

/* 8002B000-8002B008 025940 0008+00 2/0 0/0 0/0 .text            isRendIcon__15renderingAmap_cCFv */
bool renderingAmap_c::isRendIcon() const {
    return true;
}

/* 8002B008-8002B0B4 025948 00AC+00 0/0 1/0 0/0 .text __dt__28renderingPlusDoorAndCursor_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm renderingPlusDoorAndCursor_c::~renderingPlusDoorAndCursor_c() {
    nofralloc
#include "asm/d/map/d_map/__dt__28renderingPlusDoorAndCursor_cFv.s"
}
#pragma pop

/* 8002B0B4-8002B150 0259F4 009C+00 0/0 1/0 0/0 .text            __dt__19renderingPlusDoor_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm renderingPlusDoor_c::~renderingPlusDoor_c() {
    nofralloc
#include "asm/d/map/d_map/__dt__19renderingPlusDoor_cFv.s"
}
#pragma pop

/* 8002B150-8002B1DC 025A90 008C+00 0/0 1/0 0/0 .text            __dt__16renderingDAmap_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm renderingDAmap_c::~renderingDAmap_c() {
    nofralloc
#include "asm/d/map/d_map/__dt__16renderingDAmap_cFv.s"
}
#pragma pop

/* 80378F24-80378F24 005584 0000+00 0/0 0/0 0/0 .rodata          @stringBase0 */
