//
// Generated By: dol2asm
// Translation Unit: d/d_error_msg
//

#include "d/d_error_msg.h"
#include "dol2asm.h"
#include "dolphin/types.h"

//
// Forward References:
//

extern "C" static void messageSet__FUlb();
extern "C" void draw__14dDvdErrorMsg_cFl();
extern "C" void execute__14dDvdErrorMsg_cFv();
extern "C" static void drawCapture__FUc();
extern "C" void execute__19dShutdownErrorMsg_cFv();
extern "C" extern char const* const d_d_error_msg__stringBase0;

//
// External References:
//

// extern "C" void OSReport_Error();
extern "C" void mDoAud_resetRecover__Fv();
extern "C" void beginRender__13mDoGph_gInf_cFv();
extern "C" void mDoGph_drawFilterQuad__FScSc();
extern "C" void mDoRst_reset__FiUli();
extern "C" void cLib_chaseUC__FPUcUcUc();
extern "C" void resetProcess__10Z2AudioMgrFUlb();
extern "C" void __ct__10JUTResFontFPC7ResFONTP7JKRHeap();
extern "C" void __dt__10JUTResFontFv();
extern "C" void __ct__13J2DOrthoGraphFffffff();
extern "C" void setPort__13J2DOrthoGraphFv();
extern "C" void func_802E980C();
extern "C" void func_802FC800();
extern "C" void __dt__10J2DPictureFv();
extern "C" void draw__10J2DPictureFffffbbb();
extern "C" void func_802FFBC4();
extern "C" void initiate__10J2DTextBoxFPC7ResFONTPCcs18J2DTextBoxHBinding18J2DTextBoxVBinding();
extern "C" void __dt__10J2DTextBoxFv();
extern "C" void draw__10J2DTextBoxFfff18J2DTextBoxHBinding();
extern "C" void drawInit__6J3DSysFv();
extern "C" void GXClearVtxDesc();
extern "C" void _savegpr_27();
extern "C" void _restgpr_27();
extern "C" extern void* __vt__14J2DGrafContext[10];
extern "C" extern void* __vt__13J2DOrthoGraph[10];
extern "C" u8 mFrameBufferTexObj__13mDoGph_gInf_c[32];
extern "C" extern u8 data_80450688[8];
extern "C" extern u8 mInitFlag__17mDoAud_zelAudio_c[4];
extern "C" u8 mFrameBufferTimg__13mDoGph_gInf_c[4];
extern "C" u8 mFrameBufferTex__13mDoGph_gInf_c[4];
extern "C" u8 mResetData__6mDoRst[4 + 4 /* padding */];
extern "C" extern u8 struct_80450FB0[8];
extern "C" u8 sManager__10JFWDisplay[4];
extern "C" u8 mAudioMgrPtr__10Z2AudioMgr[4 + 4 /* padding */];

//
// Declarations:
//

/* 8037B140-8037B180 0077A0 0040+00 1/1 0/0 0/0 .rodata          black_tex */
#include "assets/black_tex.h"

/* 8037B180-8037B3E0 0077E0 0260+00 1/1 0/0 0/0 .rodata          msg_data */
#include "assets/msg_data.h"

/* 8037B3E0-8038D640 -00001 12260+00 1/1 0/0 0/0 .rodata          font_data */
#include "assets/font_data.h"

/* 80452C18-80452C1C 001218 0004+00 3/3 0/0 0/0 .sdata2          @3758 */
SECTION_SDATA2 static u8 lit_3758[4] = {
    0x00,
    0x00,
    0x00,
    0x00,
};

/* 80452C1C-80452C20 00121C 0004+00 2/2 0/0 0/0 .sdata2          @3759 */
SECTION_SDATA2 static f32 lit_3759 = 608.0f;

/* 80452C20-80452C24 001220 0004+00 1/1 0/0 0/0 .sdata2          @3760 */
SECTION_SDATA2 static f32 lit_3760 = 200.0f;

/* 80452C24-80452C28 001224 0004+00 2/2 0/0 0/0 .sdata2          @3761 */
SECTION_SDATA2 static f32 lit_3761 = 448.0f;

/* 80452C28-80452C2C 001228 0004+00 1/1 0/0 0/0 .sdata2          @3762 */
SECTION_SDATA2 static f32 lit_3762 = 23.0f;

/* 80452C2C-80452C30 00122C 0004+00 1/1 0/0 0/0 .sdata2          @3763 */
SECTION_SDATA2 static f32 lit_3763 = 22.0f;

/* 80452C30-80452C34 001230 0004+00 3/3 0/0 0/0 .sdata2          @3764 */
SECTION_SDATA2 static f32 lit_3764 = 1.0f;

/* 80452C34-80452C38 001234 0004+00 1/1 0/0 0/0 .sdata2          @3765 */
SECTION_SDATA2 static f32 lit_3765 = 0.5f;

/* 80452C38-80452C3C 001238 0004+00 1/1 0/0 0/0 .sdata2          @3766 */
SECTION_SDATA2 static f32 lit_3766 = 2.0f;

/* 80452C3C-80452C40 00123C 0004+00 2/2 0/0 0/0 .sdata2          @3767 */
SECTION_SDATA2 static f32 lit_3767 = 10.0f;

/* 80452C40-80452C48 001240 0008+00 1/1 0/0 0/0 .sdata2          @3769 */
SECTION_SDATA2 static f64 lit_3769 = 4503601774854144.0 /* cast s32 to float */;

/* 8009CB88-8009D194 0974C8 060C+00 1/1 0/0 0/0 .text            messageSet__FUlb */
static void messageSet(u32 param_0, bool param_1) {
    // NONMATCHING
}

/* ############################################################################################## */
/* 80452C48-80452C50 001248 0004+04 1/1 0/0 0/0 .sdata2          @3835 */
SECTION_SDATA2 static f32 lit_3835[1 + 1 /* padding */] = {
    -1.0f,
    /* padding */
    0.0f,
};

/* 8009D194-8009D354 097AD4 01C0+00 1/1 0/0 0/0 .text            draw__14dDvdErrorMsg_cFl */
void dDvdErrorMsg_c::draw(s32 param_0) {
    // NONMATCHING
}

/* ############################################################################################## */
/* 8038D640-8038D640 019CA0 0000+00 0/0 0/0 0/0 .rodata          @stringBase0 */
#pragma push
#pragma force_active on
SECTION_DEAD static char const* const stringBase_8038D640 = "DVD Error !! <%d>\n";
/* @stringBase0 padding */
SECTION_DEAD static char const* const pad_8038D653 = "\0\0\0\0";
#pragma pop

/* 8009D354-8009D410 097C94 00BC+00 0/0 1/1 0/0 .text            execute__14dDvdErrorMsg_cFv */
u8 dDvdErrorMsg_c::execute() {
    // NONMATCHING
}

/* ############################################################################################## */
/* 80456B78-80456B80 000018 0004+04 1/1 0/0 0/0 .sbss2           @3873 */
SECTION_SBSS2 static u8 lit_3873[4 + 4 /* padding */];

/* 8009D410-8009D790 097D50 0380+00 1/1 0/0 0/0 .text            drawCapture__FUc */
static void drawCapture(u8 param_0) {
    // NONMATCHING
}

/* 8009D790-8009D87C 0980D0 00EC+00 0/0 1/1 0/0 .text            execute__19dShutdownErrorMsg_cFv */
bool dShutdownErrorMsg_c::execute() {
    // NONMATCHING
}

/* 8038D640-8038D640 019CA0 0000+00 0/0 0/0 0/0 .rodata          @stringBase0 */
