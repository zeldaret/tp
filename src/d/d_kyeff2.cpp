//
// Generated By: dol2asm
// Translation Unit: d/d_kyeff2
//

#include "d/d_kyeff2.h"
#include "d/kankyo/d_kankyo_wether.h"
#include "dol2asm.h"
#include "dolphin/types.h"

//
// Types:
//

struct kankyo_class {};

//
// Forward References:
//

extern "C" static void dKyeff2_Draw__FP9dKyeff2_c();
extern "C" void execute__9dKyeff2_cFv();
extern "C" static void dKyeff2_Execute__FP9dKyeff2_c();
extern "C" static bool dKyeff2_IsDelete__FP9dKyeff2_c();
extern "C" static void dKyeff2_Delete__FP9dKyeff2_c();
extern "C" static void dKyeff2_Create__FP12kankyo_class();
extern "C" extern void* g_profile_KYEFF2[10 + 1 /* padding */];

//
// External References:
//

extern "C" void dKyw_wether_init2__Fv();
extern "C" void dKyw_wether_delete2__Fv();
extern "C" void dKyw_wether_move_draw2__Fv();
extern "C" void dKyw_wether_draw2__Fv();
extern "C" extern void* g_fopKy_Method[5 + 1 /* padding */];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];

//
// Declarations:
//

static bool dKyeff2_Draw(dKyeff2_c* ptr) {
    dKyw_wether_draw2();
    return true;
}

bool dKyeff2_c::execute() {
    dKyw_wether_move_draw2();
    return true;
}

static bool dKyeff2_Execute(dKyeff2_c* ptr) {
    return ptr->execute();
}

static bool dKyeff2_IsDelete(dKyeff2_c* ptr) {
    return true;
}

static bool dKyeff2_Delete(dKyeff2_c* ptr) {
    dKyw_wether_delete2();
    return true;
}

static int dKyeff2_Create(kankyo_class* ptr) {
    dKyw_wether_init2();
    return 4;
}

/* ############################################################################################## */
/* 803BC198-803BC1AC -00001 0014+00 1/0 0/0 0/0 .data            l_dKyeff2_Method */
SECTION_DATA static void* l_dKyeff2_Method[5] = {
    (void*)dKyeff2_Create__FP12kankyo_class, (void*)dKyeff2_Delete__FP9dKyeff2_c,
    (void*)dKyeff2_Execute__FP9dKyeff2_c,    (void*)dKyeff2_IsDelete__FP9dKyeff2_c,
    (void*)dKyeff2_Draw__FP9dKyeff2_c,
};

/* 803BC1AC-803BC1D8 -00001 0028+04 0/0 0/0 1/0 .data            g_profile_KYEFF2 */
SECTION_DATA extern void* g_profile_KYEFF2[10 + 1 /* padding */] = {
    (void*)0xFFFFFFFD,
    (void*)0x000CFFFD,
    (void*)0x03120000,
    (void*)&g_fpcLf_Method,
    (void*)0x000000F8,
    (void*)NULL,
    (void*)NULL,
    (void*)&g_fopKy_Method,
    (void*)0x00030000,
    (void*)&l_dKyeff2_Method,
    /* padding */
    NULL,
};
