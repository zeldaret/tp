//
// Generated By: dol2asm
// Translation Unit: msg/scrn/d_msg_scrn_talk
//

#include "msg/scrn/d_msg_scrn_talk.h"
#include "dol2asm.h"

//
// Types:
//

struct JKRExpHeap {};

struct dMsgScrnTalk_c {
    /* 80246FF0 */ dMsgScrnTalk_c(u8, u8, JKRExpHeap*);
    /* 80247A90 */ ~dMsgScrnTalk_c();
    /* 80247D34 */ void exec();
    /* 80247E4C */ void drawSelf();
    /* 802480F0 */ void arwAnimeInit();
    /* 80248114 */ void arwAnimeMove();
    /* 80248138 */ void dotAnimeInit();
    /* 8024815C */ void dotAnimeMove();
    /* 80248180 */ void setSelectString(char*, char*, char*);
    /* 802481AC */ void setSelectRubyString(char*, char*, char*);
    /* 802481D8 */ void isSelect();
    /* 8024820C */ void selectAnimeInit(u8, u8, f32, u8);
    /* 80248244 */ void selectAnimeMove(u8, u8, bool);
    /* 80248278 */ void selectAnimeEnd();
    /* 802482AC */ void fukiScale(f32);
    /* 802482B0 */ void fukiTrans(f32, f32);
    /* 802482B4 */ void fukiAlpha(f32);
    /* 8024835C */ void fukiPosCalc(u8);
};

struct dMsgScrnLight_c {
    /* 80245934 */ dMsgScrnLight_c(u8, u8);
    /* 80245C04 */ void draw(f32*, f32, f32, f32, f32, f32, u8);
};

struct dMsgScrnBase_c {
    /* 8023C0DC */ dMsgScrnBase_c();
    /* 8023C124 */ ~dMsgScrnBase_c();
    /* 8023C16C */ void init();
    /* 8023C234 */ void multiDraw();
    /* 8023C274 */ void draw();
    /* 8023C32C */ void drawOutFont(f32, f32, f32);
    /* 8023C4F4 */ void fontAlpha(f32);
    /* 8023C574 */ void isTalkNow();
};

struct dMsgScrnArrow_c {
    /* 8023B9B4 */ dMsgScrnArrow_c();
    /* 8023BDC0 */ void draw();
    /* 8023BDF8 */ void setPos(f32, f32);
    /* 8023BE34 */ void arwAnimeInit();
    /* 8023BE90 */ void arwAnimeMove();
    /* 8023BFC4 */ void dotAnimeInit();
    /* 8023C010 */ void dotAnimeMove();
};

struct dMsgScrn3Select_c {
    /* 802390B4 */ dMsgScrn3Select_c();
    /* 80239C64 */ void isSelect();
    /* 80239C78 */ void setString(char*, char*, char*);
    /* 80239D08 */ void setRubyString(char*, char*, char*);
    /* 80239D98 */ void translate(f32, f32);
    /* 80239DD4 */ void draw(f32, f32);
    /* 8023A094 */ void selAnimeInit(u8, u8, u8, f32, u8);
    /* 8023A398 */ void selAnimeMove(u8, u8, bool);
    /* 8023A680 */ void selAnimeEnd();
    /* 8023A934 */ void getTextBoxWidth();
    /* 8023A94C */ void getFontSize();
    /* 8023A95C */ void getRubyFontSize();
    /* 8023A97C */ void getCharSpace();
    /* 8023A98C */ void getRubyCharSpace();
    /* 8023A9AC */ void getTextBoxGlobalPosX(int);
    /* 8023A9D8 */ void getTextBoxGlobalPosY(int);
};

struct dMsgObject_c {
    /* 8023819C */ void getActor();
};

struct JUtility {
    struct TColor {};
};

struct dMeter2Draw_c {
    /* 802140DC */ void drawPikari(f32, f32, f32*, f32, JUtility::TColor, JUtility::TColor,
                                   JUtility::TColor, JUtility::TColor, f32, u8);
};

struct Vec {};

struct cXyz {
    /* 8026702C */ bool operator==(Vec const&) const;
};

struct JKRHeap {
    /* 802CE4D4 */ void alloc(u32, int);
    /* 802CE548 */ void free(void*);
};

struct JKRArchive {};

struct J2DTextBox {
    /* 8030074C */ void setString(s16, char const*, ...);
};

struct J2DGrafContext {};

struct J2DScreen {
    /* 802F8498 */ J2DScreen();
    /* 802F8648 */ void setPriority(char const*, u32, JKRArchive*);
    /* 802F8ED4 */ void draw(f32, f32, J2DGrafContext const*);
};

struct J2DPane {
    /* 802F7100 */ void getBounds();
};

struct CPaneMgrAlpha {
    /* 802557D0 */ void setAlphaRate(f32);
    /* 80255828 */ void getAlphaRate();
};

struct CPaneMgr {
    /* 80253984 */ CPaneMgr(J2DScreen*, u64, u8, JKRExpHeap*);
    /* 80253B2C */ void reinit();
    /* 802542E8 */ void getGlobalPosX();
    /* 80254364 */ void getGlobalPosY();
    /* 80254458 */ void setBlackWhite(JUtility::TColor, JUtility::TColor);
    /* 80254EBC */ void getGlobalVtxCenter(J2DPane*, bool, s16);
};

//
// Forward References:
//

extern "C" void __ct__14dMsgScrnTalk_cFUcUcP10JKRExpHeap();
extern "C" void __dt__14dMsgScrnTalk_cFv();
extern "C" void exec__14dMsgScrnTalk_cFv();
extern "C" void drawSelf__14dMsgScrnTalk_cFv();
extern "C" void arwAnimeInit__14dMsgScrnTalk_cFv();
extern "C" void arwAnimeMove__14dMsgScrnTalk_cFv();
extern "C" void dotAnimeInit__14dMsgScrnTalk_cFv();
extern "C" void dotAnimeMove__14dMsgScrnTalk_cFv();
extern "C" void setSelectString__14dMsgScrnTalk_cFPcPcPc();
extern "C" void setSelectRubyString__14dMsgScrnTalk_cFPcPcPc();
extern "C" void isSelect__14dMsgScrnTalk_cFv();
extern "C" void selectAnimeInit__14dMsgScrnTalk_cFUcUcfUc();
extern "C" void selectAnimeMove__14dMsgScrnTalk_cFUcUcb();
extern "C" void selectAnimeEnd__14dMsgScrnTalk_cFv();
extern "C" void fukiScale__14dMsgScrnTalk_cFf();
extern "C" void fukiTrans__14dMsgScrnTalk_cFff();
extern "C" void fukiAlpha__14dMsgScrnTalk_cFf();
extern "C" void fukiPosCalc__14dMsgScrnTalk_cFUc();
extern "C" extern char const* const msg_scrn_d_msg_scrn_talk__stringBase0;

//
// External References:
//

SECTION_INIT void memset();
extern "C" void mDoExt_getMesgFont__Fv();
extern "C" void mDoLib_project__FP3VecP3Vec();
extern "C" void dComIfGp_getSubHeap2D__Fi();
extern "C" void
drawPikari__13dMeter2Draw_cFffPffQ28JUtility6TColorQ28JUtility6TColorQ28JUtility6TColorQ28JUtility6TColorfUc();
extern "C" void getActor__12dMsgObject_cFv();
extern "C" void __ct__17dMsgScrn3Select_cFv();
extern "C" void isSelect__17dMsgScrn3Select_cFv();
extern "C" void setString__17dMsgScrn3Select_cFPcPcPc();
extern "C" void setRubyString__17dMsgScrn3Select_cFPcPcPc();
extern "C" void translate__17dMsgScrn3Select_cFff();
extern "C" void draw__17dMsgScrn3Select_cFff();
extern "C" void selAnimeInit__17dMsgScrn3Select_cFUcUcUcfUc();
extern "C" void selAnimeMove__17dMsgScrn3Select_cFUcUcb();
extern "C" void selAnimeEnd__17dMsgScrn3Select_cFv();
extern "C" void getTextBoxWidth__17dMsgScrn3Select_cFv();
extern "C" void getFontSize__17dMsgScrn3Select_cFv();
extern "C" void getRubyFontSize__17dMsgScrn3Select_cFv();
extern "C" void getCharSpace__17dMsgScrn3Select_cFv();
extern "C" void getRubyCharSpace__17dMsgScrn3Select_cFv();
extern "C" void getTextBoxGlobalPosX__17dMsgScrn3Select_cFi();
extern "C" void getTextBoxGlobalPosY__17dMsgScrn3Select_cFi();
extern "C" void __ct__15dMsgScrnArrow_cFv();
extern "C" void draw__15dMsgScrnArrow_cFv();
extern "C" void setPos__15dMsgScrnArrow_cFff();
extern "C" void arwAnimeInit__15dMsgScrnArrow_cFv();
extern "C" void arwAnimeMove__15dMsgScrnArrow_cFv();
extern "C" void dotAnimeInit__15dMsgScrnArrow_cFv();
extern "C" void dotAnimeMove__15dMsgScrnArrow_cFv();
extern "C" void __ct__14dMsgScrnBase_cFv();
extern "C" void __dt__14dMsgScrnBase_cFv();
extern "C" void init__14dMsgScrnBase_cFv();
extern "C" void multiDraw__14dMsgScrnBase_cFv();
extern "C" void draw__14dMsgScrnBase_cFv();
extern "C" void drawOutFont__14dMsgScrnBase_cFfff();
extern "C" void fontAlpha__14dMsgScrnBase_cFf();
extern "C" void isTalkNow__14dMsgScrnBase_cFv();
extern "C" void __ct__15dMsgScrnLight_cFUcUc();
extern "C" void draw__15dMsgScrnLight_cFPffffffUc();
extern "C" void __ct__8CPaneMgrFP9J2DScreenUxUcP10JKRExpHeap();
extern "C" void reinit__8CPaneMgrFv();
extern "C" void getGlobalPosX__8CPaneMgrFv();
extern "C" void getGlobalPosY__8CPaneMgrFv();
extern "C" void setBlackWhite__8CPaneMgrFQ28JUtility6TColorQ28JUtility6TColor();
extern "C" void getGlobalVtxCenter__8CPaneMgrFP7J2DPanebs();
extern "C" void dPaneClass_showNullPane__FP9J2DScreen();
extern "C" void setAlphaRate__13CPaneMgrAlphaFf();
extern "C" void getAlphaRate__13CPaneMgrAlphaFv();
extern "C" bool __eq__4cXyzCFRC3Vec();
extern "C" void alloc__7JKRHeapFUli();
extern "C" void free__7JKRHeapFPv();
extern "C" void* __nw__FUl();
extern "C" void __dl__FPv();
extern "C" void getBounds__7J2DPaneFv();
extern "C" void __ct__9J2DScreenFv();
extern "C" void setPriority__9J2DScreenFPCcUlP10JKRArchive();
extern "C" void draw__9J2DScreenFffPC14J2DGrafContext();
extern "C" void setString__10J2DTextBoxFsPCce();
extern "C" void _savegpr_21();
extern "C" void _savegpr_26();
extern "C" void _savegpr_27();
extern "C" void _savegpr_28();
extern "C" void _savegpr_29();
extern "C" void _restgpr_21();
extern "C" void _restgpr_26();
extern "C" void _restgpr_27();
extern "C" void _restgpr_28();
extern "C" void _restgpr_29();
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 g_meter2_info[248];
extern "C" extern u8 g_MsgObject_HIO_c[1040];

//
// Declarations:
//

/* ############################################################################################## */
/* 80399BB0-80399BB0 026210 0000+00 0/0 0/0 0/0 .rodata          @stringBase0 */
#pragma push
#pragma force_active on
SECTION_DEAD static char const* const stringBase_80399BB0 = "zelda_message_window_new.blo";
SECTION_DEAD static char const* const stringBase_80399BCD = "zelda_message_window_text_seirei.blo";
SECTION_DEAD static char const* const stringBase_80399BF2 = "zelda_message_window_text.blo";
SECTION_DEAD static char const* const stringBase_80399C10 = "";
/* @stringBase0 padding */
SECTION_DEAD static char const* const pad_80399C11 = "\0\0\0\0\0\0";
#pragma pop

/* 803C13C8-803C1420 01E4E8 0058+00 2/2 0/0 0/0 .data            __vt__14dMsgScrnTalk_c */
SECTION_DATA extern void* __vt__14dMsgScrnTalk_c[22] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)draw__14dMsgScrnBase_cFv,
    (void*)__dt__14dMsgScrnTalk_cFv,
    (void*)exec__14dMsgScrnTalk_cFv,
    (void*)multiDraw__14dMsgScrnBase_cFv,
    (void*)drawSelf__14dMsgScrnTalk_cFv,
    (void*)setSelectString__14dMsgScrnTalk_cFPcPcPc,
    (void*)setSelectRubyString__14dMsgScrnTalk_cFPcPcPc,
    (void*)arwAnimeInit__14dMsgScrnTalk_cFv,
    (void*)arwAnimeMove__14dMsgScrnTalk_cFv,
    (void*)dotAnimeInit__14dMsgScrnTalk_cFv,
    (void*)dotAnimeMove__14dMsgScrnTalk_cFv,
    (void*)isSelect__14dMsgScrnTalk_cFv,
    (void*)selectAnimeInit__14dMsgScrnTalk_cFUcUcfUc,
    (void*)selectAnimeMove__14dMsgScrnTalk_cFUcUcb,
    (void*)selectAnimeEnd__14dMsgScrnTalk_cFv,
    (void*)fukiScale__14dMsgScrnTalk_cFf,
    (void*)fukiTrans__14dMsgScrnTalk_cFff,
    (void*)fukiAlpha__14dMsgScrnTalk_cFf,
    (void*)fontAlpha__14dMsgScrnBase_cFf,
    (void*)fukiPosCalc__14dMsgScrnTalk_cFUc,
};

/* 80454D00-80454D04 003300 0004+00 2/2 0/0 0/0 .sdata2          @4086 */
SECTION_SDATA2 static f32 lit_4086 = 18.0f;

/* 80454D04-80454D08 003304 0004+00 3/3 0/0 0/0 .sdata2          @4087 */
SECTION_SDATA2 static u8 lit_4087[4] = {
    0x00,
    0x00,
    0x00,
    0x00,
};

/* 80454D08-80454D0C 003308 0004+00 1/1 0/0 0/0 .sdata2          @4088 */
SECTION_SDATA2 static f32 lit_4088 = -10.0f;

/* 80454D0C-80454D10 00330C 0004+00 1/1 0/0 0/0 .sdata2          @4089 */
SECTION_SDATA2 static f32 lit_4089 = 6.0f / 5.0f;

/* 80246FF0-80247A90 241930 0AA0+00 0/0 1/1 0/0 .text __ct__14dMsgScrnTalk_cFUcUcP10JKRExpHeap */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dMsgScrnTalk_c::dMsgScrnTalk_c(u8 param_0, u8 param_1, JKRExpHeap* param_2) {
    nofralloc
#include "asm/msg/scrn/d_msg_scrn_talk/__ct__14dMsgScrnTalk_cFUcUcP10JKRExpHeap.s"
}
#pragma pop

/* 80247A90-80247D34 2423D0 02A4+00 1/0 0/0 0/0 .text            __dt__14dMsgScrnTalk_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dMsgScrnTalk_c::~dMsgScrnTalk_c() {
    nofralloc
#include "asm/msg/scrn/d_msg_scrn_talk/__dt__14dMsgScrnTalk_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 80454D10-80454D14 003310 0004+00 2/2 0/0 0/0 .sdata2          @4197 */
SECTION_SDATA2 static f32 lit_4197 = 1.0f;

/* 80247D34-80247E4C 242674 0118+00 1/0 0/0 0/0 .text            exec__14dMsgScrnTalk_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMsgScrnTalk_c::exec() {
    nofralloc
#include "asm/msg/scrn/d_msg_scrn_talk/exec__14dMsgScrnTalk_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 80454D14-80454D18 003314 0004+00 1/1 0/0 0/0 .sdata2          @4278 */
SECTION_SDATA2 static f32 lit_4278 = 4.0f / 5.0f;

/* 80454D18-80454D1C 003318 0004+00 1/1 0/0 0/0 .sdata2          @4279 */
SECTION_SDATA2 static f32 lit_4279 = -1.0f;

/* 80247E4C-802480F0 24278C 02A4+00 1/0 0/0 0/0 .text            drawSelf__14dMsgScrnTalk_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMsgScrnTalk_c::drawSelf() {
    nofralloc
#include "asm/msg/scrn/d_msg_scrn_talk/drawSelf__14dMsgScrnTalk_cFv.s"
}
#pragma pop

/* 802480F0-80248114 242A30 0024+00 1/0 0/0 0/0 .text            arwAnimeInit__14dMsgScrnTalk_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMsgScrnTalk_c::arwAnimeInit() {
    nofralloc
#include "asm/msg/scrn/d_msg_scrn_talk/arwAnimeInit__14dMsgScrnTalk_cFv.s"
}
#pragma pop

/* 80248114-80248138 242A54 0024+00 1/0 0/0 0/0 .text            arwAnimeMove__14dMsgScrnTalk_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMsgScrnTalk_c::arwAnimeMove() {
    nofralloc
#include "asm/msg/scrn/d_msg_scrn_talk/arwAnimeMove__14dMsgScrnTalk_cFv.s"
}
#pragma pop

/* 80248138-8024815C 242A78 0024+00 1/0 0/0 0/0 .text            dotAnimeInit__14dMsgScrnTalk_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMsgScrnTalk_c::dotAnimeInit() {
    nofralloc
#include "asm/msg/scrn/d_msg_scrn_talk/dotAnimeInit__14dMsgScrnTalk_cFv.s"
}
#pragma pop

/* 8024815C-80248180 242A9C 0024+00 1/0 0/0 0/0 .text            dotAnimeMove__14dMsgScrnTalk_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMsgScrnTalk_c::dotAnimeMove() {
    nofralloc
#include "asm/msg/scrn/d_msg_scrn_talk/dotAnimeMove__14dMsgScrnTalk_cFv.s"
}
#pragma pop

/* 80248180-802481AC 242AC0 002C+00 1/0 0/0 0/0 .text setSelectString__14dMsgScrnTalk_cFPcPcPc */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMsgScrnTalk_c::setSelectString(char* param_0, char* param_1, char* param_2) {
    nofralloc
#include "asm/msg/scrn/d_msg_scrn_talk/setSelectString__14dMsgScrnTalk_cFPcPcPc.s"
}
#pragma pop

/* 802481AC-802481D8 242AEC 002C+00 1/0 0/0 0/0 .text setSelectRubyString__14dMsgScrnTalk_cFPcPcPc
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMsgScrnTalk_c::setSelectRubyString(char* param_0, char* param_1, char* param_2) {
    nofralloc
#include "asm/msg/scrn/d_msg_scrn_talk/setSelectRubyString__14dMsgScrnTalk_cFPcPcPc.s"
}
#pragma pop

/* 802481D8-8024820C 242B18 0034+00 1/0 0/0 0/0 .text            isSelect__14dMsgScrnTalk_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMsgScrnTalk_c::isSelect() {
    nofralloc
#include "asm/msg/scrn/d_msg_scrn_talk/isSelect__14dMsgScrnTalk_cFv.s"
}
#pragma pop

/* 8024820C-80248244 242B4C 0038+00 1/0 0/0 0/0 .text selectAnimeInit__14dMsgScrnTalk_cFUcUcfUc */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMsgScrnTalk_c::selectAnimeInit(u8 param_0, u8 param_1, f32 param_2, u8 param_3) {
    nofralloc
#include "asm/msg/scrn/d_msg_scrn_talk/selectAnimeInit__14dMsgScrnTalk_cFUcUcfUc.s"
}
#pragma pop

/* 80248244-80248278 242B84 0034+00 1/0 0/0 0/0 .text selectAnimeMove__14dMsgScrnTalk_cFUcUcb */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMsgScrnTalk_c::selectAnimeMove(u8 param_0, u8 param_1, bool param_2) {
    nofralloc
#include "asm/msg/scrn/d_msg_scrn_talk/selectAnimeMove__14dMsgScrnTalk_cFUcUcb.s"
}
#pragma pop

/* 80248278-802482AC 242BB8 0034+00 1/0 0/0 0/0 .text            selectAnimeEnd__14dMsgScrnTalk_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMsgScrnTalk_c::selectAnimeEnd() {
    nofralloc
#include "asm/msg/scrn/d_msg_scrn_talk/selectAnimeEnd__14dMsgScrnTalk_cFv.s"
}
#pragma pop

/* 802482AC-802482B0 242BEC 0004+00 1/0 0/0 0/0 .text            fukiScale__14dMsgScrnTalk_cFf */
void dMsgScrnTalk_c::fukiScale(f32 param_0) {
    /* empty function */
}

/* 802482B0-802482B4 242BF0 0004+00 1/0 0/0 0/0 .text            fukiTrans__14dMsgScrnTalk_cFff */
void dMsgScrnTalk_c::fukiTrans(f32 param_0, f32 param_1) {
    /* empty function */
}

/* 802482B4-8024835C 242BF4 00A8+00 1/0 0/0 0/0 .text            fukiAlpha__14dMsgScrnTalk_cFf */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMsgScrnTalk_c::fukiAlpha(f32 param_0) {
    nofralloc
#include "asm/msg/scrn/d_msg_scrn_talk/fukiAlpha__14dMsgScrnTalk_cFf.s"
}
#pragma pop

/* ############################################################################################## */
/* 80454D1C-80454D20 00331C 0004+00 1/1 0/0 0/0 .sdata2          @4489 */
SECTION_SDATA2 static f32 lit_4489 = 608.0f;

/* 80454D20-80454D24 003320 0004+00 1/1 0/0 0/0 .sdata2          @4490 */
SECTION_SDATA2 static f32 lit_4490 = 448.0f;

/* 80454D24-80454D28 003324 0004+00 1/1 0/0 0/0 .sdata2          @4491 */
SECTION_SDATA2 static f32 lit_4491 = 0.5f;

/* 80454D28-80454D2C 003328 0004+00 1/1 0/0 0/0 .sdata2          @4492 */
SECTION_SDATA2 static f32 lit_4492 = 50.0f;

/* 80454D2C-80454D30 00332C 0004+00 1/1 0/0 0/0 .sdata2          @4493 */
SECTION_SDATA2 static f32 lit_4493 = 105.0f;

/* 80454D30-80454D34 003330 0004+00 1/1 0/0 0/0 .sdata2          @4494 */
SECTION_SDATA2 static f32 lit_4494 = 486.0f;

/* 80454D34-80454D38 003334 0004+00 1/1 0/0 0/0 .sdata2          @4495 */
SECTION_SDATA2 static f32 lit_4495 = 230.0f;

/* 80454D38-80454D3C 003338 0004+00 1/1 0/0 0/0 .sdata2          @4496 */
SECTION_SDATA2 static f32 lit_4496 = 235.0f;

/* 80454D3C-80454D40 00333C 0004+00 1/1 0/0 0/0 .sdata2          @4497 */
SECTION_SDATA2 static f32 lit_4497 = 355.0f;

/* 80454D40-80454D44 003340 0004+00 1/1 0/0 0/0 .sdata2          @4498 */
SECTION_SDATA2 static f32 lit_4498 = 209.0f;

/* 80454D44-80454D48 003344 0004+00 1/1 0/0 0/0 .sdata2          @4499 */
SECTION_SDATA2 static f32 lit_4499 = -190.0f;

/* 80454D48-80454D50 003348 0004+04 1/1 0/0 0/0 .sdata2          @4500 */
SECTION_SDATA2 static f32 lit_4500[1 + 1 /* padding */] = {
    190.0f,
    /* padding */
    0.0f,
};

/* 80454D50-80454D58 003350 0008+00 1/1 0/0 0/0 .sdata2          @4502 */
SECTION_SDATA2 static f64 lit_4502 = 4503601774854144.0 /* cast s32 to float */;

/* 8024835C-80248954 242C9C 05F8+00 1/0 0/0 0/0 .text            fukiPosCalc__14dMsgScrnTalk_cFUc */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMsgScrnTalk_c::fukiPosCalc(u8 param_0) {
    nofralloc
#include "asm/msg/scrn/d_msg_scrn_talk/fukiPosCalc__14dMsgScrnTalk_cFUc.s"
}
#pragma pop

/* 80399BB0-80399BB0 026210 0000+00 0/0 0/0 0/0 .rodata          @stringBase0 */
