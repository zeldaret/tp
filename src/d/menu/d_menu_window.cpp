//
// Generated By: dol2asm
// Translation Unit: d/menu/d_menu_window
//

#include "d/menu/d_menu_window.h"
#include "Z2AudioLib/Z2AudioMgr.h"
#include "d/com/d_com_inf_game.h"
#include "d/menu/d_menu_collect.h"
#include "d/menu/d_menu_dmap.h"
#include "d/menu/d_menu_fishing.h"
#include "d/menu/d_menu_fmap.h"
#include "d/menu/d_menu_insect.h"
#include "d/menu/d_menu_letter.h"
#include "d/menu/d_menu_option.h"
#include "d/menu/d_menu_ring.h"
#include "d/menu/d_menu_save.h"
#include "d/menu/d_menu_skill.h"
#include "d/menu/d_menu_window_HIO.h"
#include "d/meter/d_meter_HIO.h"
#include "d/msg/d_msg_object.h"
#include "dol2asm.h"
#include "dolphin/types.h"
#include "f_op/f_op_msg_mng.h"

//
// Forward References:
//

extern "C" void dMw_UP_TRIGGER__Fv();
extern "C" void dMw_DOWN_TRIGGER__Fv();
extern "C" void dMw_LEFT_TRIGGER__Fv();
extern "C" void dMw_RIGHT_TRIGGER__Fv();
extern "C" void dMw_A_TRIGGER__Fv();
extern "C" void dMw_B_TRIGGER__Fv();
extern "C" void dMw_Z_TRIGGER__Fv();
extern "C" void dMw_START_TRIGGER__Fv();
extern "C" void dMw_onPauseWindow__Fv();
extern "C" void dMw_offPauseWindow__Fv();
extern "C" void dMw_onMenuRing__Fv();
extern "C" void dMw_offMenuRing__Fv();
extern "C" static bool dMw_isMenuRing__Fv();
extern "C" void key_wait_init__5dMw_cFUc();
extern "C" void ring_open_init__5dMw_cFUc();
extern "C" void ring_move_init__5dMw_cFUc();
extern "C" void ring_close_init__5dMw_cFUc();
extern "C" void collect_open_init__5dMw_cFUc();
extern "C" void collect_move_init__5dMw_cFUc();
extern "C" void collect_close_init__5dMw_cFUc();
extern "C" void fmap_open_init__5dMw_cFUc();
extern "C" void fmap_move_init__5dMw_cFUc();
extern "C" void fmap_close_init__5dMw_cFUc();
extern "C" void dmap_open_init__5dMw_cFUc();
extern "C" void dmap_move_init__5dMw_cFUc();
extern "C" void dmap_close_init__5dMw_cFUc();
extern "C" void collect_save_open_init__5dMw_cFUc();
extern "C" void collect_save_move_init__5dMw_cFUc();
extern "C" void collect_save_close_init__5dMw_cFUc();
extern "C" void collect_option_open_init__5dMw_cFUc();
extern "C" void collect_option_move_init__5dMw_cFUc();
extern "C" void collect_option_close_init__5dMw_cFUc();
extern "C" void collect_letter_open_init__5dMw_cFUc();
extern "C" void collect_letter_move_init__5dMw_cFUc();
extern "C" void collect_letter_close_init__5dMw_cFUc();
extern "C" void collect_fishing_open_init__5dMw_cFUc();
extern "C" void collect_fishing_move_init__5dMw_cFUc();
extern "C" void collect_fishing_close_init__5dMw_cFUc();
extern "C" void collect_skill_open_init__5dMw_cFUc();
extern "C" void collect_skill_move_init__5dMw_cFUc();
extern "C" void collect_skill_close_init__5dMw_cFUc();
extern "C" void collect_insect_open_init__5dMw_cFUc();
extern "C" void collect_insect_move_init__5dMw_cFUc();
extern "C" void collect_insect_close_init__5dMw_cFUc();
extern "C" void insect_open_init__5dMw_cFUc();
extern "C" void insect_open2_init__5dMw_cFUc();
extern "C" void insect_move_init__5dMw_cFUc();
extern "C" void insect_close_init__5dMw_cFUc();
extern "C" void key_wait_proc__5dMw_cFv();
extern "C" void ring_open_proc__5dMw_cFv();
extern "C" void ring_move_proc__5dMw_cFv();
extern "C" void ring_close_proc__5dMw_cFv();
extern "C" void collect_open_proc__5dMw_cFv();
extern "C" void collect_move_proc__5dMw_cFv();
extern "C" void collect_close_proc__5dMw_cFv();
extern "C" void fmap_open_proc__5dMw_cFv();
extern "C" void fmap_move_proc__5dMw_cFv();
extern "C" void fmap_close_proc__5dMw_cFv();
extern "C" void dmap_open_proc__5dMw_cFv();
extern "C" void dmap_move_proc__5dMw_cFv();
extern "C" void dmap_close_proc__5dMw_cFv();
extern "C" void collect_save_open_proc__5dMw_cFv();
extern "C" void collect_save_move_proc__5dMw_cFv();
extern "C" void collect_save_close_proc__5dMw_cFv();
extern "C" void collect_option_open_proc__5dMw_cFv();
extern "C" void collect_option_move_proc__5dMw_cFv();
extern "C" void collect_option_close_proc__5dMw_cFv();
extern "C" void collect_letter_open_proc__5dMw_cFv();
extern "C" void collect_letter_move_proc__5dMw_cFv();
extern "C" void collect_letter_close_proc__5dMw_cFv();
extern "C" void collect_fishing_open_proc__5dMw_cFv();
extern "C" void collect_fishing_move_proc__5dMw_cFv();
extern "C" void collect_fishing_close_proc__5dMw_cFv();
extern "C" void collect_skill_open_proc__5dMw_cFv();
extern "C" void collect_skill_move_proc__5dMw_cFv();
extern "C" void collect_skill_close_proc__5dMw_cFv();
extern "C" void collect_insect_open_proc__5dMw_cFv();
extern "C" void collect_insect_move_proc__5dMw_cFv();
extern "C" void collect_insect_close_proc__5dMw_cFv();
extern "C" void insect_open_proc__5dMw_cFv();
extern "C" void insect_open2_proc__5dMw_cFv();
extern "C" void insect_move_proc__5dMw_cFv();
extern "C" void insect_close_proc__5dMw_cFv();
extern "C" void dMw_capture_create__5dMw_cFv();
extern "C" void dMw_capture_delete__5dMw_cFv();
extern "C" void dMw_ring_create__5dMw_cFUc();
extern "C" void dMw_ring_delete__5dMw_cFv();
extern "C" void dMw_collect_create__5dMw_cFv();
extern "C" void dMw_collect_delete__5dMw_cFb();
extern "C" void dMw_fmap_create__5dMw_cFv();
extern "C" void dMw_fmap_delete__5dMw_cFb();
extern "C" void dMw_dmap_create__5dMw_cFv();
extern "C" void dMw_dmap_delete__5dMw_cFb();
extern "C" void dMw_save_create__5dMw_cFv();
extern "C" void dMw_save_delete__5dMw_cFv();
extern "C" void dMw_option_create__5dMw_cFv();
extern "C" void dMw_option_delete__5dMw_cFv();
extern "C" void dMw_letter_create__5dMw_cFv();
extern "C" void dMw_letter_delete__5dMw_cFv();
extern "C" void dMw_fishing_create__5dMw_cFv();
extern "C" void dMw_fishing_delete__5dMw_cFv();
extern "C" void dMw_skill_create__5dMw_cFv();
extern "C" void dMw_skill_delete__5dMw_cFv();
extern "C" void dMw_insect_create__5dMw_cFUc();
extern "C" void dMw_insect_delete__5dMw_cFv();
extern "C" void dMw_onButtonBit__5dMw_cFUc();
extern "C" void dMw_offButtonBit__5dMw_cFUc();
extern "C" void dMw_isButtonBit__5dMw_cFUc();
extern "C" void dMw_isPush_S_Button__5dMw_cFv();
extern "C" void isPauseReady__5dMw_cFv();
extern "C" void dMw_fade_out__5dMw_cFv();
extern "C" void dMw_fade_in__5dMw_cFv();
extern "C" void checkCStickTrigger__5dMw_cFv();
extern "C" void isEventCheck__5dMw_cFv();
extern "C" void markMemSize__5dMw_cFv();
extern "C" void checkMemSize__5dMw_cFv();
extern "C" void _create__5dMw_cFv();
extern "C" void _execute__5dMw_cFv();
extern "C" void _draw__5dMw_cFv();
extern "C" void _delete__5dMw_cFv();
extern "C" static void dMw_Draw__FP5dMw_c();
extern "C" static void dMw_Execute__FP5dMw_c();
extern "C" static bool dMw_IsDelete__FP5dMw_c();
extern "C" static void dMw_Delete__FP5dMw_c();
extern "C" static void dMw_Create__FP9msg_class();
extern "C" void __sinit_d_menu_window_cpp();
extern "C" void draw__20dDlst_MENU_CAPTURE_cFv();
extern "C" void __dt__20dDlst_MENU_CAPTURE_cFv();
extern "C" extern char const* const d_menu_d_menu_window__stringBase0;

//
// External References:
//

extern "C" void mDoExt_setCurrentHeap__FP7JKRHeap();
extern "C" void mDoExt_getCurrentHeap__Fv();
extern "C" void mDoExt_removeMesgFont__Fv();
extern "C" void fopOvlpM_IsDoingReq__Fv();
extern "C" void fopMsgM_setStageLayer__FPv();
extern "C" void dComIfGp_setHeapLockFlag__FUc();
extern "C" void dComIfGp_offHeapLockFlag__Fi();
extern "C" void __ct__9STControlFssssffss();
extern "C" void setWaitParm__9STControlFssssffss();
extern "C" void checkTrigger__9STControlFv();
extern "C" void set__12dDlst_list_cFRPP12dDlst_base_cRPP12dDlst_base_cP12dDlst_base_c();
extern "C" void dCam_getBody__Fv();
extern "C" void isKeyCheck__17dMenu_Collect2D_cFv();
extern "C" bool isOutCheck__17dMenu_Collect2D_cFv();
extern "C" void __ct__15dMenu_Collect_cFP10JKRExpHeapP9STControlP10CSTControl();
extern "C" void _create__15dMenu_Collect_cFv();
extern "C" void _delete__15dMenu_Collect_cFv();
extern "C" void _move__15dMenu_Collect_cFv();
extern "C" void draw__15dMenu_Collect_cFv();
extern "C" void __ct__12dMenu_Dmap_cFP10JKRExpHeapP9STControlP10CSTControlUcUc();
extern "C" void _move__12dMenu_Dmap_cFv();
extern "C" void isOpen__12dMenu_Dmap_cFv();
extern "C" void isClose__12dMenu_Dmap_cFv();
extern "C" void _draw__12dMenu_Dmap_cFv();
extern "C" void getNextStatus__12dMenu_Dmap_cFv();
extern "C" void isSync__12dMenu_Dmap_cFv();
extern "C" void __ct__15dMenu_Fishing_cFP10JKRExpHeapP9STControlP10CSTControl();
extern "C" void _move__15dMenu_Fishing_cFv();
extern "C" void isSync__15dMenu_Fishing_cFv();
extern "C" void _open__15dMenu_Fishing_cFv();
extern "C" void __ct__12dMenu_Fmap_cFP10JKRExpHeapP9STControlP10CSTControlUcUcUcffUc();
extern "C" void _delete__12dMenu_Fmap_cFv();
extern "C" void _move__12dMenu_Fmap_cFv();
extern "C" void _draw__12dMenu_Fmap_cFv();
extern "C" void getNextStatus__12dMenu_Fmap_cFPUc();
extern "C" void isSync__12dMenu_Fmap_cFv();
extern "C" void isOpen__12dMenu_Fmap_cFv();
extern "C" void isClose__12dMenu_Fmap_cFv();
extern "C" void getProcess__12dMenu_Fmap_cFv();
extern "C" void getRegionCursor__12dMenu_Fmap_cFv();
extern "C" void getStageCursor__12dMenu_Fmap_cFv();
extern "C" void getStageTransX__12dMenu_Fmap_cFv();
extern "C" void getStageTransZ__12dMenu_Fmap_cFv();
extern "C" void __ct__14dMenu_Insect_cFP10JKRExpHeapP9STControlP10CSTControlUc();
extern "C" void _move__14dMenu_Insect_cFv();
extern "C" void isSync__14dMenu_Insect_cFv();
extern "C" void _open__14dMenu_Insect_cFv();
extern "C" void __ct__14dMenu_Letter_cFP10JKRExpHeapP9STControlP10CSTControl();
extern "C" void _move__14dMenu_Letter_cFv();
extern "C" void isSync__14dMenu_Letter_cFv();
extern "C" void _open__14dMenu_Letter_cFv();
extern "C" void __ct__14dMenu_Option_cFP10JKRArchiveP9STControl();
extern "C" void _delete__14dMenu_Option_cFv();
extern "C" void _move__14dMenu_Option_cFv();
extern "C" void isSync__14dMenu_Option_cFv();
extern "C" void _open__14dMenu_Option_cFv();
extern "C" void __ct__12dMenu_Ring_cFP10JKRExpHeapP9STControlP10CSTControlUc();
extern "C" void _create__12dMenu_Ring_cFv();
extern "C" void _delete__12dMenu_Ring_cFv();
extern "C" void _move__12dMenu_Ring_cFv();
extern "C" void isOpen__12dMenu_Ring_cFv();
extern "C" void isMoveEnd__12dMenu_Ring_cFv();
extern "C" void isClose__12dMenu_Ring_cFv();
extern "C" void __ct__12dMenu_save_cFv();
extern "C" void _create__12dMenu_save_cFv();
extern "C" void initialize__12dMenu_save_cFv();
extern "C" void _open__12dMenu_save_cFv();
extern "C" void _delete__12dMenu_save_cFv();
extern "C" void _move__12dMenu_save_cFv();
extern "C" void _draw2__12dMenu_save_cFv();
extern "C" void __ct__13dMenu_Skill_cFP10JKRExpHeapP9STControlP10CSTControl();
extern "C" void _move__13dMenu_Skill_cFv();
extern "C" void isSync__13dMenu_Skill_cFv();
extern "C" void _open__13dMenu_Skill_cFv();
extern "C" void isEnableDispMapAndMapDispSizeTypeNo__11dMeterMap_cFv();
extern "C" void setDispPosInsideFlg_SE_On__11dMeterMap_cFv();
extern "C" void setDispPosOutsideFlg_SE_On__11dMeterMap_cFv();
extern "C" void resetWarpStatus__13dMeter2Info_cFv();
extern "C" void dMeter2Info_isItemOpenCheck__Fv();
extern "C" void dMeter2Info_set2DVibration__Fv();
extern "C" void dMeter2Info_set2DVibrationM__Fv();
extern "C" void emphasisButtonDelete__9dMeter2_cFv();
extern "C" void setKillMessageFlag__12dMsgObject_cFv();
extern "C" void getStatus__12dMsgObject_cFv();
extern "C" void seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc();
extern "C" void freeAll__7JKRHeapFv();
extern "C" void getTotalFreeSize__7JKRHeapFv();
extern "C" void* __nw__FUl();
extern "C" void __dl__FPv();
extern "C" void GXClearVtxDesc();
extern "C" void GXPixModeSync();
extern "C" void __ptmf_scall();
extern "C" void _savegpr_28();
extern "C" void _savegpr_29();
extern "C" void _restgpr_28();
extern "C" void _restgpr_29();
extern "C" extern u8 g_mDoMtx_identity[48 + 24 /* padding */];
extern "C" extern void* g_fopMsg_Method[5 + 1 /* padding */];
extern "C" extern void* __vt__12dDlst_base_c[3];
extern "C" extern void* __vt__10CSTControl[4];
extern "C" u8 m_cpadInfo__8mDoCPd_c[256];
extern "C" u8 mFader__13mDoGph_gInf_c[4];
extern "C" u8 mFrameBufferTimg__13mDoGph_gInf_c[4];
extern "C" u8 mFrameBufferTex__13mDoGph_gInf_c[4];
extern "C" u8 sManager__10JFWDisplay[4];
extern "C" u8 mAudioMgrPtr__10Z2AudioMgr[4 + 4 /* padding */];

//
// Declarations:
//

inline BOOL dComIfGp_event_runCheck() {
    return g_dComIfG_gameInfo.play.getEvent().runCheck();
}

BOOL dMw_UP_TRIGGER() {
    return (bool)mDoCPd_c::getTrigUp(mDoCPd_c::PAD_0);
}

bool dMw_DOWN_TRIGGER() {
    return mDoCPd_c::getTrigDown(mDoCPd_c::PAD_0);
}

BOOL dMw_LEFT_TRIGGER() {
    if (mDoCPd_c::getTrigLeft(mDoCPd_c::PAD_0) && !dMw_UP_TRIGGER()) {
        return true;
    } else {
        return false;
    }
}

BOOL dMw_RIGHT_TRIGGER() {
    if (mDoCPd_c::getTrigRight(mDoCPd_c::PAD_0) && !dMw_UP_TRIGGER()) {
        return true;
    } else {
        return false;
    }
}

bool dMw_A_TRIGGER() {
    return mDoCPd_c::getTrigA(mDoCPd_c::PAD_0);
}

BOOL dMw_B_TRIGGER() {
    return (bool)mDoCPd_c::getTrigB(mDoCPd_c::PAD_0);
}

bool dMw_Z_TRIGGER() {
    return mDoCPd_c::getTrigZ(mDoCPd_c::PAD_0);
}

BOOL dMw_START_TRIGGER() {
    return (bool)mDoCPd_c::getTrigStart(mDoCPd_c::PAD_0);
}

void dMw_onPauseWindow() {
    dMw_c* menu_window = dMeter2Info_getMenuWindowClass();

    if (menu_window) {
        menu_window->onPauseWindow();
    }
}

void dMw_offPauseWindow() {
    dMw_c* menu_window = dMeter2Info_getMenuWindowClass();

    if (menu_window) {
        menu_window->offPauseWindow();
    }
}

void dMw_onMenuRing() {
    dMw_c* menu_window = dMeter2Info_getMenuWindowClass();

    if (menu_window) {
        menu_window->onShowFlag();
    }
}

void dMw_offMenuRing() {
    dMw_c* menu_window = dMeter2Info_getMenuWindowClass();

    if (menu_window) {
        menu_window->offShowFlag();
    }
}

static bool dMw_isMenuRing() {
    dMw_c* menu_window = dMeter2Info_getMenuWindowClass();

    if (menu_window) {
        return menu_window->isShowFlag();
    }
    return false;
}

/* ############################################################################################## */
/* 803BE8F8-803BE904 01BA18 000C+00 1/1 0/0 0/0 .data            cNullVec__6Z2Calc */
SECTION_DATA static u8 cNullVec__6Z2Calc[12] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803BE904-803BE910 -00001 000C+00 0/1 0/0 0/0 .data            @4276 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4276[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)key_wait_init__5dMw_cFUc,
};
#pragma pop

/* 803BE910-803BE91C -00001 000C+00 0/1 0/0 0/0 .data            @4277 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4277[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)ring_open_init__5dMw_cFUc,
};
#pragma pop

/* 803BE91C-803BE928 -00001 000C+00 0/1 0/0 0/0 .data            @4278 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4278[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)ring_move_init__5dMw_cFUc,
};
#pragma pop

/* 803BE928-803BE934 -00001 000C+00 0/1 0/0 0/0 .data            @4279 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4279[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)ring_close_init__5dMw_cFUc,
};
#pragma pop

/* 803BE934-803BE940 -00001 000C+00 0/1 0/0 0/0 .data            @4280 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4280[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)collect_open_init__5dMw_cFUc,
};
#pragma pop

/* 803BE940-803BE94C -00001 000C+00 0/1 0/0 0/0 .data            @4281 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4281[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)collect_move_init__5dMw_cFUc,
};
#pragma pop

/* 803BE94C-803BE958 -00001 000C+00 0/1 0/0 0/0 .data            @4282 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4282[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)collect_close_init__5dMw_cFUc,
};
#pragma pop

/* 803BE958-803BE964 -00001 000C+00 0/1 0/0 0/0 .data            @4283 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4283[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)fmap_open_init__5dMw_cFUc,
};
#pragma pop

/* 803BE964-803BE970 -00001 000C+00 0/1 0/0 0/0 .data            @4284 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4284[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)fmap_move_init__5dMw_cFUc,
};
#pragma pop

/* 803BE970-803BE97C -00001 000C+00 0/1 0/0 0/0 .data            @4285 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4285[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)fmap_close_init__5dMw_cFUc,
};
#pragma pop

/* 803BE97C-803BE988 -00001 000C+00 0/1 0/0 0/0 .data            @4286 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4286[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)dmap_open_init__5dMw_cFUc,
};
#pragma pop

/* 803BE988-803BE994 -00001 000C+00 0/1 0/0 0/0 .data            @4287 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4287[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)dmap_move_init__5dMw_cFUc,
};
#pragma pop

/* 803BE994-803BE9A0 -00001 000C+00 0/1 0/0 0/0 .data            @4288 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4288[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)dmap_close_init__5dMw_cFUc,
};
#pragma pop

/* 803BE9A0-803BE9AC -00001 000C+00 0/1 0/0 0/0 .data            @4289 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4289[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)collect_save_open_init__5dMw_cFUc,
};
#pragma pop

/* 803BE9AC-803BE9B8 -00001 000C+00 0/1 0/0 0/0 .data            @4290 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4290[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)collect_save_move_init__5dMw_cFUc,
};
#pragma pop

/* 803BE9B8-803BE9C4 -00001 000C+00 0/1 0/0 0/0 .data            @4291 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4291[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)collect_save_close_init__5dMw_cFUc,
};
#pragma pop

/* 803BE9C4-803BE9D0 -00001 000C+00 0/1 0/0 0/0 .data            @4292 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4292[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)collect_option_open_init__5dMw_cFUc,
};
#pragma pop

/* 803BE9D0-803BE9DC -00001 000C+00 0/1 0/0 0/0 .data            @4293 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4293[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)collect_option_move_init__5dMw_cFUc,
};
#pragma pop

/* 803BE9DC-803BE9E8 -00001 000C+00 0/1 0/0 0/0 .data            @4294 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4294[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)collect_option_close_init__5dMw_cFUc,
};
#pragma pop

/* 803BE9E8-803BE9F4 -00001 000C+00 0/1 0/0 0/0 .data            @4295 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4295[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)collect_letter_open_init__5dMw_cFUc,
};
#pragma pop

/* 803BE9F4-803BEA00 -00001 000C+00 0/1 0/0 0/0 .data            @4296 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4296[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)collect_letter_move_init__5dMw_cFUc,
};
#pragma pop

/* 803BEA00-803BEA0C -00001 000C+00 0/1 0/0 0/0 .data            @4297 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4297[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)collect_letter_close_init__5dMw_cFUc,
};
#pragma pop

/* 803BEA0C-803BEA18 -00001 000C+00 0/1 0/0 0/0 .data            @4298 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4298[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)collect_fishing_open_init__5dMw_cFUc,
};
#pragma pop

/* 803BEA18-803BEA24 -00001 000C+00 0/1 0/0 0/0 .data            @4299 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4299[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)collect_fishing_move_init__5dMw_cFUc,
};
#pragma pop

/* 803BEA24-803BEA30 -00001 000C+00 0/1 0/0 0/0 .data            @4300 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4300[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)collect_fishing_close_init__5dMw_cFUc,
};
#pragma pop

/* 803BEA30-803BEA3C -00001 000C+00 0/1 0/0 0/0 .data            @4301 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4301[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)collect_skill_open_init__5dMw_cFUc,
};
#pragma pop

/* 803BEA3C-803BEA48 -00001 000C+00 0/1 0/0 0/0 .data            @4302 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4302[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)collect_skill_move_init__5dMw_cFUc,
};
#pragma pop

/* 803BEA48-803BEA54 -00001 000C+00 0/1 0/0 0/0 .data            @4303 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4303[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)collect_skill_close_init__5dMw_cFUc,
};
#pragma pop

/* 803BEA54-803BEA60 -00001 000C+00 0/1 0/0 0/0 .data            @4304 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4304[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)collect_insect_open_init__5dMw_cFUc,
};
#pragma pop

/* 803BEA60-803BEA6C -00001 000C+00 0/1 0/0 0/0 .data            @4305 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4305[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)collect_insect_move_init__5dMw_cFUc,
};
#pragma pop

/* 803BEA6C-803BEA78 -00001 000C+00 0/1 0/0 0/0 .data            @4306 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4306[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)collect_insect_close_init__5dMw_cFUc,
};
#pragma pop

/* 803BEA78-803BEA84 -00001 000C+00 0/1 0/0 0/0 .data            @4307 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4307[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)insect_open_init__5dMw_cFUc,
};
#pragma pop

/* 803BEA84-803BEA90 -00001 000C+00 0/1 0/0 0/0 .data            @4308 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4308[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)insect_open2_init__5dMw_cFUc,
};
#pragma pop

/* 803BEA90-803BEA9C -00001 000C+00 0/1 0/0 0/0 .data            @4309 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4309[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)insect_move_init__5dMw_cFUc,
};
#pragma pop

/* 803BEA9C-803BEAA8 -00001 000C+00 0/1 0/0 0/0 .data            @4310 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4310[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)insect_close_init__5dMw_cFUc,
};
#pragma pop

/* 803BEAA8-803BEC4C 01BBC8 01A4+00 1/2 0/0 0/0 .data            init_proc */
SECTION_DATA static u8 init_proc[420] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00,
};

/* 803BEC4C-803BEC58 -00001 000C+00 0/1 0/0 0/0 .data            @4311 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4311[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)key_wait_proc__5dMw_cFv,
};
#pragma pop

/* 803BEC58-803BEC64 -00001 000C+00 0/1 0/0 0/0 .data            @4312 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4312[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)ring_open_proc__5dMw_cFv,
};
#pragma pop

/* 803BEC64-803BEC70 -00001 000C+00 0/1 0/0 0/0 .data            @4313 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4313[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)ring_move_proc__5dMw_cFv,
};
#pragma pop

/* 803BEC70-803BEC7C -00001 000C+00 0/1 0/0 0/0 .data            @4314 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4314[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)ring_close_proc__5dMw_cFv,
};
#pragma pop

/* 803BEC7C-803BEC88 -00001 000C+00 0/1 0/0 0/0 .data            @4315 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4315[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)collect_open_proc__5dMw_cFv,
};
#pragma pop

/* 803BEC88-803BEC94 -00001 000C+00 0/1 0/0 0/0 .data            @4316 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4316[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)collect_move_proc__5dMw_cFv,
};
#pragma pop

/* 803BEC94-803BECA0 -00001 000C+00 0/1 0/0 0/0 .data            @4317 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4317[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)collect_close_proc__5dMw_cFv,
};
#pragma pop

/* 803BECA0-803BECAC -00001 000C+00 0/1 0/0 0/0 .data            @4318 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4318[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)fmap_open_proc__5dMw_cFv,
};
#pragma pop

/* 803BECAC-803BECB8 -00001 000C+00 0/1 0/0 0/0 .data            @4319 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4319[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)fmap_move_proc__5dMw_cFv,
};
#pragma pop

/* 803BECB8-803BECC4 -00001 000C+00 0/1 0/0 0/0 .data            @4320 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4320[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)fmap_close_proc__5dMw_cFv,
};
#pragma pop

/* 803BECC4-803BECD0 -00001 000C+00 0/1 0/0 0/0 .data            @4321 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4321[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)dmap_open_proc__5dMw_cFv,
};
#pragma pop

/* 803BECD0-803BECDC -00001 000C+00 0/1 0/0 0/0 .data            @4322 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4322[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)dmap_move_proc__5dMw_cFv,
};
#pragma pop

/* 803BECDC-803BECE8 -00001 000C+00 0/1 0/0 0/0 .data            @4323 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4323[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)dmap_close_proc__5dMw_cFv,
};
#pragma pop

/* 803BECE8-803BECF4 -00001 000C+00 0/1 0/0 0/0 .data            @4324 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4324[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)collect_save_open_proc__5dMw_cFv,
};
#pragma pop

/* 803BECF4-803BED00 -00001 000C+00 0/1 0/0 0/0 .data            @4325 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4325[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)collect_save_move_proc__5dMw_cFv,
};
#pragma pop

/* 803BED00-803BED0C -00001 000C+00 0/1 0/0 0/0 .data            @4326 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4326[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)collect_save_close_proc__5dMw_cFv,
};
#pragma pop

/* 803BED0C-803BED18 -00001 000C+00 0/1 0/0 0/0 .data            @4327 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4327[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)collect_option_open_proc__5dMw_cFv,
};
#pragma pop

/* 803BED18-803BED24 -00001 000C+00 0/1 0/0 0/0 .data            @4328 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4328[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)collect_option_move_proc__5dMw_cFv,
};
#pragma pop

/* 803BED24-803BED30 -00001 000C+00 0/1 0/0 0/0 .data            @4329 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4329[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)collect_option_close_proc__5dMw_cFv,
};
#pragma pop

/* 803BED30-803BED3C -00001 000C+00 0/1 0/0 0/0 .data            @4330 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4330[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)collect_letter_open_proc__5dMw_cFv,
};
#pragma pop

/* 803BED3C-803BED48 -00001 000C+00 0/1 0/0 0/0 .data            @4331 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4331[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)collect_letter_move_proc__5dMw_cFv,
};
#pragma pop

/* 803BED48-803BED54 -00001 000C+00 0/1 0/0 0/0 .data            @4332 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4332[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)collect_letter_close_proc__5dMw_cFv,
};
#pragma pop

/* 803BED54-803BED60 -00001 000C+00 0/1 0/0 0/0 .data            @4333 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4333[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)collect_fishing_open_proc__5dMw_cFv,
};
#pragma pop

/* 803BED60-803BED6C -00001 000C+00 0/1 0/0 0/0 .data            @4334 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4334[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)collect_fishing_move_proc__5dMw_cFv,
};
#pragma pop

/* 803BED6C-803BED78 -00001 000C+00 0/1 0/0 0/0 .data            @4335 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4335[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)collect_fishing_close_proc__5dMw_cFv,
};
#pragma pop

/* 803BED78-803BED84 -00001 000C+00 0/1 0/0 0/0 .data            @4336 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4336[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)collect_skill_open_proc__5dMw_cFv,
};
#pragma pop

/* 803BED84-803BED90 -00001 000C+00 0/1 0/0 0/0 .data            @4337 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4337[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)collect_skill_move_proc__5dMw_cFv,
};
#pragma pop

/* 803BED90-803BED9C -00001 000C+00 0/1 0/0 0/0 .data            @4338 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4338[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)collect_skill_close_proc__5dMw_cFv,
};
#pragma pop

/* 803BED9C-803BEDA8 -00001 000C+00 0/1 0/0 0/0 .data            @4339 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4339[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)collect_insect_open_proc__5dMw_cFv,
};
#pragma pop

/* 803BEDA8-803BEDB4 -00001 000C+00 0/1 0/0 0/0 .data            @4340 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4340[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)collect_insect_move_proc__5dMw_cFv,
};
#pragma pop

/* 803BEDB4-803BEDC0 -00001 000C+00 0/1 0/0 0/0 .data            @4341 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4341[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)collect_insect_close_proc__5dMw_cFv,
};
#pragma pop

/* 803BEDC0-803BEDCC -00001 000C+00 0/1 0/0 0/0 .data            @4342 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4342[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)insect_open_proc__5dMw_cFv,
};
#pragma pop

/* 803BEDCC-803BEDD8 -00001 000C+00 0/1 0/0 0/0 .data            @4343 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4343[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)insect_open2_proc__5dMw_cFv,
};
#pragma pop

/* 803BEDD8-803BEDE4 -00001 000C+00 0/1 0/0 0/0 .data            @4344 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4344[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)insect_move_proc__5dMw_cFv,
};
#pragma pop

/* 803BEDE4-803BEDF0 -00001 000C+00 0/1 0/0 0/0 .data            @4345 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_4345[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)insect_close_proc__5dMw_cFv,
};
#pragma pop

/* 803BEDF0-803BEF94 01BF10 01A4+00 1/2 0/0 0/0 .data            move_proc */
SECTION_DATA static u8 move_proc[420] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00,
};

/* 801FA13C-801FA220 1F4A7C 00E4+00 2/0 0/0 0/0 .text            key_wait_init__5dMw_cFUc */
void dMw_c::key_wait_init(u8 menu_status) {
    dMeter2Info_setWindowStatus(0);
    dMw_capture_delete();

    switch (menu_status) {
    case COLLECT_CLOSE:
        dMw_fade_in();
        dMw_collect_delete(true);
        break;
    case DMAP_CLOSE:
        dMw_dmap_delete(true);
        break;
    case FMAP_CLOSE:
        dMw_fmap_delete(true);
        break;
    case RING_CLOSE:
        dMw_ring_delete();
        break;
    case SAVE_CLOSE:
        dMw_fade_in();
        dMw_save_delete();
        break;
    case INSECT_AGITHA_CLOSE:
        dMw_fade_in();
        dMw_insect_delete();
        break;
    }
    mpHeap->freeAll();
    dComIfGp_offHeapLockFlag(0);
}

void dMw_c::ring_open_init(u8 param_0) {
    dMeter2Info_setWindowStatus(2);
}

void dMw_c::ring_move_init(u8 param_0) {
    /* empty function */
}

void dMw_c::ring_close_init(u8 param_0) {
    /* empty function */
}

/* ############################################################################################## */
/* 804544C0-804544C4 002AC0 0004+00 2/2 0/0 0/0 .sdata2          @4152 */
SECTION_SDATA2 static u8 lit_4152[4] = {
    0x00,
    0x00,
    0x00,
    0x00,
};

/* 801FA244-801FA2D0 1F4B84 008C+00 1/0 0/0 0/0 .text            collect_open_init__5dMw_cFUc */
void dMw_c::collect_open_init(u8 param_0) {
    field_0x144 = 3;
    dMeter2Info_setWindowStatus(3);
    Z2GetAudioMgr()->mSeMgr.seStart(Z2SE_SY_MENU_IN, NULL, 0, 0, 1.0f, 1.0f, -1.0f, -1.0f, 0);
    dMw_fade_out();
    dMw_capture_create();
    field_0x153 = 0;
}

/* 801FA2D0-801FA46C 1F4C10 019C+00 2/0 0/0 0/0 .text            collect_move_init__5dMw_cFUc */
void dMw_c::collect_move_init(u8 menu_status) {
    switch (menu_status) {
    case COLLECT_OPEN:
        dMw_fade_in();
        dComIfGp_setHeapLockFlag(1);
        dMw_collect_create();
        break;
    case SAVE_CLOSE:
        dMw_fade_in();
        dMw_save_delete();
        field_0x144 = 3;
        dMeter2Info_setWindowStatus(3);
        dMw_collect_create();
        break;
    case OPTIONS_CLOSE:
        dMw_fade_in();
        dMw_option_delete();
        field_0x144 = 3;
        dMeter2Info_setWindowStatus(3);
        dMw_collect_create();
        break;
    case LETTER_CLOSE:
        dMw_fade_in();
        dMw_letter_delete();
        field_0x144 = 3;
        dMeter2Info_setWindowStatus(3);
        dMw_collect_create();
        break;
    case FISHING_CLOSE:
        dMw_fade_in();
        dMw_fishing_delete();
        field_0x144 = 3;
        dMeter2Info_setWindowStatus(3);
        dMw_collect_create();
        break;
    case SKILL_CLOSE:
        dMw_fade_in();
        dMw_skill_delete();
        field_0x144 = 3;
        dMeter2Info_setWindowStatus(3);
        dMw_collect_create();
        break;
    case INSECT_CLOSE:
        dMw_fade_in();
        dMw_insect_delete();
        field_0x144 = 3;
        dMeter2Info_setWindowStatus(3);
        dMw_collect_create();
        break;
    }
}

/* 801FA46C-801FA538 1F4DAC 00CC+00 1/0 0/0 0/0 .text            collect_close_init__5dMw_cFUc */
void dMw_c::collect_close_init(u8 param_0) {
    if (mpMenuCollect->getSubWindowOpenCheck() != 1 &&
        mpMenuCollect->getSubWindowOpenCheck() != 2) {
        if (mpMenuCollect->getSubWindowOpenCheck() == 3 ||
            mpMenuCollect->getSubWindowOpenCheck() == 4 ||
            mpMenuCollect->getSubWindowOpenCheck() == 5 ||
            mpMenuCollect->getSubWindowOpenCheck() == 6) {
            Z2GetAudioMgr()->mSeMgr.seStart(Z2SE_SY_MENU_SUB_IN, NULL, 0, 0, 1.0f, 1.0f, -1.0f,
                                            -1.0f, 0);
        } else {
            Z2GetAudioMgr()->mSeMgr.seStart(Z2SE_SY_MENU_OUT, NULL, 0, 0, 1.0f, 1.0f, -1.0f, -1.0f,
                                            0);
            dMeter2Info_set2DVibrationM();
        }
    }
    dMw_fade_out();
}

/* 801FA538-801FA55C 1F4E78 0024+00 1/0 0/0 0/0 .text            fmap_open_init__5dMw_cFUc */
void dMw_c::fmap_open_init(u8 param_0) {
    dMeter2Info_setWindowStatus(4);
    field_0x153 = 0;
}

/* 801FA55C-801FA560 1F4E9C 0004+00 1/0 0/0 0/0 .text            fmap_move_init__5dMw_cFUc */
void dMw_c::fmap_move_init(u8 param_0) {
    /* empty function */
}

/* 801FA560-801FA564 1F4EA0 0004+00 1/0 0/0 0/0 .text            fmap_close_init__5dMw_cFUc */
void dMw_c::fmap_close_init(u8 param_0) {
    /* empty function */
}

/* 801FA564-801FA588 1F4EA4 0024+00 1/0 0/0 0/0 .text            dmap_open_init__5dMw_cFUc */
void dMw_c::dmap_open_init(u8 param_0) {
    dMeter2Info_setWindowStatus(5);
    field_0x153 = 0;
}

/* 801FA588-801FA58C 1F4EC8 0004+00 1/0 0/0 0/0 .text            dmap_move_init__5dMw_cFUc */
void dMw_c::dmap_move_init(u8 param_0) {
    /* empty function */
}

/* 801FA58C-801FA590 1F4ECC 0004+00 1/0 0/0 0/0 .text            dmap_close_init__5dMw_cFUc */
void dMw_c::dmap_close_init(u8 param_0) {
    /* empty function */
}

/* 801FA590-801FA5E4 1F4ED0 0054+00 1/0 0/0 0/0 .text            collect_save_open_init__5dMw_cFUc
 */
void dMw_c::collect_save_open_init(u8 param_0) {
    field_0x144 = 10;
    dMeter2Info_setWindowStatus(10);
    dMw_collect_delete(true);
    dMw_save_create();
}

/* 801FA5E4-801FA5E8 1F4F24 0004+00 1/0 0/0 0/0 .text            collect_save_move_init__5dMw_cFUc
 */
void dMw_c::collect_save_move_init(u8 param_0) {
    /* empty function */
}

/* 801FA5E8-801FA608 1F4F28 0020+00 1/0 0/0 0/0 .text            collect_save_close_init__5dMw_cFUc
 */
void dMw_c::collect_save_close_init(u8 param_0) {
    dMw_fade_out();
}

/* 801FA608-801FA65C 1F4F48 0054+00 1/0 0/0 0/0 .text            collect_option_open_init__5dMw_cFUc
 */
void dMw_c::collect_option_open_init(u8 param_0) {
    field_0x144 = 10;
    dMeter2Info_setWindowStatus(10);
    dMw_collect_delete(true);
    dMw_option_create();
}

/* 801FA65C-801FA660 1F4F9C 0004+00 1/0 0/0 0/0 .text            collect_option_move_init__5dMw_cFUc
 */
void dMw_c::collect_option_move_init(u8 param_0) {
    /* empty function */
}

/* 801FA660-801FA680 1F4FA0 0020+00 1/0 0/0 0/0 .text collect_option_close_init__5dMw_cFUc */
void dMw_c::collect_option_close_init(u8 param_0) {
    dMw_fade_out();
}

/* 801FA680-801FA6DC 1F4FC0 005C+00 1/0 0/0 0/0 .text            collect_letter_open_init__5dMw_cFUc
 */
void dMw_c::collect_letter_open_init(u8 param_0) {
    field_0x144 = 10;
    dMeter2Info_setWindowStatus(10);
    field_0x152 = 0;
    dMw_collect_delete(true);
    dMw_letter_create();
}

/* 801FA6DC-801FA6E0 1F501C 0004+00 1/0 0/0 0/0 .text            collect_letter_move_init__5dMw_cFUc
 */
void dMw_c::collect_letter_move_init(u8 param_0) {
    /* empty function */
}

/* 801FA6E0-801FA738 1F5020 0058+00 1/0 0/0 0/0 .text collect_letter_close_init__5dMw_cFUc */
void dMw_c::collect_letter_close_init(u8 param_0) {
    Z2GetAudioMgr()->mSeMgr.seStart(Z2SE_SY_MENU_SUB_OUT, NULL, 0, 0, 1.0f, 1.0f, -1.0f, -1.0f, 0);
    dMeter2Info_set2DVibration();
    dMw_fade_out();
}

/* 801FA738-801FA794 1F5078 005C+00 1/0 0/0 0/0 .text collect_fishing_open_init__5dMw_cFUc */
void dMw_c::collect_fishing_open_init(u8 param_0) {
    field_0x144 = 10;
    dMeter2Info_setWindowStatus(10);
    field_0x152 = 0;
    dMw_collect_delete(true);
    dMw_fishing_create();
}

/* 801FA794-801FA798 1F50D4 0004+00 1/0 0/0 0/0 .text collect_fishing_move_init__5dMw_cFUc */
void dMw_c::collect_fishing_move_init(u8 param_0) {
    /* empty function */
}

/* 801FA798-801FA7F0 1F50D8 0058+00 1/0 0/0 0/0 .text collect_fishing_close_init__5dMw_cFUc */
void dMw_c::collect_fishing_close_init(u8 param_0) {
    Z2GetAudioMgr()->mSeMgr.seStart(Z2SE_SY_MENU_SUB_OUT, NULL, 0, 0, 1.0f, 1.0f, -1.0f, -1.0f, 0);
    dMeter2Info_set2DVibration();
    dMw_fade_out();
}

/* 801FA7F0-801FA84C 1F5130 005C+00 1/0 0/0 0/0 .text            collect_skill_open_init__5dMw_cFUc
 */
void dMw_c::collect_skill_open_init(u8 param_0) {
    field_0x144 = 10;
    dMeter2Info_setWindowStatus(10);
    field_0x152 = 0;
    dMw_collect_delete(true);
    dMw_skill_create();
}

/* 801FA84C-801FA850 1F518C 0004+00 1/0 0/0 0/0 .text            collect_skill_move_init__5dMw_cFUc
 */
void dMw_c::collect_skill_move_init(u8 param_0) {
    /* empty function */
}

/* 801FA850-801FA8A8 1F5190 0058+00 1/0 0/0 0/0 .text            collect_skill_close_init__5dMw_cFUc
 */
void dMw_c::collect_skill_close_init(u8 param_0) {
    Z2GetAudioMgr()->mSeMgr.seStart(Z2SE_SY_MENU_SUB_OUT, NULL, 0, 0, 1.0f, 1.0f, -1.0f, -1.0f, 0);
    dMeter2Info_set2DVibration();
    dMw_fade_out();
}

/* 801FA8A8-801FA908 1F51E8 0060+00 1/0 0/0 0/0 .text            collect_insect_open_init__5dMw_cFUc
 */
void dMw_c::collect_insect_open_init(u8 param_0) {
    field_0x144 = 10;
    dMeter2Info_setWindowStatus(10);
    field_0x152 = 0;
    dMw_collect_delete(true);
    dMw_insect_create(0);
}

/* 801FA908-801FA90C 1F5248 0004+00 1/0 0/0 0/0 .text            collect_insect_move_init__5dMw_cFUc
 */
void dMw_c::collect_insect_move_init(u8 param_0) {
    /* empty function */
}

/* 801FA90C-801FA964 1F524C 0058+00 1/0 0/0 0/0 .text collect_insect_close_init__5dMw_cFUc */
void dMw_c::collect_insect_close_init(u8 param_0) {
    Z2GetAudioMgr()->mSeMgr.seStart(Z2SE_SY_MENU_SUB_OUT, NULL, 0, 0, 1.0f, 1.0f, -1.0f, -1.0f, 0);
    dMeter2Info_set2DVibration();
    dMw_fade_out();
}

/* 801FA964-801FA9E8 1F52A4 0084+00 1/0 0/0 0/0 .text            insect_open_init__5dMw_cFUc */
void dMw_c::insect_open_init(u8 param_0) {
    field_0x144 = 10;
    dMeter2Info_setWindowStatus(10);
    Z2GetAudioMgr()->mSeMgr.seStart(Z2SE_SY_MENU_SUB_IN, NULL, 0, 0, 1.0f, 1.0f, -1.0f, -1.0f, 0);
    dMw_fade_out();
    dMw_capture_create();
}

/* 801FA9E8-801FA9EC 1F5328 0004+00 1/0 0/0 0/0 .text            insect_open2_init__5dMw_cFUc */
void dMw_c::insect_open2_init(u8 param_0) {
    /* empty function */
}

/* 801FA9EC-801FA9F0 1F532C 0004+00 1/0 0/0 0/0 .text            insect_move_init__5dMw_cFUc */
void dMw_c::insect_move_init(u8 param_0) {
    /* empty function */
}

/* 801FA9F0-801FAA48 1F5330 0058+00 1/0 0/0 0/0 .text            insect_close_init__5dMw_cFUc */
void dMw_c::insect_close_init(u8 param_0) {
    Z2GetAudioMgr()->mSeMgr.seStart(Z2SE_SY_MENU_SUB_OUT, NULL, 0, 0, 1.0f, 1.0f, -1.0f, -1.0f, 0);
    dMeter2Info_set2DVibration();
    dMw_fade_out();
}

/* 801FAA48-801FAFDC 1F5388 0594+00 1/0 0/0 0/0 .text            key_wait_proc__5dMw_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMw_c::key_wait_proc() {
    nofralloc
#include "asm/d/menu/d_menu_window/key_wait_proc__5dMw_cFv.s"
}
#pragma pop

/* 801FAFDC-801FB01C 1F591C 0040+00 1/0 0/0 0/0 .text            ring_open_proc__5dMw_cFv */
void dMw_c::ring_open_proc() {
    if (mpMenuRing->isOpen()) {
        mMenuStatus = RING_MOVE;
    }
}

/* 801FB01C-801FB064 1F595C 0048+00 1/0 0/0 0/0 .text            ring_move_proc__5dMw_cFv */
void dMw_c::ring_move_proc() {
    mpMenuRing->_move();
    if (mpMenuRing->isMoveEnd()) {
        mMenuStatus = RING_CLOSE;
    }
}

/* 801FB064-801FB0B8 1F59A4 0054+00 1/0 0/0 0/0 .text            ring_close_proc__5dMw_cFv */
void dMw_c::ring_close_proc() {
    if (mpMenuRing->isClose()) {
        dMeter2Info_offMenuInForce(2);
        mMenuStatus = NO_MENU;
    }
}

/* 801FB0B8-801FB110 1F59F8 0058+00 1/0 0/0 0/0 .text            collect_open_proc__5dMw_cFv */
void dMw_c::collect_open_proc() {
    if (field_0x153 == 0) {
        field_0x153 = 1;
        dMeter2Info_set2DVibrationM();
    }

    if (mDoGph_gInf_c::getFader()->getStatus() == JUTFader::UNKSTATUS_0) {
        mMenuStatus = COLLECT_MOVE;
    }
}

/* 801FB110-801FB1A0 1F5A50 0090+00 1/0 0/0 0/0 .text            collect_move_proc__5dMw_cFv */
void dMw_c::collect_move_proc() {
    if (mpMenuCollect->getSubWindowOpenCheck()) {
        mMenuStatus = COLLECT_CLOSE;
    } else {
        if ((dMw_isPush_S_Button() && !mpMenuCollect->isKeyCheck()) ||
            mpMenuCollect->isOutCheck()) {
            mMenuStatus = COLLECT_CLOSE;
        } else {
            mpMenuCollect->_move();
        }
    }
}

/* 801FB1A0-801FB240 1F5AE0 00A0+00 1/0 0/0 0/0 .text            collect_close_proc__5dMw_cFv */
void dMw_c::collect_close_proc() {
    if (mDoGph_gInf_c::getFader()->getStatus() == 0) {
        if (mpMenuCollect->getSubWindowOpenCheck() == 1) {
            mMenuStatus = SAVE_OPEN;
            return;
        }

        if (mpMenuCollect->getSubWindowOpenCheck() == 2) {
            mMenuStatus = OPTIONS_OPEN;
            return;
        }

        if (mpMenuCollect->getSubWindowOpenCheck() == 3) {
            mMenuStatus = LETTER_OPEN;
            return;
        }

        if (mpMenuCollect->getSubWindowOpenCheck() == 4) {
            mMenuStatus = FISHING_OPEN;
            return;
        }

        if (mpMenuCollect->getSubWindowOpenCheck() == 5) {
            mMenuStatus = SKILL_OPEN;
            return;
        }

        if (mpMenuCollect->getSubWindowOpenCheck() == 6) {
            mMenuStatus = INSECT_OPEN;
            return;
        }
        mMenuStatus = NO_MENU;
    }
}

/* 801FB240-801FB298 1F5B80 0058+00 1/0 0/0 0/0 .text            fmap_open_proc__5dMw_cFv */
void dMw_c::fmap_open_proc() {
    if (field_0x153 == 0) {
        field_0x153 = 1;
        dMeter2Info_set2DVibrationM();
    }

    if (mpMenuFmap->isOpen()) {
        mMenuStatus = FMAP_MOVE;
    }
}

/* 801FB298-801FB36C 1F5BD8 00D4+00 1/0 0/0 0/0 .text            fmap_move_proc__5dMw_cFv */
void dMw_c::fmap_move_proc() {
    mpMenuFmap->_move();

    if (mDoGph_gInf_c::getFader()->getStatus() == 1) {
        mMenuStatus = mpMenuFmap->getNextStatus(&field_0x14B);

        if (g_fmapHIO.field_0x2f9 != 0) {
            mMenuStatus = FMAP_CLOSE;
            Z2GetAudioMgr()->mSeMgr.seStart(Z2SE_SY_MAP_CLOSE_L, NULL, 0, 0, 1.0f, 1.0f, -1.0f,
                                            -1.0f, 0);
        }

        if (dMeter2Info_getMeterMapClass() != NULL) {
            if (dMeter2Info_getMapStatus() == 1) {
                dMeter2Info_getMeterMapClass()->setDispPosInsideFlg_SE_On();
            } else if (dMeter2Info_getMapStatus() == 0) {
                dMeter2Info_getMeterMapClass()->setDispPosOutsideFlg_SE_On();
            }
        }
    }
}

/* 801FB36C-801FB3AC 1F5CAC 0040+00 1/0 0/0 0/0 .text            fmap_close_proc__5dMw_cFv */
void dMw_c::fmap_close_proc() {
    if (mpMenuFmap->isClose()) {
        mMenuStatus = NO_MENU;
    }
}

/* 801FB3AC-801FB404 1F5CEC 0058+00 1/0 0/0 0/0 .text            dmap_open_proc__5dMw_cFv */
void dMw_c::dmap_open_proc() {
    if (field_0x153 == 0) {
        field_0x153 = 1;
        dMeter2Info_set2DVibrationM();
    }

    if (mpMenuDmap->isOpen()) {
        mMenuStatus = DMAP_MOVE;
    }
}

/* 801FB404-801FB5DC 1F5D44 01D8+00 1/0 0/0 0/0 .text            dmap_move_proc__5dMw_cFv */
void dMw_c::dmap_move_proc() {
    u8 nextStatus = mpMenuDmap->getNextStatus();
    if (nextStatus == 1) {
        if (dMeterMap_c::isEnableDispMapAndMapDispSizeTypeNo()) {
            dMeter2Info_setMapStatus(1);
            dMeter2Info_getMeterMapClass()->setDispPosInsideFlg_SE_On();
        } else {
            dMeter2Info_setMapStatus(0);
            dMeter2Info_getMeterMapClass()->setDispPosOutsideFlg_SE_On();
        }
        dMeter2Info_setMapKeyDirection(0x200);
        mMenuStatus = DMAP_CLOSE;
        mpMenuDmap->setInOutDir(3);
        Z2GetAudioMgr()->mSeMgr.seStart(Z2SE_SY_MAP_CLOSE_L, NULL, 0, 0, 1.0f, 1.0f, -1.0f, -1.0f,
                                        0);
    } else if (nextStatus == 2) {
        dMeter2Info_setMapStatus(0);
        dMeter2Info_setMapKeyDirection(0x400);
        mMenuStatus = DMAP_CLOSE;
        dMeter2Info_getMeterMapClass()->setDispPosOutsideFlg_SE_On();
        mpMenuDmap->setInOutDir(1);
        Z2GetAudioMgr()->mSeMgr.seStart(Z2SE_SY_MAP_CLOSE_L, NULL, 0, 0, 1.0f, 1.0f, -1.0f, -1.0f,
                                        0);
    } else if (nextStatus == 3) {
        if (dMeterMap_c::isEnableDispMapAndMapDispSizeTypeNo()) {
            dMeter2Info_setMapStatus(1);
        } else {
            dMeter2Info_setMapStatus(0);
        }

        mMenuStatus = DMAP_CLOSE;
        mpMenuDmap->setInOutDir(2);
        Z2GetAudioMgr()->mSeMgr.seStart(Z2SE_SY_MAP_CLOSE_L, NULL, 0, 0, 1.0f, 1.0f, -1.0f, -1.0f,
                                        0);
    } else {
        mpMenuDmap->_move();
    }
}

/* 801FB5DC-801FB61C 1F5F1C 0040+00 1/0 0/0 0/0 .text            dmap_close_proc__5dMw_cFv */
void dMw_c::dmap_close_proc() {
    if (mpMenuDmap->isClose()) {
        mMenuStatus = NO_MENU;
    }
}

/* 801FB61C-801FB67C 1F5F5C 0060+00 1/0 0/0 0/0 .text            collect_save_open_proc__5dMw_cFv */
void dMw_c::collect_save_open_proc() {
    if (mpMenuSave->getSaveStatus() == 1 && mpMenuSave->_open()) {
        dMw_fade_in();
    }

    if (mpMenuSave->getSaveStatus() == 2) {
        mMenuStatus = SAVE_MOVE;
    }
}

/* 801FB67C-801FB6D8 1F5FBC 005C+00 1/0 0/0 0/0 .text            collect_save_move_proc__5dMw_cFv */
void dMw_c::collect_save_move_proc() {
    if (mpMenuSave->getSaveStatus() == 2) {
        mpMenuSave->_move();
    }

    if (mpMenuSave->getSaveStatus() == 3 || mpMenuSave->getSaveStatus() == 4) {
        mMenuStatus = SAVE_CLOSE;
    }
}

/* 801FB6D8-801FB73C 1F6018 0064+00 1/0 0/0 0/0 .text            collect_save_close_proc__5dMw_cFv
 */
void dMw_c::collect_save_close_proc() {
    if (mDoGph_gInf_c::getFader()->getStatus() == 0) {
        mpMenuSave->_move();

        if (mpMenuSave->getSaveStatus() == 3) {
            mMenuStatus = COLLECT_MOVE;
        } else {
            mMenuStatus = NO_MENU;
        }
    }
}

/* 801FB73C-801FB7AC 1F607C 0070+00 1/0 0/0 0/0 .text            collect_option_open_proc__5dMw_cFv
 */
void dMw_c::collect_option_open_proc() {
    if (mpMenuOption->getQuitStatus() == 1 && mpMenuOption->_open()) {
        dMw_fade_in();
    }

    if (mpMenuOption->getQuitStatus() == 2 && mDoGph_gInf_c::getFader()->getStatus() == 1) {
        mMenuStatus = OPTIONS_MOVE;
    }
}

/* 801FB7AC-801FB800 1F60EC 0054+00 1/0 0/0 0/0 .text            collect_option_move_proc__5dMw_cFv
 */
void dMw_c::collect_option_move_proc() {
    if (mpMenuOption->getQuitStatus() == 2) {
        mpMenuOption->_move();
    }

    if (mpMenuOption->getQuitStatus() == 3) {
        mMenuStatus = OPTIONS_CLOSE;
    }
}

/* 801FB800-801FB81C 1F6140 001C+00 1/0 0/0 0/0 .text            collect_option_close_proc__5dMw_cFv
 */
void dMw_c::collect_option_close_proc() {
    if (mDoGph_gInf_c::getFader()->getStatus() != 0) {
        return;
    }
    mMenuStatus = COLLECT_MOVE;
}

/* 801FB81C-801FB8AC 1F615C 0090+00 1/0 0/0 0/0 .text            collect_letter_open_proc__5dMw_cFv
 */
void dMw_c::collect_letter_open_proc() {
    if (mpMenuLetter->getStatus() == 1) {
        mpMenuLetter->_open();

        if (field_0x152 == 0 && mpMenuLetter->isSync()) {
            dMw_fade_in();
            field_0x152 = 1;
        }
    }

    if (mpMenuLetter->getStatus() == 2 && field_0x152 == 1) {
        mMenuStatus = LETTER_MOVE;
        field_0x152 = 0;
    }
}

/* 801FB8AC-801FB900 1F61EC 0054+00 1/0 0/0 0/0 .text            collect_letter_move_proc__5dMw_cFv
 */
void dMw_c::collect_letter_move_proc() {
    if (mpMenuLetter->getStatus() == 2) {
        mpMenuLetter->_move();
    }

    if (mpMenuLetter->getStatus() == 3) {
        mMenuStatus = LETTER_CLOSE;
    }
}

/* 801FB900-801FB91C 1F6240 001C+00 1/0 0/0 0/0 .text            collect_letter_close_proc__5dMw_cFv
 */
void dMw_c::collect_letter_close_proc() {
    if (mDoGph_gInf_c::getFader()->getStatus() != JUTFader::UNKSTATUS_0) {
        return;
    }
    mMenuStatus = COLLECT_MOVE;
}

/* 801FB91C-801FB9AC 1F625C 0090+00 1/0 0/0 0/0 .text            collect_fishing_open_proc__5dMw_cFv
 */
void dMw_c::collect_fishing_open_proc() {
    if (mpMenuFishing->getStatus() == 1) {
        mpMenuFishing->_open();

        if (field_0x152 == 0 && mpMenuFishing->isSync()) {
            dMw_fade_in();
            field_0x152 = 1;
        }
    }

    if (mpMenuFishing->getStatus() == 2 && field_0x152 == 1) {
        mMenuStatus = FISHING_MOVE;
        field_0x152 = 0;
    }
}

/* 801FB9AC-801FBA00 1F62EC 0054+00 1/0 0/0 0/0 .text            collect_fishing_move_proc__5dMw_cFv
 */
void dMw_c::collect_fishing_move_proc() {
    if (mpMenuFishing->getStatus() == 2) {
        mpMenuFishing->_move();
    }

    if (mpMenuFishing->getStatus() == 3) {
        mMenuStatus = FISHING_CLOSE;
    }
}

/* 801FBA00-801FBA1C 1F6340 001C+00 1/0 0/0 0/0 .text collect_fishing_close_proc__5dMw_cFv */
void dMw_c::collect_fishing_close_proc() {
    if (mDoGph_gInf_c::getFader()->getStatus() != JUTFader::UNKSTATUS_0) {
        return;
    }
    mMenuStatus = COLLECT_MOVE;
}

/* 801FBA1C-801FBAAC 1F635C 0090+00 1/0 0/0 0/0 .text            collect_skill_open_proc__5dMw_cFv
 */
void dMw_c::collect_skill_open_proc() {
    if (mpMenuSkill->getStatus() == 1) {
        mpMenuSkill->_open();
        if (field_0x152 == 0 && mpMenuSkill->isSync()) {
            dMw_fade_in();
            field_0x152 = 1;
        }
    }

    if (mpMenuSkill->getStatus() == 2 && field_0x152 == 1) {
        mMenuStatus = SKILL_MOVE;
        field_0x152 = 0;
    }
}

/* 801FBAAC-801FBB00 1F63EC 0054+00 1/0 0/0 0/0 .text            collect_skill_move_proc__5dMw_cFv
 */
void dMw_c::collect_skill_move_proc() {
    if (mpMenuSkill->getStatus() == 2) {
        mpMenuSkill->_move();
    }

    if (mpMenuSkill->getStatus() == 3) {
        mMenuStatus = SKILL_CLOSE;
    }
}

/* 801FBB00-801FBB1C 1F6440 001C+00 1/0 0/0 0/0 .text            collect_skill_close_proc__5dMw_cFv
 */
void dMw_c::collect_skill_close_proc() {
    if (mDoGph_gInf_c::getFader()->getStatus() != JUTFader::UNKSTATUS_0) {
        return;
    }
    mMenuStatus = COLLECT_MOVE;
}

/* 801FBB1C-801FBBAC 1F645C 0090+00 1/0 0/0 0/0 .text            collect_insect_open_proc__5dMw_cFv
 */
void dMw_c::collect_insect_open_proc() {
    if (mpMenuInsect->getStatus() == 1) {
        mpMenuInsect->_open();
        if (field_0x152 == 0 && mpMenuInsect->isSync()) {
            dMw_fade_in();
            field_0x152 = 1;
        }
    }

    if (mpMenuInsect->getStatus() == 2 && field_0x152 == 1) {
        mMenuStatus = INSECT_MOVE;
        field_0x152 = 0;
    }
}

/* 801FBBAC-801FBC00 1F64EC 0054+00 1/0 0/0 0/0 .text            collect_insect_move_proc__5dMw_cFv
 */
void dMw_c::collect_insect_move_proc() {
    if (mpMenuInsect->getStatus() == 2) {
        mpMenuInsect->_move();
    }

    if (mpMenuInsect->getStatus() == 3) {
        mMenuStatus = INSECT_CLOSE;
    }
}

/* 801FBC00-801FBC1C 1F6540 001C+00 1/0 0/0 0/0 .text            collect_insect_close_proc__5dMw_cFv
 */
void dMw_c::collect_insect_close_proc() {
    if (mDoGph_gInf_c::getFader()->getStatus() != JUTFader::UNKSTATUS_0) {
        return;
    }
    mMenuStatus = COLLECT_MOVE;
}

/* 801FBC1C-801FBC78 1F655C 005C+00 1/0 0/0 0/0 .text            insect_open_proc__5dMw_cFv */
void dMw_c::insect_open_proc() {
    if (mDoGph_gInf_c::getFader()->getStatus() == JUTFader::UNKSTATUS_0) {
        field_0x152 = 0;
        dComIfGp_setHeapLockFlag(1);
        dMw_insect_create(1);
        mMenuStatus = INSECT_AGITHA_OPEN2;
    }
}

/* 801FBC78-801FBD08 1F65B8 0090+00 1/0 0/0 0/0 .text            insect_open2_proc__5dMw_cFv */
void dMw_c::insect_open2_proc() {
    if (mpMenuInsect->getStatus() == 1) {
        mpMenuInsect->_open();
        if (field_0x152 == 0 && mpMenuInsect->isSync()) {
            dMw_fade_in();
            field_0x152 = 1;
        }
    }

    if (mpMenuInsect->getStatus() == 2 && field_0x152 == 1) {
        mMenuStatus = INSECT_AGITHA_MOVE;
        field_0x152 = 0;
    }
}

/* 801FBD08-801FBD64 1F6648 005C+00 1/0 0/0 0/0 .text            insect_move_proc__5dMw_cFv */
void dMw_c::insect_move_proc() {
    if (mpMenuInsect != NULL) {
        if (mpMenuInsect->getStatus() == 2) {
            mpMenuInsect->_move();
        }

        if (mpMenuInsect->getStatus() == 3) {
            mMenuStatus = INSECT_AGITHA_CLOSE;
        }
    }
}

/* 801FBD64-801FBD80 1F66A4 001C+00 1/0 0/0 0/0 .text            insect_close_proc__5dMw_cFv */
void dMw_c::insect_close_proc() {
    if (mDoGph_gInf_c::getFader()->getStatus() != JUTFader::UNKSTATUS_0) {
        return;
    }
    mMenuStatus = NO_MENU;
}

/* ############################################################################################## */
/* 803BF080-803BF094 -00001 0014+00 1/0 0/0 0/0 .data            l_dMw_Method */
static dMw_Method l_dMw_Method[5] = {
    (dMw_Method)dMw_Create, dMw_Delete, dMw_Execute, dMw_IsDelete, dMw_Draw,
};

/* 803BF094-803BF0D4 -00001 0028+18 0/0 0/0 1/0 .data            g_profile_MENUWINDOW */
SECTION_DATA extern void* g_profile_MENUWINDOW[10 + 6 /* padding */] = {
    (void*)0xFFFFFFFD,
    (void*)0x000CFFFD,
    (void*)0x03140000,
    (void*)&g_fpcLf_Method,
    (void*)0x00000158,
    (void*)NULL,
    (void*)NULL,
    (void*)&g_fopMsg_Method,
    (void*)0x02FF0000,
    (void*)&l_dMw_Method,
    /* padding */
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
};

/* 803BF0D4-803BF0E8 01C1F4 0010+04 11/11 0/0 0/0 .data            __vt__20dDlst_MENU_CAPTURE_c */
SECTION_DATA extern void* __vt__20dDlst_MENU_CAPTURE_c[4 + 1 /* padding */] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)draw__20dDlst_MENU_CAPTURE_cFv,
    (void*)__dt__20dDlst_MENU_CAPTURE_cFv,
    /* padding */
    NULL,
};

/* 801FBD80-801FBE14 1F66C0 0094+00 2/2 0/0 0/0 .text            dMw_capture_create__5dMw_cFv */
void dMw_c::dMw_capture_create() {
    if (!dComIfGp_isPauseFlag() && mpCapture == NULL) {
        mpCapture = new dDlst_MENU_CAPTURE_c();
        mpCapture->setCaptureFlag();
    }
}

/* 801FBE14-801FBE94 1F6754 0080+00 2/2 0/0 0/0 .text            dMw_capture_delete__5dMw_cFv */
void dMw_c::dMw_capture_delete() {
    if (dComIfGp_isPauseFlag()) {
        if (mpCapture != NULL) {
            delete mpCapture;
            mpCapture = NULL;
        }
        dComIfGp_offPauseFlag();
        field_0x151 = 2;
    }
}

/* 801FBE94-801FBF60 1F67D4 00CC+00 1/1 0/0 0/0 .text            dMw_ring_create__5dMw_cFUc */
void dMw_c::dMw_ring_create(u8 param_0) {
    markMemSize();
    dComIfGp_setHeapLockFlag(1);

    mpMenuRing = new dMenu_Ring_c(mpHeap, mpStick, mpCStick, param_0);
    mpMenuRing->_create();

    if (mpCapture == NULL) {
        mpCapture = new dDlst_MENU_CAPTURE_c();
    }

    mpCapture->setCaptureFlag();
}

/* 801FBF60-801FBFF8 1F68A0 0098+00 2/2 0/0 0/0 .text            dMw_ring_delete__5dMw_cFv */
bool dMw_c::dMw_ring_delete() {
    if (mpMenuRing != NULL) {
        mpMenuRing->_delete();
        delete mpMenuRing;
        mpMenuRing = NULL;
    }

    if (mpCapture != NULL) {
        delete mpCapture;
        mpCapture = NULL;
    }

    checkMemSize();
    return true;
}

/* 801FBFF8-801FC090 1F6938 0098+00 1/1 0/0 0/0 .text            dMw_collect_create__5dMw_cFv */
void dMw_c::dMw_collect_create() {
    markMemSize();

    mpMenuCollect = new dMenu_Collect_c(mpHeap, mpStick, mpCStick);
    mpMenuCollect->_create();

    if (mDoCPd_c::getHoldLockL(mDoCPd_c::PAD_0)) {
        dMw_onButtonBit(1);
    } else if (mDoCPd_c::getHoldLockR(mDoCPd_c::PAD_0)) {
        dMw_onButtonBit(2);
    }
}

/* 801FC090-801FC0FC 1F69D0 006C+00 8/8 0/0 0/0 .text            dMw_collect_delete__5dMw_cFb */
bool dMw_c::dMw_collect_delete(bool param_0) {
    if (mpMenuCollect != NULL) {
        mpMenuCollect->_delete();
        delete mpMenuCollect;
        mpMenuCollect = NULL;
    }
    checkMemSize();
    return true;
}

/* 801FC0FC-801FC264 1F6A3C 0168+00 1/1 0/0 0/0 .text            dMw_fmap_create__5dMw_cFv */
void dMw_c::dMw_fmap_create() {
    markMemSize();
    dComIfGp_setHeapLockFlag(2);

    u8 tmp = 0;
    if (dMeter2Info_getMapKeyDirection() == 0x400 || dMeter2Info_getMapStatus() == 3 ||
        dMeter2Info_getMapStatus() == 4 || dMeter2Info_getMapStatus() == 5 ||
        dMeter2Info_getMapStatus() == 7 || dMeter2Info_getMapStatus() == 8 ||
        dMeter2Info_getMapStatus() == 9 || dMeter2Info_getMapStatus() == 6) {
        tmp = 1;
    } else if (dMeter2Info_getMapKeyDirection() == 0x200) {
        tmp = 3;
    } else if (dMeter2Info_getMapKeyDirection() == 0x100) {
        tmp = 2;
    } else if (dMeter2Info_getMapKeyDirection() == 0x80) {
        tmp = 3;
    }

    mpMenuFmap = new dMenu_Fmap_c(mpHeap, mpStick, mpCStick, field_0x14E, field_0x14F, field_0x150,
                                  field_0x13c, field_0x140, tmp);

    if (mpCapture == NULL) {
        mpCapture = new dDlst_MENU_CAPTURE_c();
    }

    mpCapture->setCaptureFlag();
    dMeter2Info_resetWarpStatus();
}

/* 801FC264-801FC350 1F6BA4 00EC+00 2/2 0/0 0/0 .text            dMw_fmap_delete__5dMw_cFb */
bool dMw_c::dMw_fmap_delete(bool param_0) {
    if (mpMenuFmap != NULL) {
        if (!mpMenuFmap->isSync()) {
            return false;
        }

        field_0x14E = mpMenuFmap->getProcess();
        field_0x14F = mpMenuFmap->getRegionCursor();
        field_0x150 = mpMenuFmap->getStageCursor();
        field_0x13c = mpMenuFmap->getStageTransX();
        field_0x140 = mpMenuFmap->getStageTransZ();

        mpMenuFmap->_delete();
        delete mpMenuFmap;
        mpMenuFmap = NULL;
    }

    if (mpCapture != NULL) {
        delete mpCapture;
        mpCapture = NULL;
    }

    checkMemSize();
    return true;
}

/* 801FC350-801FC46C 1F6C90 011C+00 1/1 0/0 0/0 .text            dMw_dmap_create__5dMw_cFv */
void dMw_c::dMw_dmap_create() {
    markMemSize();
    dComIfGp_setHeapLockFlag(3);

    if (mpCapture == NULL) {
        mpCapture = new dDlst_MENU_CAPTURE_c();
    }

    mpCapture->setCaptureFlag();

    u8 tmp = 0;
    if (dMeter2Info_getMapKeyDirection() == 0x200) {
        tmp = 3;
    } else if (dMeter2Info_getMapKeyDirection() == 0x400) {
        tmp = 1;
    } else if (dMeter2Info_getMapKeyDirection() == 0x100) {
        tmp = 2;
    } else if (dMeter2Info_getMapKeyDirection() == 0x80) {
        tmp = 0;
    }

    mpMenuDmap = new dMenu_Dmap_c(mpHeap, mpStick, mpCStick, field_0x14C, tmp);

    dMeter2Info_resetWarpStatus();
}

/* 801FC46C-801FC520 1F6DAC 00B4+00 2/2 0/0 0/0 .text            dMw_dmap_delete__5dMw_cFb */
bool dMw_c::dMw_dmap_delete(bool param_0) {
    if (mpMenuDmap != NULL) {
        if (!mpMenuDmap->isSync()) {
            return false;
        }

        field_0x14C = mpMenuDmap->getZoomState();

        delete mpMenuDmap;
        mpMenuDmap = NULL;
    }

    if (mpCapture != NULL) {
        delete mpCapture;
        mpCapture = NULL;
    }

    checkMemSize();
    return true;
}

/* 801FC520-801FC5D0 1F6E60 00B0+00 1/1 0/0 0/0 .text            dMw_save_create__5dMw_cFv */
void dMw_c::dMw_save_create() {
    markMemSize();

    mpMenuSave = new dMenu_save_c();
    mpMenuSave->setUseType(1);
    mpMenuSave->_create();
    mpMenuSave->initialize();

    if (mpCapture == NULL) {
        mpCapture = new dDlst_MENU_CAPTURE_c();
    }
}

/* 801FC5D0-801FC668 1F6F10 0098+00 3/3 0/0 0/0 .text            dMw_save_delete__5dMw_cFv */
bool dMw_c::dMw_save_delete() {
    if (mpMenuSave != NULL) {
        mpMenuSave->_delete();
        delete mpMenuSave;
        mpMenuSave = NULL;
    }

    if (mpCapture != NULL) {
        delete mpCapture;
        mpCapture = NULL;
    }

    checkMemSize();
    return true;
}

/* 801FC668-801FC70C 1F6FA8 00A4+00 1/1 0/0 0/0 .text            dMw_option_create__5dMw_cFv */
void dMw_c::dMw_option_create() {
    markMemSize();

    mpMenuOption = new dMenu_Option_c(dComIfGp_getCollectResArchive(), mpStick);

    if (mpCapture == NULL) {
        mpCapture = new dDlst_MENU_CAPTURE_c();
    }
}

/* 801FC70C-801FC7BC 1F704C 00B0+00 2/2 0/0 0/0 .text            dMw_option_delete__5dMw_cFv */
bool dMw_c::dMw_option_delete() {
    if (mpMenuOption != NULL) {
        if (!mpMenuOption->isSync()) {
            return false;
        }
        mpMenuOption->_delete();
        delete mpMenuOption;
        mpMenuOption = NULL;
    }

    if (mpCapture != NULL) {
        delete mpCapture;
        mpCapture = NULL;
    }

    checkMemSize();
    return true;
}

/* 801FC7BC-801FC85C 1F70FC 00A0+00 1/1 0/0 0/0 .text            dMw_letter_create__5dMw_cFv */
void dMw_c::dMw_letter_create() {
    markMemSize();

    mpMenuLetter = new dMenu_Letter_c(mpHeap, mpStick, mpCStick);

    if (mpCapture == NULL) {
        mpCapture = new dDlst_MENU_CAPTURE_c();
    }
}

/* 801FC85C-801FC904 1F719C 00A8+00 2/2 0/0 0/0 .text            dMw_letter_delete__5dMw_cFv */
bool dMw_c::dMw_letter_delete() {
    if (mpMenuLetter != NULL) {
        if (!mpMenuLetter->isSync()) {
            return false;
        }
        delete mpMenuLetter;
        mpMenuLetter = NULL;
    }

    if (mpCapture != NULL) {
        delete mpCapture;
        mpCapture = NULL;
    }

    checkMemSize();
    return true;
}

/* 801FC904-801FC9A4 1F7244 00A0+00 1/1 0/0 0/0 .text            dMw_fishing_create__5dMw_cFv */
void dMw_c::dMw_fishing_create() {
    markMemSize();

    mpMenuFishing = new dMenu_Fishing_c(mpHeap, mpStick, mpCStick);

    if (mpCapture == NULL) {
        mpCapture = new dDlst_MENU_CAPTURE_c();
    }
}

/* 801FC9A4-801FCA4C 1F72E4 00A8+00 2/2 0/0 0/0 .text            dMw_fishing_delete__5dMw_cFv */
bool dMw_c::dMw_fishing_delete() {
    if (mpMenuFishing != NULL) {
        if (!mpMenuFishing->isSync()) {
            return false;
        }
        delete mpMenuFishing;
        mpMenuFishing = NULL;
    }

    if (mpCapture != NULL) {
        delete mpCapture;
        mpCapture = NULL;
    }

    checkMemSize();
    return true;
}

/* 801FCA4C-801FCAEC 1F738C 00A0+00 1/1 0/0 0/0 .text            dMw_skill_create__5dMw_cFv */
void dMw_c::dMw_skill_create() {
    markMemSize();

    mpMenuSkill = new dMenu_Skill_c(mpHeap, mpStick, mpCStick);
    if (mpCapture == NULL) {
        mpCapture = new dDlst_MENU_CAPTURE_c();
    }
}

/* 801FCAEC-801FCB94 1F742C 00A8+00 2/2 0/0 0/0 .text            dMw_skill_delete__5dMw_cFv */
bool dMw_c::dMw_skill_delete() {
    if (mpMenuSkill != NULL) {
        if (!mpMenuSkill->isSync()) {
            return false;
        }
        delete mpMenuSkill;
        mpMenuSkill = NULL;
    }

    if (mpCapture != NULL) {
        delete mpCapture;
        mpCapture = NULL;
    }

    checkMemSize();
    return true;
}

/* 801FCB94-801FCC44 1F74D4 00B0+00 2/2 0/0 0/0 .text            dMw_insect_create__5dMw_cFUc */
void dMw_c::dMw_insect_create(u8 param_0) {
    markMemSize();

    mpMenuInsect = new dMenu_Insect_c(mpHeap, mpStick, mpCStick, param_0);
    if (mpCapture == NULL) {
        mpCapture = new dDlst_MENU_CAPTURE_c();
    }
}

/* 801FCC44-801FCCEC 1F7584 00A8+00 3/3 0/0 0/0 .text            dMw_insect_delete__5dMw_cFv */
bool dMw_c::dMw_insect_delete() {
    if (mpMenuInsect != NULL) {
        if (!mpMenuInsect->isSync()) {
            return false;
        }
        delete mpMenuInsect;
        mpMenuInsect = NULL;
    }

    if (mpCapture != NULL) {
        delete mpCapture;
        mpCapture = NULL;
    }

    checkMemSize();
    return true;
}

/* 801FCCEC-801FCCFC 1F762C 0010+00 1/1 0/0 0/0 .text            dMw_onButtonBit__5dMw_cFUc */
void dMw_c::dMw_onButtonBit(u8 flags) {
    mButtons |= flags;
}

/* 801FCCFC-801FCD0C 1F763C 0010+00 1/1 0/0 0/0 .text            dMw_offButtonBit__5dMw_cFUc */
void dMw_c::dMw_offButtonBit(u8 flags) {
    mButtons &= ~flags;
}

/* 801FCD0C-801FCD24 1F764C 0018+00 1/1 0/0 0/0 .text            dMw_isButtonBit__5dMw_cFUc */
BOOL dMw_c::dMw_isButtonBit(u8 flags) {
    return (mButtons & flags) ? 1 : 0;
}

/* 801FCD24-801FCDD8 1F7664 00B4+00 1/1 0/0 0/0 .text            dMw_isPush_S_Button__5dMw_cFv */
BOOL dMw_c::dMw_isPush_S_Button() {
    if (isFadeNowCheck()) {
        if (daPy_getLinkPlayerActorClass()->getClothesChangeWaitTimer() == 0 &&
            daPy_getLinkPlayerActorClass()->getShieldChangeWaitTimer() == 0 &&
            daPy_getLinkPlayerActorClass()->getSwordChangeWaitTimer() == 0) {
            if (dMw_START_TRIGGER() || dMw_B_TRIGGER()) {
                return true;
            }
        }
    }
    return false;
}

inline dEvt_control_c& dComIfGp_getEvent() {
    return g_dComIfG_gameInfo.play.getEvent();
}

inline u16 dComIfGs_getLife() {
    return g_dComIfG_gameInfo.info.getPlayer().getPlayerStatusA().getLife();
}

/* 801FCDD8-801FCE08 1F7718 0030+00 1/1 0/0 0/0 .text            isPauseReady__5dMw_cFv */
bool dMw_c::isPauseReady() {
    if (dComIfGp_getEvent().checkCompulsory() || dComIfGs_getLife() == 0) {
        return false;
    }
    return true;
}

/* 801FCE08-801FCE78 1F7748 0070+00 10/10 3/3 0/0 .text            dMw_fade_out__5dMw_cFv */
// instructions switched
#ifdef NONMATCHING
void dMw_c::dMw_fade_out() {
    mDoGph_gInf_c::startFadeOut(13);
    mDoGph_gInf_c::setFadeColor(static_cast<JUtility::TColor&>(g_blackColor));
}
#else
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMw_c::dMw_fade_out() {
    nofralloc
#include "asm/d/menu/d_menu_window/dMw_fade_out__5dMw_cFv.s"
}
#pragma pop
#endif

/* 801FCE78-801FCEE8 1F77B8 0070+00 9/9 4/4 0/0 .text            dMw_fade_in__5dMw_cFv */
#ifdef NONMATCHING
void dMw_c::dMw_fade_in() {
    mDoGph_gInf_c::startFadeIn(13);
    mDoGph_gInf_c::setFadeColor(static_cast<JUtility::TColor&>(g_blackColor));
}
#else
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMw_c::dMw_fade_in() {
    nofralloc
#include "asm/d/menu/d_menu_window/dMw_fade_in__5dMw_cFv.s"
}
#pragma pop
#endif

/* 801FCEE8-801FCF84 1F7828 009C+00 1/1 0/0 0/0 .text            checkCStickTrigger__5dMw_cFv */
int dMw_c::checkCStickTrigger() {
    field_0x14A = 0;
    if (field_0x149 == 0) {
        if (mpCStick->getValueStick() > 0.8f) {
            field_0x149 = 1;
            field_0x14A = 1;
            return 1;
        }
    } else {
        if (mpCStick->getValueStick() < 0.15f) {
            field_0x149 = 0;
        }
    }
    return 0;
}

/* 801FCF84-801FD094 1F78C4 0110+00 1/1 0/0 0/0 .text            isEventCheck__5dMw_cFv */
bool dMw_c::isEventCheck() {
    if (field_0x151 != 0) {
        return true;
    } else {
        if (dMeter2Info_getMapStatus() == 4 && field_0x148 > 0) {
            field_0x148 = 0;
        }

        if (dComIfGp_event_runCheck()) {
            if (!dMsgObject_isTalkNowCheck() &&
                (dMeter2Info_getMapStatus() == 4 || dMeter2Info_getMapStatus() == 5 ||
                 dMeter2Info_getMapStatus() == 7 || dMeter2Info_getMapStatus() == 8 ||
                 dMeter2Info_getMapStatus() == 9 || dMeter2Info_getMapStatus() == 6 ||
                 dMeter2Info_getMapStatus() == 3 || dMeter2Info_isMenuInForce(2) ||
                 dMeter2Info_getPauseStatus() == 8)) {
                return false;
            }
            return true;
        }
    }
    return field_0x148 > 0;
}

/* 801FD094-801FD0D4 1F79D4 0040+00 10/10 0/0 0/0 .text            markMemSize__5dMw_cFv */
void dMw_c::markMemSize() {
    if (mMemSize == 0) {
        mMemSize = mpHeap->getTotalFreeSize();
    }
}

/* 801FD0D4-801FD140 1F7A14 006C+00 10/10 0/0 0/0 .text            checkMemSize__5dMw_cFv */
void dMw_c::checkMemSize() {
    if (mMemSize > 0) {
        s32 diff = mpHeap->getTotalFreeSize() - mMemSize;
        if (diff < 0) {
            diff *= -1;
        }
        if (diff > 0x20) {
            OSReport_Error("memory free error!!\n");
        }
        mMemSize = 0;
    }
}

/* 801FD140-801FD2D8 1F7A80 0198+00 1/1 0/0 0/0 .text            _create__5dMw_cFv */
int dMw_c::_create() {
    mpHeap = dComIfGp_getExpHeap2D();

    mpStick = new STControl(5, 2, 1, 1, 0.9f, 0.5f, 0, 0x800);
    mpStick->setFirstWaitTime(8);

    mpCStick = new CSTControl(5, 2, 3, 2, 0.9f, 0.5f, 0, 0x2000);
    mpCStick->setWaitParm(5, 2, 3, 2, 0.9f, 0.5f, 0, 0x2000);

    mButtons = 0;
    mMenuStatus = NO_MENU;
    mShowFlag = 1;
    field_0x148 = 0;
    field_0x14C = 0;
    field_0x14D = 0;
    field_0x14E = 0;
    field_0x14F = 0;
    field_0x150 = 0;
    field_0x151 = 0;
    field_0x152 = 0;
    f32 tmp = FLOAT_LABEL(lit_4152);
    field_0x13c = tmp;
    field_0x140 = tmp;
    field_0x153 = 0;
    onPauseWindow();
    field_0x149 = 0;
    field_0x14A = 0;
    field_0x14B = 0;

    mpCapture = NULL;
    mpMenuRing = NULL;
    mpMenuCollect = NULL;
    mpMenuDmap = NULL;
    mpMenuFmap = NULL;
    mpMenuSave = NULL;
    mpMenuOption = NULL;
    mpMenuLetter = NULL;
    mpMenuFishing = NULL;
    mpMenuSkill = NULL;
    mpMenuInsect = NULL;
    mMemSize = 0;
    field_0x144 = 3;

    dMeter2Info_setWindowStatus(0);
    return 4;
}

/* 801FD2D8-801FD450 1F7C18 0178+00 1/1 0/0 0/0 .text            _execute__5dMw_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm int dMw_c::_execute() {
    nofralloc
#include "asm/d/menu/d_menu_window/_execute__5dMw_cFv.s"
}
#pragma pop

/* 801FD450-801FD67C 1F7D90 022C+00 1/1 0/0 0/0 .text            _draw__5dMw_cFv */
int dMw_c::_draw() {
    if (mpCapture != NULL && mpCapture->checkDraw() && mpCapture->getAlpha() != 0) {
        if (mpCapture->getTopFlag() != 0) {
            dComIfGd_set2DOpaTop(mpCapture);
        } else {
            dComIfGd_set2DOpa(mpCapture);
        }
    }

    if (dComIfGp_isPauseFlag() == 1) {
        if (dMeter2Info_getWindowStatus() == 3) {
            if (mpMenuCollect != NULL) {
                mpMenuCollect->draw();
            }
        } else if (dMeter2Info_getWindowStatus() == 4) {
            if (mpMenuFmap != NULL) {
                mpMenuFmap->_draw();
            }
        } else if (dMeter2Info_getWindowStatus() == 5) {
            if (mpMenuDmap != NULL) {
                mpMenuDmap->_draw();
            }
        } else if (dMeter2Info_getWindowStatus() == 10) {
            if (mpMenuSave != NULL) {
                mpMenuSave->_draw2();
            }

            if (mpMenuOption != NULL) {
                dComIfGd_set2DOpa(mpMenuOption);
            }

            if (mpMenuLetter != NULL) {
                dComIfGd_set2DOpa(mpMenuLetter);
            }

            if (mpMenuFishing != NULL) {
                dComIfGd_set2DOpa(mpMenuFishing);
            }

            if (mpMenuSkill != NULL) {
                dComIfGd_set2DOpa(mpMenuSkill);
            }

            if (mpMenuInsect != NULL) {
                dComIfGd_set2DOpa(mpMenuInsect);
            }
        } else if (dMeter2Info_getWindowStatus() == 2 && mpMenuRing != NULL) {
            mpMenuRing->drawFlag0();
            dComIfGd_set2DOpa(mpMenuRing);
            dComIfGd_set2DOpa(mpMenuRing);
        }
    }
    return 1;
}

/* 801FD67C-801FD840 1F7FBC 01C4+00 1/1 0/0 0/0 .text            _delete__5dMw_cFv */
int dMw_c::_delete() {
    JKRHeap* heap = mDoExt_getCurrentHeap();

    delete mpStick;
    mpStick = NULL;

    delete mpCStick;
    mpCStick = NULL;

    mDoExt_setCurrentHeap(mpHeap);

    if (!dMw_collect_delete(false)) {
        mDoExt_setCurrentHeap(heap);
        return 0;
    } else if (!dMw_dmap_delete(false)) {
        mDoExt_setCurrentHeap(heap);
        return 0;
    } else if (!dMw_fmap_delete(false)) {
        mDoExt_setCurrentHeap(heap);
        return 0;
    } else if (!dMw_save_delete()) {
        mDoExt_setCurrentHeap(heap);
        return 0;
    } else if (!dMw_option_delete()) {
        mDoExt_setCurrentHeap(heap);
        return 0;
    } else if (!dMw_letter_delete()) {
        mDoExt_setCurrentHeap(heap);
        return 0;
    } else if (!dMw_fishing_delete()) {
        mDoExt_setCurrentHeap(heap);
        return 0;
    } else if (!dMw_skill_delete()) {
        mDoExt_setCurrentHeap(heap);
        return 0;
    } else if (!dMw_insect_delete()) {
        mDoExt_setCurrentHeap(heap);
        return 0;
    } else if (!dMw_ring_delete()) {
        mDoExt_setCurrentHeap(heap);
        return 0;
    } else {
        dMw_capture_delete();
        mDoExt_setCurrentHeap(heap);
        mDoExt_removeMesgFont();
        return 1;
    }
}

/* 801FD840-801FD860 1F8180 0020+00 1/0 0/0 0/0 .text            dMw_Draw__FP5dMw_c */
static int dMw_Draw(dMw_c* p_menu) {
    return p_menu->_draw();
}

/* 801FD860-801FD880 1F81A0 0020+00 1/0 0/0 0/0 .text            dMw_Execute__FP5dMw_c */
static int dMw_Execute(dMw_c* p_menu) {
    return p_menu->_execute();
}

/* 801FD880-801FD888 1F81C0 0008+00 1/0 0/0 0/0 .text            dMw_IsDelete__FP5dMw_c */
static int dMw_IsDelete(dMw_c* p_menu) {
    return 1;
}

/* 801FD888-801FD8C0 1F81C8 0038+00 1/0 0/0 0/0 .text            dMw_Delete__FP5dMw_c */
static int dMw_Delete(dMw_c* p_menu) {
    int isDelete = p_menu->_delete();
    if (isDelete) {
        dMeter2Info_setMenuWindowClass(NULL);
    }
    return isDelete;
}

/* 801FD8C0-801FD928 1F8200 0068+00 1/0 0/0 0/0 .text            dMw_Create__FP9msg_class */
static int dMw_Create(msg_class* p_menu) {
    dMeter2Info_setMenuWindowClass(static_cast<dMw_c*>(p_menu));
    g_mwHIO.field_0x4 = -1;
    g_mwDHIO.field_0x4 = -1;
    dComIfGp_offHeapLockFlag(0);
    fopMsgM_setStageLayer(p_menu);
    return static_cast<dMw_c*>(p_menu)->_create();
}

/* 801FD928-801FDFCC 1F8268 06A4+00 0/0 1/0 0/0 .text            __sinit_d_menu_window_cpp */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __sinit_d_menu_window_cpp() {
    nofralloc
#include "asm/d/menu/d_menu_window/__sinit_d_menu_window_cpp.s"
}
#pragma pop

#pragma push
#pragma force_active on
REGISTER_CTORS(0x801FD928, __sinit_d_menu_window_cpp);
#pragma pop

/* ############################################################################################## */
/* 80456B88-80456B90 000028 0004+04 1/1 0/0 0/0 .sbss2           @4115 */
SECTION_SBSS2 static u8 lit_4115[4 + 4 /* padding */];

/* 801FDFCC-801FE2E8 1F890C 031C+00 1/0 0/0 0/0 .text            draw__20dDlst_MENU_CAPTURE_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dDlst_MENU_CAPTURE_c::draw() {
    nofralloc
#include "asm/d/menu/d_menu_window/draw__20dDlst_MENU_CAPTURE_cFv.s"
}
#pragma pop

/* 801FE2E8-801FE330 1F8C28 0048+00 1/0 0/0 0/0 .text            __dt__20dDlst_MENU_CAPTURE_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dDlst_MENU_CAPTURE_c::~dDlst_MENU_CAPTURE_c() {
    nofralloc
#include "asm/d/menu/d_menu_window/__dt__20dDlst_MENU_CAPTURE_cFv.s"
}
#pragma pop

/* 80397E38-80397E38 024498 0000+00 0/0 0/0 0/0 .rodata          @stringBase0 */
