//
// Generated By: dol2asm
// Translation Unit: d/ovlp/d_ovlp_fade3
//

#include "d/ovlp/d_ovlp_fade3.h"
#include "dol2asm.h"

//
// Types:
//

struct overlap_task_class {};

struct mDoMtx_stack_c {
    /* 8000CE38 */ void scaleM(f32, f32, f32);

    static u8 now[48];
};

struct mDoGph_gInf_c {
    static u8 mFrameBufferTexObj[32];
    static u8 mFrameBufferTex[4];
};

struct dOvlpFd3_dlst_c {
    /* 80252F28 */ void draw();
    /* 802538E8 */ ~dOvlpFd3_dlst_c();
};

struct dOvlpFd3_c {
    /* 8025343C */ dOvlpFd3_c();
    /* 80253518 */ void execFirstSnap();
    /* 802535AC */ void execFadeOut();
    /* 8025368C */ void execNextSnap();
    /* 80253730 */ void execFadeIn();
};

struct dDlst_snapShot_c {
    /* 80252ED4 */ void draw();
};

struct dDlst_base_c {};

struct dDlst_list_c {
    /* 80056794 */ void set(dDlst_base_c**&, dDlst_base_c**&, dDlst_base_c*);
};

struct dCamera_c {
    /* 801614D0 */ void Stop();
};

struct JGeometry {
    template <typename A1>
    struct TBox2 {};
    /* TBox2<f32> */
    struct TBox2__template0 {};
};

struct JFWDisplay {
    static u8 sManager[4];
};

struct J2DOrthoGraph {
    /* 802E980C */ void setOrtho(JGeometry::TBox2<f32> const&, f32, f32);
};

//
// Forward References:
//

extern "C" void draw__16dDlst_snapShot_cFv();
extern "C" void draw__15dOvlpFd3_dlst_cFv();
extern "C" void __ct__10dOvlpFd3_cFv();
extern "C" void execFirstSnap__10dOvlpFd3_cFv();
extern "C" void execFadeOut__10dOvlpFd3_cFv();
extern "C" void execNextSnap__10dOvlpFd3_cFv();
extern "C" void execFadeIn__10dOvlpFd3_cFv();
extern "C" static void dOvlpFd3_Draw__FP10dOvlpFd3_c();
extern "C" static void dOvlpFd3_Execute__FP10dOvlpFd3_c();
extern "C" static bool dOvlpFd3_IsDelete__FP10dOvlpFd3_c();
extern "C" static bool dOvlpFd3_Delete__FP10dOvlpFd3_c();
extern "C" static void dOvlpFd3_Create__FPv();
extern "C" void __dt__15dOvlpFd3_dlst_cFv();

//
// External References:
//

extern "C" void mDoAud_setFadeOutStart__FUc();
extern "C" void mDoAud_setFadeInStart__FUc();
extern "C" void scaleM__14mDoMtx_stack_cFfff();
extern "C" void fopOvlpM_SceneIsStart__Fv();
extern "C" void fopOvlpM_IsOutReq__FP18overlap_task_class();
extern "C" void fopOvlpM_Done__FP18overlap_task_class();
extern "C" void set__12dDlst_list_cFRPP12dDlst_base_cRPP12dDlst_base_cP12dDlst_base_c();
extern "C" void func_80141AE8(void* _this, u8*);
extern "C" void Stop__9dCamera_cFv();
extern "C" void dCam_getBody__Fv();
extern "C" void func_80252E70(void* _this, s8*);
extern "C" void cLib_addCalc0__FPfff();
extern "C" void __dl__FPv();
extern "C" void func_802E980C();
extern "C" void PSMTXCopy();
extern "C" void PSMTXTrans();
extern "C" void C_MTXPerspective();
extern "C" void GXSetVtxDesc();
extern "C" void GXClearVtxDesc();
extern "C" void GXSetVtxAttrFmt();
extern "C" void GXSetTexCoordGen2();
extern "C" void GXSetNumTexGens();
extern "C" void GXPixModeSync();
extern "C" void GXBegin();
extern "C" void GXSetCullMode();
extern "C" void GXSetTexCopySrc();
extern "C" void GXSetTexCopyDst();
extern "C" void GXCopyTex();
extern "C" void GXSetChanMatColor();
extern "C" void GXSetNumChans();
extern "C" void GXSetChanCtrl();
extern "C" void GXInitTexObj();
extern "C" void GXInitTexObjLOD();
extern "C" void GXLoadTexObj();
extern "C" void GXSetTevColorIn();
extern "C" void GXSetTevAlphaIn();
extern "C" void GXSetTevColorOp();
extern "C" void GXSetTevAlphaOp();
extern "C" void GXSetAlphaCompare();
extern "C" void GXSetTevOrder();
extern "C" void GXSetNumTevStages();
extern "C" void GXSetFog();
extern "C" void GXSetBlendMode();
extern "C" void GXSetZMode();
extern "C" void GXSetZCompLoc();
extern "C" void GXSetDither();
extern "C" void GXSetProjection();
extern "C" void GXLoadPosMtxImm();
extern "C" void GXSetCurrentMtx();
extern "C" void GXSetViewport();
extern "C" void GXSetScissor();
extern "C" void GXSetClipMode();
extern "C" void __ptmf_scall();
extern "C" extern u8 g_mDoMtx_identity[48 + 24 /* padding */];
extern "C" extern void* g_fopOvlp_Method[5 + 1 /* padding */];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" extern void* __vt__12dDlst_base_c[3];
extern "C" u8 mFrameBufferTexObj__13mDoGph_gInf_c[32];
extern "C" u8 now__14mDoMtx_stack_c[48];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 g_clearColor[4];
extern "C" u8 mFrameBufferTex__13mDoGph_gInf_c[4];
extern "C" u8 sManager__10JFWDisplay[4];

//
// Declarations:
//

/* 80252ED4-80252F28 24D814 0054+00 1/0 0/0 0/0 .text            draw__16dDlst_snapShot_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dDlst_snapShot_c::draw() {
    nofralloc
#include "asm/d/ovlp/d_ovlp_fade3/draw__16dDlst_snapShot_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 80454E58-80454E5C 003458 0004+00 1/1 0/0 0/0 .sdata2          @3748 */
SECTION_SDATA2 static u32 lit_3748 = 0xFFFFFFFF;

/* 80454E5C-80454E60 00345C 0004+00 2/2 0/0 0/0 .sdata2          @3800 */
SECTION_SDATA2 static u8 lit_3800[4] = {
    0x00,
    0x00,
    0x00,
    0x00,
};

/* 80454E60-80454E64 003460 0004+00 1/1 0/0 0/0 .sdata2          @3801 */
SECTION_SDATA2 static f32 lit_3801 = 608.0f;

/* 80454E64-80454E68 003464 0004+00 1/1 0/0 0/0 .sdata2          @3802 */
SECTION_SDATA2 static f32 lit_3802 = 448.0f;

/* 80454E68-80454E6C 003468 0004+00 3/3 0/0 0/0 .sdata2          @3803 */
SECTION_SDATA2 static f32 lit_3803 = 1.0f;

/* 80454E6C-80454E70 00346C 0004+00 1/1 0/0 0/0 .sdata2          @3804 */
SECTION_SDATA2 static f32 lit_3804 = 60.0f;

/* 80454E70-80454E74 003470 0004+00 1/1 0/0 0/0 .sdata2          @3805 */
SECTION_SDATA2 static f32 lit_3805 = 19.0f / 14.0f;

/* 80454E74-80454E78 003474 0004+00 1/1 0/0 0/0 .sdata2          @3806 */
SECTION_SDATA2 static f32 lit_3806 = 100.0f;

/* 80454E78-80454E7C 003478 0004+00 1/1 0/0 0/0 .sdata2          @3807 */
SECTION_SDATA2 static f32 lit_3807 = 100000.0f;

/* 80454E7C-80454E80 00347C 0004+00 1/1 0/0 0/0 .sdata2          @3808 */
SECTION_SDATA2 static f32 lit_3808 = -1.0f;

/* 80252F28-8025343C 24D868 0514+00 1/0 0/0 0/0 .text            draw__15dOvlpFd3_dlst_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dOvlpFd3_dlst_c::draw() {
    nofralloc
#include "asm/d/ovlp/d_ovlp_fade3/draw__15dOvlpFd3_dlst_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 803C2D70-803C2D7C -00001 000C+00 1/1 0/0 0/0 .data            @3812 */
SECTION_DATA static void* lit_3812[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)execFirstSnap__10dOvlpFd3_cFv,
};

/* 803C2D7C-803C2D88 -00001 000C+00 1/1 0/0 0/0 .data            @3857 */
SECTION_DATA static void* lit_3857[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)execFadeOut__10dOvlpFd3_cFv,
};

/* 803C2D88-803C2D94 -00001 000C+00 1/1 0/0 0/0 .data            @3871 */
SECTION_DATA static void* lit_3871[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)execNextSnap__10dOvlpFd3_cFv,
};

/* 803C2D94-803C2DA0 -00001 000C+00 1/1 0/0 0/0 .data            @3898 */
SECTION_DATA static void* lit_3898[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)execFadeIn__10dOvlpFd3_cFv,
};

/* 803C2DA0-803C2DB4 -00001 0014+00 1/0 0/0 0/0 .data            l_dOvlpFd3_Method */
SECTION_DATA static void* l_dOvlpFd3_Method[5] = {
    (void*)dOvlpFd3_Create__FPv,
    (void*)dOvlpFd3_Delete__FP10dOvlpFd3_c,
    (void*)dOvlpFd3_Execute__FP10dOvlpFd3_c,
    (void*)dOvlpFd3_IsDelete__FP10dOvlpFd3_c,
    (void*)dOvlpFd3_Draw__FP10dOvlpFd3_c,
};

/* 803C2DB4-803C2DDC -00001 0028+00 0/0 0/0 1/0 .data            g_profile_OVERLAP3 */
SECTION_DATA extern void* g_profile_OVERLAP3[10] = {
    (void*)NULL,       (void*)0x0000FFFD,
    (void*)0x00020000, (void*)&g_fpcLf_Method,
    (void*)0x00000120, (void*)NULL,
    (void*)NULL,       (void*)&g_fopOvlp_Method,
    (void*)0x03080000, (void*)&l_dOvlpFd3_Method,
};

/* 803C2DDC-803C2DEC 01FEFC 0010+00 2/2 0/0 0/0 .data            __vt__15dOvlpFd3_dlst_c */
SECTION_DATA extern void* __vt__15dOvlpFd3_dlst_c[4] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)draw__15dOvlpFd3_dlst_cFv,
    (void*)__dt__15dOvlpFd3_dlst_cFv,
};

/* 803C2DEC-803C2DF8 01FF0C 000C+00 1/1 1/1 0/0 .data            __vt__16dDlst_snapShot_c */
SECTION_DATA extern void* __vt__16dDlst_snapShot_c[3] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)draw__16dDlst_snapShot_cFv,
};

/* 8025343C-80253518 24DD7C 00DC+00 1/1 0/0 0/0 .text            __ct__10dOvlpFd3_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dOvlpFd3_c::dOvlpFd3_c() {
    nofralloc
#include "asm/d/ovlp/d_ovlp_fade3/__ct__10dOvlpFd3_cFv.s"
}
#pragma pop

/* 80253518-802535AC 24DE58 0094+00 1/0 0/0 0/0 .text            execFirstSnap__10dOvlpFd3_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dOvlpFd3_c::execFirstSnap() {
    nofralloc
#include "asm/d/ovlp/d_ovlp_fade3/execFirstSnap__10dOvlpFd3_cFv.s"
}
#pragma pop

/* 802535AC-8025368C 24DEEC 00E0+00 1/0 0/0 0/0 .text            execFadeOut__10dOvlpFd3_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dOvlpFd3_c::execFadeOut() {
    nofralloc
#include "asm/d/ovlp/d_ovlp_fade3/execFadeOut__10dOvlpFd3_cFv.s"
}
#pragma pop

/* 8025368C-80253730 24DFCC 00A4+00 1/0 0/0 0/0 .text            execNextSnap__10dOvlpFd3_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dOvlpFd3_c::execNextSnap() {
    nofralloc
#include "asm/d/ovlp/d_ovlp_fade3/execNextSnap__10dOvlpFd3_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 80454E80-80454E84 003480 0004+00 1/1 0/0 0/0 .sdata2          @3923 */
SECTION_SDATA2 static f32 lit_3923 = 3.0f / 100.0f;

/* 80253730-802537AC 24E070 007C+00 1/0 0/0 0/0 .text            execFadeIn__10dOvlpFd3_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dOvlpFd3_c::execFadeIn() {
    nofralloc
#include "asm/d/ovlp/d_ovlp_fade3/execFadeIn__10dOvlpFd3_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 80454E84-80454E88 003484 0004+00 1/1 0/0 0/0 .sdata2          @3947 */
SECTION_SDATA2 static f32 lit_3947 = -388.0f;

/* 802537AC-80253880 24E0EC 00D4+00 1/0 0/0 0/0 .text            dOvlpFd3_Draw__FP10dOvlpFd3_c */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void dOvlpFd3_Draw(dOvlpFd3_c* param_0) {
    nofralloc
#include "asm/d/ovlp/d_ovlp_fade3/dOvlpFd3_Draw__FP10dOvlpFd3_c.s"
}
#pragma pop

/* 80253880-802538AC 24E1C0 002C+00 1/0 0/0 0/0 .text            dOvlpFd3_Execute__FP10dOvlpFd3_c */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void dOvlpFd3_Execute(dOvlpFd3_c* param_0) {
    nofralloc
#include "asm/d/ovlp/d_ovlp_fade3/dOvlpFd3_Execute__FP10dOvlpFd3_c.s"
}
#pragma pop

/* 802538AC-802538B4 24E1EC 0008+00 1/0 0/0 0/0 .text            dOvlpFd3_IsDelete__FP10dOvlpFd3_c
 */
static bool dOvlpFd3_IsDelete(dOvlpFd3_c* param_0) {
    return true;
}

/* 802538B4-802538BC 24E1F4 0008+00 1/0 0/0 0/0 .text            dOvlpFd3_Delete__FP10dOvlpFd3_c */
static bool dOvlpFd3_Delete(dOvlpFd3_c* param_0) {
    return true;
}

/* 802538BC-802538E8 24E1FC 002C+00 1/0 0/0 0/0 .text            dOvlpFd3_Create__FPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void dOvlpFd3_Create(void* param_0) {
    nofralloc
#include "asm/d/ovlp/d_ovlp_fade3/dOvlpFd3_Create__FPv.s"
}
#pragma pop

/* 802538E8-80253930 24E228 0048+00 1/0 0/0 0/0 .text            __dt__15dOvlpFd3_dlst_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dOvlpFd3_dlst_c::~dOvlpFd3_dlst_c() {
    nofralloc
#include "asm/d/ovlp/d_ovlp_fade3/__dt__15dOvlpFd3_dlst_cFv.s"
}
#pragma pop
