//
// Generated By: dol2asm
// Translation Unit: d/kankyo/d_kankyo_rain
//

#include "d/kankyo/d_kankyo_rain.h"
#include "MSL_C/math.h"
#include "MSL_C/string.h"
#include "d/a/d_a_player.h"
#include "d/com/d_com_inf_game.h"
#include "d/d_demo.h"
#include "dol2asm.h"
#include "dolphin/types.h"
#include "f_op/f_op_actor_mng.h"
#include "m_Do/m_Do_lib.h"
#include "SSystem/SComponent/c_math.h"
#include "JSystem/JKernel/JKRHeap.h"

//
// Forward References:
//

extern "C" static void vectle_calc__FP10DOUBLE_POSP4cXyz();
extern "C" static void get_vectle_calc__FP4cXyzP4cXyzP4cXyz();
extern "C" void dKyr_get_vectle_calc__FP4cXyzP4cXyzP4cXyz();
extern "C" static void dKy_set_eyevect_calc__FP12camera_classP3Vecff();
extern "C" static void dKy_set_eyevect_calc2__FP12camera_classP3Vecff();
extern "C" static void dKyr_set_btitex_common__FP9_GXTexObjP7ResTIMG11_GXTexMapID();
extern "C" static void dKyr_set_btitex__FP9_GXTexObjP7ResTIMG();
extern "C" void dKyr_lenzflare_move__Fv();
extern "C" static void dKyr_moon_arrival_check__Fv();
extern "C" void dKyr_sun_move__Fv();
extern "C" void dKyr_rain_init__Fv();
extern "C" static void rain_bg_chk__FP19dKankyo_rain_Packeti();
extern "C" static void overhead_bg_chk__Fv();
extern "C" static void forward_overhead_bg_chk__FP4cXyzf();
extern "C" void dKyr_rain_move__Fv();
extern "C" static void d_krain_cut_turn_check__Fv();
extern "C" void dKyr_housi_move__Fv();
extern "C" void dKyr_snow_init__Fv();
extern "C" void dKyr_snow_move__Fv();
extern "C" void dKyr_star_init__Fv();
extern "C" void dKyr_star_move__Fv();
extern "C" void cloud_shadow_move__Fv();
extern "C" void vrkumo_move__Fv();
extern "C" static void dKr_cullVtx_Set__Fv();
extern "C" static void dKyr_draw_rev_moon__FPA4_fPPUc();
extern "C" void dKyr_drawSun__FPA4_fP4cXyzR8_GXColorPPUc();
extern "C" void dKyr_drawLenzflare__FPA4_fP4cXyzR8_GXColorPPUc();
extern "C" void dKyr_drawRain__FPA4_fPPUc();
extern "C" void dKyr_drawSibuki__FPA4_fPPUc();
extern "C" void dKyr_drawHousi__FPA4_fPPUc();
extern "C" void dKyr_drawSnow__FPA4_fPPUc();
extern "C" void dKyr_drawStar__FPA4_fPPUc();
extern "C" void drawCloudShadow__FPA4_fPPUc();
extern "C" void drawVrkumo__FPA4_fR8_GXColorPPUc();
extern "C" void dKyr_thunder_init__Fv();
extern "C" void dKyr_thunder_move__Fv();
extern "C" void dKyr_shstar_init__Fv();
extern "C" void dKyr_shstar_move__Fv();
extern "C" void dKyr_odour_init__Fv();
extern "C" void dKyr_odour_move__Fv();
extern "C" void dKyr_odour_draw__FPA4_fPPUc();
extern "C" void dKyr_mud_init__Fv();
extern "C" void dKyr_mud_move__Fv();
extern "C" void dKyr_mud_draw__FPA4_fPPUc();
extern "C" void dKyr_evil_init__Fv();
extern "C" void dKyr_evil_move__Fv();
extern "C" static void dKyr_evil_draw2__FPA4_fPPUc();
extern "C" static void dKyr_near_bosslight_check__F4cXyz();
extern "C" void dKyr_evil_draw__FPA4_fPPUc();
extern "C" bool getKandelaarFlamePos__9daPy_py_cFv();
extern "C" extern char const* const d_kankyo_d_kankyo_rain__stringBase0;

//
// External References:
//

extern "C" void __dt__4cXyzFv();
extern "C" void mDoMtx_ZXYrotM__FPA4_fsss();
extern "C" void mDoMtx_XrotM__FPA4_fs();
extern "C" void mDoMtx_YrotM__FPA4_fs();
extern "C" void mDoMtx_ZrotM__FPA4_fs();
extern "C" void mDoLib_project__FP3VecP3Vec();
extern "C" void __dt__5csXyzFv();
extern "C" void fopKyM_create__FsiP4cXyzP4cXyzPFPv_i();
extern "C" void getStatusRoomDt__20dStage_roomControl_cFi();
extern "C" void getLayerNo__14dComIfG_play_cFi();
extern "C" void dComIfG_getStageRes__FPCc();
extern "C" void dComIfGs_PolyDamageOff_Set__FSc();
extern "C" void isDungeonItem__12dSv_memBit_cCFi();
extern "C" void getRes__14dRes_control_cFPCclP11dRes_info_ci();
extern "C" void getRunEventName__16dEvent_manager_cFv();
extern "C" void
set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf();
extern "C" void newData__13dDlst_peekZ_cFssPUl();
extern "C" void __dt__8SNOW_EFFFv();
extern "C" void __ct__8SNOW_EFFFv();
extern "C" void __dt__8STAR_EFFFv();
extern "C" void __ct__8STAR_EFFFv();
extern "C" void dKyw_get_wind_vec__Fv();
extern "C" void dKyw_get_wind_pow__Fv();
extern "C" void dKyw_get_wind_vecpow__Fv();
extern "C" void dKyw_pntwind_get_vecpow__FP4cXyz();
extern "C" void GroundCross__4cBgSFP11cBgS_GndChk();
extern "C" void RoofChk__4dBgSFP12dBgS_RoofChk();
extern "C" void __ct__11dBgS_GndChkFv();
extern "C" void __dt__11dBgS_GndChkFv();
extern "C" void __dt__18dBgS_ObjGndChk_AllFv();
extern "C" void __ct__18dBgS_CamGndChk_WtrFv();
extern "C" void __dt__18dBgS_CamGndChk_WtrFv();
extern "C" void SetObj__16dBgS_PolyPassChkFv();
extern "C" void __ct__12dBgS_RoofChkFv();
extern "C" void __dt__12dBgS_RoofChkFv();
extern "C" void Prepare__12dCcMassS_MngFv();
extern "C" void checkNowWolfEyeUp__9daPy_py_cFv();
extern "C" void dKy_get_parcent__Ffff();
extern "C" void getDaytime__18dScnKy_env_light_cFv();
extern "C" void dKy_daynight_check__Fv();
extern "C" void dKy_move_room_ratio__FP12dKy_tevstr_cPSc();
extern "C" void dKy_efplight_set__FP15LIGHT_INFLUENCE();
extern "C" void dKy_efplight_cut__FP15LIGHT_INFLUENCE();
extern "C" void dKy_actor_addcol_amb_set__Fsssf();
extern "C" void dKy_bg_addcol_amb_set__Fsssf();
extern "C" void dKy_bg1_addcol_amb_set__Fsssf();
extern "C" void dKy_addcol_fog_set__Fsssf();
extern "C" void dKy_vrbox_addcol_sky0_set__Fsssf();
extern "C" void dKy_vrbox_addcol_kasumi_set__Fsssf();
extern "C" void dKy_GxFog_set__Fv();
extern "C" void dKy_rain_check__Fv();
extern "C" void dKy_set_actcol_ratio__Ff();
extern "C" void dKy_set_bgcol_ratio__Ff();
extern "C" void dKy_set_fogcol_ratio__Ff();
extern "C" void dKy_set_vrboxcol_ratio__Ff();
extern "C" void
dKy_ParticleColor_get_bg__FP4cXyzP12dKy_tevstr_cP8_GXColorP8_GXColorP8_GXColorP8_GXColorf();
extern "C" void dKy_darkworld_check__Fv();
extern "C" void __pl__4cXyzCFRC3Vec();
extern "C" void __ct__5csXyzFsss();
extern "C" void cM_rad2s__Ff();
extern "C" void cM_atan2s__Fff();
extern "C" void cM_rndF__Ff();
extern "C" void cM_rndFX__Ff();
extern "C" void SetPos__11cBgS_GndChkFPC4cXyz();
extern "C" void cM3d_VectorProduct2d__Fffffff();
extern "C" void cLib_addCalc__FPfffff();
extern "C" void startNearThunderSe__10Z2EnvSeMgrFSc();
extern "C" void* __nw__FUli();
extern "C" void reinitGX__6J3DSysFv();
extern "C" void __register_global_object();
extern "C" void __construct_array();
extern "C" void _savegpr_14();
extern "C" void _savegpr_17();
extern "C" void _savegpr_18();
extern "C" void _savegpr_19();
extern "C" void _savegpr_20();
extern "C" void _savegpr_21();
extern "C" void _savegpr_22();
extern "C" void _savegpr_23();
extern "C" void _savegpr_25();
extern "C" void _savegpr_26();
extern "C" void _savegpr_27();
extern "C" void _savegpr_28();
extern "C" void _savegpr_29();
extern "C" void _restgpr_14();
extern "C" void _restgpr_17();
extern "C" void _restgpr_18();
extern "C" void _restgpr_19();
extern "C" void _restgpr_20();
extern "C" void _restgpr_21();
extern "C" void _restgpr_22();
extern "C" void _restgpr_23();
extern "C" void _restgpr_25();
extern "C" void _restgpr_26();
extern "C" void _restgpr_27();
extern "C" void _restgpr_28();
extern "C" void _restgpr_29();
extern "C" extern void* __vt__14dBgS_ObjGndChk[12 + 1 /* padding */];
extern "C" extern void* __vt__19dKankyo_star_Packet[5];
extern "C" extern void* __vt__19dKankyo_snow_Packet[5];
extern "C" extern void* __vt__18dBgS_ObjGndChk_All[12];
extern "C" extern void* __vt__9J3DPacket[5];
extern "C" u8 now__14mDoMtx_stack_c[48];
extern "C" extern u8 g_Counter[12 + 4 /* padding */];
extern "C" u8 sincosTable___5JMath[65536];
extern "C" u8 mFrameBufferTimg__13mDoGph_gInf_c[4];
extern "C" u8 m_mode__7dDemo_c[4];
extern "C" u8 sOldVcdVatCmd__8J3DShape[4];

//
// Declarations:
//

/* ############################################################################################## */
/* 804521B0-804521B8 0007B0 0008+00 19/19 0/0 0/0 .sdata2          @3953 */
SECTION_SDATA2 static u8 lit_3953[8] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 804521B8-804521BC 0007B8 0004+00 31/31 0/0 0/0 .sdata2          @3954 */
SECTION_SDATA2 static u8 lit_3954[4] = {
    0x00,
    0x00,
    0x00,
    0x00,
};

/* 8005B660-8005B708 055FA0 00A8+00 3/3 0/0 0/0 .text            vectle_calc__FP10DOUBLE_POSP4cXyz
 */
// matches with literals
#ifdef NONMATCHING
static void vectle_calc(DOUBLE_POS* i_pos, cXyz* o_out) {
    double s = sqrt(i_pos->x * i_pos->x + i_pos->y * i_pos->y + i_pos->z * i_pos->z);

    if (s != 0.0) {
        o_out->x = i_pos->x / s;
        o_out->y = i_pos->y / s;
        o_out->z = i_pos->z / s;
    } else {
        o_out->x = 0.0;
        o_out->y = 0.0;
        o_out->z = 0.0;
    }
}
#else
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void vectle_calc(DOUBLE_POS* param_0, cXyz* param_1) {
    nofralloc
#include "asm/d/kankyo/d_kankyo_rain/vectle_calc__FP10DOUBLE_POSP4cXyz.s"
}
#pragma pop
#endif

/* 8005B708-8005B760 056048 0058+00 7/7 0/0 0/0 .text get_vectle_calc__FP4cXyzP4cXyzP4cXyz */
static void get_vectle_calc(cXyz* param_0, cXyz* param_1, cXyz* param_2) {
    DOUBLE_POS pos;
    pos.x = param_1->x - param_0->x;
    pos.y = param_1->y - param_0->y;
    pos.z = param_1->z - param_0->z;

    vectle_calc(&pos, param_2);
}

/* 8005B760-8005B780 0560A0 0020+00 8/8 7/7 11/11 .text dKyr_get_vectle_calc__FP4cXyzP4cXyzP4cXyz
 */
void dKyr_get_vectle_calc(cXyz* param_0, cXyz* param_1, cXyz* param_2) {
    get_vectle_calc(param_0, param_1, param_2);
}

/* ############################################################################################## */
/* 804521BC-804521C0 0007BC 0004+00 4/4 0/0 0/0 .sdata2          @3970 */
SECTION_SDATA2 static f32 lit_3970 = 200.0f;

/* 8005B780-8005B830 0560C0 00B0+00 2/2 0/0 0/0 .text
 * dKy_set_eyevect_calc__FP12camera_classP3Vecff                */
static void dKy_set_eyevect_calc(camera_class* i_camera, Vec* param_1, f32 param_2, f32 param_3) {
    cXyz tmp;
    get_vectle_calc(&i_camera->mLookat.mEye, &i_camera->mLookat.mCenter, &tmp);
    param_1->x = i_camera->mLookat.mEye.x + tmp.x * param_2;
    param_1->y = (i_camera->mLookat.mEye.y + tmp.y * param_3) - lit_3970;
    param_1->z = i_camera->mLookat.mEye.z + tmp.z * param_2;
}

/* 8005B830-8005B92C 056170 00FC+00 6/6 0/0 0/0 .text
 * dKy_set_eyevect_calc2__FP12camera_classP3Vecff               */
// matches with literals
#ifdef NONMATCHING
static void dKy_set_eyevect_calc2(camera_class* i_camera, Vec* param_1, f32 param_2, f32 param_3) {
    cXyz tmp;
    DOUBLE_POS pos;

    pos.x = i_camera->mLookat.mCenter.x - i_camera->mLookat.mEye.x;
    if (param_3 != 0.0f) {
        pos.y = i_camera->mLookat.mCenter.y - i_camera->mLookat.mEye.y;
    } else {
        pos.y = 0.0f;
    }
    pos.z = i_camera->mLookat.mCenter.z - i_camera->mLookat.mEye.z;

    vectle_calc(&pos, &tmp);

    param_1->x = i_camera->mLookat.mEye.x + tmp.x * param_2;
    param_1->y = i_camera->mLookat.mEye.y + tmp.y * param_3;
    param_1->z = i_camera->mLookat.mEye.z + tmp.z * param_2;

    if (param_3 == 0.0f) {
        param_1->y = 0.0f;
    }
}
#else
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void dKy_set_eyevect_calc2(camera_class* param_0, Vec* param_1, f32 param_2,
                                      f32 param_3) {
    nofralloc
#include "asm/d/kankyo/d_kankyo_rain/dKy_set_eyevect_calc2__FP12camera_classP3Vecff.s"
}
#pragma pop
#endif

/* ############################################################################################## */
/* 804521C0-804521C4 0007C0 0004+00 1/1 0/0 0/0 .sdata2          @3992 */
SECTION_SDATA2 static f32 lit_3992 = 0.125f;

/* 804521C4-804521C8 0007C4 0004+00 9/9 0/0 0/0 .sdata2          @3993 */
SECTION_SDATA2 static f32 lit_3993 = 0.01f;

/* 804521C8-804521D0 0007C8 0008+00 15/15 0/0 0/0 .sdata2          @3995 */
SECTION_SDATA2 static f64 lit_3995 = 4503601774854144.0 /* cast s32 to float */;

/* 8005B92C-8005BA24 05626C 00F8+00 5/5 0/0 0/0 .text
 * dKyr_set_btitex_common__FP9_GXTexObjP7ResTIMG11_GXTexMapID   */
// matches with literals
#ifdef NONMATCHING
static void dKyr_set_btitex_common(GXTexObj* i_obj, ResTIMG* i_img, GXTexMapID i_mapID) {
    GXInitTexObj(i_obj, (&i_img->format + i_img->imageOffset), i_img->width, i_img->height,
                 (GXTexFmt)i_img->format, (GXTexWrapMode)i_img->wrapS, (GXTexWrapMode)i_img->wrapT,
                 (GXBool)(i_img->mipmapCount > 1));

    GXInitTexObjLOD(i_obj, (GXTexFilter)i_img->minFilter, (GXTexFilter)i_img->magFilter,
                    i_img->minLOD * 0.125f, i_img->maxLOD * 0.125f, i_img->LODBias * 0.01f,
                    (GXBool)i_img->biasClamp, (GXBool)i_img->doEdgeLOD,
                    (GXAnisotropy)i_img->maxAnisotropy);

    GXLoadTexObj(i_obj, i_mapID);
}
#else
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void dKyr_set_btitex_common(GXTexObj* param_0, ResTIMG* param_1, GXTexMapID param_2) {
    nofralloc
#include "asm/d/kankyo/d_kankyo_rain/dKyr_set_btitex_common__FP9_GXTexObjP7ResTIMG11_GXTexMapID.s"
}
#pragma pop
#endif

/* 8005BA24-8005BA48 056364 0024+00 12/12 0/0 0/0 .text dKyr_set_btitex__FP9_GXTexObjP7ResTIMG */
static void dKyr_set_btitex(GXTexObj* i_obj, ResTIMG* i_img) {
    dKyr_set_btitex_common(i_obj, i_img, GX_TEXMAP0);
}

/* ############################################################################################## */
/* 804521D0-804521D4 0007D0 0004+00 4/4 0/0 0/0 .sdata2          @4103 */
SECTION_SDATA2 static f32 lit_4103 = 0.0001;

/* 804521D4-804521D8 0007D4 0004+00 4/4 0/0 0/0 .sdata2          @4104 */
SECTION_SDATA2 static f32 lit_4104 = 4000.0f;

/* 804521D8-804521DC 0007D8 0004+00 2/2 0/0 0/0 .sdata2          @4105 */
SECTION_SDATA2 static f32 lit_4105 = 304.0f;

/* 804521DC-804521E0 0007DC 0004+00 2/2 0/0 0/0 .sdata2          @4106 */
SECTION_SDATA2 static f32 lit_4106 = 224.0f;

/* 804521E0-804521E4 0007E0 0004+00 2/2 0/0 0/0 .sdata2          @4107 */
SECTION_SDATA2 static f32 lit_4107 = 0.0054931640625f;

/* 804521E4-804521E8 0007E4 0004+00 6/6 0/0 0/0 .sdata2          @4108 */
SECTION_SDATA2 static f32 lit_4108 = 180.0f;

/* 804521E8-804521F0 0007E8 0008+00 17/17 0/0 0/0 .sdata2          @4109 */
SECTION_SDATA2 static f64 lit_4109 = 0.5;

/* 804521F0-804521F8 0007F0 0008+00 17/17 0/0 0/0 .sdata2          @4110 */
SECTION_SDATA2 static f64 lit_4110 = 3.0;

/* 804521F8-804521FC 0007F8 0004+00 6/6 0/0 0/0 .sdata2          @4111 */
SECTION_SDATA2 static f32 lit_4111 = 250.0f;

/* 804521FC-80452200 0007FC 0004+00 4/4 0/0 0/0 .sdata2          @4112 */
SECTION_SDATA2 static f32 lit_4112 = 600.0f;

/* 80452200-80452204 000800 0004+00 2/2 0/0 0/0 .sdata2          @4113 */
SECTION_SDATA2 static f32 lit_4113 = 110.0f;

/* 80452204-80452208 000804 0004+00 1/1 0/0 0/0 .sdata2          @4114 */
SECTION_SDATA2 static f32 lit_4114 = 4100.0f;

/* 8005BA48-8005BED8 056388 0490+00 0/0 1/1 0/0 .text            dKyr_lenzflare_move__Fv */
// Matches with literals
#ifdef NONMATCHING
void dKyr_lenzflare_move() {
    dKankyo_sun_Packet* sunPacket = g_env_light.mpSunPacket;
    dKankyo_sunlenz_Packet* sunLenzPacket = g_env_light.mpSunLenzPacket;
    camera_class* iVar6 = dComIfGp_getCamera(0);
    
    cXyz cStack_48;
    cXyz cStack_54;
    cXyz local_60;
    cXyz cStack_6c;
    if (sunPacket->field_0x5c < 0.0001) {
        return;
    }
    dKy_set_eyevect_calc(iVar6, &cStack_48, 4000.0f, 4000.0f);
    dKyr_get_vectle_calc(&cStack_48, sunPacket->mPos, &local_60);
    sunLenzPacket->mPositions[0] = sunPacket->mPos[0];
    sunLenzPacket->mPositions[1] = sunPacket->mPos[0];
    cXyz local_78;
    cXyz cStack_84;
    cXyz local_90;
    mDoLib_project(sunLenzPacket->mPositions, &cStack_84);
    local_90.x = 304.0f;
    local_90.y = 224.0f;
    local_90.z = 0.0054931640625f; // Maybe 45 / 8192
    dKyr_get_vectle_calc(&local_90, &cStack_84, &local_78);
    sunLenzPacket->field_0x94 = cM_atan2s(local_78.x, local_78.y);
    sunLenzPacket->field_0x94 *= 0.0054931640625f;
    sunLenzPacket->field_0x94 += 180.0f;
    dKyr_get_vectle_calc(&iVar6->mLookat.mEye, &iVar6->mLookat.mCenter, &cStack_6c);

    for (int i = 2; i < 8; i++) {
        if (i == 2) {
            f32 fVar3 = local_60.abs(cStack_6c);
            f32 fVar4 = 250.0f + 600.0f * fVar3;
            sunLenzPacket->mPositions[i].x = sunPacket->mPos[0].x - local_60.x * fVar4 * i;
            sunLenzPacket->mPositions[i].y = sunPacket->mPos[0].y - local_60.y * fVar4 * i;
            sunLenzPacket->mPositions[i].z = sunPacket->mPos[0].z - local_60.z * fVar4 * i;
        } else {
            f32 fVar3 = local_60.abs(cStack_6c);
            f32 fVar4 = 250.0f + 110.0f * fVar3;
            sunLenzPacket->mPositions[i].x = sunPacket->mPos[0].x - (4100.0f * local_60.x + local_60.x * fVar4 * i);
            sunLenzPacket->mPositions[i].y = sunPacket->mPos[0].y - (4100.0f * local_60.y + local_60.y * fVar4 * i);
            sunLenzPacket->mPositions[i].z = sunPacket->mPos[0].z - (4100.0f * local_60.z + local_60.z * fVar4 * i);
        }
    }
}
#else
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dKyr_lenzflare_move() {
    nofralloc
#include "asm/d/kankyo/d_kankyo_rain/dKyr_lenzflare_move__Fv.s"
}
#pragma pop
#endif

/* ############################################################################################## */
/* 80452208-8045220C 000808 0004+00 3/3 0/0 0/0 .sdata2          @4126 */
SECTION_SDATA2 static f32 lit_4126 = 285.0f;

/* 8005BED8-8005BF08 056818 0030+00 1/1 0/0 0/0 .text            dKyr_moon_arrival_check__Fv */
static int dKyr_moon_arrival_check() {
    int rv = 0;
    if (g_env_light.mDaytime > lit_4126 || g_env_light.mDaytime < 67.5f) {
        rv = 1;
    }

    return rv;
}

/* ############################################################################################## */
/* 8037A4C0-8037A4E8 006B20 0028+00 1/1 0/0 0/0 .rodata          sun_chkpnt$4155 */
SECTION_RODATA static f32 const sun_chkpnt[5][2] = {
    {0.0f, 0.0f}, {-10.0f, -20.0f}, {10.0f, 20.0f}, {-20.0f, 10.0f}, {20.0f, -10.0f},
};
COMPILER_STRIP_GATE(0x8037A4C0, &sun_chkpnt);

/* 8037A578-8037A578 006BD8 0000+00 0/0 0/0 0/0 .rodata          @stringBase0 */
#pragma push
#pragma force_active on
SECTION_DEAD static char const* const stringBase_8037A578 = "F_SP200";
SECTION_DEAD static char const* const stringBase_8037A580 = "D_MN09B";
#pragma pop

/* 803A9BA0-803A9BAC 006CC0 000C+00 1/1 0/0 0/0 .data            sun_color$4213 */
SECTION_DATA static GXColor sun_color[3] = {
    {255, 255, 253, 255},
    {255, 255, 255, 255},
    {255, 255, 253, 255},
};

/* 803A9BAC-803A9BB8 006CCC 000C+00 1/1 0/0 0/0 .data            sun_color2$4214 */
SECTION_DATA static GXColor sun_color2[3] = {
    {255, 110, 43, 255},
    {156, 121, 92, 255},
    {255, 78, 0, 255},
};

/* 80450EE8-80450EEC 0003E8 0004+00 1/1 0/0 0/0 .sbss            S_parcent_bak$4131 */
static f32 S_parcent_bak;

/* 80450EEC-80450EF0 -00001 0004+00 2/2 0/0 0/0 .sbss            None */
/* 80450EEC 0002+00 data_80450EEC None */
/* 80450EEE 0002+00 data_80450EEE S_rot_work1$7554 */
static s8 struct_80450EEC[4];

/* 80452210-80452214 000810 0004+00 4/4 0/0 0/0 .sdata2          @4353 */
SECTION_SDATA2 static f32 lit_4353 = 8000.0f;

/* 80452214-80452218 000814 0004+00 26/26 0/0 0/0 .sdata2          @4354 */
SECTION_SDATA2 static f32 lit_4354 = 1.0f;

/* 80452218-8045221C 000818 0004+00 1/1 0/0 0/0 .sdata2          @4355 */
SECTION_SDATA2 static f32 lit_4355 = 77.5f;

/* 8045221C-80452220 00081C 0004+00 5/5 0/0 0/0 .sdata2          @4356 */
SECTION_SDATA2 static f32 lit_4356 = 0.05f;

/* 80452220-80452224 000820 0004+00 14/14 0/0 0/0 .sdata2          @4357 */
SECTION_SDATA2 static f32 lit_4357 = 0.1f;

/* 80452224-80452228 000824 0004+00 2/2 0/0 0/0 .sdata2          @4358 */
SECTION_SDATA2 static f32 lit_4358 = 0.00001f;

/* 80452228-8045222C 000828 0004+00 2/2 0/0 0/0 .sdata2          @4359 */
SECTION_SDATA2 static f32 lit_4359 = 458.0f;

/* 8045222C-80452230 00082C 0004+00 2/2 0/0 0/0 .sdata2          @4360 */
SECTION_SDATA2 static f32 lit_4360 = 608.0f;

/* 80452230-80452234 000830 0004+00 3/3 0/0 0/0 .sdata2          @4361 */
SECTION_SDATA2 static f32 lit_4361 = 1000000000.0f;

/* 80452234-80452238 000834 0004+00 1/1 0/0 0/0 .sdata2          @4362 */
SECTION_SDATA2 static f32 lit_4362 = 450.0f;

/* 80452238-8045223C 000838 0004+00 10/10 0/0 0/0 .sdata2          @4363 */
SECTION_SDATA2 static f32 lit_4363 = 0.001f;

/* 8045223C-80452240 00083C 0004+00 18/18 0/0 0/0 .sdata2          @4364 */
SECTION_SDATA2 static f32 lit_4364 = 0.5f;

/* 80452240-80452244 000840 0004+00 13/13 0/0 0/0 .sdata2          @4365 */
SECTION_SDATA2 static f32 lit_4365 = 0.2f;

/* 80452244-80452248 000844 0004+00 11/11 0/0 0/0 .sdata2          @4366 */
SECTION_SDATA2 static f32 lit_4366 = 0.3f;

/* 80452248-8045224C 000848 0004+00 8/8 0/0 0/0 .sdata2          @4367 */
SECTION_SDATA2 static f32 lit_4367 = 0.8f;

/* 8045224C-80452250 00084C 0004+00 12/12 0/0 0/0 .sdata2          @4368 */
SECTION_SDATA2 static f32 lit_4368 = 255.0f;

/* 80452250-80452254 000850 0004+00 2/2 0/0 0/0 .sdata2          @4369 */
SECTION_SDATA2 static f32 lit_4369 = 90.0f;

/* 80452254-80452258 000854 0004+00 3/3 0/0 0/0 .sdata2          @4370 */
SECTION_SDATA2 static f32 lit_4370 = 105.0f;

/* 80452258-8045225C 000858 0004+00 1/1 0/0 0/0 .sdata2          @4371 */
SECTION_SDATA2 static f32 lit_4371 = 247.5f;

/* 8045225C-80452260 00085C 0004+00 1/1 0/0 0/0 .sdata2          @4372 */
SECTION_SDATA2 static f32 lit_4372 = 270.0f;

/* 80452260-80452264 000860 0004+00 1/1 0/0 0/0 .sdata2          @4373 */
SECTION_SDATA2 static f32 lit_4373 = -8000.0f;

/* 80452264-80452268 000864 0004+00 2/2 0/0 0/0 .sdata2          @4374 */
SECTION_SDATA2 static f32 lit_4374 = 6.0f;

/* 80452268-8045226C 000868 0004+00 1/1 0/0 0/0 .sdata2          @4375 */
SECTION_SDATA2 static f32 lit_4375 = 30160.0f;

/* 8045226C-80452270 00086C 0004+00 1/1 0/0 0/0 .sdata2          @4376 */
SECTION_SDATA2 static f32 lit_4376 = 21678.0f;

/* 80452270-80452278 000870 0008+00 9/9 0/0 0/0 .sdata2          @4379 */
SECTION_SDATA2 static f64 lit_4379 = 4503599627370496.0 /* cast u32 to float */;

/* 8005BF08-8005CC5C 056848 0D54+00 0/0 1/1 0/0 .text            dKyr_sun_move__Fv */
// regalloc
#ifdef NONMATCHING
void dKyr_sun_move() {
    dKankyo_sun_Packet* sunPacket = g_env_light.mpSunPacket;
    dKankyo_sunlenz_Packet* sunLenzPacket = g_env_light.mpSunLenzPacket;
    cXyz local_90;
    cXyz cStack_9c;
    f32 dVar20;
    camera_class* pCamera = dComIfGp_getCamera(0);
    f32 dVar19 = 0.0f;
    if (struct_80450EEC[0] == 0) {
        S_parcent_bak = dVar19;
        struct_80450EEC[0] = 1;
    }
    u8 r22 = 0;
    u8 r21 = 0;
    s32 r20 = 0;
    u32 stType = dStage_stagInfo_GetSTType(i_dComIfGp_getStage()->getStagInfo());
    if ((g_env_light.mBaseLightInfluence.mColor.r == 0) && (stType != 2)) {
        dKyr_get_vectle_calc(&pCamera->mLookat.mEye, &g_env_light.mBaseLightInfluence.mPosition, &local_90);
    } else {
        dKyr_get_vectle_calc(&pCamera->mLookat.mEye, &g_env_light.mSunPos2, &local_90);
    }

    sunPacket->mPos[0].x = pCamera->mLookat.mEye.x + 8000.0f * local_90.x;
    sunPacket->mPos[0].y = pCamera->mLookat.mEye.y + 8000.0f * local_90.y;
    sunPacket->mPos[0].z = pCamera->mLookat.mEye.z + 8000.0f * local_90.z;

    f32 fVar4 = (sunPacket->mPos[0].y - pCamera->mLookat.mEye.y) / 8000.0f;
    if (fVar4 < 0.0f) {
        fVar4 = 0.0f;
    }

    if (fVar4 >= 1.0f) {
        fVar4 = 1.0f;
    }

    fVar4 = 1.0f - fVar4;
    fVar4 *= fVar4;
    dVar20 = 1.0f - fVar4;
    
    if (i_dComIfGp_getStage()->getStagInfo() != 0) {
        dStage_stagInfo_GetSTType(i_dComIfGp_getStage()->getStagInfo());
    }

    if (sunPacket->field_0x28) {
        sunPacket->field_0x28--;
    }

    sunPacket->field_0x29 = 0;
    if (g_env_light.mDaytime > 77.5f && g_env_light.mDaytime < 285.0f && dKy_rain_check() < 0x14 && 
        strcmp(dComIfGp_getStartStageName(), "F_SP200") != 0 && 
        strcmp(dComIfGp_getStartStageName(), "D_MN09B") != 0) {
            f32 local_f8 = 0.0f;
            cLib_addCalc(
                &sunPacket->field_0x60,
                1.0f,
                1.0f / 20.0f,
                1.0f / 10.0f,
                0.00001f);
            
            if (pCamera != 0) {
                local_f8 = pCamera->mCamera.TrimHeight();
            }
            cXyz cStack_a8;
            mDoLib_project(sunPacket->mPos, &cStack_a8);
            for (int i = 0; i < 5; i++) {
                cXyz local_b4 = cStack_a8;
                local_b4.x -= sun_chkpnt[i][0];
                local_b4.y -= sun_chkpnt[i][1];
                if (local_b4.x > 0.0f &&
                    local_b4.x < 608.0f &&
                    local_b4.y > local_f8 &&
                    local_b4.y < 458.0f - local_f8)
                {
                    if ((sunPacket->field_0x44)[i] >= 0x00FFFFFF){
                        r22++;
                        if (i == 0) {
                            r21++;
                        }
                    }
                    dComIfGd_peekZ(local_b4.x, local_b4.y, sunPacket->field_0x44 + i);
                } else {
                    sunPacket->field_0x44[i] = 0;
                    r20++;
                }
            }
            if (r20 != 0 && r22 != 0 && r21 != 0) {
                r21 = 1;
                r22 = 5;
            }
            if (r22 != 0) {
                if (sunPacket->field_0x28 < 5) {
                    sunPacket->field_0x28 += 2;
                }
                sunPacket->field_0x29 = 1;
            }
            sunLenzPacket->field_0x84 = sunLenzPacket->field_0x8c;
            sunLenzPacket->field_0x88 = sunLenzPacket->field_0x90;
            sunLenzPacket->field_0x8c = 1000000000.0f;
            sunLenzPacket->field_0x90 = 0.0f;
            cXyz local_cc;
            local_cc.x = 304.0f;
            local_cc.y = 224.0f;
            local_cc.z = 0.0f;
            sunLenzPacket->field_0x98 = local_cc.abs(cStack_a8);
            sunLenzPacket->field_0x98 /= 450.0f;
            if (sunLenzPacket->field_0x98 > 1.0f) {
                sunLenzPacket->field_0x98 = 1.0f;
            }
            sunLenzPacket->field_0x98 = 1.0f - sunLenzPacket->field_0x98;
            dVar19 = sunLenzPacket->field_0x98 * sunLenzPacket->field_0x98;
            sunLenzPacket->field_0x98 = 1.0f - dVar19;
    } else {
        cLib_addCalc(&sunPacket->field_0x60, 0.0f, 0.1f, 0.05f, 0.001f);
        r22 = 0;
        sunPacket->field_0x28 = 0;
        sunPacket->field_0x29 = 0;
    }


    if (g_env_light.mColpatWeather != 0 || g_env_light.mSnowCount > 10) {
        r21 = 0;
        r22 = 0;
    }

    if (stType == 2) {
        r21 = 0;
        r22 = 0;
    }

    if (r21 != 0) {
        if (r22 == 4) {
            cLib_addCalc(&sunPacket->field_0x5c, 1.0f, 0.5f, 0.5f, 0.01f);
        } else {
            cLib_addCalc(&sunPacket->field_0x5c, 1.0f, 0.2f, 0.3f, 0.001f);
        }
    } else {
        if (r22 < 1) {
            cLib_addCalc(&sunPacket->field_0x5c, 0.0f, 0.5f, 0.5f, 0.001f);
        } else {
            cLib_addCalc(&sunPacket->field_0x5c, 0.0f, 0.2f, 0.3f, 0.001f);
        }
    }

    if (sunPacket->field_0x5c <= 0.0f) {
        g_env_light.mpSunLenzPacket->mDrawLenzInSky = 1;
    } else {
        g_env_light.mpSunLenzPacket->mDrawLenzInSky = 0;
    }

    if (local_90.y > 0.0f && g_env_light.mpSunLenzPacket->mDrawLenzInSky == 0) {
        if (dStage_stagInfo_GetArg0(i_dComIfGp_getStage()->getStagInfo()) != 0) {
            f32 dVar3;
            if (S_parcent_bak < dVar19) {
                dVar3 = dVar19 - S_parcent_bak;
            } else {
                dVar3 = S_parcent_bak - dVar19;;
            }
            if (dVar3 < 0.3f) {
                dKy_set_actcol_ratio(1.0f - dVar19 * sunPacket->field_0x5c);
                dKy_set_bgcol_ratio(1.0f - dVar19 * sunPacket->field_0x5c);
                dKy_set_fogcol_ratio(1.0f - dVar20 * (dVar19 * sunPacket->field_0x5c));
                dKy_set_vrboxcol_ratio(1.0f - 0.8f * (dVar20 * (dVar19 * sunPacket->field_0x5c)));
            }
            S_parcent_bak = dVar19;
        }
    }

    if (g_env_light.mDaytime < 255.0f && g_env_light.mColpatWeather == 0) {
        cLib_addCalc(&sunPacket->field_0x6c, 1.0f, 0.1f, 0.01f, 0.0001f);
    } else {
        cLib_addCalc(&sunPacket->field_0x6c, 0.0f, 0.5f, 0.1f, 0.001f);
    }

    if (g_env_light.mDaytime < 180.0f) {
        f32 fVar7;
        if (g_env_light.mDaytime < 90.0f) {
            fVar7 = 0.0f;
        } else if (g_env_light.mDaytime < 105.0f) {
            fVar7 = dKy_get_parcent(105.0f, 90.0f, g_env_light.mDaytime);
        } else {
            fVar7 = 1.0f;
        }

        sunPacket->mColor.r = (f32)sun_color[0].r + fVar7 * ((f32)sun_color[1].r - (f32)sun_color[0].r);
        sunPacket->mColor.g = (f32)sun_color[0].g + fVar7 * ((f32)sun_color[1].g - (f32)sun_color[0].g);
        sunPacket->mColor.b = (f32)sun_color[0].b + fVar7 * ((f32)sun_color[1].b - (f32)sun_color[0].b);

        sunPacket->field_0x74.r = (f32)sun_color2[0].r + fVar7 * ((f32)sun_color2[1].r - (f32)sun_color2[0].r);
        sunPacket->field_0x74.g = (f32)sun_color2[0].g + fVar7 * ((f32)sun_color2[1].g - (f32)sun_color2[0].g);
        sunPacket->field_0x74.b = (f32)sun_color2[0].b + fVar7 * ((f32)sun_color2[1].b - (f32)sun_color2[0].b);
    } else {
        f32 fVar7;
        if (g_env_light.mDaytime < 247.5f) {
            fVar7 = 1.0f;
        } else if (g_env_light.mDaytime < 270.0f) {
            fVar7 = 1.0f - dKy_get_parcent(270.0f, 247.5f, g_env_light.mDaytime);
        } else {
            fVar7 = 0.0f;
        }

        sunPacket->mColor.r = (f32)sun_color[2].r + fVar7 * ((f32)sun_color[1].r - (f32)sun_color[2].r);
        sunPacket->mColor.g = (f32)sun_color[2].g + fVar7 * ((f32)sun_color[1].g - (f32)sun_color[2].g);
        sunPacket->mColor.b = (f32)sun_color[2].b + fVar7 * ((f32)sun_color[1].b - (f32)sun_color[2].b);

        sunPacket->field_0x74.r = (f32)sun_color2[2].r + fVar7 * ((f32)sun_color2[1].r - (f32)sun_color2[2].r);
        sunPacket->field_0x74.g = (f32)sun_color2[2].g + fVar7 * ((f32)sun_color2[1].g - (f32)sun_color2[2].g);
        sunPacket->field_0x74.b = (f32)sun_color2[2].b + fVar7 * ((f32)sun_color2[1].b - (f32)sun_color2[2].b);
    }

    if (dKyr_moon_arrival_check()) {
        f32 fVar6 = (sunPacket->mPos[0].y - pCamera->mLookat.mEye.y) / -8000.0f;
        fVar6 *= fVar6;
        fVar6 *= 6.0f;

        if (fVar6 > 1.0f) {
            fVar6 = 1.0f;
        }

        cLib_addCalc(&sunPacket->field_0x68, fVar6, 0.2f, 0.01f, 0.001f);
    } else {
        cLib_addCalc(&sunPacket->field_0x68, 0.0f, 0.2f, 0.01f, 0.001f);
    }

    if (g_env_light.mCameraInWater == 0 && g_env_light.mDaytime > 255.0f && sunPacket->field_0x60 >= 0.2f) {
        cXyz local_d8;
        dKyr_get_vectle_calc(&pCamera->mLookat.mEye, &g_env_light.mSunPos2, &local_90);
        local_d8.x = pCamera->mLookat.mEye.x + 30160.0f * local_90.x;
        local_d8.y = pCamera->mLookat.mEye.y + 30160.0f * local_90.y;
        local_d8.z = pCamera->mLookat.mEye.z + 30160.0f * local_90.z;
        local_d8.y -= 21678.0f;
        sunPacket->field_0x58 = dComIfGp_particle_set(sunPacket->field_0x58, 0x11c, &local_d8, 0, 0);
    }
}
#else
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dKyr_sun_move() {
    nofralloc
#include "asm/d/kankyo/d_kankyo_rain/dKyr_sun_move__Fv.s"
}
#pragma pop
#endif

/* ############################################################################################## */
/* 8037A578-8037A578 006BD8 0000+00 0/0 0/0 0/0 .rodata          @stringBase0 */
#pragma push
#pragma force_active on
SECTION_DEAD static char const* const stringBase_8037A588 = "Always";
#pragma pop

/* 8005CC5C-8005CDA8 05759C 014C+00 0/0 1/1 0/0 .text            dKyr_rain_init__Fv */
// Matches with literals
#ifdef NONMATCHING
void dKyr_rain_init() {
    camera_class* pCamera = g_dComIfG_gameInfo.play.mCameraInfo[0].mCamera;
    g_env_light.mpRainPacket->mpTex = (u8*)dComIfG_getObjectRes("Always", 0x4a);
    g_env_light.mpRainPacket->mpTex2 = (u8*)dComIfG_getObjectRes("Always", 0x57);
    g_env_light.mpRainPacket->mCamEyePos = pCamera->mLookat.mEye;
    g_env_light.mpRainPacket->mCamCenterPos = pCamera->mLookat.mCenter;
    g_env_light.mpRainPacket->mCenterDeltaMul = 0.0f;
    g_env_light.mpRainPacket->field_0x3700 = 0.0f;
    g_env_light.mpRainPacket->mSibukiAlpha = 0.0f;
    g_env_light.mpRainPacket->mOverheadFade = 0.0f;
    g_env_light.mpRainPacket->mFwdFade1 = 0.0f;
    g_env_light.mpRainPacket->mFwdFade2  = 0.0f;
    g_env_light.mpRainPacket->mStatus  = 0.0f;
    g_env_light.mpRainPacket->mCenterDelta.x = 0.0f;
    g_env_light.mpRainPacket->mCenterDelta.y = 0.0f;
    g_env_light.mpRainPacket->mCenterDelta.z = 0.0f;

    for (int i = 0; i < 250; i++) {
        g_env_light.mpRainPacket->mRainEff[i].mStatus = 0;
    }
    g_env_light.mpRainPacket->mRainCount = 0;
}
#else
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dKyr_rain_init() {
    nofralloc
#include "asm/d/kankyo/d_kankyo_rain/dKyr_rain_init__Fv.s"
}
#pragma pop
#endif

/* 8005CDA8-8005CDD0 0576E8 0028+00 1/1 0/0 0/0 .text rain_bg_chk__FP19dKankyo_rain_Packeti */
static void rain_bg_chk(dKankyo_rain_Packet* i_packet, int i_idx) {
    i_packet->mRainEff[i_idx].field_0x30 = dComIfGp_getCamera(0)->mLookat.mCenter.y + -800.0f;
}

/* ############################################################################################## */
/* 8037A578-8037A578 006BD8 0000+00 0/0 0/0 0/0 .rodata          @stringBase0 */
#pragma push
#pragma force_active on
SECTION_DEAD static char const* const stringBase_8037A58F = "F_SP122";
#pragma pop

/* 8045227C-80452280 00087C 0004+00 9/9 0/0 0/0 .sdata2          @4467 */
SECTION_SDATA2 static f32 lit_4467 = 50.0f;

/* 80452280-80452284 000880 0004+00 4/4 0/0 0/0 .sdata2          @4468 */
SECTION_SDATA2 static f32 lit_4468 = 10000.0f;

/* 8005CDD0-8005CF78 057710 01A8+00 1/1 0/0 0/0 .text            overhead_bg_chk__Fv */
// matches with literals
#ifdef NONMATCHING
static bool overhead_bg_chk() {
    camera_class* camera = dComIfGp_getCamera(0);
    bool chk = false;

    dBgS_ObjGndChk_All gndchk;
    dBgS_RoofChk roofchk;

    cXyz chkPos = camera->mLookat.mEye;
    chkPos.y += 50.0f;

    roofchk.i_SetPos(chkPos);
    if (dComIfG_Bgsp().RoofChk(&roofchk) != lit_4361) {
        chk = true;
        // Outside East Castle Town
        if (!strcmp(dComIfGp_getStartStageName(), "F_SP122") &&
            dStage_roomControl_c::getStayNo() == 17) {
            return false;
        }
    }

    chkPos.y += 10000.0f;
    gndchk.SetPos(&chkPos);
    if (dComIfG_Bgsp().GroundCross(&gndchk) > camera->mLookat.mEye.y + 50.0f) {
        chk = true;
    }

    return chk;
}
#else
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void overhead_bg_chk() {
    nofralloc
#include "asm/d/kankyo/d_kankyo_rain/overhead_bg_chk__Fv.s"
}
#pragma pop
#endif

/* 8005CF78-8005D18C 0578B8 0214+00 1/1 0/0 0/0 .text            forward_overhead_bg_chk__FP4cXyzf
 */
// Matches with literals
#ifdef NONMATCHING
static int forward_overhead_bg_chk(cXyz* param_0, f32 param_1) {
    camera_class* iVar7 = dComIfGp_getCamera(0);
    u32 r30 = 0;
    dBgS_ObjGndChk_All adStack_88;
    dBgS_RoofChk adStack_d8;
    cXyz local_e8;
    cXyz local_f4;
    dKyr_get_vectle_calc(&iVar7->mLookat.mEye, &iVar7->mLookat.mCenter, &local_f4);
    local_e8.x = iVar7->mLookat.mEye.x + local_f4.x * param_1;
    local_e8.y = iVar7->mLookat.mEye.y + local_f4.y * param_1;
    local_e8.z = iVar7->mLookat.mEye.z + local_f4.z * param_1;
    local_e8.y = 50.0f + iVar7->mLookat.mEye.y;
    *param_0 = local_e8;
    adStack_d8.i_SetPos(local_e8);
    if (1000000000.0f != dComIfG_Bgsp().RoofChk(&adStack_d8)) {
        r30 = 1;
        if (strcmp(dComIfGp_getStartStageName(), "F_SP122") == 0) {
            if (dStage_roomControl_c::getStayNo() == 17) {
                return 0;
            }
        }
    }

    local_e8.y += 10000.0f;
    adStack_88.SetPos(&local_e8);

    if (dComIfG_Bgsp().GroundCross(&adStack_88) > 50.0f + iVar7->mLookat.mEye.y) {
        r30 = 1;
    }
    return r30;
}
#else
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void forward_overhead_bg_chk(cXyz* param_0, f32 param_1) {
    nofralloc
#include "asm/d/kankyo/d_kankyo_rain/forward_overhead_bg_chk__FP4cXyzf.s"
}
#pragma pop
#endif

/* ############################################################################################## */
/* 8037A578-8037A578 006BD8 0000+00 0/0 0/0 0/0 .rodata          @stringBase0 */
#pragma push
#pragma force_active on
SECTION_DEAD static char const* const stringBase_8037A597 = "R_SP30";
SECTION_DEAD static char const* const stringBase_8037A59E = "R_SP107";
SECTION_DEAD static char const* const stringBase_8037A5A6 = "R_SP127";
SECTION_DEAD static char const* const stringBase_8037A5AE = "F_SP113";
SECTION_DEAD static char const* const stringBase_8037A5B6 = "D_MN09";
#pragma pop

/* 80452284-80452288 000884 0004+00 1/1 0/0 0/0 .sdata2          @5096 */
SECTION_SDATA2 static f32 lit_5096 = -2.5f;

/* 80452288-8045228C 000888 0004+00 6/6 0/0 0/0 .sdata2          @5097 */
SECTION_SDATA2 static f32 lit_5097 = 10.0f;

/* 8045228C-80452290 00088C 0004+00 8/8 0/0 0/0 .sdata2          @5098 */
SECTION_SDATA2 static f32 lit_5098 = 20.0f;

/* 80452290-80452294 000890 0004+00 6/6 0/0 0/0 .sdata2          @5099 */
SECTION_SDATA2 static f32 lit_5099 = 15.0f;

/* 80452294-80452298 000894 0004+00 5/5 0/0 0/0 .sdata2          @5100 */
SECTION_SDATA2 static f32 lit_5100 = 700.0f;

/* 80452298-8045229C 000898 0004+00 2/2 0/0 0/0 .sdata2          @5101 */
SECTION_SDATA2 static f32 lit_5101 = 1400.0f;

/* 8045229C-804522A0 00089C 0004+00 5/5 0/0 0/0 .sdata2          @5102 */
SECTION_SDATA2 static f32 lit_5102 = 1200.0f;

/* 804522A0-804522A4 0008A0 0004+00 1/1 0/0 0/0 .sdata2          @5103 */
SECTION_SDATA2 static f32 lit_5103 = 35.5f;

/* 804522A4-804522A8 0008A4 0004+00 4/4 0/0 0/0 .sdata2          @5104 */
SECTION_SDATA2 static f32 lit_5104 = 800.0f;

/* 804522A8-804522AC 0008A8 0004+00 5/5 0/0 0/0 .sdata2          @5105 */
SECTION_SDATA2 static f32 lit_5105 = 360.0f;

/* 804522AC-804522B0 0008AC 0004+00 4/4 0/0 0/0 .sdata2          @5106 */
SECTION_SDATA2 static f32 lit_5106 = 2.0f / 25.0f;

/* 804522B0-804522B4 0008B0 0004+00 2/2 0/0 0/0 .sdata2          @5107 */
SECTION_SDATA2 static f32 lit_5107 = -2.0f;

/* 804522B4-804522B8 0008B4 0004+00 2/2 0/0 0/0 .sdata2          @5108 */
SECTION_SDATA2 static f32 lit_5108 = 850.0f;

/* 804522B8-804522BC 0008B8 0004+00 8/8 0/0 0/0 .sdata2          @5109 */
SECTION_SDATA2 static f32 lit_5109 = 40.0f;

/* 804522BC-804522C0 0008BC 0004+00 2/2 0/0 0/0 .sdata2          @5110 */
SECTION_SDATA2 static f32 lit_5110 = 550.0f;

/* 804522C0-804522C4 0008C0 0004+00 1/1 0/0 0/0 .sdata2          @5111 */
SECTION_SDATA2 static f32 lit_5111 = -2680.0f;

/* 804522C4-804522C8 0008C4 0004+00 1/1 0/0 0/0 .sdata2          @5112 */
SECTION_SDATA2 static f32 lit_5112 = 2200.0f;

/* 804522C8-804522CC 0008C8 0004+00 2/2 0/0 0/0 .sdata2          @5113 */
SECTION_SDATA2 static f32 lit_5113 = 1600.0f;

/* 804522CC-804522D0 0008CC 0004+00 1/1 0/0 0/0 .sdata2          @5114 */
SECTION_SDATA2 static f32 lit_5114 = 27453.0f;

/* 804522D0-804522D4 0008D0 0004+00 1/1 0/0 0/0 .sdata2          @5115 */
SECTION_SDATA2 static f32 lit_5115 = 8528.0f;

/* 804522D4-804522D8 0008D4 0004+00 1/1 0/0 0/0 .sdata2          @5116 */
SECTION_SDATA2 static f32 lit_5116 = 1300.0f;

/* 804522D8-804522DC 0008D8 0004+00 2/2 0/0 0/0 .sdata2          @5117 */
SECTION_SDATA2 static f32 lit_5117 = 1100.0f;

/* 804522DC-804522E0 0008DC 0004+00 5/5 0/0 0/0 .sdata2          @5118 */
SECTION_SDATA2 static f32 lit_5118 = 80.0f;

/* 804522E0-804522E4 0008E0 0004+00 6/6 0/0 0/0 .sdata2          @5119 */
SECTION_SDATA2 static f32 lit_5119 = 500.0f;

/* 804522E4-804522E8 0008E4 0004+00 1/1 0/0 0/0 .sdata2          @5120 */
SECTION_SDATA2 static f32 lit_5120 = -228.0f;

/* 804522E8-804522EC 0008E8 0004+00 1/1 0/0 0/0 .sdata2          @5121 */
SECTION_SDATA2 static f32 lit_5121 = 795.0f;

/* 804522EC-804522F0 0008EC 0004+00 4/4 0/0 0/0 .sdata2          @5122 */
SECTION_SDATA2 static f32 lit_5122 = 1500.0f;

/* 804522F0-804522F4 0008F0 0004+00 2/2 0/0 0/0 .sdata2          @5123 */
SECTION_SDATA2 static f32 lit_5123 = 5100.0f;

/* 804522F4-804522F8 0008F4 0004+00 2/2 0/0 0/0 .sdata2          @5124 */
SECTION_SDATA2 static f32 lit_5124 = -3250.0f;

/* 804522F8-804522FC 0008F8 0004+00 3/3 0/0 0/0 .sdata2          @5125 */
SECTION_SDATA2 static f32 lit_5125 = -50.0f;

/* 804522FC-80452300 0008FC 0004+00 2/2 0/0 0/0 .sdata2          @5126 */
SECTION_SDATA2 static f32 lit_5126 = -2700.0f;

/* 80452300-80452304 000900 0004+00 2/2 0/0 0/0 .sdata2          @5127 */
SECTION_SDATA2 static f32 lit_5127 = 15750.0f;

/* 80452304-80452308 000904 0004+00 1/1 0/0 0/0 .sdata2          @5128 */
SECTION_SDATA2 static f32 lit_5128 = -3680.0f;

/* 80452308-8045230C 000908 0004+00 1/1 0/0 0/0 .sdata2          @5129 */
SECTION_SDATA2 static f32 lit_5129 = -11975.0f;

/* 8045230C-80452310 00090C 0004+00 1/1 0/0 0/0 .sdata2          @5130 */
SECTION_SDATA2 static f32 lit_5130 = -10530.0f;

/* 80452310-80452314 000910 0004+00 1/1 0/0 0/0 .sdata2          @5131 */
SECTION_SDATA2 static f32 lit_5131 = 3350.0f;

/* 80452314-80452318 000914 0004+00 1/1 0/0 0/0 .sdata2          @5132 */
SECTION_SDATA2 static f32 lit_5132 = -13027.0f;

/* 80452318-8045231C 000918 0004+00 1/1 0/0 0/0 .sdata2          @5133 */
SECTION_SDATA2 static f32 lit_5133 = -11430.0f;

/* 8045231C-80452320 00091C 0004+00 1/1 0/0 0/0 .sdata2          @5134 */
SECTION_SDATA2 static f32 lit_5134 = 36900.0f;

/* 8005D18C-8005E8B0 057ACC 1724+00 0/0 1/1 0/0 .text            dKyr_rain_move__Fv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dKyr_rain_move() {
    nofralloc
#include "asm/d/kankyo/d_kankyo_rain/dKyr_rain_move__Fv.s"
}
#pragma pop

/* 8005E8B0-8005E8F8 0591F0 0048+00 1/1 0/0 0/0 .text            d_krain_cut_turn_check__Fv */
static bool d_krain_cut_turn_check() {
    daPy_py_c* player = (daPy_py_c*)dComIfGp_getPlayer(0);

    return player != NULL && (player->getCutType() == daPy_py_c::CUT_TYPE_TURN_RIGHT ||
                              player->getCutType() == daPy_py_c::CUT_TYPE_TURN_LEFT ||
                              player->getCutType() == daPy_py_c::CUT_TYPE_LARGE_TURN_LEFT ||
                              player->getCutType() == daPy_py_c::CUT_TYPE_LARGE_TURN_RIGHT);
}

/* ############################################################################################## */
/* 8037A578-8037A578 006BD8 0000+00 0/0 0/0 0/0 .rodata          @stringBase0 */
#pragma push
#pragma force_active on
SECTION_DEAD static char const* const stringBase_8037A5BD = "D_MN08";
#pragma pop

/* 80452320-80452324 000920 0004+00 1/1 0/0 0/0 .sdata2          @5716 */
SECTION_SDATA2 static f32 lit_5716 = -100000000.0f;

/* 80452324-80452328 000924 0004+00 2/2 0/0 0/0 .sdata2          @5717 */
SECTION_SDATA2 static f32 lit_5717 = 100000.0f;

/* 80452328-8045232C 000928 0004+00 1/1 0/0 0/0 .sdata2          @5718 */
SECTION_SDATA2 static f32 lit_5718 = 14.0f / 5.0f;

/* 8045232C-80452330 00092C 0004+00 1/1 0/0 0/0 .sdata2          @5719 */
SECTION_SDATA2 static f32 lit_5719 = -11.0f / 20.0f;

/* 80452330-80452334 000930 0004+00 9/9 0/0 0/0 .sdata2          @5720 */
SECTION_SDATA2 static f32 lit_5720 = 2.0f / 5.0f;

/* 80452334-80452338 000934 0004+00 6/6 0/0 0/0 .sdata2          @5721 */
SECTION_SDATA2 static f32 lit_5721 = 1.5f;

/* 80452338-8045233C 000938 0004+00 4/4 0/0 0/0 .sdata2          @5722 */
SECTION_SDATA2 static f32 lit_5722 = 65536.0f;

/* 8045233C-80452340 00093C 0004+00 5/5 0/0 0/0 .sdata2          @5723 */
SECTION_SDATA2 static f32 lit_5723 = 1000.0f;

/* 80452340-80452344 000940 0004+00 1/1 0/0 0/0 .sdata2          @5724 */
SECTION_SDATA2 static f32 lit_5724 = -100149.8984375f;

/* 80452344-80452348 000944 0004+00 1/1 0/0 0/0 .sdata2          @5725 */
SECTION_SDATA2 static f32 lit_5725 = -99999.8984375f;

/* 80452348-8045234C 000948 0004+00 2/2 0/0 0/0 .sdata2          @5726 */
SECTION_SDATA2 static f32 lit_5726 = 2.5f;

/* 8045234C-80452350 00094C 0004+00 7/7 0/0 0/0 .sdata2          @5727 */
SECTION_SDATA2 static f32 lit_5727 = 0.25f;

/* 80452350-80452354 000950 0004+00 6/6 0/0 0/0 .sdata2          @5728 */
SECTION_SDATA2 static f32 lit_5728 = 5.0f;

/* 80452354-80452358 000954 0004+00 7/7 0/0 0/0 .sdata2          @5729 */
SECTION_SDATA2 static f32 lit_5729 = 3.0f / 5.0f;

/* 80452358-8045235C 000958 0004+00 2/2 0/0 0/0 .sdata2          @5730 */
SECTION_SDATA2 static f32 lit_5730 = 3.0f;

/* 8045235C-80452360 00095C 0004+00 1/1 0/0 0/0 .sdata2          @5731 */
SECTION_SDATA2 static f32 lit_5731 = 4.5f;

/* 80452360-80452364 000960 0004+00 2/2 0/0 0/0 .sdata2          @5732 */
SECTION_SDATA2 static f32 lit_5732 = 0.75f;

/* 80452364-80452368 000964 0004+00 2/2 0/0 0/0 .sdata2          @5733 */
SECTION_SDATA2 static f32 lit_5733 = 3.0f / 100.0f;

/* 80452368-8045236C 000968 0004+00 2/2 0/0 0/0 .sdata2          @5734 */
SECTION_SDATA2 static f32 lit_5734 = 1.0f / 50.0f;

/* 8045236C-80452370 00096C 0004+00 5/5 0/0 0/0 .sdata2          @5735 */
SECTION_SDATA2 static f32 lit_5735 = 300.0f;

/* 80452370-80452374 000970 0004+00 1/1 0/0 0/0 .sdata2          @5736 */
SECTION_SDATA2 static f32 lit_5736 = 5600.0f;

/* 80452374-80452378 000974 0004+00 3/3 0/0 0/0 .sdata2          @5737 */
SECTION_SDATA2 static f32 lit_5737 = 130.0f;

/* 80452378-8045237C 000978 0004+00 7/7 0/0 0/0 .sdata2          @5738 */
SECTION_SDATA2 static f32 lit_5738 = 2.0f;

/* 8045237C-80452380 00097C 0004+00 4/4 0/0 0/0 .sdata2          @5739 */
SECTION_SDATA2 static f32 lit_5739 = 400.0f;

/* 80452380-80452384 000980 0004+00 3/3 0/0 0/0 .sdata2          @5740 */
SECTION_SDATA2 static f32 lit_5740 = 30.0f;

/* 80452384-80452388 000984 0004+00 3/3 0/0 0/0 .sdata2          @5741 */
SECTION_SDATA2 static f32 lit_5741 = 9.0f;

/* 80452388-8045238C 000988 0004+00 1/1 0/0 0/0 .sdata2          @5742 */
SECTION_SDATA2 static f32 lit_5742 = -99979.8984375f;

/* 8045238C-80452390 00098C 0004+00 1/1 0/0 0/0 .sdata2          @5743 */
SECTION_SDATA2 static f32 lit_5743 = 1050.0f;

/* 80452390-80452394 000990 0004+00 1/1 0/0 0/0 .sdata2          @5744 */
SECTION_SDATA2 static f32 lit_5744 = 3200.0f;

/* 80452394-80452398 000994 0004+00 1/1 0/0 0/0 .sdata2          @5745 */
SECTION_SDATA2 static f32 lit_5745 = 1700.0f;

/* 80452398-8045239C 000998 0004+00 1/1 0/0 0/0 .sdata2          @5746 */
SECTION_SDATA2 static f32 lit_5746 = 2800.0f;

/* 8045239C-804523A0 00099C 0004+00 1/1 0/0 0/0 .sdata2          @5747 */
SECTION_SDATA2 static f32 lit_5747 = 825.0f;

/* 804523A0-804523A4 0009A0 0004+00 3/3 0/0 0/0 .sdata2          @5748 */
SECTION_SDATA2 static f32 lit_5748 = 2000.0f;

/* 8005E8F8-8005FBDC 059238 12E4+00 0/0 1/1 0/0 .text            dKyr_housi_move__Fv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dKyr_housi_move() {
    nofralloc
#include "asm/d/kankyo/d_kankyo_rain/dKyr_housi_move__Fv.s"
}
#pragma pop

/* 8005FBDC-8005FD48 05A51C 016C+00 0/0 1/1 0/0 .text            dKyr_snow_init__Fv */
// Matches with literals
#ifdef NONMATCHING
void dKyr_snow_init() {
    camera_class* pCamera = g_dComIfG_gameInfo.play.mCameraInfo[0].mCamera;
    g_env_light.mpSnowPacket = new (32) dKankyo_snow_Packet();

    if (g_env_light.mpSnowPacket == NULL) {
        return;
    }

    g_env_light.mpSnowPacket->mpTex = (u8*)dComIfG_getObjectRes("Always", 0x56);

    for (int i = 0; i < 500; i++) {
        g_env_light.mpSnowPacket->mSnowEff[i].mStatus = 0;
    }

    g_env_light.mpSnowPacket->field_0x6d88 = 0;
    g_env_light.mpSnowPacket->field_0x6d74 = pCamera->mLookat.mEye;
    g_env_light.mpSnowPacket->field_0x6d80 = 0.0f;
    g_env_light.mpSnowPacket->field_0x6d84 = 0.0f;
    g_env_light.mpSnowPacket->field_0x6d8a = 0;
    g_env_light.mpSnowPacket->field_0x6d8c = 0;
    g_env_light.mpSnowPacket->field_0x6d90 = 0;
    g_env_light.mpSnowPacket->field_0x6d91 = 0;
    g_env_light.mpSnowPacket->field_0x6d92 = 0;
    g_env_light.mpSnowPacket->field_0x6d93 = 0;
}
#else
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dKyr_snow_init() {
    nofralloc
#include "asm/d/kankyo/d_kankyo_rain/dKyr_snow_init__Fv.s"
}
#pragma pop
#endif

/* ############################################################################################## */
/* 8037A578-8037A578 006BD8 0000+00 0/0 0/0 0/0 .rodata          @stringBase0 */
#pragma push
#pragma force_active on
SECTION_DEAD static char const* const stringBase_8037A5C4 = "F_SP127";
#pragma pop

/* 804523A4-804523A8 0009A4 0004+00 8/8 0/0 0/0 .sdata2          @6355 */
SECTION_SDATA2 static f32 lit_6355 = 100.0f;

/* 804523A8-804523AC 0009A8 0004+00 2/2 0/0 0/0 .sdata2          @6356 */
SECTION_SDATA2 static f32 lit_6356 = 6.0f / 5.0f;

/* 804523AC-804523B0 0009AC 0004+00 1/1 0/0 0/0 .sdata2          @6357 */
SECTION_SDATA2 static f32 lit_6357 = 6.5f;

/* 804523B0-804523B4 0009B0 0004+00 3/3 0/0 0/0 .sdata2          @6358 */
SECTION_SDATA2 static f32 lit_6358 = 9.0f / 20.0f;

/* 804523B4-804523B8 0009B4 0004+00 1/1 0/0 0/0 .sdata2          @6359 */
SECTION_SDATA2 static f32 lit_6359 = 53.0f / 10.0f;

/* 804523B8-804523BC 0009B8 0004+00 2/2 0/0 0/0 .sdata2          @6360 */
SECTION_SDATA2 static f32 lit_6360 = 7.0f / 20.0f;

/* 804523BC-804523C0 0009BC 0004+00 2/2 0/0 0/0 .sdata2          @6361 */
SECTION_SDATA2 static f32 lit_6361 = 3000.0f;

/* 804523C0-804523C4 0009C0 0004+00 1/1 0/0 0/0 .sdata2          @6362 */
SECTION_SDATA2 static f32 lit_6362 = 27.5f;

/* 804523C4-804523C8 0009C4 0004+00 1/1 0/0 0/0 .sdata2          @6363 */
SECTION_SDATA2 static f32 lit_6363 = 1150.0f;

/* 804523C8-804523D0 0009C8 0004+04 1/1 0/0 0/0 .sdata2          @6364 */
SECTION_SDATA2 static f32 lit_6364[1 + 1 /* padding */] = {
    55.0f,
    /* padding */
    0.0f,
};

/* 804523D0-804523D8 0009D0 0008+00 1/1 0/0 0/0 .sdata2          @6365 */
SECTION_SDATA2 static f64 lit_6365 = 1.0;

/* 804523D8-804523DC 0009D8 0004+00 1/1 0/0 0/0 .sdata2          @6366 */
SECTION_SDATA2 static f32 lit_6366 = -340.0f;

/* 804523DC-804523E0 0009DC 0004+00 1/1 0/0 0/0 .sdata2          @6367 */
SECTION_SDATA2 static f32 lit_6367 = 9800.0f;

/* 804523E0-804523E4 0009E0 0004+00 2/2 0/0 0/0 .sdata2          @6368 */
SECTION_SDATA2 static f32 lit_6368 = 19.0f / 50.0f;

/* 8005FD48-80061324 05A688 15DC+00 0/0 1/1 0/0 .text            dKyr_snow_move__Fv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dKyr_snow_move() {
    nofralloc
#include "asm/d/kankyo/d_kankyo_rain/dKyr_snow_move__Fv.s"
}
#pragma pop

/* 80061324-8006140C 05BC64 00E8+00 0/0 1/1 0/0 .text            dKyr_star_init__Fv */
// Matches without literals
#ifdef NONMATCHING
void dKyr_star_init() {
    camera_class* pCamera = g_dComIfG_gameInfo.play.mCameraInfo[0].mCamera;
    g_env_light.mpStarPacket = new (32) dKankyo_star_Packet();

    if (g_env_light.mpStarPacket == NULL) {
        return;
    }

    g_env_light.mpStarPacket->field_0x10 = (u8*)dComIfG_getObjectRes("Always", 0x4a);
    g_env_light.mpStarPacket->mEffect[0].field_0x28 = 1.0f;
    g_env_light.mpStarPacket->mEffectNum = 0;
}
#else
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dKyr_star_init() {
    nofralloc
#include "asm/d/kankyo/d_kankyo_rain/dKyr_star_init__Fv.s"
}
#pragma pop
#endif

/* 8006140C-80061438 05BD4C 002C+00 0/0 1/1 0/0 .text            dKyr_star_move__Fv */
void dKyr_star_move() {
    dKankyo_star_Packet* packet = g_env_light.mpStarPacket;
    packet->mEffectNum = g_env_light.mStarCount;

    if (packet->mEffectNum != 0) {
        packet->mEffect[0].field_0x28 = lit_4354;
    }
}

/* ############################################################################################## */
/* 8037A578-8037A578 006BD8 0000+00 0/0 0/0 0/0 .rodata          @stringBase0 */
#pragma push
#pragma force_active on
SECTION_DEAD static char const* const stringBase_8037A5CC = "D_MN05A";
#pragma pop

/* 804523E4-804523E8 0009E4 0004+00 2/2 0/0 0/0 .sdata2          @6720 */
SECTION_SDATA2 static f32 lit_6720 = 0.004999999888241291f;

/* 804523E8-804523EC 0009E8 0004+00 7/7 0/0 0/0 .sdata2          @6721 */
SECTION_SDATA2 static f32 lit_6721 = 9.999999974752427e-07f;

/* 804523EC-804523F0 0009EC 0004+00 1/1 0/0 0/0 .sdata2          @6722 */
SECTION_SDATA2 static f32 lit_6722 = -300.0f;

/* 804523F0-804523F4 0009F0 0004+00 2/2 0/0 0/0 .sdata2          @6723 */
SECTION_SDATA2 static f32 lit_6723 = 65535.0f;

/* 804523F4-804523F8 0009F4 0004+00 1/1 0/0 0/0 .sdata2          @6724 */
SECTION_SDATA2 static f32 lit_6724 = 0.027000002562999725f;

/* 804523F8-804523FC 0009F8 0004+00 1/1 0/0 0/0 .sdata2          @6725 */
SECTION_SDATA2 static f32 lit_6725 = 23.0f;

/* 804523FC-80452400 0009FC 0004+00 5/5 0/0 0/0 .sdata2          @6726 */
SECTION_SDATA2 static f32 lit_6726 = 120.0f;

/* 80452400-80452404 000A00 0004+00 1/1 0/0 0/0 .sdata2          @6727 */
SECTION_SDATA2 static f32 lit_6727 = 1540.0f;

/* 80452404-80452408 000A04 0004+00 1/1 0/0 0/0 .sdata2          @6728 */
SECTION_SDATA2 static f32 lit_6728 = 1040.0f;

/* 80452408-8045240C 000A08 0004+00 1/1 0/0 0/0 .sdata2          @6729 */
SECTION_SDATA2 static f32 lit_6729 = 44.0f;

/* 8045240C-80452410 000A0C 0004+00 1/1 0/0 0/0 .sdata2          @6730 */
SECTION_SDATA2 static f32 lit_6730 = 408.0f;

/* 80452410-80452414 000A10 0004+00 2/2 0/0 0/0 .sdata2          @6731 */
SECTION_SDATA2 static f32 lit_6731 = 3.0f / 25.0f;

/* 80452414-80452418 000A14 0004+00 1/1 0/0 0/0 .sdata2          @6732 */
SECTION_SDATA2 static f32 lit_6732 = 6.0f / 25.0f;

/* 80452418-8045241C 000A18 0004+00 1/1 0/0 0/0 .sdata2          @6733 */
SECTION_SDATA2 static f32 lit_6733 = 9.0f / 25.0f;

/* 8045241C-80452420 000A1C 0004+00 2/2 0/0 0/0 .sdata2          @6734 */
SECTION_SDATA2 static f32 lit_6734 = 9.0f / 100.0f;

/* 80452420-80452424 000A20 0004+00 1/1 0/0 0/0 .sdata2          @6735 */
SECTION_SDATA2 static f32 lit_6735 = 13.0f / 100.0f;

/* 80452424-80452428 000A24 0004+00 2/2 0/0 0/0 .sdata2          @6736 */
SECTION_SDATA2 static f32 lit_6736 = 7.0f / 10.0f;

/* 80061438-800620AC 05BD78 0C74+00 0/0 1/1 0/0 .text            cloud_shadow_move__Fv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cloud_shadow_move() {
    nofralloc
#include "asm/d/kankyo/d_kankyo_rain/cloud_shadow_move__Fv.s"
}
#pragma pop

/* ############################################################################################## */
/* 8037A578-8037A578 006BD8 0000+00 0/0 0/0 0/0 .rodata          @stringBase0 */
#pragma push
#pragma force_active on
SECTION_DEAD static char const* const stringBase_8037A5D4 = "D_MN07A";
#pragma pop

/* 80452428-8045242C 000A28 0004+00 1/1 0/0 0/0 .sdata2          @6947 */
SECTION_SDATA2 static f32 lit_6947 = 2500.0f;

/* 8045242C-80452430 000A2C 0004+00 1/1 0/0 0/0 .sdata2          @6948 */
SECTION_SDATA2 static f32 lit_6948 = 25.0f;

/* 80452430-80452438 000A30 0004+04 1/1 0/0 0/0 .sdata2          @6949 */
SECTION_SDATA2 static f32 lit_6949[1 + 1 /* padding */] = {
    18000.0f,
    /* padding */
    0.0f,
};

/* 80452438-80452440 000A38 0008+00 1/1 0/0 0/0 .sdata2          @6950 */
SECTION_SDATA2 static f64 lit_6950 = 14000.0;

/* 80452440-80452444 000A40 0004+00 1/1 0/0 0/0 .sdata2          @6951 */
SECTION_SDATA2 static f32 lit_6951 = 15000.0f;

/* 80452444-80452448 000A44 0004+00 3/3 0/0 0/0 .sdata2          @6952 */
SECTION_SDATA2 static f32 lit_6952 = 5000.0f;

/* 80452448-8045244C 000A48 0004+00 1/1 0/0 0/0 .sdata2          @6953 */
SECTION_SDATA2 static f32 lit_6953 = 15100.0f;

/* 8045244C-80452450 000A4C 0004+00 1/1 0/0 0/0 .sdata2          @6954 */
SECTION_SDATA2 static f32 lit_6954 = -7.0f / 10.0f;

/* 80452450-80452454 000A50 0004+00 1/1 0/0 0/0 .sdata2          @6955 */
SECTION_SDATA2 static f32 lit_6955 = 1.0f / 40.0f;

/* 800620AC-80062ADC 05C9EC 0A30+00 0/0 1/1 0/0 .text            vrkumo_move__Fv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void vrkumo_move() {
    nofralloc
#include "asm/d/kankyo/d_kankyo_rain/vrkumo_move__Fv.s"
}
#pragma pop

/* 80062ADC-80062B4C 05D41C 0070+00 7/7 0/0 0/0 .text            dKr_cullVtx_Set__Fv */
static void dKr_cullVtx_Set() {
    GXSetCullMode(GX_CULL_NONE);
    GXSetVtxAttrFmt(GX_VTXFMT0, GX_VA_POS, GX_CLR_RGBA, GX_F32, 0);
    GXSetVtxAttrFmt(GX_VTXFMT0, GX_VA_TEX0, GX_CLR_RGBA, GX_RGBA4, 8);
    GXClearVtxDesc();
    GXSetVtxDesc(GX_VA_POS, GX_DIRECT);
    GXSetVtxDesc(GX_VA_TEX0, GX_DIRECT);
}

/* ############################################################################################## */
/* 8037A4E8-8037A508 006B48 0020+00 1/1 0/0 0/0 .rodata          @6991 */
SECTION_RODATA static u8 const lit_6991[32] = {
    0x3F, 0x80, 0x00, 0x00, 0x3F, 0x54, 0x7A, 0xE1, 0x3F, 0x19, 0x99, 0x9A, 0x3F, 0x47, 0xAE, 0x14,
    0x3F, 0x80, 0x00, 0x00, 0x3F, 0x47, 0xAE, 0x14, 0x3F, 0x19, 0x99, 0x9A, 0x3F, 0x54, 0x7A, 0xE1,
};
COMPILER_STRIP_GATE(0x8037A4E8, &lit_6991);

/* 803A9BB8-803A9BD8 -00001 0020+00 1/1 0/0 0/0 .data            @7214 */
SECTION_DATA static void* lit_7214[8] = {
    (void*)(((char*)dKyr_draw_rev_moon__FPA4_fPPUc) + 0x150),
    (void*)(((char*)dKyr_draw_rev_moon__FPA4_fPPUc) + 0x15C),
    (void*)(((char*)dKyr_draw_rev_moon__FPA4_fPPUc) + 0x168),
    (void*)(((char*)dKyr_draw_rev_moon__FPA4_fPPUc) + 0x174),
    (void*)(((char*)dKyr_draw_rev_moon__FPA4_fPPUc) + 0x180),
    (void*)(((char*)dKyr_draw_rev_moon__FPA4_fPPUc) + 0x18C),
    (void*)(((char*)dKyr_draw_rev_moon__FPA4_fPPUc) + 0x198),
    (void*)(((char*)dKyr_draw_rev_moon__FPA4_fPPUc) + 0x1A4),
};

/* 80452454-80452458 000A54 0004+00 5/5 0/0 0/0 .sdata2          @7208 */
SECTION_SDATA2 static f32 lit_7208 = -1.0f;

/* 80452458-8045245C 000A58 0004+00 8/8 0/0 0/0 .sdata2          @7209 */
SECTION_SDATA2 static f32 lit_7209 = 45.0f;

/* 8045245C-80452460 000A5C 0004+00 2/2 0/0 0/0 .sdata2          @7210 */
SECTION_SDATA2 static f32 lit_7210 = -6.2831854820251465f;

/* 80452460-80452464 000A60 0004+00 12/12 0/0 0/0 .sdata2          @7211 */
SECTION_SDATA2 static f32 lit_7211 = 0.01745329238474369f;

/* 80452464-80452468 000A64 0004+00 2/2 0/0 0/0 .sdata2          @7212 */
SECTION_SDATA2 static f32 lit_7212 = 11000.0f;

/* 80452468-8045246C 000A68 0004+00 2/2 0/0 0/0 .sdata2          @7213 */
SECTION_SDATA2 static f32 lit_7213 = 2.3f;

/* 80062B4C-80063670 05D48C 0B24+00 2/1 0/0 0/0 .text            dKyr_draw_rev_moon__FPA4_fPPUc */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void dKyr_draw_rev_moon(f32 (*param_0)[4], u8** param_1) {
    nofralloc
#include "asm/d/kankyo/d_kankyo_rain/dKyr_draw_rev_moon__FPA4_fPPUc.s"
}
#pragma pop

/* ############################################################################################## */
/* 8037A508-8037A528 006B68 0020+00 1/1 0/0 0/0 .rodata          @7275 */
SECTION_RODATA static u8 const lit_7275[32] = {
    0x3F, 0x80, 0x00, 0x00, 0x3F, 0x54, 0x7A, 0xE1, 0x3F, 0x19, 0x99, 0x9A, 0x3F, 0x47, 0xAE, 0x14,
    0x3F, 0x80, 0x00, 0x00, 0x3F, 0x47, 0xAE, 0x14, 0x3F, 0x19, 0x99, 0x9A, 0x3F, 0x54, 0x7A, 0xE1,
};
COMPILER_STRIP_GATE(0x8037A508, &lit_7275);

/* 8037A578-8037A578 006BD8 0000+00 0/0 0/0 0/0 .rodata          @stringBase0 */
#pragma push
#pragma force_active on
SECTION_DEAD static char const* const stringBase_8037A5DC = "F_SP103";
SECTION_DEAD static char const* const stringBase_8037A5E4 = "APPEAR_HAWKER";
#pragma pop

/* 803A9BD8-803A9BF8 -00001 0020+00 1/1 0/0 0/0 .data            @7549 */
SECTION_DATA static void* lit_7549[8] = {
    (void*)(((char*)dKyr_drawSun__FPA4_fP4cXyzR8_GXColorPPUc) + 0x354),
    (void*)(((char*)dKyr_drawSun__FPA4_fP4cXyzR8_GXColorPPUc) + 0x360),
    (void*)(((char*)dKyr_drawSun__FPA4_fP4cXyzR8_GXColorPPUc) + 0x36C),
    (void*)(((char*)dKyr_drawSun__FPA4_fP4cXyzR8_GXColorPPUc) + 0x378),
    (void*)(((char*)dKyr_drawSun__FPA4_fP4cXyzR8_GXColorPPUc) + 0x384),
    (void*)(((char*)dKyr_drawSun__FPA4_fP4cXyzR8_GXColorPPUc) + 0x390),
    (void*)(((char*)dKyr_drawSun__FPA4_fP4cXyzR8_GXColorPPUc) + 0x39C),
    (void*)(((char*)dKyr_drawSun__FPA4_fP4cXyzR8_GXColorPPUc) + 0x3A8),
};

/* 8045246C-80452470 000A6C 0004+00 2/2 0/0 0/0 .sdata2          @7545 */
SECTION_SDATA2 static f32 lit_7545 = 3900.0f;

/* 80452470-80452474 000A70 0004+00 2/2 0/0 0/0 .sdata2          @7546 */
SECTION_SDATA2 static f32 lit_7546 = 8052.0f;

/* 80452474-80452478 000A74 0004+00 2/2 0/0 0/0 .sdata2          @7547 */
SECTION_SDATA2 static f32 lit_7547 = -9072.0f;

/* 80452478-8045247C 000A78 0004+00 1/1 0/0 0/0 .sdata2          @7548 */
SECTION_SDATA2 static f32 lit_7548 = 2400.0f;

/* 80063670-8006444C 05DFB0 0DDC+00 1/0 1/1 0/0 .text dKyr_drawSun__FPA4_fP4cXyzR8_GXColorPPUc */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dKyr_drawSun(f32 (*param_0)[4], cXyz* param_1, _GXColor& param_2, u8** param_3) {
    nofralloc
#include "asm/d/kankyo/d_kankyo_rain/dKyr_drawSun__FPA4_fP4cXyzR8_GXColorPPUc.s"
}
#pragma pop

/* ############################################################################################## */
/* 8037A528-8037A548 006B88 0020+00 1/1 0/0 0/0 .rodata          scale_dat$7608 */
SECTION_RODATA static u8 const scale_dat[32] = {
    0x45, 0xFA, 0x00, 0x00, 0x46, 0x24, 0x10, 0x00, 0x40, 0x4C, 0xCC, 0xCD, 0x3F, 0xE6, 0x66, 0x66,
    0x3F, 0xE6, 0x66, 0x66, 0x40, 0xC6, 0x66, 0x66, 0x3F, 0x99, 0x99, 0x9A, 0x40, 0x80, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x8037A528, &scale_dat);

/* 8037A548-8037A568 006BA8 0020+00 1/1 0/0 0/0 .rodata          col_dat$7609 */
SECTION_RODATA static u8 const col_dat[32] = {
    0xB4, 0xC8, 0xFF, 0xFF, 0xC8, 0xC8, 0xFF, 0x50, 0xFF, 0x8C, 0x78, 0x5A, 0xFF, 0xB4, 0x78, 0x64,
    0xB4, 0xB4, 0x78, 0x55, 0xB4, 0xC8, 0x64, 0x5A, 0xDC, 0xFF, 0xB4, 0x6E, 0xC8, 0xDC, 0xFF, 0x5A,
};
COMPILER_STRIP_GATE(0x8037A548, &col_dat);

/* 80450EF0-80450EF4 -00001 0004+00 1/1 0/0 0/0 .sbss            None */
/* 80450EF0 0002+00 data_80450EF0 None */
/* 80450EF2 0002+00 data_80450EF2 S_rot_work2$7557 */
static u8 struct_80450EF0[4];

/* 80450EF4-80450EF8 0003F4 0004+00 1/1 0/0 0/0 .sbss            None */
static u8 data_80450EF4[4];

/* 8045247C-80452480 000A7C 0004+00 1/1 0/0 0/0 .sdata2          @7882 */
SECTION_SDATA2 static f32 lit_7882 = 2.9f;

/* 80452480-80452484 000A80 0004+00 2/2 0/0 0/0 .sdata2          @7883 */
SECTION_SDATA2 static f32 lit_7883 = 34.0f;

/* 80452484-80452488 000A84 0004+00 1/1 0/0 0/0 .sdata2          @7884 */
SECTION_SDATA2 static f32 lit_7884 = 160.0f;

/* 80452488-8045248C 000A88 0004+00 1/1 0/0 0/0 .sdata2          @7885 */
SECTION_SDATA2 static f32 lit_7885 = 0.86f;

/* 8045248C-80452490 000A8C 0004+00 1/1 0/0 0/0 .sdata2          @7886 */
SECTION_SDATA2 static f32 lit_7886 = 2.46f;

/* 80452490-80452494 000A90 0004+00 2/2 0/0 0/0 .sdata2          @7887 */
SECTION_SDATA2 static f32 lit_7887 = 1.1f;

/* 80452494-80452498 000A94 0004+00 1/1 0/0 0/0 .sdata2          @7888 */
SECTION_SDATA2 static f32 lit_7888 = 0.04f;

/* 80452498-8045249C 000A98 0004+00 1/1 0/0 0/0 .sdata2          @7889 */
SECTION_SDATA2 static f32 lit_7889 = 0.075f;

/* 8045249C-804524A0 000A9C 0004+00 1/1 0/0 0/0 .sdata2          @7890 */
SECTION_SDATA2 static f32 lit_7890 = 0.88f;

/* 804524A0-804524A4 000AA0 0004+00 1/1 0/0 0/0 .sdata2          @7891 */
SECTION_SDATA2 static f32 lit_7891 = 30.599998474121094f;

/* 804524A4-804524A8 000AA4 0004+00 4/4 0/0 0/0 .sdata2          @7892 */
SECTION_SDATA2 static f32 lit_7892 = 140.0f;

/* 804524A8-804524AC 000AA8 0004+00 1/1 0/0 0/0 .sdata2          @7893 */
SECTION_SDATA2 static f32 lit_7893 = 0.85f;

/* 804524AC-804524B0 000AAC 0004+00 2/2 0/0 0/0 .sdata2          @7894 */
SECTION_SDATA2 static f32 lit_7894 = 60.0f;

/* 8006444C-8006562C 05ED8C 11E0+00 0/0 1/1 0/0 .text
 * dKyr_drawLenzflare__FPA4_fP4cXyzR8_GXColorPPUc               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dKyr_drawLenzflare(f32 (*param_0)[4], cXyz* param_1, _GXColor& param_2, u8** param_3) {
    nofralloc
#include "asm/d/kankyo/d_kankyo_rain/dKyr_drawLenzflare__FPA4_fP4cXyzR8_GXColorPPUc.s"
}
#pragma pop

/* ############################################################################################## */
/* 80424950-8042495C 051670 000C+00 3/3 0/0 0/0 .bss             @7952 */
static u8 lit_7952[12];

/* 8042495C-80424968 05167C 000C+00 0/1 0/0 0/0 .bss             @7955 */
#pragma push
#pragma force_active on
static u8 lit_7955[12];
#pragma pop

/* 80424968-80424974 051688 000C+00 0/1 0/0 0/0 .bss             @7956 */
#pragma push
#pragma force_active on
static u8 lit_7956[12];
#pragma pop

/* 80424974-80424980 051694 000C+00 0/1 0/0 0/0 .bss             @7957 */
#pragma push
#pragma force_active on
static u8 lit_7957[12];
#pragma pop

/* 80424980-804249B0 0516A0 0030+00 0/1 0/0 0/0 .bss             add_table$7951 */
#pragma push
#pragma force_active on
static u8 add_table_7951[48];
#pragma pop

/* 80450EF8-80450EFC 0003F8 0004+00 1/1 0/0 0/0 .sbss            rot$7919 */
static u8 rot_7919[4];

/* 80450EFC-80450F00 -00001 0004+00 1/1 0/0 0/0 .sbss            None */
/* 80450EFC 0001+00 data_80450EFC None */
/* 80450EFD 0003+00 data_80450EFD None */
static u8 struct_80450EFC[4];

/* 804524B0-804524B4 000AB0 0004+00 2/2 0/0 0/0 .sdata2          @8211 */
SECTION_SDATA2 static f32 lit_8211 = 70.0f;

/* 804524B4-804524B8 000AB4 0004+00 1/1 0/0 0/0 .sdata2          @8212 */
SECTION_SDATA2 static f32 lit_8212 = -1.5f;

/* 804524B8-804524BC 000AB8 0004+00 5/5 0/0 0/0 .sdata2          @8213 */
SECTION_SDATA2 static f32 lit_8213 = 150.0f;

/* 804524BC-804524C0 000ABC 0004+00 1/1 0/0 0/0 .sdata2          @8214 */
SECTION_SDATA2 static f32 lit_8214 = 320.0f;

/* 804524C0-804524C4 000AC0 0004+00 1/1 0/0 0/0 .sdata2          @8215 */
SECTION_SDATA2 static f32 lit_8215 = 480.0f;

/* 8006562C-80066048 05FF6C 0A1C+00 0/0 1/1 0/0 .text            dKyr_drawRain__FPA4_fPPUc */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dKyr_drawRain(f32 (*param_0)[4], u8** param_1) {
    nofralloc
#include "asm/d/kankyo/d_kankyo_rain/dKyr_drawRain__FPA4_fPPUc.s"
}
#pragma pop

/* ############################################################################################## */
/* 804524C4-804524C8 000AC4 0004+00 1/1 0/0 0/0 .sdata2          @8360 */
SECTION_SDATA2 static f32 lit_8360 = 7000.0f;

/* 804524C8-804524CC 000AC8 0004+00 1/1 0/0 0/0 .sdata2          @8361 */
SECTION_SDATA2 static f32 lit_8361 = 3600.0f;

/* 80066048-8006653C 060988 04F4+00 0/0 1/1 0/0 .text            dKyr_drawSibuki__FPA4_fPPUc */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dKyr_drawSibuki(f32 (*param_0)[4], u8** param_1) {
    nofralloc
#include "asm/d/kankyo/d_kankyo_rain/dKyr_drawSibuki__FPA4_fPPUc.s"
}
#pragma pop

/* ############################################################################################## */
/* 8037A578-8037A578 006BD8 0000+00 0/0 0/0 0/0 .rodata          @stringBase0 */
#pragma push
#pragma force_active on
SECTION_DEAD static char const* const stringBase_8037A5F2 = "F_NW01";
#pragma pop

/* 80450F00-80450F04 000400 0004+00 1/1 0/0 0/0 .sbss            rot$8366 */
static f32 rot_8366;

/* 80450F04-80450F08 000404 0004+00 1/1 0/0 0/0 .sbss            None */
static u8 data_80450F04[4];

/* 804524CC-804524D0 000ACC 0004+00 1/1 0/0 0/0 .sdata2          @8393 */
SECTION_SDATA2 static u32 lit_8393 = 0x323232FF;

/* 804524D0-804524D4 000AD0 0004+00 1/1 0/0 0/0 .sdata2          @8394 */
SECTION_SDATA2 static u32 lit_8394 = 0xFFD7F0FF;

/* 804524D4-804524D8 000AD4 0004+00 1/1 0/0 0/0 .sdata2          @8917 */
SECTION_SDATA2 static f32 lit_8917 = 18.0f;

/* 804524D8-804524DC 000AD8 0004+00 1/1 0/0 0/0 .sdata2          @8918 */
SECTION_SDATA2 static f32 lit_8918 = -0.5f;

/* 804524DC-804524E0 000ADC 0004+00 1/1 0/0 0/0 .sdata2          @8919 */
SECTION_SDATA2 static f32 lit_8919 = 123.0f;

/* 804524E0-804524E4 000AE0 0004+00 1/1 0/0 0/0 .sdata2          @8920 */
SECTION_SDATA2 static f32 lit_8920 = 8.0f;

/* 804524E4-804524E8 000AE4 0004+00 1/1 0/0 0/0 .sdata2          @8921 */
SECTION_SDATA2 static f32 lit_8921 = -0.9f;

/* 804524E8-804524EC 000AE8 0004+00 1/1 0/0 0/0 .sdata2          @8922 */
SECTION_SDATA2 static f32 lit_8922 = 213.0f;

/* 804524EC-804524F0 000AEC 0004+00 1/1 0/0 0/0 .sdata2          @8923 */
SECTION_SDATA2 static f32 lit_8923 = 685.0f;

/* 804524F0-804524F4 000AF0 0004+00 1/1 0/0 0/0 .sdata2          @8924 */
SECTION_SDATA2 static f32 lit_8924 = 483.0f;

/* 804524F4-804524F8 000AF4 0004+00 1/1 0/0 0/0 .sdata2          @8925 */
SECTION_SDATA2 static f32 lit_8925 = 32765.0f;

/* 804524F8-804524FC 000AF8 0004+00 1/1 0/0 0/0 .sdata2          @8926 */
SECTION_SDATA2 static f32 lit_8926 = -16384.0f;

/* 804524FC-80452500 000AFC 0004+00 1/1 0/0 0/0 .sdata2          @8927 */
SECTION_SDATA2 static f32 lit_8927 = 16384.0f;

/* 8006653C-80067488 060E7C 0F4C+00 0/0 1/1 0/0 .text            dKyr_drawHousi__FPA4_fPPUc */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dKyr_drawHousi(f32 (*param_0)[4], u8** param_1) {
    nofralloc
#include "asm/d/kankyo/d_kankyo_rain/dKyr_drawHousi__FPA4_fPPUc.s"
}
#pragma pop

/* ############################################################################################## */
/* 8037A578-8037A578 006BD8 0000+00 0/0 0/0 0/0 .rodata          @stringBase0 */
#pragma push
#pragma force_active on
SECTION_DEAD static char const* const stringBase_8037A5F9 = "D_MN11";
#pragma pop

/* 804249B0-804249BC 0516D0 000C+00 0/1 0/0 0/0 .bss             @8942 */
#pragma push
#pragma force_active on
static u8 lit_8942[12];
#pragma pop

/* 804249BC-804249C8 0516DC 000C+00 0/1 0/0 0/0 .bss             @8945 */
#pragma push
#pragma force_active on
static u8 lit_8945[12];
#pragma pop

/* 804249C8-804249D4 0516E8 000C+00 0/1 0/0 0/0 .bss             @8946 */
#pragma push
#pragma force_active on
static u8 lit_8946[12];
#pragma pop

/* 804249D4-804249E0 0516F4 000C+00 0/1 0/0 0/0 .bss             @8947 */
#pragma push
#pragma force_active on
static u8 lit_8947[12];
#pragma pop

/* 804249E0-80424A10 051700 0030+00 0/1 0/0 0/0 .bss             add_table$8941 */
#pragma push
#pragma force_active on
static u8 add_table_8941[48];
#pragma pop

/* 80450F08-80450F0C 000408 0004+00 1/1 0/0 0/0 .sbss            rot$8936 */
static f32 rot_8936;

/* 80450F0C-80450F10 -00001 0004+00 1/1 0/0 0/0 .sbss            None */
/* 80450F0C 0001+00 data_80450F0C None */
/* 80450F0D 0003+00 data_80450F0D None */
static u8 struct_80450F0C[4];

/* 80450F10-80450F14 000410 0004+00 1/1 0/0 0/0 .sbss            S_fubuki_ratio$8948 */
static f32 S_fubuki_ratio;

/* 80450F14-80450F18 000414 0004+00 1/1 0/0 0/0 .sbss            None */
static u8 data_80450F14[4];

/* 80452500-80452504 000B00 0004+00 1/1 0/0 0/0 .sdata2          @8939 */
SECTION_SDATA2 static u32 lit_8939 = 0xFFFFFFFF;

/* 80452504-80452508 000B04 0004+00 1/1 0/0 0/0 .sdata2          @8940 */
SECTION_SDATA2 static u32 lit_8940 = 0xFFFFFFFF;

/* 80452508-8045250C 000B08 0004+00 1/1 0/0 0/0 .sdata2          @9384 */
SECTION_SDATA2 static f32 lit_9384 = -20.0f;

/* 8045250C-80452510 000B0C 0004+00 1/1 0/0 0/0 .sdata2          @9385 */
SECTION_SDATA2 static f32 lit_9385 = 178.5f;

/* 80452510-80452514 000B10 0004+00 1/1 0/0 0/0 .sdata2          @9386 */
SECTION_SDATA2 static f32 lit_9386 = 127.5f;

/* 80452514-80452518 000B14 0004+00 3/3 0/0 0/0 .sdata2          @9387 */
SECTION_SDATA2 static f32 lit_9387 = 719.0f;

/* 80452518-8045251C 000B18 0004+00 1/1 0/0 0/0 .sdata2          @9388 */
SECTION_SDATA2 static f32 lit_9388 = 220.0f;

/* 8045251C-80452520 000B1C 0004+00 1/1 0/0 0/0 .sdata2          @9389 */
SECTION_SDATA2 static f32 lit_9389 = 2079.0f;

/* 80452520-80452524 000B20 0004+00 1/1 0/0 0/0 .sdata2          @9390 */
SECTION_SDATA2 static f32 lit_9390 = 3013.0f;

/* 80452524-80452528 000B24 0004+00 1/1 0/0 0/0 .sdata2          @9391 */
SECTION_SDATA2 static f32 lit_9391 = 864.0f;

/* 80452528-8045252C 000B28 0004+00 1/1 0/0 0/0 .sdata2          @9392 */
SECTION_SDATA2 static f32 lit_9392 = -6000.0f;

/* 8045252C-80452530 000B2C 0004+00 1/1 0/0 0/0 .sdata2          @9393 */
SECTION_SDATA2 static f32 lit_9393 = -4145.0f;

/* 80452530-80452534 000B30 0004+00 1/1 0/0 0/0 .sdata2          @9394 */
SECTION_SDATA2 static f32 lit_9394 = -2960.0f;

/* 80452534-80452538 000B34 0004+00 1/1 0/0 0/0 .sdata2          @9395 */
SECTION_SDATA2 static f32 lit_9395 = -880.0f;

/* 80452538-8045253C 000B38 0004+00 1/1 0/0 0/0 .sdata2          @9396 */
SECTION_SDATA2 static f32 lit_9396 = -4920.0f;

/* 8045253C-80452540 000B3C 0004+00 1/1 0/0 0/0 .sdata2          @9397 */
SECTION_SDATA2 static f32 lit_9397 = -2000.0f;

/* 80452540-80452544 000B40 0004+00 1/1 0/0 0/0 .sdata2          @9398 */
SECTION_SDATA2 static f32 lit_9398 = 4.0f;

/* 80452544-80452548 000B44 0004+00 1/1 0/0 0/0 .sdata2          @9399 */
SECTION_SDATA2 static f32 lit_9399 = 14.0f;

/* 80452548-8045254C 000B48 0004+00 1/1 0/0 0/0 .sdata2          @9400 */
SECTION_SDATA2 static f32 lit_9400 = -24.0f;

/* 8045254C-80452550 000B4C 0004+00 1/1 0/0 0/0 .sdata2          @9401 */
SECTION_SDATA2 static f32 lit_9401 = 952.0f;

/* 80452550-80452554 000B50 0004+00 1/1 0/0 0/0 .sdata2          @9402 */
SECTION_SDATA2 static f32 lit_9402 = -52.0f;

/* 80067488-800685DC 061DC8 1154+00 0/0 1/1 0/0 .text            dKyr_drawSnow__FPA4_fPPUc */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dKyr_drawSnow(f32 (*param_0)[4], u8** param_1) {
    nofralloc
#include "asm/d/kankyo/d_kankyo_rain/dKyr_drawSnow__FPA4_fPPUc.s"
}
#pragma pop

/* ############################################################################################## */
/* 8037A568-8037A578 006BC8 0010+00 1/1 0/0 0/0 .rodata          star_col$9440 */
SECTION_RODATA static u8 const star_col[16] = {
    0xFF, 0xBE, 0xC8, 0xA0, 0xC8, 0xFF, 0xBE, 0x78, 0xC8, 0xBE, 0xFF, 0x50, 0xFF, 0xFF, 0xFF, 0xC8,
};
COMPILER_STRIP_GATE(0x8037A568, &star_col);

/* 80424A10-80424A1C 051730 000C+00 0/1 0/0 0/0 .bss             @9425 */
#pragma push
#pragma force_active on
static u8 lit_9425[12];
#pragma pop

/* 80424A1C-80424A28 05173C 000C+00 0/1 0/0 0/0 .bss             @9428 */
#pragma push
#pragma force_active on
static u8 lit_9428[12];
#pragma pop

/* 80424A28-80424A34 051748 000C+00 0/1 0/0 0/0 .bss             @9429 */
#pragma push
#pragma force_active on
static u8 lit_9429[12];
#pragma pop

/* 80424A34-80424A40 051754 000C+00 0/1 0/0 0/0 .bss             @9430 */
#pragma push
#pragma force_active on
static u8 lit_9430[12];
#pragma pop

/* 80424A40-80424A4C 051760 000C+00 0/1 0/0 0/0 .bss             @9431 */
#pragma push
#pragma force_active on
static u8 lit_9431[12];
#pragma pop

/* 80424A4C-80424A58 05176C 000C+00 0/1 0/0 0/0 .bss             @9432 */
#pragma push
#pragma force_active on
static u8 lit_9432[12];
#pragma pop

/* 80424A58-80424A64 051778 000C+00 0/1 0/0 0/0 .bss             @9433 */
#pragma push
#pragma force_active on
static u8 lit_9433[12];
#pragma pop

/* 80424A64-80424A70 051784 000C+00 0/1 0/0 0/0 .bss             @9434 */
#pragma push
#pragma force_active on
static u8 lit_9434[12];
#pragma pop

/* 80424A70-80424A7C 051790 000C+00 0/1 0/0 0/0 .bss             @9435 */
#pragma push
#pragma force_active on
static u8 lit_9435[12];
#pragma pop

/* 80424A7C-80424A88 05179C 000C+00 0/1 0/0 0/0 .bss             @9436 */
#pragma push
#pragma force_active on
static u8 lit_9436[12];
#pragma pop

/* 80424A88-80424A94 0517A8 000C+00 0/1 0/0 0/0 .bss             @9437 */
#pragma push
#pragma force_active on
static u8 lit_9437[12];
#pragma pop

/* 80424A94-80424AA0 0517B4 000C+00 0/1 0/0 0/0 .bss             @9438 */
#pragma push
#pragma force_active on
static u8 lit_9438[12];
#pragma pop

/* 80424AA0-80424AAC 0517C0 000C+00 0/1 0/0 0/0 .bss             @9439 */
#pragma push
#pragma force_active on
static u8 lit_9439[12];
#pragma pop

/* 80424AAC-80424B00 0517CC 004E+06 0/1 0/0 0/0 .bss             hokuto_position$9424 */
#pragma push
#pragma force_active on
static u8 hokuto_position[78 + 6 /* padding */];
#pragma pop

/* 80450F18-80450F1C 000418 0004+00 1/1 0/0 0/0 .sbss            rot$9421 */
static f32 rot_9421;

/* 80450F1C-80450F20 -00001 0004+00 1/1 0/0 0/0 .sbss            None */
/* 80450F1C 0001+00 data_80450F1C None */
/* 80450F1D 0003+00 data_80450F1D None */
static u8 struct_80450F1C[4];

/* 80452554-80452558 000B54 0004+00 2/2 0/0 0/0 .sdata2          @9833 */
SECTION_SDATA2 static f32 lit_9833 = 0.65f;

/* 80452558-8045255C 000B58 0004+00 1/1 0/0 0/0 .sdata2          @9834 */
SECTION_SDATA2 static f32 lit_9834 = 0.28f;

/* 8045255C-80452560 000B5C 0004+00 1/1 0/0 0/0 .sdata2          @9835 */
SECTION_SDATA2 static f32 lit_9835 = 540.0f;

/* 80452560-80452564 000B60 0004+00 1/1 0/0 0/0 .sdata2          @9836 */
SECTION_SDATA2 static f32 lit_9836 = 0.03125f;

/* 80452564-80452568 000B64 0004+00 1/1 0/0 0/0 .sdata2          @9837 */
SECTION_SDATA2 static f32 lit_9837 = 0.004950494971126318f;

/* 800685DC-8006950C 062F1C 0F30+00 0/0 1/1 0/0 .text            dKyr_drawStar__FPA4_fPPUc */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dKyr_drawStar(f32 (*param_0)[4], u8** param_1) {
    nofralloc
#include "asm/d/kankyo/d_kankyo_rain/dKyr_drawStar__FPA4_fPPUc.s"
}
#pragma pop

/* ############################################################################################## */
/* 80450F20-80450F24 000420 0004+00 1/1 0/0 0/0 .sbss            rot$9847 */
static f32 rot_9847;

/* 80450F24-80450F28 000424 0004+00 1/1 0/0 0/0 .sbss            None */
static u8 data_80450F24[4];

/* 80452568-8045256C 000B68 0004+00 1/1 0/0 0/0 .sdata2          @9850 */
SECTION_SDATA2 static u32 lit_9850 = 0xFFFFFFFF;

/* 8045256C-80452570 000B6C 0004+00 1/1 0/0 0/0 .sdata2          @9851 */
SECTION_SDATA2 static u32 lit_9851 = 0xFFFFFFFF;

/* 80452570-80452574 000B70 0004+00 1/1 0/0 0/0 .sdata2          @9852 */
SECTION_SDATA2 static u32 lit_9852 = 0xFFFFFFFF;

/* 80452574-80452578 000B74 0004+00 2/2 0/0 0/0 .sdata2          @10030 */
SECTION_SDATA2 static f32 lit_10030 = 0.55f;

/* 80452578-8045257C 000B78 0004+00 2/2 0/0 0/0 .sdata2          @10031 */
SECTION_SDATA2 static f32 lit_10031 = 0.49f;

/* 8006950C-8006A090 063E4C 0B84+00 0/0 1/1 0/0 .text            drawCloudShadow__FPA4_fPPUc */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void drawCloudShadow(f32 (*param_0)[4], u8** param_1) {
    nofralloc
#include "asm/d/kankyo/d_kankyo_rain/drawCloudShadow__FPA4_fPPUc.s"
}
#pragma pop

/* ############################################################################################## */
/* 8037A578-8037A578 006BD8 0000+00 0/0 0/0 0/0 .rodata          @stringBase0 */
#pragma push
#pragma force_active on
SECTION_DEAD static char const* const stringBase_8037A600 = "D_MN07";
#pragma pop

/* 80450F28-80450F2C 000428 0004+00 1/1 0/0 0/0 .sbss            howa_loop_cnt$10108 */
static f32 howa_loop_cnt;

/* 80450F2C-80450F30 00042C 0004+00 1/1 0/0 0/0 .sbss            None */
static u8 data_80450F2C[4];

/* 8045257C-80452580 000B7C 0004+00 1/1 0/0 0/0 .sdata2          @10593 */
SECTION_SDATA2 static f32 lit_10593 = 240.0f;

/* 80452580-80452584 000B80 0004+00 1/1 0/0 0/0 .sdata2          @10594 */
SECTION_SDATA2 static f32 lit_10594 = 0.0000000001;

/* 80452584-80452588 000B84 0004+00 1/1 0/0 0/0 .sdata2          @10595 */
SECTION_SDATA2 static f32 lit_10595 = 0.0625f;

/* 80452588-8045258C 000B88 0004+00 1/1 0/0 0/0 .sdata2          @10596 */
SECTION_SDATA2 static f32 lit_10596 = 0.84f;

/* 8045258C-80452590 000B8C 0004+00 1/1 0/0 0/0 .sdata2          @10597 */
SECTION_SDATA2 static f32 lit_10597 = 0.92f;

/* 80452590-80452594 000B90 0004+00 1/1 0/0 0/0 .sdata2          @10598 */
SECTION_SDATA2 static f32 lit_10598 = 1.9f;

/* 80452594-80452598 000B94 0004+00 1/1 0/0 0/0 .sdata2          @10599 */
SECTION_SDATA2 static f32 lit_10599 = 16.0f;

/* 80452598-8045259C 000B98 0004+00 2/2 0/0 0/0 .sdata2          @10600 */
SECTION_SDATA2 static f32 lit_10600 = 0.9f;

/* 8045259C-804525A0 000B9C 0004+00 1/1 0/0 0/0 .sdata2          @10601 */
SECTION_SDATA2 static f32 lit_10601 = -4.0f;

/* 804525A0-804525A4 000BA0 0004+00 1/1 0/0 0/0 .sdata2          @10602 */
SECTION_SDATA2 static f32 lit_10602 = 1.21f;

/* 804525A4-804525A8 000BA4 0004+00 1/1 0/0 0/0 .sdata2          @10603 */
SECTION_SDATA2 static f32 lit_10603 = 708.0f;

/* 804525A8-804525AC 000BA8 0004+00 1/1 0/0 0/0 .sdata2          @10604 */
SECTION_SDATA2 static f32 lit_10604 = 558.0f;

/* 8006A090-8006B190 0649D0 1100+00 0/0 1/1 0/0 .text            drawVrkumo__FPA4_fR8_GXColorPPUc */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void drawVrkumo(f32 (*param_0)[4], _GXColor& param_1, u8** param_2) {
    nofralloc
#include "asm/d/kankyo/d_kankyo_rain/drawVrkumo__FPA4_fR8_GXColorPPUc.s"
}
#pragma pop

/* 8006B190-8006B1A8 065AD0 0018+00 0/0 1/1 0/0 .text            dKyr_thunder_init__Fv */
void dKyr_thunder_init() {
    g_env_light.mThunderEff.mStateTimer = 0;
    g_env_light.mThunderEff.field_0x2 = 0;
}

/* ############################################################################################## */
/* 8037A578-8037A578 006BD8 0000+00 0/0 0/0 0/0 .rodata          @stringBase0 */
#pragma push
#pragma force_active on
SECTION_DEAD static char const* const stringBase_8037A607 = "R_SP";
#pragma pop

/* 804525AC-804525B0 000BAC 0004+00 1/1 0/0 0/0 .sdata2          @10732 */
SECTION_SDATA2 static f32 lit_10732 = 90000.0f;

/* 804525B0-804525B4 000BB0 0004+00 1/1 0/0 0/0 .sdata2          @10733 */
SECTION_SDATA2 static f32 lit_10733 = 0.007000000216066837f;

/* 804525B4-804525B8 000BB4 0004+00 1/1 0/0 0/0 .sdata2          @10734 */
SECTION_SDATA2 static f32 lit_10734 = 195520.0f;

/* 804525B8-804525BC 000BB8 0004+00 1/1 0/0 0/0 .sdata2          @10735 */
SECTION_SDATA2 static f32 lit_10735 = 4818.0f;

/* 804525BC-804525C0 000BBC 0004+00 1/1 0/0 0/0 .sdata2          @10736 */
SECTION_SDATA2 static f32 lit_10736 = 1385.0f;

/* 804525C0-804525C4 000BC0 0004+00 1/1 0/0 0/0 .sdata2          @10737 */
SECTION_SDATA2 static f32 lit_10737 = 75.0f;

/* 804525C4-804525C8 000BC4 0004+00 1/1 0/0 0/0 .sdata2          @10738 */
SECTION_SDATA2 static f32 lit_10738 = -48.0f;

/* 804525C8-804525CC 000BC8 0004+00 1/1 0/0 0/0 .sdata2          @10739 */
SECTION_SDATA2 static f32 lit_10739 = 3.0f / 20.0f;

/* 8006B1A8-8006B8DC 065AE8 0734+00 0/0 1/1 0/0 .text            dKyr_thunder_move__Fv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dKyr_thunder_move() {
    nofralloc
#include "asm/d/kankyo/d_kankyo_rain/dKyr_thunder_move__Fv.s"
}
#pragma pop

/* 8006B8DC-8006B8E0 06621C 0004+00 0/0 1/1 0/0 .text            dKyr_shstar_init__Fv */
void dKyr_shstar_init() {
    /* empty function */
}

/* 8006B8E0-8006B8E4 066220 0004+00 0/0 1/1 0/0 .text            dKyr_shstar_move__Fv */
void dKyr_shstar_move() {
    /* empty function */
}

/* 8006B8E4-8006B924 066224 0040+00 0/0 1/1 0/0 .text            dKyr_odour_init__Fv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dKyr_odour_init() {
    nofralloc
#include "asm/d/kankyo/d_kankyo_rain/dKyr_odour_init__Fv.s"
}
#pragma pop

/* ############################################################################################## */
/* 804525CC-804525D0 000BCC 0004+00 1/1 0/0 0/0 .sdata2          @10872 */
SECTION_SDATA2 static f32 lit_10872 = 78.0f;

/* 804525D0-804525D4 000BD0 0004+00 1/1 0/0 0/0 .sdata2          @10873 */
SECTION_SDATA2 static f32 lit_10873 = 3.0f / 50.0f;

/* 8006B924-8006BE0C 066264 04E8+00 0/0 1/1 0/0 .text            dKyr_odour_move__Fv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dKyr_odour_move() {
    nofralloc
#include "asm/d/kankyo/d_kankyo_rain/dKyr_odour_move__Fv.s"
}
#pragma pop

/* ############################################################################################## */
/* 80450F30-80450F34 000430 0004+00 1/1 0/0 0/0 .sbss            rot$10882 */
static f32 rot_10882;

/* 80450F34-80450F38 000434 0004+00 1/1 0/0 0/0 .sbss            None */
static u8 data_80450F34[4];

/* 8006BE0C-8006C790 06674C 0984+00 0/0 1/1 0/0 .text            dKyr_odour_draw__FPA4_fPPUc */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dKyr_odour_draw(f32 (*param_0)[4], u8** param_1) {
    nofralloc
#include "asm/d/kankyo/d_kankyo_rain/dKyr_odour_draw__FPA4_fPPUc.s"
}
#pragma pop

/* 8006C790-8006C85C 0670D0 00CC+00 0/0 1/1 0/0 .text            dKyr_mud_init__Fv */
// matches with literals
#ifdef NONMATCHING
void dKyr_mud_init() {
    dScnKy_env_light_c* light = i_dKy_getEnvlight();
    light->mpMudPacket->mpMoyaRes = (u8*)dComIfG_getObjectRes("Always", 0x53);

    for (int i = 0; i < 100; i++) {
        light->mpMudPacket->mEffect[i].mStatus = 0;
    }

    light->mpMudPacket->mEffectNum = 0;

    if (!dComIfGs_isStageBossEnemy()) {
        light->mpMudPacket->field_0x1c3c = 1.0f;
    } else {
        light->mpMudPacket->field_0x1c3c = 0.0f;
    }
}
#else
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dKyr_mud_init() {
    nofralloc
#include "asm/d/kankyo/d_kankyo_rain/dKyr_mud_init__Fv.s"
}
#pragma pop
#endif

/* ############################################################################################## */
/* 804525D4-804525D8 000BD4 0004+00 1/1 0/0 0/0 .sdata2          @11302 */
SECTION_SDATA2 static f32 lit_11302 = 770.0f;

/* 8006C85C-8006D01C 06719C 07C0+00 0/0 1/1 0/0 .text            dKyr_mud_move__Fv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dKyr_mud_move() {
    nofralloc
#include "asm/d/kankyo/d_kankyo_rain/dKyr_mud_move__Fv.s"
}
#pragma pop

/* ############################################################################################## */
/* 80450F38-80450F3C 000438 0004+00 1/1 0/0 0/0 .sbss            rot$11307 */
static f32 rot_11307;

/* 80450F3C-80450F40 00043C 0004+00 1/1 0/0 0/0 .sbss            None */
static u8 data_80450F3C[4];

/* 804525D8-804525DC 000BD8 0004+00 1/1 0/0 0/0 .sdata2          @11508 */
SECTION_SDATA2 static f32 lit_11508 = 13.0f / 10.0f;

/* 804525DC-804525E0 000BDC 0004+00 1/1 0/0 0/0 .sdata2          @11509 */
SECTION_SDATA2 static f32 lit_11509 = 12.0f;

/* 8006D01C-8006D914 06795C 08F8+00 0/0 1/1 0/0 .text            dKyr_mud_draw__FPA4_fPPUc */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dKyr_mud_draw(f32 (*param_0)[4], u8** param_1) {
    nofralloc
#include "asm/d/kankyo/d_kankyo_rain/dKyr_mud_draw__FPA4_fPPUc.s"
}
#pragma pop

/* 8006D914-8006DA04 068254 00F0+00 0/0 1/1 1/1 .text            dKyr_evil_init__Fv */
void dKyr_evil_init() {
    if (g_env_light.mpEvilPacket != NULL) {
        g_env_light.mpEvilPacket->mpMoyaRes = (u8*)dComIfG_getObjectRes("Always", 0x53);
        g_env_light.mpEvilPacket->mpKumoLightRes = (u8*)dComIfG_getStageRes("F_kumolight_01.bti");

        if (g_env_light.mpEvilPacket->mpKumoLightRes == NULL) {
            g_env_light.mpEvilPacket->mpKumoLightRes = (u8*)dComIfG_getObjectRes("Always", 0x53);
        }

        for (int i = 0; i < 2000; i++) {
            g_env_light.mpEvilPacket->mEffect[i].mStatus = 0;
        }

        g_env_light.mpEvilPacket->mEffectNum = 0;
    }
}

/* 8006DA04-8006DA7C 068344 0078+00 0/0 1/1 0/0 .text            dKyr_evil_move__Fv */
void dKyr_evil_move() {
    dKankyo_evil_Packet* packet = g_env_light.mpEvilPacket;
    cXyz vec = dKyw_get_wind_vecpow();

    dBgS_GndChk gndchk;
    for (int i = 0; i < packet->mEffectNum; i++) {
    }
}

/* ############################################################################################## */
/* 80450F40-80450F44 000440 0004+00 1/1 0/0 0/0 .sbss            rot$11586 */
static f32 rot_11586;

/* 80450F44-80450F48 000444 0004+00 1/1 0/0 0/0 .sbss            None */
static u8 data_80450F44[4];

/* 804525E0-804525E4 000BE0 0004+00 1/1 0/0 0/0 .sdata2          @11882 */
SECTION_SDATA2 static f32 lit_11882 = -5000.0f;

/* 804525E4-804525E8 000BE4 0004+00 2/2 0/0 0/0 .sdata2          @11883 */
SECTION_SDATA2 static f32 lit_11883 = 9000.0f;

/* 804525E8-804525EC 000BE8 0004+00 2/2 0/0 0/0 .sdata2          @11884 */
SECTION_SDATA2 static f32 lit_11884 = 688.0f;

/* 804525EC-804525F0 000BEC 0004+00 2/2 0/0 0/0 .sdata2          @11885 */
SECTION_SDATA2 static f32 lit_11885 = 538.0f;

/* 804525F0-804525F4 000BF0 0004+00 1/1 0/0 0/0 .sdata2          @11886 */
SECTION_SDATA2 static f32 lit_11886 = 159.0f;

/* 804525F4-804525F8 000BF4 0004+00 1/1 0/0 0/0 .sdata2          @11887 */
SECTION_SDATA2 static f32 lit_11887 = 135.0f;

/* 8006DA7C-8006E448 0683BC 09CC+00 1/1 0/0 0/0 .text            dKyr_evil_draw2__FPA4_fPPUc */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void dKyr_evil_draw2(f32 (*param_0)[4], u8** param_1) {
    nofralloc
#include "asm/d/kankyo/d_kankyo_rain/dKyr_evil_draw2__FPA4_fPPUc.s"
}
#pragma pop

/* ############################################################################################## */
/* 804525F8-804525FC 000BF8 0004+00 1/1 0/0 0/0 .sdata2          @11953 */
SECTION_SDATA2 static f32 lit_11953 = 10000000.0f;

/* 8006E448-8006E6B0 068D88 0268+00 1/1 0/0 0/0 .text            dKyr_near_bosslight_check__F4cXyz
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void dKyr_near_bosslight_check(cXyz param_0) {
    nofralloc
#include "asm/d/kankyo/d_kankyo_rain/dKyr_near_bosslight_check__F4cXyz.s"
}
#pragma pop

/* ############################################################################################## */
/* 80450F48-80450F4C 000448 0004+00 1/1 0/0 0/0 .sbss            rot$11958 */
static f32 rot_11958;

/* 80450F4C-80450F50 00044C 0004+00 1/1 0/0 0/0 .sbss            None */
static u8 data_80450F4C[4];

/* 804525FC-80452600 000BFC 0004+00 1/1 0/0 0/0 .sdata2          @12252 */
SECTION_SDATA2 static f32 lit_12252 = 69.0f;

/* 80452600-80452604 000C00 0004+00 1/1 0/0 0/0 .sdata2          @12253 */
SECTION_SDATA2 static f32 lit_12253 = 137.0f;

/* 80452604-80452608 000C04 0004+00 1/1 0/0 0/0 .sdata2          @12254 */
SECTION_SDATA2 static f32 lit_12254 = 750.0f;

/* 80452608-8045260C 000C08 0004+00 1/1 0/0 0/0 .sdata2          @12255 */
SECTION_SDATA2 static f32 lit_12255 = 9.0f / 5.0f;

/* 8045260C-80452610 000C0C 0004+00 1/1 0/0 0/0 .sdata2          @12256 */
SECTION_SDATA2 static f32 lit_12256 = 165.0f;

/* 80452610-80452614 000C10 0004+00 1/1 0/0 0/0 .sdata2          @12257 */
SECTION_SDATA2 static f32 lit_12257 = 155.0f;

/* 80452614-80452618 000C14 0004+00 1/1 0/0 0/0 .sdata2          @12258 */
SECTION_SDATA2 static f32 lit_12258 = -3000.0f;

/* 80452618-8045261C 000C18 0004+00 1/1 0/0 0/0 .sdata2          @12259 */
SECTION_SDATA2 static f32 lit_12259 = 127.0f;

/* 8045261C-80452620 000C1C 0004+00 1/1 0/0 0/0 .sdata2          @12260 */
SECTION_SDATA2 static f32 lit_12260 = 115.0f;

/* 8006E6B0-8006F160 068FF0 0AB0+00 0/0 1/1 0/0 .text            dKyr_evil_draw__FPA4_fPPUc */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dKyr_evil_draw(f32 (*param_0)[4], u8** param_1) {
    nofralloc
#include "asm/d/kankyo/d_kankyo_rain/dKyr_evil_draw__FPA4_fPPUc.s"
}
#pragma pop

/* 8006F160-8006F168 069AA0 0008+00 0/0 1/0 0/0 .text            getKandelaarFlamePos__9daPy_py_cFv
 */
cXyz* daPy_py_c::getKandelaarFlamePos() {
    return NULL;
}

/* 8037A578-8037A578 006BD8 0000+00 0/0 0/0 0/0 .rodata          @stringBase0 */
