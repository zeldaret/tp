//
// Generated By: dol2asm
// Translation Unit: msg/scrn/d_msg_scrn_jimaku
//

#include "msg/scrn/d_msg_scrn_jimaku.h"
#include "dol2asm.h"

//
// Types:
//

struct dMsgScrnLight_c {
    /* 80245934 */ dMsgScrnLight_c(u8, u8);
};

struct JKRExpHeap {};

struct dMsgScrnJimaku_c {
    /* 80244558 */ dMsgScrnJimaku_c(u8, JKRExpHeap*);
    /* 80244A74 */ ~dMsgScrnJimaku_c();
    /* 80244C2C */ void exec();
    /* 80244D34 */ void drawSelf();
    /* 80244D8C */ void fukiAlpha(f32);
    /* 80244E2C */ void fukiScale(f32);
    /* 80244E30 */ void fukiTrans(f32, f32);
    /* 80244E34 */ void fontAlpha(f32);
};

struct dMsgScrnBase_c {
    /* 80238C40 */ void setSelectRubyString(char*, char*, char*);
    /* 80238C44 */ void setSelectString(char*, char*, char*);
    /* 80238C48 */ bool selectAnimeMove(u8, u8, bool);
    /* 80238C50 */ void selectAnimeInit(u8, u8, f32, u8);
    /* 80238C54 */ void arwAnimeMove();
    /* 80238C58 */ void arwAnimeInit();
    /* 80238C5C */ void fukiPosCalc(u8);
    /* 80238C60 */ bool isSelect();
    /* 80238C68 */ bool selectAnimeEnd();
    /* 80238C70 */ void dotAnimeMove();
    /* 80238C74 */ void dotAnimeInit();
    /* 8023C0DC */ dMsgScrnBase_c();
    /* 8023C124 */ ~dMsgScrnBase_c();
    /* 8023C16C */ void init();
    /* 8023C234 */ void multiDraw();
    /* 8023C274 */ void draw();
    /* 8023C32C */ void drawOutFont(f32, f32, f32);
    /* 8023C574 */ void isTalkNow();
};

struct JUtility {
    struct TColor {};
};

struct JKRHeap {
    /* 802CE4D4 */ void alloc(u32, int);
    /* 802CE548 */ void free(void*);
};

struct JKRArchive {};

struct J2DTextBox {
    /* 8030074C */ void setString(s16, char const*, ...);
};

struct J2DScreen {
    /* 802F8498 */ J2DScreen();
    /* 802F8648 */ void setPriority(char const*, u32, JKRArchive*);
};

struct CPaneMgrAlpha {
    /* 802557D0 */ void setAlphaRate(f32);
};

struct CPaneMgr {
    /* 80253984 */ CPaneMgr(J2DScreen*, u64, u8, JKRExpHeap*);
    /* 802542E8 */ void getGlobalPosX();
    /* 80254364 */ void getGlobalPosY();
    /* 80254458 */ void setBlackWhite(JUtility::TColor, JUtility::TColor);
    /* 802545B0 */ void paneTrans(f32, f32);
};

//
// Forward References:
//

extern "C" void __ct__16dMsgScrnJimaku_cFUcP10JKRExpHeap();
extern "C" void __dt__16dMsgScrnJimaku_cFv();
extern "C" void exec__16dMsgScrnJimaku_cFv();
extern "C" void drawSelf__16dMsgScrnJimaku_cFv();
extern "C" void fukiAlpha__16dMsgScrnJimaku_cFf();
extern "C" void fukiScale__16dMsgScrnJimaku_cFf();
extern "C" void fukiTrans__16dMsgScrnJimaku_cFff();
extern "C" void fontAlpha__16dMsgScrnJimaku_cFf();
extern "C" extern char const* const msg_scrn_d_msg_scrn_jimaku__stringBase0;

//
// External References:
//

SECTION_INIT void memset();
extern "C" void mDoExt_getMesgFont__Fv();
extern "C" void dComIfGp_getSubHeap2D__Fi();
extern "C" void setSelectRubyString__14dMsgScrnBase_cFPcPcPc();
extern "C" void setSelectString__14dMsgScrnBase_cFPcPcPc();
extern "C" bool selectAnimeMove__14dMsgScrnBase_cFUcUcb();
extern "C" void selectAnimeInit__14dMsgScrnBase_cFUcUcfUc();
extern "C" void arwAnimeMove__14dMsgScrnBase_cFv();
extern "C" void arwAnimeInit__14dMsgScrnBase_cFv();
extern "C" void fukiPosCalc__14dMsgScrnBase_cFUc();
extern "C" bool isSelect__14dMsgScrnBase_cFv();
extern "C" bool selectAnimeEnd__14dMsgScrnBase_cFv();
extern "C" void dotAnimeMove__14dMsgScrnBase_cFv();
extern "C" void dotAnimeInit__14dMsgScrnBase_cFv();
extern "C" void __ct__14dMsgScrnBase_cFv();
extern "C" void __dt__14dMsgScrnBase_cFv();
extern "C" void init__14dMsgScrnBase_cFv();
extern "C" void multiDraw__14dMsgScrnBase_cFv();
extern "C" void draw__14dMsgScrnBase_cFv();
extern "C" void drawOutFont__14dMsgScrnBase_cFfff();
extern "C" void isTalkNow__14dMsgScrnBase_cFv();
extern "C" void __ct__15dMsgScrnLight_cFUcUc();
extern "C" void __ct__8CPaneMgrFP9J2DScreenUxUcP10JKRExpHeap();
extern "C" void getGlobalPosX__8CPaneMgrFv();
extern "C" void getGlobalPosY__8CPaneMgrFv();
extern "C" void setBlackWhite__8CPaneMgrFQ28JUtility6TColorQ28JUtility6TColor();
extern "C" void paneTrans__8CPaneMgrFff();
extern "C" void dPaneClass_showNullPane__FP9J2DScreen();
extern "C" void setAlphaRate__13CPaneMgrAlphaFf();
extern "C" void alloc__7JKRHeapFUli();
extern "C" void free__7JKRHeapFPv();
extern "C" void* __nw__FUl();
extern "C" void __dl__FPv();
extern "C" void __ct__9J2DScreenFv();
extern "C" void setPriority__9J2DScreenFPCcUlP10JKRArchive();
extern "C" void setString__10J2DTextBoxFsPCce();
extern "C" void _savegpr_23();
extern "C" void _savegpr_24();
extern "C" void _savegpr_27();
extern "C" void _savegpr_28();
extern "C" void _restgpr_23();
extern "C" void _restgpr_24();
extern "C" void _restgpr_27();
extern "C" void _restgpr_28();
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 g_MsgObject_HIO_c[1040];

//
// Declarations:
//

/* ############################################################################################## */
/* 80399A80-80399A80 0260E0 0000+00 0/0 0/0 0/0 .rodata          @stringBase0 */
#pragma push
#pragma force_active on
SECTION_DEAD static char const* const stringBase_80399A80 = "zelda_jimaku_message_text.blo";
SECTION_DEAD static char const* const stringBase_80399A9E = "";
/* @stringBase0 padding */
SECTION_DEAD static char const* const pad_80399A9F = "";
#pragma pop

/* 803C11E8-803C1240 01E308 0058+00 2/2 0/0 0/0 .data            __vt__16dMsgScrnJimaku_c */
SECTION_DATA extern void* __vt__16dMsgScrnJimaku_c[22] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)draw__14dMsgScrnBase_cFv,
    (void*)__dt__16dMsgScrnJimaku_cFv,
    (void*)exec__16dMsgScrnJimaku_cFv,
    (void*)multiDraw__14dMsgScrnBase_cFv,
    (void*)drawSelf__16dMsgScrnJimaku_cFv,
    (void*)setSelectString__14dMsgScrnBase_cFPcPcPc,
    (void*)setSelectRubyString__14dMsgScrnBase_cFPcPcPc,
    (void*)arwAnimeInit__14dMsgScrnBase_cFv,
    (void*)arwAnimeMove__14dMsgScrnBase_cFv,
    (void*)dotAnimeInit__14dMsgScrnBase_cFv,
    (void*)dotAnimeMove__14dMsgScrnBase_cFv,
    (void*)isSelect__14dMsgScrnBase_cFv,
    (void*)selectAnimeInit__14dMsgScrnBase_cFUcUcfUc,
    (void*)selectAnimeMove__14dMsgScrnBase_cFUcUcb,
    (void*)selectAnimeEnd__14dMsgScrnBase_cFv,
    (void*)fukiScale__16dMsgScrnJimaku_cFf,
    (void*)fukiTrans__16dMsgScrnJimaku_cFff,
    (void*)fukiAlpha__16dMsgScrnJimaku_cFf,
    (void*)fontAlpha__16dMsgScrnJimaku_cFf,
    (void*)fukiPosCalc__14dMsgScrnBase_cFUc,
};

/* 80454CB0-80454CB4 0032B0 0004+00 2/2 0/0 0/0 .sdata2          @3941 */
SECTION_SDATA2 static u8 lit_3941[4] = {
    0x00,
    0x00,
    0x00,
    0x00,
};

/* 80454CB4-80454CB8 0032B4 0004+00 1/1 0/0 0/0 .sdata2          @3942 */
SECTION_SDATA2 static f32 lit_3942 = 6.0f / 5.0f;

/* 80244558-80244A74 23EE98 051C+00 0/0 1/1 0/0 .text __ct__16dMsgScrnJimaku_cFUcP10JKRExpHeap */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dMsgScrnJimaku_c::dMsgScrnJimaku_c(u8 param_0, JKRExpHeap* param_1) {
    nofralloc
#include "asm/msg/scrn/d_msg_scrn_jimaku/__ct__16dMsgScrnJimaku_cFUcP10JKRExpHeap.s"
}
#pragma pop

/* 80244A74-80244C2C 23F3B4 01B8+00 1/0 0/0 0/0 .text            __dt__16dMsgScrnJimaku_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dMsgScrnJimaku_c::~dMsgScrnJimaku_c() {
    nofralloc
#include "asm/msg/scrn/d_msg_scrn_jimaku/__dt__16dMsgScrnJimaku_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 80454CB8-80454CC0 0032B8 0004+04 2/2 0/0 0/0 .sdata2          @4021 */
SECTION_SDATA2 static f32 lit_4021[1 + 1 /* padding */] = {
    1.0f,
    /* padding */
    0.0f,
};

/* 80244C2C-80244D34 23F56C 0108+00 1/0 0/0 0/0 .text            exec__16dMsgScrnJimaku_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMsgScrnJimaku_c::exec() {
    nofralloc
#include "asm/msg/scrn/d_msg_scrn_jimaku/exec__16dMsgScrnJimaku_cFv.s"
}
#pragma pop

/* 80244D34-80244D8C 23F674 0058+00 1/0 0/0 0/0 .text            drawSelf__16dMsgScrnJimaku_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMsgScrnJimaku_c::drawSelf() {
    nofralloc
#include "asm/msg/scrn/d_msg_scrn_jimaku/drawSelf__16dMsgScrnJimaku_cFv.s"
}
#pragma pop

/* 80244D8C-80244E2C 23F6CC 00A0+00 1/0 0/0 0/0 .text            fukiAlpha__16dMsgScrnJimaku_cFf */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMsgScrnJimaku_c::fukiAlpha(f32 param_0) {
    nofralloc
#include "asm/msg/scrn/d_msg_scrn_jimaku/fukiAlpha__16dMsgScrnJimaku_cFf.s"
}
#pragma pop

/* 80244E2C-80244E30 23F76C 0004+00 1/0 0/0 0/0 .text            fukiScale__16dMsgScrnJimaku_cFf */
void dMsgScrnJimaku_c::fukiScale(f32 param_0) {
    /* empty function */
}

/* 80244E30-80244E34 23F770 0004+00 1/0 0/0 0/0 .text            fukiTrans__16dMsgScrnJimaku_cFff */
void dMsgScrnJimaku_c::fukiTrans(f32 param_0, f32 param_1) {
    /* empty function */
}

/* 80244E34-80244E38 23F774 0004+00 1/0 0/0 0/0 .text            fontAlpha__16dMsgScrnJimaku_cFf */
void dMsgScrnJimaku_c::fontAlpha(f32 param_0) {
    /* empty function */
}

/* 80399A80-80399A80 0260E0 0000+00 0/0 0/0 0/0 .rodata          @stringBase0 */
