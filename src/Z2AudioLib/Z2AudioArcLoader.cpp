//
// Generated By: dol2asm
// Translation Unit: Z2AudioArcLoader
//

#include "Z2AudioLib/Z2AudioArcLoader.h"
#include "JSystem/JAudio2/JAUSectionHeap.h"
#include "JSystem/JKernel/JKRArchive.h"
#include "JSystem/JKernel/JKRHeap.h"
#include "Z2AudioLib/Z2FxLineMgr.h"

/* 802A9A34-802A9A70 2A4374 003C+00 0/0 1/1 0/0 .text __ct__16Z2AudioArcLoaderFP10JAUSection */
Z2AudioArcLoader::Z2AudioArcLoader(JAUSection* param_0) : JAUAudioArcLoader(param_0) {
    /* empty function */
}

/* 802A9A70-802A9AC8 2A43B0 0058+00 1/0 0/0 0/0 .text readCommandMore__16Z2AudioArcLoaderFUl */
bool Z2AudioArcLoader::readCommandMore(u32 param_0) {
    bool rv = false;
    switch (param_0) {
    case 'bfca':
        readBFCA(getContent_(readU32_()));
        rv = true;
        break;
    }
    return rv;
}

/* 802A9AC8-802A9B54 2A4408 008C+00 1/1 0/0 0/0 .text            readBFCA__16Z2AudioArcLoaderFPCv */
// NONMATCHING regalloc
void Z2AudioArcLoader::readBFCA(void const* param_0) {
    JKRHeap* heap = JAUSectionHeap::getInstance()->getHeap();
    JKRArchive* archive = JKRMountArchive((void*)param_0, JKRGetCurrentHeap(), JKRArchive::MOUNT_DIRECTION_TAIL);
    Z2GetFxLineMgr()->initDataArc(archive, heap);
    JKRUnmountArchive(archive);
}

/* 802A9B54-802A9B58 2A4494 0004+00 1/0 0/0 0/0 .text            readBSTN__16Z2AudioArcLoaderFPCvUl
 */
void Z2AudioArcLoader::readBSTN(void const* param_0, u32 param_1) {
    /* empty function */
}
