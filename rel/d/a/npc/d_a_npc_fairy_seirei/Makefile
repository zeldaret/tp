#
# Generated By: dol2asm
#

M80_TARGET := $(BUILD_DIR)/rel/d/a/npc/d_a_npc_fairy_seirei.plf
M80_LDSCRIPT := $(BUILD_DIR)/rel/d/a/npc/d_a_npc_fairy_seirei.lcf
M80_MAP := $(BUILD_DIR)/rel/d/a/npc/d_a_npc_fairy_seirei.map

M80_CPP_FILES := \
	rel/executor.cpp \
	rel/global_destructor_chain.cpp \
	rel/d/a/npc/d_a_npc_fairy_seirei/d_a_npc_fairy_seirei.cpp \

M80_O_FILES := \
	$(BUILD_DIR)/rel/executor.o \
	$(BUILD_DIR)/rel/global_destructor_chain.o \
	$(BUILD_DIR)/rel/d/a/npc/d_a_npc_fairy_seirei/d_a_npc_fairy_seirei.o \

M80_LIBS := \

M80_CFLAGS := \
	-sdata 0 \
	-sdata2 0 \

M80_LDFLAGS := \
	-nodefaults \
	-fp hard \
	-proc gekko \
	-linkmode moreram \
	-sdata 0 \
	-sdata2 0 \
	-m _prolog \
	-lcf $(M80_LDSCRIPT) \
	-unused -map $(M80_MAP) \
	-w off \

$(M80_TARGET): $(M80_O_FILES) $(M80_LIBS)
	@echo [ 80] creating $(M80_TARGET)
	@echo $(M80_LIBS) $(M80_O_FILES) > build/M80_ofiles
	@python3 tools/lcf.py rel 80 --output $(M80_LDSCRIPT)
	@$(LD) -opt_partial -strip_partial $(M80_LDFLAGS) -o $(M80_TARGET) @build/M80_ofiles

$(BUILD_DIR)/rel/d/a/npc/d_a_npc_fairy_seirei/%.o: rel/d/a/npc/d_a_npc_fairy_seirei/%.cpp
	@echo [ 80] building $@
	@mkdir -p $(@D)
	@iconv -f UTF-8 -t CP932 < $< > $@.iconv.cpp
	@$(CC) $(CFLAGS) $(M80_CFLAGS) -c -o $@ $@.iconv.cpp


