//
// Generated By: dol2asm
// Translation Unit: d_a_npc_seid
//

#include "rel/d/a/npc/d_a_npc_seid/d_a_npc_seid.h"
#include "dol2asm.h"

//
// Types:
//

struct mDoExt_McaMorfCallBack2_c {};

struct mDoExt_McaMorfCallBack1_c {};

struct J3DAnmTransform {};

struct J3DModelData {};

struct Vec {};

struct Z2Creature {
    /* 802C03C8 */ Z2Creature();
    /* 802C0420 */ ~Z2Creature();
    /* 802C0530 */ void init(Vec*, Vec*, u8, u8);
};

struct mDoExt_McaMorfSO {
    /* 800107D0 */ mDoExt_McaMorfSO(J3DModelData*, mDoExt_McaMorfCallBack1_c*,
                                    mDoExt_McaMorfCallBack2_c*, J3DAnmTransform*, int, f32, int,
                                    int, Z2Creature*, u32, u32);
    /* 80011310 */ void stopZelAnime();
};

struct fopAc_ac_c {
    /* 80018B64 */ fopAc_ac_c();
    /* 80018C8C */ ~fopAc_ac_c();
};

struct daNpcT_faceMotionAnmData_c {};

struct daNpcT_MotionSeqMngr_c {
    struct sequenceStepData_c {};

    /* 80145898 */ void initialize();
    /* 80ACAF64 */ ~daNpcT_MotionSeqMngr_c();
};

struct daNpcT_evtData_c {};

struct daNpcT_motionAnmData_c {};

struct daNpc_seiD_c {
    /* 80AC968C */ ~daNpc_seiD_c();
    /* 80AC9728 */ void create();
    /* 80AC9968 */ void CreateHeap();
    /* 80AC9AC0 */ void Delete();
    /* 80AC9AF4 */ void Execute();
    /* 80AC9B14 */ void Draw();
    /* 80AC9BA8 */ void createHeapCallBack(fopAc_ac_c*);
    /* 80AC9BC8 */ void getType();
    /* 80AC9BE8 */ void getFlowNodeNo();
    /* 80AC9C04 */ bool isDelete();
    /* 80AC9C0C */ void reset();
    /* 80AC9D5C */ void setParam();
    /* 80AC9E88 */ void srchActors();
    /* 80AC9E8C */ void evtTalk();
    /* 80AC9F8C */ void evtCutProc();
    /* 80ACA054 */ void action();
    /* 80ACA0DC */ void beforeMove();
    /* 80ACA15C */ void setAttnPos();
    /* 80ACA1B8 */ bool drawDbgInfo();
    /* 80ACA1C0 */ void afterSetMotionAnm(int, int, f32, int);
    /* 80ACA358 */ void selectAction();
    /* 80ACA3A0 */ void chkAction(int (daNpc_seiD_c::*)(void*));
    /* 80ACA3CC */ void setAction(int (daNpc_seiD_c::*)(void*));
    /* 80ACA474 */ void ctrlWaitAnm();
    /* 80ACA478 */ void wait(void*);
    /* 80ACA4A4 */ void talk(void*);
    /* 80ACB2AC */ daNpc_seiD_c(daNpcT_faceMotionAnmData_c const*, daNpcT_motionAnmData_c const*,
                                daNpcT_MotionSeqMngr_c::sequenceStepData_c const*, int,
                                daNpcT_MotionSeqMngr_c::sequenceStepData_c const*, int,
                                daNpcT_evtData_c const*, char**);

    static void* mCutNameList;
    static u8 mCutList[12];
};

struct daNpc_seiD_Param_c {
    /* 80ACB2F0 */ ~daNpc_seiD_Param_c();

    static u8 const m[148];
};

struct J3DAnmTextureSRTKey {};

struct _GXColorS10 {};

struct J3DModel {};

struct J3DJoint {};

struct J3DAnmTevRegKey {};

struct cXyz {
    /* 80ACA99C */ ~cXyz();
    /* 80ACAF18 */ cXyz();
};

struct daNpcT_c {
    /* 8014810C */ void getTexSRTKeyAnmP(char const*, int);
    /* 80148148 */ void getTevRegKeyAnmP(char const*, int);
    /* 80148338 */ void setBtkAnm(J3DAnmTextureSRTKey*, J3DModelData*, f32, int);
    /* 80148378 */ void setBrkAnm(J3DAnmTevRegKey*, J3DModelData*, f32, int);
    /* 801483F8 */ void loadRes(s8 const*, char const**);
    /* 801484AC */ void deleteRes(s8 const*, char const**);
    /* 8014852C */ void execute();
    /* 8014886C */ void draw(int, int, f32, _GXColorS10*, f32, int, int, int);
    /* 80148C70 */ void setEnvTevColor();
    /* 80148CCC */ void setRoomNo();
    /* 801490D4 */ void ctrlBtk();
    /* 80149190 */ void setMtx();
    /* 8014951C */ void ctrlJoint(J3DJoint*, J3DModel*);
    /* 8014997C */ void evtProc();
    /* 80149BB4 */ void setFootPos();
    /* 80149D7C */ void setFootPrtcl(cXyz*, f32, f32);
    /* 8014A05C */ bool checkCullDraw();
    /* 8014A064 */ void twilight();
    /* 8014A0B0 */ void evtOrder();
    /* 8014A224 */ void evtChange();
    /* 8014A324 */ void clrParam();
    /* 8014A388 */ void setFaceMotionAnm(int, bool);
    /* 8014A628 */ void setMotionAnm(int, f32, int);
    /* 8014AA18 */ void setAngle(s16);
    /* 8014BBF0 */ void initTalk(int, fopAc_ac_c**);
    /* 8014BC78 */ void talkProc(int*, int, fopAc_ac_c**, int);
    /* 80ACA614 */ ~daNpcT_c();
    /* 80ACAA14 */ daNpcT_c(daNpcT_faceMotionAnmData_c const*, daNpcT_motionAnmData_c const*,
                            daNpcT_MotionSeqMngr_c::sequenceStepData_c const*, int,
                            daNpcT_MotionSeqMngr_c::sequenceStepData_c const*, int,
                            daNpcT_evtData_c const*, char**);
    /* 80ACB130 */ bool getEyeballMaterialNo();
    /* 80ACB138 */ void ctrlSubFaceMotion(int);
    /* 80ACB13C */ bool checkChangeJoint(int);
    /* 80ACB144 */ bool checkRemoveJoint(int);
    /* 80ACB14C */ s32 getBackboneJointNo();
    /* 80ACB154 */ s32 getNeckJointNo();
    /* 80ACB15C */ s32 getHeadJointNo();
    /* 80ACB164 */ s32 getFootLJointNo();
    /* 80ACB16C */ s32 getFootRJointNo();
    /* 80ACB174 */ bool getEyeballLMaterialNo();
    /* 80ACB17C */ bool getEyeballRMaterialNo();
    /* 80ACB184 */ void afterJntAnm(int);
    /* 80ACB188 */ bool checkChangeEvt();
    /* 80ACB190 */ bool evtEndProc();
    /* 80ACB198 */ void setAfterTalkMotion();
    /* 80ACB19C */ void afterMoved();
    /* 80ACB1A0 */ void setCollision();
    /* 80ACB1A4 */ bool chkXYItems();
    /* 80ACB1AC */ void decTmr();
    /* 80ACB1C4 */ void drawOtherMdl();
    /* 80ACB1C8 */ void drawGhost();
    /* 80ACB1CC */ bool afterSetFaceMotionAnm(int, int, f32, int);
    /* 80ACB1D4 */ void getFaceMotionAnm(daNpcT_faceMotionAnmData_c);
    /* 80ACB204 */ void getMotionAnm(daNpcT_motionAnmData_c);
    /* 80ACB234 */ void changeAnm(int*, int*);
    /* 80ACB238 */ void changeBck(int*, int*);
    /* 80ACB23C */ void changeBtp(int*, int*);
    /* 80ACB240 */ void changeBtk(int*, int*);
};

struct daNpcT_MatAnm_c {
    /* 80145764 */ void initialize();
};

struct daNpcT_JntAnm_c {
    /* 80146C98 */ void initialize();
    /* 80ACAE1C */ ~daNpcT_JntAnm_c();
};

struct daNpcT_ActorMngr_c {
    /* 801456D4 */ void initialize();
    /* 80ACAF1C */ ~daNpcT_ActorMngr_c();
};

struct dRes_info_c {};

struct dRes_control_c {
    /* 8003C2EC */ void getRes(char const*, s32, dRes_info_c*, int);
};

struct dMsgFlow_c {
    /* 80249F00 */ dMsgFlow_c();
    /* 80249F48 */ ~dMsgFlow_c();
};

struct dEvt_control_c {
    /* 80042468 */ void reset();
};

struct dEvent_manager_c {
    /* 80047B1C */ void getMyStaffId(char const*, fopAc_ac_c*, int);
    /* 80047E10 */ void getMyActIdx(int, char const* const*, int, int, int);
    /* 8004817C */ void cutEnd(int);
    /* 800487F0 */ void ChkPresentEnd();
};

struct dCcD_Stts {
    /* 80083860 */ void Init(int, int, fopAc_ac_c*);
};

struct dCcD_GStts {
    /* 80083760 */ dCcD_GStts();
    /* 80ACB01C */ ~dCcD_GStts();
};

struct dBgS_PolyPassChk {
    /* 80078E68 */ void SetObj();
};

struct dBgS_ObjAcch {
    /* 80ACB078 */ ~dBgS_ObjAcch();
};

struct dBgS_LinChk {
    /* 80077C68 */ dBgS_LinChk();
    /* 80077CDC */ ~dBgS_LinChk();
};

struct dBgS_GndChk {
    /* 8007757C */ dBgS_GndChk();
    /* 800775F0 */ ~dBgS_GndChk();
};

struct dBgS_AcchCir {
    /* 80075EAC */ dBgS_AcchCir();
    /* 80075F40 */ void SetWallR(f32);
    /* 80ACAFAC */ ~dBgS_AcchCir();
};

struct csXyz {
    /* 80ACA9D8 */ ~csXyz();
    /* 80ACAE18 */ csXyz();
};

struct dBgS {};

struct dBgS_Acch {
    /* 80075F94 */ ~dBgS_Acch();
    /* 800760A0 */ dBgS_Acch();
    /* 80076248 */ void Set(cXyz*, cXyz*, fopAc_ac_c*, int, dBgS_AcchCir*, cXyz*, csXyz*, csXyz*);
    /* 80076AAC */ void CrrPos(dBgS&);
};

struct dAttention_c {
    /* 80AC9E74 */ void getDistTable(int);

    static u8 dist_table[6552];
};

struct cM3dGCir {
    /* 8026EF18 */ ~cM3dGCir();
};

struct cCcD_GStts {
    /* 80ACA5CC */ ~cCcD_GStts();
};

struct cBgS_PolyInfo {
    /* 802680B0 */ ~cBgS_PolyInfo();
};

struct cBgS_GndChk {
    /* 80267C1C */ cBgS_GndChk();
    /* 80267C94 */ ~cBgS_GndChk();
};

struct J3DFrameCtrl {
    /* 803283FC */ void init(s16);
    /* 80ACB0E8 */ ~J3DFrameCtrl();
};

//
// Forward References:
//

extern "C" void __dt__12daNpc_seiD_cFv();
extern "C" void create__12daNpc_seiD_cFv();
extern "C" void CreateHeap__12daNpc_seiD_cFv();
extern "C" void Delete__12daNpc_seiD_cFv();
extern "C" void Execute__12daNpc_seiD_cFv();
extern "C" void Draw__12daNpc_seiD_cFv();
extern "C" void createHeapCallBack__12daNpc_seiD_cFP10fopAc_ac_c();
extern "C" void getType__12daNpc_seiD_cFv();
extern "C" void getFlowNodeNo__12daNpc_seiD_cFv();
extern "C" bool isDelete__12daNpc_seiD_cFv();
extern "C" void reset__12daNpc_seiD_cFv();
extern "C" void setParam__12daNpc_seiD_cFv();
extern "C" void getDistTable__12dAttention_cFi();
extern "C" void srchActors__12daNpc_seiD_cFv();
extern "C" void evtTalk__12daNpc_seiD_cFv();
extern "C" void evtCutProc__12daNpc_seiD_cFv();
extern "C" void action__12daNpc_seiD_cFv();
extern "C" void beforeMove__12daNpc_seiD_cFv();
extern "C" void setAttnPos__12daNpc_seiD_cFv();
extern "C" bool drawDbgInfo__12daNpc_seiD_cFv();
extern "C" void afterSetMotionAnm__12daNpc_seiD_cFiifi();
extern "C" void selectAction__12daNpc_seiD_cFv();
extern "C" void chkAction__12daNpc_seiD_cFM12daNpc_seiD_cFPCvPvPv_i();
extern "C" void setAction__12daNpc_seiD_cFM12daNpc_seiD_cFPCvPvPv_i();
extern "C" void ctrlWaitAnm__12daNpc_seiD_cFv();
extern "C" void wait__12daNpc_seiD_cFPv();
extern "C" void talk__12daNpc_seiD_cFPv();
extern "C" static void daNpc_seiD_Create__FPv();
extern "C" static void daNpc_seiD_Delete__FPv();
extern "C" static void daNpc_seiD_Execute__FPv();
extern "C" static void daNpc_seiD_Draw__FPv();
extern "C" static bool daNpc_seiD_IsDelete__FPv();
extern "C" void __dt__10cCcD_GSttsFv();
extern "C" void __dt__8daNpcT_cFv();
extern "C" void __dt__4cXyzFv();
extern "C" void __dt__5csXyzFv();
extern "C" void
__ct__8daNpcT_cFPC26daNpcT_faceMotionAnmData_cPC22daNpcT_motionAnmData_cPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPC16daNpcT_evtData_cPPc();
extern "C" void __ct__5csXyzFv();
extern "C" void __dt__15daNpcT_JntAnm_cFv();
extern "C" void __ct__4cXyzFv();
extern "C" void __dt__18daNpcT_ActorMngr_cFv();
extern "C" void __dt__22daNpcT_MotionSeqMngr_cFv();
extern "C" void __dt__12dBgS_AcchCirFv();
extern "C" void __dt__10dCcD_GSttsFv();
extern "C" void __dt__12dBgS_ObjAcchFv();
extern "C" void __dt__12J3DFrameCtrlFv();
extern "C" bool getEyeballMaterialNo__8daNpcT_cFv();
extern "C" void ctrlSubFaceMotion__8daNpcT_cFi();
extern "C" bool checkChangeJoint__8daNpcT_cFi();
extern "C" bool checkRemoveJoint__8daNpcT_cFi();
extern "C" s32 getBackboneJointNo__8daNpcT_cFv();
extern "C" s32 getNeckJointNo__8daNpcT_cFv();
extern "C" s32 getHeadJointNo__8daNpcT_cFv();
extern "C" s32 getFootLJointNo__8daNpcT_cFv();
extern "C" s32 getFootRJointNo__8daNpcT_cFv();
extern "C" bool getEyeballLMaterialNo__8daNpcT_cFv();
extern "C" bool getEyeballRMaterialNo__8daNpcT_cFv();
extern "C" void afterJntAnm__8daNpcT_cFi();
extern "C" bool checkChangeEvt__8daNpcT_cFv();
extern "C" bool evtEndProc__8daNpcT_cFv();
extern "C" void setAfterTalkMotion__8daNpcT_cFv();
extern "C" void afterMoved__8daNpcT_cFv();
extern "C" void setCollision__8daNpcT_cFv();
extern "C" bool chkXYItems__8daNpcT_cFv();
extern "C" void decTmr__8daNpcT_cFv();
extern "C" void drawOtherMdl__8daNpcT_cFv();
extern "C" void drawGhost__8daNpcT_cFv();
extern "C" bool afterSetFaceMotionAnm__8daNpcT_cFiifi();
extern "C" void getFaceMotionAnm__8daNpcT_cF26daNpcT_faceMotionAnmData_c();
extern "C" void getMotionAnm__8daNpcT_cF22daNpcT_motionAnmData_c();
extern "C" void changeAnm__8daNpcT_cFPiPi();
extern "C" void changeBck__8daNpcT_cFPiPi();
extern "C" void changeBtp__8daNpcT_cFPiPi();
extern "C" void changeBtk__8daNpcT_cFPiPi();
extern "C" void __sinit_d_a_npc_seid_cpp();
extern "C" void
__ct__12daNpc_seiD_cFPC26daNpcT_faceMotionAnmData_cPC22daNpcT_motionAnmData_cPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPC16daNpcT_evtData_cPPc();
extern "C" void __dt__18daNpc_seiD_Param_cFv();
extern "C" static void func_80ACB338();
extern "C" static void func_80ACB340();
extern "C" u8 const m__18daNpc_seiD_Param_c[148];
extern "C" extern char const* const d_a_npc_seid__stringBase0;
extern "C" void* mCutNameList__12daNpc_seiD_c;
extern "C" u8 mCutList__12daNpc_seiD_c[12];

//
// External References:
//

SECTION_INIT void memset();
extern "C" void
__ct__16mDoExt_McaMorfSOFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiP10Z2CreatureUlUl();
extern "C" void stopZelAnime__16mDoExt_McaMorfSOFv();
extern "C" void __ct__10fopAc_ac_cFv();
extern "C" void __dt__10fopAc_ac_cFv();
extern "C" void fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl();
extern "C" void dComIfGs_wolfeye_effect_check__Fv();
extern "C" void getRes__14dRes_control_cFPCclP11dRes_info_ci();
extern "C" void reset__14dEvt_control_cFv();
extern "C" void getMyStaffId__16dEvent_manager_cFPCcP10fopAc_ac_ci();
extern "C" void getMyActIdx__16dEvent_manager_cFiPCPCciii();
extern "C" void cutEnd__16dEvent_manager_cFi();
extern "C" void ChkPresentEnd__16dEvent_manager_cFv();
extern "C" void __ct__12dBgS_AcchCirFv();
extern "C" void SetWallR__12dBgS_AcchCirFf();
extern "C" void __dt__9dBgS_AcchFv();
extern "C" void __ct__9dBgS_AcchFv();
extern "C" void Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz();
extern "C" void CrrPos__9dBgS_AcchFR4dBgS();
extern "C" void __ct__11dBgS_GndChkFv();
extern "C" void __dt__11dBgS_GndChkFv();
extern "C" void __ct__11dBgS_LinChkFv();
extern "C" void __dt__11dBgS_LinChkFv();
extern "C" void SetObj__16dBgS_PolyPassChkFv();
extern "C" void __ct__10dCcD_GSttsFv();
extern "C" void Init__9dCcD_SttsFiiP10fopAc_ac_c();
extern "C" void initialize__18daNpcT_ActorMngr_cFv();
extern "C" void initialize__15daNpcT_MatAnm_cFv();
extern "C" void initialize__22daNpcT_MotionSeqMngr_cFv();
extern "C" void initialize__15daNpcT_JntAnm_cFv();
extern "C" void getTexSRTKeyAnmP__8daNpcT_cFPCci();
extern "C" void getTevRegKeyAnmP__8daNpcT_cFPCci();
extern "C" void setBtkAnm__8daNpcT_cFP19J3DAnmTextureSRTKeyP12J3DModelDatafi();
extern "C" void setBrkAnm__8daNpcT_cFP15J3DAnmTevRegKeyP12J3DModelDatafi();
extern "C" void loadRes__8daNpcT_cFPCScPPCc();
extern "C" void deleteRes__8daNpcT_cFPCScPPCc();
extern "C" void execute__8daNpcT_cFv();
extern "C" void draw__8daNpcT_cFiifP11_GXColorS10fiii();
extern "C" void setEnvTevColor__8daNpcT_cFv();
extern "C" void setRoomNo__8daNpcT_cFv();
extern "C" void ctrlBtk__8daNpcT_cFv();
extern "C" void setMtx__8daNpcT_cFv();
extern "C" void ctrlJoint__8daNpcT_cFP8J3DJointP8J3DModel();
extern "C" void evtProc__8daNpcT_cFv();
extern "C" void setFootPos__8daNpcT_cFv();
extern "C" void setFootPrtcl__8daNpcT_cFP4cXyzff();
extern "C" bool checkCullDraw__8daNpcT_cFv();
extern "C" void twilight__8daNpcT_cFv();
extern "C" void evtOrder__8daNpcT_cFv();
extern "C" void evtChange__8daNpcT_cFv();
extern "C" void clrParam__8daNpcT_cFv();
extern "C" void setFaceMotionAnm__8daNpcT_cFib();
extern "C" void setMotionAnm__8daNpcT_cFifi();
extern "C" void setAngle__8daNpcT_cFs();
extern "C" void initTalk__8daNpcT_cFiPP10fopAc_ac_c();
extern "C" void talkProc__8daNpcT_cFPiiPP10fopAc_ac_ci();
extern "C" void __ct__10dMsgFlow_cFv();
extern "C" void __dt__10dMsgFlow_cFv();
extern "C" void cM_rndF__Ff();
extern "C" void __ct__11cBgS_GndChkFv();
extern "C" void __dt__11cBgS_GndChkFv();
extern "C" void __dt__13cBgS_PolyInfoFv();
extern "C" void __dt__8cM3dGCirFv();
extern "C" void __ct__10Z2CreatureFv();
extern "C" void __dt__10Z2CreatureFv();
extern "C" void init__10Z2CreatureFP3VecP3VecUcUc();
extern "C" void* __nw__FUl();
extern "C" void __dl__FPv();
extern "C" void init__12J3DFrameCtrlFs();
extern "C" void __destroy_arr();
extern "C" void __construct_array();
extern "C" void __ptmf_test();
extern "C" void __ptmf_cmpr();
extern "C" void __ptmf_scall();
extern "C" void _savegpr_22();
extern "C" void _savegpr_25();
extern "C" void _savegpr_29();
extern "C" void _restgpr_22();
extern "C" void _restgpr_25();
extern "C" void _restgpr_29();
extern "C" extern u8 const __ptmf_null[12 + 4 /* padding */];
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" u8 dist_table__12dAttention_c[6552];
extern "C" extern void* __vt__9dCcD_Stts[11];
extern "C" extern void* __vt__8daNpcT_c[49];
extern "C" extern void* __vt__9cCcD_Stts[8];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" void __register_global_object();

//
// Declarations:
//

/* ############################################################################################## */
/* 80ACB408-80ACB408 0000AC 0000+00 0/0 0/0 0/0 .rodata          @stringBase0 */
#pragma push
#pragma force_active on
SECTION_DEAD static char const* const stringBase_80ACB408 = "";
SECTION_DEAD static char const* const stringBase_80ACB409 = "DEFAULT_GETITEM";
SECTION_DEAD static char const* const stringBase_80ACB419 = "NO_RESPONSE";
SECTION_DEAD static char const* const stringBase_80ACB425 = "seiD";
#pragma pop

/* 80ACB430-80ACB43C 000000 000C+00 2/2 0/0 0/0 .data            cNullVec__6Z2Calc */
SECTION_DATA static u8 cNullVec__6Z2Calc[12] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80ACB43C-80ACB450 00000C 0004+10 0/0 0/0 0/0 .data            @1787 */
#pragma push
#pragma force_active on
SECTION_DATA static u32 lit_1787[1 + 4 /* padding */] = {
    0x02000201,
    /* padding */
    0x40080000,
    0x00000000,
    0x3FE00000,
    0x00000000,
};
#pragma pop

/* 80ACB450-80ACB458 000020 0008+00 1/1 0/0 0/0 .data            l_bmdData */
SECTION_DATA static u8 l_bmdData[8] = {
    0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x01,
};

/* 80ACB458-80ACB470 -00001 0018+00 0/1 0/0 0/0 .data            l_evtList */
#pragma push
#pragma force_active on
SECTION_DATA static void* l_evtList[6] = {
    (void*)&d_a_npc_seid__stringBase0,
    (void*)NULL,
    (void*)(((char*)&d_a_npc_seid__stringBase0) + 0x1),
    (void*)NULL,
    (void*)(((char*)&d_a_npc_seid__stringBase0) + 0x11),
    (void*)NULL,
};
#pragma pop

/* 80ACB470-80ACB478 -00001 0008+00 2/4 0/0 0/0 .data            l_resNameList */
SECTION_DATA static void* l_resNameList[2] = {
    (void*)&d_a_npc_seid__stringBase0,
    (void*)(((char*)&d_a_npc_seid__stringBase0) + 0x1D),
};

/* 80ACB478-80ACB47C 000048 0002+02 1/0 0/0 0/0 .data            l_loadResPtrn0 */
SECTION_DATA static u16 l_loadResPtrn0[1 + 1 /* padding */] = {
    0x01FF,
    /* padding */
    0x0000,
};

/* 80ACB47C-80ACB484 -00001 0008+00 1/2 0/0 0/0 .data            l_loadResPtrnList */
SECTION_DATA static void* l_loadResPtrnList[2] = {
    (void*)&l_loadResPtrn0,
    (void*)&l_loadResPtrn0,
};

/* 80ACB484-80ACB4A0 000054 001C+00 0/1 0/0 0/0 .data            l_faceMotionAnmData */
#pragma push
#pragma force_active on
SECTION_DATA static u8 l_faceMotionAnmData[28] = {
    0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF,
    0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
#pragma pop

/* 80ACB4A0-80ACB4BC 000070 001C+00 0/1 0/0 0/0 .data            l_motionAnmData */
#pragma push
#pragma force_active on
SECTION_DATA static u8 l_motionAnmData[28] = {
    0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF,
    0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
#pragma pop

/* 80ACB4BC-80ACB4CC 00008C 0010+00 0/1 0/0 0/0 .data            l_faceMotionSequenceData */
#pragma push
#pragma force_active on
SECTION_DATA static u8 l_faceMotionSequenceData[16] = {
    0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
};
#pragma pop

/* 80ACB4CC-80ACB4DC 00009C 0010+00 0/1 0/0 0/0 .data            l_motionSequenceData */
#pragma push
#pragma force_active on
SECTION_DATA static u8 l_motionSequenceData[16] = {
    0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
};
#pragma pop

/* 80ACB4DC-80ACB4E0 -00001 0004+00 1/1 0/0 0/0 .data            mCutNameList__12daNpc_seiD_c */
SECTION_DATA void* daNpc_seiD_c::mCutNameList = (void*)&d_a_npc_seid__stringBase0;

/* 80ACB4E0-80ACB4EC 0000B0 000C+00 2/2 0/0 0/0 .data            mCutList__12daNpc_seiD_c */
SECTION_DATA u8 daNpc_seiD_c::mCutList[12] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80ACB4EC-80ACB4F8 -00001 000C+00 1/1 0/0 0/0 .data            @4342 */
SECTION_DATA static void* lit_4342[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)talk__12daNpc_seiD_cFPv,
};

/* 80ACB4F8-80ACB504 -00001 000C+00 1/1 0/0 0/0 .data            @4352 */
SECTION_DATA static void* lit_4352[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)talk__12daNpc_seiD_cFPv,
};

/* 80ACB504-80ACB50C 0000D4 0008+00 0/1 0/0 0/0 .data            btkAnmData$4416 */
#pragma push
#pragma force_active on
SECTION_DATA static u8 btkAnmData[8] = {
    0x00, 0x00, 0x00, 0x0B, 0x00, 0x00, 0x00, 0x01,
};
#pragma pop

/* 80ACB50C-80ACB514 0000DC 0008+00 0/1 0/0 0/0 .data            brkAnmData$4417 */
#pragma push
#pragma force_active on
SECTION_DATA static u8 brkAnmData[8] = {
    0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x01,
};
#pragma pop

/* 80ACB514-80ACB520 -00001 000C+00 1/1 0/0 0/0 .data            @4467 */
SECTION_DATA static void* lit_4467[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)wait__12daNpc_seiD_cFPv,
};

/* 80ACB520-80ACB540 -00001 0020+00 1/0 0/0 0/0 .data            daNpc_seiD_MethodTable */
SECTION_DATA static void* daNpc_seiD_MethodTable[8] = {
    (void*)daNpc_seiD_Create__FPv,
    (void*)daNpc_seiD_Delete__FPv,
    (void*)daNpc_seiD_Execute__FPv,
    (void*)daNpc_seiD_IsDelete__FPv,
    (void*)daNpc_seiD_Draw__FPv,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
};

/* 80ACB540-80ACB570 -00001 0030+00 0/0 0/0 1/0 .data            g_profile_NPC_SEID */
SECTION_DATA extern void* g_profile_NPC_SEID[12] = {
    (void*)0xFFFFFFFD, (void*)0x0007FFFD,
    (void*)0x02670000, (void*)&g_fpcLf_Method,
    (void*)0x00000E64, (void*)NULL,
    (void*)NULL,       (void*)&g_fopAc_Method,
    (void*)0x01680000, (void*)&daNpc_seiD_MethodTable,
    (void*)0x00044000, (void*)0x000E0000,
};

/* 80ACB570-80ACB57C 000140 000C+00 3/3 0/0 0/0 .data            __vt__12J3DFrameCtrl */
SECTION_DATA extern void* __vt__12J3DFrameCtrl[3] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__12J3DFrameCtrlFv,
};

/* 80ACB57C-80ACB5A0 00014C 0024+00 3/3 0/0 0/0 .data            __vt__12dBgS_ObjAcch */
SECTION_DATA extern void* __vt__12dBgS_ObjAcch[9] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__12dBgS_ObjAcchFv,
    (void*)NULL,
    (void*)NULL,
    (void*)func_80ACB340,
    (void*)NULL,
    (void*)NULL,
    (void*)func_80ACB338,
};

/* 80ACB5A0-80ACB5AC 000170 000C+00 2/2 0/0 0/0 .data            __vt__12dBgS_AcchCir */
SECTION_DATA extern void* __vt__12dBgS_AcchCir[3] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__12dBgS_AcchCirFv,
};

/* 80ACB5AC-80ACB5B8 00017C 000C+00 3/3 0/0 0/0 .data            __vt__10cCcD_GStts */
SECTION_DATA extern void* __vt__10cCcD_GStts[3] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__10cCcD_GSttsFv,
};

/* 80ACB5B8-80ACB5C4 000188 000C+00 2/2 0/0 0/0 .data            __vt__10dCcD_GStts */
SECTION_DATA extern void* __vt__10dCcD_GStts[3] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__10dCcD_GSttsFv,
};

/* 80ACB5C4-80ACB5D0 000194 000C+00 3/3 0/0 0/0 .data            __vt__22daNpcT_MotionSeqMngr_c */
SECTION_DATA extern void* __vt__22daNpcT_MotionSeqMngr_c[3] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__22daNpcT_MotionSeqMngr_cFv,
};

/* 80ACB5D0-80ACB5DC 0001A0 000C+00 4/4 0/0 0/0 .data            __vt__18daNpcT_ActorMngr_c */
SECTION_DATA extern void* __vt__18daNpcT_ActorMngr_c[3] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__18daNpcT_ActorMngr_cFv,
};

/* 80ACB5DC-80ACB5E8 0001AC 000C+00 3/3 0/0 0/0 .data            __vt__15daNpcT_JntAnm_c */
SECTION_DATA extern void* __vt__15daNpcT_JntAnm_c[3] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__15daNpcT_JntAnm_cFv,
};

/* 80ACB5E8-80ACB6AC 0001B8 00C4+00 2/2 0/0 0/0 .data            __vt__12daNpc_seiD_c */
SECTION_DATA extern void* __vt__12daNpc_seiD_c[49] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__12daNpc_seiD_cFv,
    (void*)ctrlBtk__8daNpcT_cFv,
    (void*)ctrlSubFaceMotion__8daNpcT_cFi,
    (void*)checkChangeJoint__8daNpcT_cFi,
    (void*)checkRemoveJoint__8daNpcT_cFi,
    (void*)getBackboneJointNo__8daNpcT_cFv,
    (void*)getNeckJointNo__8daNpcT_cFv,
    (void*)getHeadJointNo__8daNpcT_cFv,
    (void*)getFootLJointNo__8daNpcT_cFv,
    (void*)getFootRJointNo__8daNpcT_cFv,
    (void*)getEyeballLMaterialNo__8daNpcT_cFv,
    (void*)getEyeballRMaterialNo__8daNpcT_cFv,
    (void*)getEyeballMaterialNo__8daNpcT_cFv,
    (void*)ctrlJoint__8daNpcT_cFP8J3DJointP8J3DModel,
    (void*)afterJntAnm__8daNpcT_cFi,
    (void*)setParam__12daNpc_seiD_cFv,
    (void*)checkChangeEvt__8daNpcT_cFv,
    (void*)evtTalk__12daNpc_seiD_cFv,
    (void*)evtEndProc__8daNpcT_cFv,
    (void*)evtCutProc__12daNpc_seiD_cFv,
    (void*)setAfterTalkMotion__8daNpcT_cFv,
    (void*)evtProc__8daNpcT_cFv,
    (void*)action__12daNpc_seiD_cFv,
    (void*)beforeMove__12daNpc_seiD_cFv,
    (void*)afterMoved__8daNpcT_cFv,
    (void*)setAttnPos__12daNpc_seiD_cFv,
    (void*)setFootPos__8daNpcT_cFv,
    (void*)setCollision__8daNpcT_cFv,
    (void*)setFootPrtcl__8daNpcT_cFP4cXyzff,
    (void*)checkCullDraw__8daNpcT_cFv,
    (void*)twilight__8daNpcT_cFv,
    (void*)chkXYItems__8daNpcT_cFv,
    (void*)evtOrder__8daNpcT_cFv,
    (void*)decTmr__8daNpcT_cFv,
    (void*)clrParam__8daNpcT_cFv,
    (void*)drawDbgInfo__12daNpc_seiD_cFv,
    (void*)drawOtherMdl__8daNpcT_cFv,
    (void*)drawGhost__8daNpcT_cFv,
    (void*)afterSetFaceMotionAnm__8daNpcT_cFiifi,
    (void*)afterSetMotionAnm__12daNpc_seiD_cFiifi,
    (void*)getFaceMotionAnm__8daNpcT_cF26daNpcT_faceMotionAnmData_c,
    (void*)getMotionAnm__8daNpcT_cF22daNpcT_motionAnmData_c,
    (void*)changeAnm__8daNpcT_cFPiPi,
    (void*)changeBck__8daNpcT_cFPiPi,
    (void*)changeBtp__8daNpcT_cFPiPi,
    (void*)changeBtk__8daNpcT_cFPiPi,
    (void*)setMotionAnm__8daNpcT_cFifi,
};

/* 80AC968C-80AC9728 0000EC 009C+00 1/0 0/0 0/0 .text            __dt__12daNpc_seiD_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm daNpc_seiD_c::~daNpc_seiD_c() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seid/d_a_npc_seid/__dt__12daNpc_seiD_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 80ACB35C-80ACB3F0 000000 0094+00 4/4 0/0 0/0 .rodata          m__18daNpc_seiD_Param_c */
SECTION_RODATA u8 const daNpc_seiD_Param_c::m[148] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x45, 0x7A, 0x00,
    0x00, 0x43, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x44, 0x96, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80ACB35C, &daNpc_seiD_Param_c::m);

/* 80AC9728-80AC9968 000188 0240+00 1/1 0/0 0/0 .text            create__12daNpc_seiD_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpc_seiD_c::create() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seid/d_a_npc_seid/create__12daNpc_seiD_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 80ACB3F0-80ACB3F4 000094 0004+00 1/3 0/0 0/0 .rodata          @4089 */
SECTION_RODATA static u8 const lit_4089[4] = {
    0x00,
    0x00,
    0x00,
    0x00,
};
COMPILER_STRIP_GATE(0x80ACB3F0, &lit_4089);

/* 80ACB3F4-80ACB3F8 000098 0004+00 0/2 0/0 0/0 .rodata          @4090 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_4090 = 65536.0f;
COMPILER_STRIP_GATE(0x80ACB3F4, &lit_4090);
#pragma pop

/* 80ACB3F8-80ACB3FC 00009C 0004+00 0/2 0/0 0/0 .rodata          @4091 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_4091 = 1.0f / 5.0f;
COMPILER_STRIP_GATE(0x80ACB3F8, &lit_4091);
#pragma pop

/* 80ACB3FC-80ACB400 0000A0 0004+00 2/2 0/0 0/0 .rodata          @4215 */
SECTION_RODATA static f32 const lit_4215 = 1.0f;
COMPILER_STRIP_GATE(0x80ACB3FC, &lit_4215);

/* 80AC9968-80AC9AC0 0003C8 0158+00 1/1 0/0 0/0 .text            CreateHeap__12daNpc_seiD_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpc_seiD_c::CreateHeap() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seid/d_a_npc_seid/CreateHeap__12daNpc_seiD_cFv.s"
}
#pragma pop

/* 80AC9AC0-80AC9AF4 000520 0034+00 1/1 0/0 0/0 .text            Delete__12daNpc_seiD_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpc_seiD_c::Delete() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seid/d_a_npc_seid/Delete__12daNpc_seiD_cFv.s"
}
#pragma pop

/* 80AC9AF4-80AC9B14 000554 0020+00 2/2 0/0 0/0 .text            Execute__12daNpc_seiD_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpc_seiD_c::Execute() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seid/d_a_npc_seid/Execute__12daNpc_seiD_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 80ACB400-80ACB404 0000A4 0004+00 1/1 0/0 0/0 .rodata          @4247 */
SECTION_RODATA static f32 const lit_4247 = 100.0f;
COMPILER_STRIP_GATE(0x80ACB400, &lit_4247);

/* 80AC9B14-80AC9BA8 000574 0094+00 1/1 0/0 0/0 .text            Draw__12daNpc_seiD_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpc_seiD_c::Draw() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seid/d_a_npc_seid/Draw__12daNpc_seiD_cFv.s"
}
#pragma pop

/* 80AC9BA8-80AC9BC8 000608 0020+00 1/1 0/0 0/0 .text
 * createHeapCallBack__12daNpc_seiD_cFP10fopAc_ac_c             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpc_seiD_c::createHeapCallBack(fopAc_ac_c* param_0) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seid/d_a_npc_seid/createHeapCallBack__12daNpc_seiD_cFP10fopAc_ac_c.s"
}
#pragma pop

/* 80AC9BC8-80AC9BE8 000628 0020+00 1/1 0/0 0/0 .text            getType__12daNpc_seiD_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpc_seiD_c::getType() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seid/d_a_npc_seid/getType__12daNpc_seiD_cFv.s"
}
#pragma pop

/* 80AC9BE8-80AC9C04 000648 001C+00 1/1 0/0 0/0 .text            getFlowNodeNo__12daNpc_seiD_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpc_seiD_c::getFlowNodeNo() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seid/d_a_npc_seid/getFlowNodeNo__12daNpc_seiD_cFv.s"
}
#pragma pop

/* 80AC9C04-80AC9C0C 000664 0008+00 1/1 0/0 0/0 .text            isDelete__12daNpc_seiD_cFv */
bool daNpc_seiD_c::isDelete() {
    return false;
}

/* ############################################################################################## */
/* 80ACB404-80ACB408 0000A8 0004+00 0/1 0/0 0/0 .rodata          @4292 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_4292 = -1.0f;
COMPILER_STRIP_GATE(0x80ACB404, &lit_4292);
#pragma pop

/* 80AC9C0C-80AC9D5C 00066C 0150+00 1/1 0/0 0/0 .text            reset__12daNpc_seiD_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpc_seiD_c::reset() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seid/d_a_npc_seid/reset__12daNpc_seiD_cFv.s"
}
#pragma pop

/* 80AC9D5C-80AC9E74 0007BC 0118+00 1/0 0/0 0/0 .text            setParam__12daNpc_seiD_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpc_seiD_c::setParam() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seid/d_a_npc_seid/setParam__12daNpc_seiD_cFv.s"
}
#pragma pop

/* 80AC9E74-80AC9E88 0008D4 0014+00 1/1 0/0 0/0 .text            getDistTable__12dAttention_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dAttention_c::getDistTable(int param_0) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seid/d_a_npc_seid/getDistTable__12dAttention_cFi.s"
}
#pragma pop

/* 80AC9E88-80AC9E8C 0008E8 0004+00 1/1 0/0 0/0 .text            srchActors__12daNpc_seiD_cFv */
void daNpc_seiD_c::srchActors() {
    /* empty function */
}

/* 80AC9E8C-80AC9F8C 0008EC 0100+00 1/0 0/0 0/0 .text            evtTalk__12daNpc_seiD_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpc_seiD_c::evtTalk() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seid/d_a_npc_seid/evtTalk__12daNpc_seiD_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 80ACB408-80ACB408 0000AC 0000+00 0/0 0/0 0/0 .rodata          @stringBase0 */
#pragma push
#pragma force_active on
SECTION_DEAD static char const* const stringBase_80ACB42A = "Seid";
#pragma pop

/* 80AC9F8C-80ACA054 0009EC 00C8+00 1/0 0/0 0/0 .text            evtCutProc__12daNpc_seiD_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpc_seiD_c::evtCutProc() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seid/d_a_npc_seid/evtCutProc__12daNpc_seiD_cFv.s"
}
#pragma pop

/* 80ACA054-80ACA0DC 000AB4 0088+00 1/0 0/0 0/0 .text            action__12daNpc_seiD_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpc_seiD_c::action() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seid/d_a_npc_seid/action__12daNpc_seiD_cFv.s"
}
#pragma pop

/* 80ACA0DC-80ACA15C 000B3C 0080+00 1/0 0/0 0/0 .text            beforeMove__12daNpc_seiD_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpc_seiD_c::beforeMove() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seid/d_a_npc_seid/beforeMove__12daNpc_seiD_cFv.s"
}
#pragma pop

/* 80ACA15C-80ACA1B8 000BBC 005C+00 1/0 0/0 0/0 .text            setAttnPos__12daNpc_seiD_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpc_seiD_c::setAttnPos() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seid/d_a_npc_seid/setAttnPos__12daNpc_seiD_cFv.s"
}
#pragma pop

/* 80ACA1B8-80ACA1C0 000C18 0008+00 1/0 0/0 0/0 .text            drawDbgInfo__12daNpc_seiD_cFv */
bool daNpc_seiD_c::drawDbgInfo() {
    return false;
}

/* 80ACA1C0-80ACA358 000C20 0198+00 1/0 0/0 0/0 .text afterSetMotionAnm__12daNpc_seiD_cFiifi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpc_seiD_c::afterSetMotionAnm(int param_0, int param_1, f32 param_2, int param_3) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seid/d_a_npc_seid/afterSetMotionAnm__12daNpc_seiD_cFiifi.s"
}
#pragma pop

/* 80ACA358-80ACA3A0 000DB8 0048+00 1/1 0/0 0/0 .text            selectAction__12daNpc_seiD_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpc_seiD_c::selectAction() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seid/d_a_npc_seid/selectAction__12daNpc_seiD_cFv.s"
}
#pragma pop

/* 80ACA3A0-80ACA3CC 000E00 002C+00 1/1 0/0 0/0 .text
 * chkAction__12daNpc_seiD_cFM12daNpc_seiD_cFPCvPvPv_i          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpc_seiD_c::chkAction(int (daNpc_seiD_c::*param_0)(void*)) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seid/d_a_npc_seid/chkAction__12daNpc_seiD_cFM12daNpc_seiD_cFPCvPvPv_i.s"
}
#pragma pop

/* 80ACA3CC-80ACA474 000E2C 00A8+00 2/2 0/0 0/0 .text
 * setAction__12daNpc_seiD_cFM12daNpc_seiD_cFPCvPvPv_i          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpc_seiD_c::setAction(int (daNpc_seiD_c::*param_0)(void*)) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seid/d_a_npc_seid/setAction__12daNpc_seiD_cFM12daNpc_seiD_cFPCvPvPv_i.s"
}
#pragma pop

/* 80ACA474-80ACA478 000ED4 0004+00 1/1 0/0 0/0 .text            ctrlWaitAnm__12daNpc_seiD_cFv */
void daNpc_seiD_c::ctrlWaitAnm() {
    /* empty function */
}

/* 80ACA478-80ACA4A4 000ED8 002C+00 1/0 0/0 0/0 .text            wait__12daNpc_seiD_cFPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpc_seiD_c::wait(void* param_0) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seid/d_a_npc_seid/wait__12daNpc_seiD_cFPv.s"
}
#pragma pop

/* 80ACA4A4-80ACA544 000F04 00A0+00 2/0 0/0 0/0 .text            talk__12daNpc_seiD_cFPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpc_seiD_c::talk(void* param_0) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seid/d_a_npc_seid/talk__12daNpc_seiD_cFPv.s"
}
#pragma pop

/* 80ACA544-80ACA564 000FA4 0020+00 1/0 0/0 0/0 .text            daNpc_seiD_Create__FPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void daNpc_seiD_Create(void* param_0) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seid/d_a_npc_seid/daNpc_seiD_Create__FPv.s"
}
#pragma pop

/* 80ACA564-80ACA584 000FC4 0020+00 1/0 0/0 0/0 .text            daNpc_seiD_Delete__FPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void daNpc_seiD_Delete(void* param_0) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seid/d_a_npc_seid/daNpc_seiD_Delete__FPv.s"
}
#pragma pop

/* 80ACA584-80ACA5A4 000FE4 0020+00 1/0 0/0 0/0 .text            daNpc_seiD_Execute__FPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void daNpc_seiD_Execute(void* param_0) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seid/d_a_npc_seid/daNpc_seiD_Execute__FPv.s"
}
#pragma pop

/* 80ACA5A4-80ACA5C4 001004 0020+00 1/0 0/0 0/0 .text            daNpc_seiD_Draw__FPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void daNpc_seiD_Draw(void* param_0) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seid/d_a_npc_seid/daNpc_seiD_Draw__FPv.s"
}
#pragma pop

/* 80ACA5C4-80ACA5CC 001024 0008+00 1/0 0/0 0/0 .text            daNpc_seiD_IsDelete__FPv */
static bool daNpc_seiD_IsDelete(void* param_0) {
    return true;
}

/* 80ACA5CC-80ACA614 00102C 0048+00 1/0 0/0 0/0 .text            __dt__10cCcD_GSttsFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm cCcD_GStts::~cCcD_GStts() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seid/d_a_npc_seid/__dt__10cCcD_GSttsFv.s"
}
#pragma pop

/* 80ACA614-80ACA99C 001074 0388+00 1/1 0/0 0/0 .text            __dt__8daNpcT_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm daNpcT_c::~daNpcT_c() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seid/d_a_npc_seid/__dt__8daNpcT_cFv.s"
}
#pragma pop

/* 80ACA99C-80ACA9D8 0013FC 003C+00 3/3 0/0 0/0 .text            __dt__4cXyzFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm cXyz::~cXyz() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seid/d_a_npc_seid/__dt__4cXyzFv.s"
}
#pragma pop

/* 80ACA9D8-80ACAA14 001438 003C+00 2/2 0/0 0/0 .text            __dt__5csXyzFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm csXyz::~csXyz() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seid/d_a_npc_seid/__dt__5csXyzFv.s"
}
#pragma pop

/* 80ACAA14-80ACAE18 001474 0404+00 1/1 0/0 0/0 .text
 * __ct__8daNpcT_cFPC26daNpcT_faceMotionAnmData_cPC22daNpcT_motionAnmData_cPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPC16daNpcT_evtData_cPPc
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm daNpcT_c::daNpcT_c(daNpcT_faceMotionAnmData_c const* param_0,
                       daNpcT_motionAnmData_c const* param_1,
                       daNpcT_MotionSeqMngr_c::sequenceStepData_c const* param_2, int param_3,
                       daNpcT_MotionSeqMngr_c::sequenceStepData_c const* param_4, int param_5,
                       daNpcT_evtData_c const* param_6, char** param_7) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seid/d_a_npc_seid/func_80ACAA14.s"
}
#pragma pop

/* 80ACAE18-80ACAE1C 001878 0004+00 1/1 0/0 0/0 .text            __ct__5csXyzFv */
csXyz::csXyz() {
    /* empty function */
}

/* 80ACAE1C-80ACAF18 00187C 00FC+00 1/0 0/0 0/0 .text            __dt__15daNpcT_JntAnm_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm daNpcT_JntAnm_c::~daNpcT_JntAnm_c() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seid/d_a_npc_seid/__dt__15daNpcT_JntAnm_cFv.s"
}
#pragma pop

/* 80ACAF18-80ACAF1C 001978 0004+00 1/1 0/0 0/0 .text            __ct__4cXyzFv */
cXyz::cXyz() {
    /* empty function */
}

/* 80ACAF1C-80ACAF64 00197C 0048+00 1/0 0/0 0/0 .text            __dt__18daNpcT_ActorMngr_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm daNpcT_ActorMngr_c::~daNpcT_ActorMngr_c() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seid/d_a_npc_seid/__dt__18daNpcT_ActorMngr_cFv.s"
}
#pragma pop

/* 80ACAF64-80ACAFAC 0019C4 0048+00 1/0 0/0 0/0 .text            __dt__22daNpcT_MotionSeqMngr_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm daNpcT_MotionSeqMngr_c::~daNpcT_MotionSeqMngr_c() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seid/d_a_npc_seid/__dt__22daNpcT_MotionSeqMngr_cFv.s"
}
#pragma pop

/* 80ACAFAC-80ACB01C 001A0C 0070+00 1/0 0/0 0/0 .text            __dt__12dBgS_AcchCirFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dBgS_AcchCir::~dBgS_AcchCir() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seid/d_a_npc_seid/__dt__12dBgS_AcchCirFv.s"
}
#pragma pop

/* 80ACB01C-80ACB078 001A7C 005C+00 1/0 0/0 0/0 .text            __dt__10dCcD_GSttsFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dCcD_GStts::~dCcD_GStts() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seid/d_a_npc_seid/__dt__10dCcD_GSttsFv.s"
}
#pragma pop

/* 80ACB078-80ACB0E8 001AD8 0070+00 3/2 0/0 0/0 .text            __dt__12dBgS_ObjAcchFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dBgS_ObjAcch::~dBgS_ObjAcch() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seid/d_a_npc_seid/__dt__12dBgS_ObjAcchFv.s"
}
#pragma pop

/* 80ACB0E8-80ACB130 001B48 0048+00 1/0 0/0 0/0 .text            __dt__12J3DFrameCtrlFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DFrameCtrl::~J3DFrameCtrl() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seid/d_a_npc_seid/__dt__12J3DFrameCtrlFv.s"
}
#pragma pop

/* 80ACB130-80ACB138 001B90 0008+00 1/0 0/0 0/0 .text            getEyeballMaterialNo__8daNpcT_cFv
 */
bool daNpcT_c::getEyeballMaterialNo() {
    return false;
}

/* 80ACB138-80ACB13C 001B98 0004+00 1/0 0/0 0/0 .text            ctrlSubFaceMotion__8daNpcT_cFi */
void daNpcT_c::ctrlSubFaceMotion(int param_0) {
    /* empty function */
}

/* 80ACB13C-80ACB144 001B9C 0008+00 1/0 0/0 0/0 .text            checkChangeJoint__8daNpcT_cFi */
bool daNpcT_c::checkChangeJoint(int param_0) {
    return false;
}

/* 80ACB144-80ACB14C 001BA4 0008+00 1/0 0/0 0/0 .text            checkRemoveJoint__8daNpcT_cFi */
bool daNpcT_c::checkRemoveJoint(int param_0) {
    return false;
}

/* 80ACB14C-80ACB154 001BAC 0008+00 1/0 0/0 0/0 .text            getBackboneJointNo__8daNpcT_cFv */
s32 daNpcT_c::getBackboneJointNo() {
    return -1;
}

/* 80ACB154-80ACB15C 001BB4 0008+00 1/0 0/0 0/0 .text            getNeckJointNo__8daNpcT_cFv */
s32 daNpcT_c::getNeckJointNo() {
    return -1;
}

/* 80ACB15C-80ACB164 001BBC 0008+00 1/0 0/0 0/0 .text            getHeadJointNo__8daNpcT_cFv */
s32 daNpcT_c::getHeadJointNo() {
    return -1;
}

/* 80ACB164-80ACB16C 001BC4 0008+00 1/0 0/0 0/0 .text            getFootLJointNo__8daNpcT_cFv */
s32 daNpcT_c::getFootLJointNo() {
    return -1;
}

/* 80ACB16C-80ACB174 001BCC 0008+00 1/0 0/0 0/0 .text            getFootRJointNo__8daNpcT_cFv */
s32 daNpcT_c::getFootRJointNo() {
    return -1;
}

/* 80ACB174-80ACB17C 001BD4 0008+00 1/0 0/0 0/0 .text            getEyeballLMaterialNo__8daNpcT_cFv
 */
bool daNpcT_c::getEyeballLMaterialNo() {
    return false;
}

/* 80ACB17C-80ACB184 001BDC 0008+00 1/0 0/0 0/0 .text            getEyeballRMaterialNo__8daNpcT_cFv
 */
bool daNpcT_c::getEyeballRMaterialNo() {
    return false;
}

/* 80ACB184-80ACB188 001BE4 0004+00 1/0 0/0 0/0 .text            afterJntAnm__8daNpcT_cFi */
void daNpcT_c::afterJntAnm(int param_0) {
    /* empty function */
}

/* 80ACB188-80ACB190 001BE8 0008+00 1/0 0/0 0/0 .text            checkChangeEvt__8daNpcT_cFv */
bool daNpcT_c::checkChangeEvt() {
    return false;
}

/* 80ACB190-80ACB198 001BF0 0008+00 1/0 0/0 0/0 .text            evtEndProc__8daNpcT_cFv */
bool daNpcT_c::evtEndProc() {
    return true;
}

/* 80ACB198-80ACB19C 001BF8 0004+00 1/0 0/0 0/0 .text            setAfterTalkMotion__8daNpcT_cFv */
void daNpcT_c::setAfterTalkMotion() {
    /* empty function */
}

/* 80ACB19C-80ACB1A0 001BFC 0004+00 1/0 0/0 0/0 .text            afterMoved__8daNpcT_cFv */
void daNpcT_c::afterMoved() {
    /* empty function */
}

/* 80ACB1A0-80ACB1A4 001C00 0004+00 1/0 0/0 0/0 .text            setCollision__8daNpcT_cFv */
void daNpcT_c::setCollision() {
    /* empty function */
}

/* 80ACB1A4-80ACB1AC 001C04 0008+00 1/0 0/0 0/0 .text            chkXYItems__8daNpcT_cFv */
bool daNpcT_c::chkXYItems() {
    return false;
}

/* 80ACB1AC-80ACB1C4 001C0C 0018+00 1/0 0/0 0/0 .text            decTmr__8daNpcT_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpcT_c::decTmr() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seid/d_a_npc_seid/decTmr__8daNpcT_cFv.s"
}
#pragma pop

/* 80ACB1C4-80ACB1C8 001C24 0004+00 1/0 0/0 0/0 .text            drawOtherMdl__8daNpcT_cFv */
void daNpcT_c::drawOtherMdl() {
    /* empty function */
}

/* 80ACB1C8-80ACB1CC 001C28 0004+00 1/0 0/0 0/0 .text            drawGhost__8daNpcT_cFv */
void daNpcT_c::drawGhost() {
    /* empty function */
}

/* 80ACB1CC-80ACB1D4 001C2C 0008+00 1/0 0/0 0/0 .text afterSetFaceMotionAnm__8daNpcT_cFiifi */
bool daNpcT_c::afterSetFaceMotionAnm(int param_0, int param_1, f32 param_2, int param_3) {
    return true;
}

/* 80ACB1D4-80ACB204 001C34 0030+00 1/0 0/0 0/0 .text
 * getFaceMotionAnm__8daNpcT_cF26daNpcT_faceMotionAnmData_c     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpcT_c::getFaceMotionAnm(daNpcT_faceMotionAnmData_c param_0) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seid/d_a_npc_seid/getFaceMotionAnm__8daNpcT_cF26daNpcT_faceMotionAnmData_c.s"
}
#pragma pop

/* 80ACB204-80ACB234 001C64 0030+00 1/0 0/0 0/0 .text
 * getMotionAnm__8daNpcT_cF22daNpcT_motionAnmData_c             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpcT_c::getMotionAnm(daNpcT_motionAnmData_c param_0) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seid/d_a_npc_seid/getMotionAnm__8daNpcT_cF22daNpcT_motionAnmData_c.s"
}
#pragma pop

/* 80ACB234-80ACB238 001C94 0004+00 1/0 0/0 0/0 .text            changeAnm__8daNpcT_cFPiPi */
void daNpcT_c::changeAnm(int* param_0, int* param_1) {
    /* empty function */
}

/* 80ACB238-80ACB23C 001C98 0004+00 1/0 0/0 0/0 .text            changeBck__8daNpcT_cFPiPi */
void daNpcT_c::changeBck(int* param_0, int* param_1) {
    /* empty function */
}

/* 80ACB23C-80ACB240 001C9C 0004+00 1/0 0/0 0/0 .text            changeBtp__8daNpcT_cFPiPi */
void daNpcT_c::changeBtp(int* param_0, int* param_1) {
    /* empty function */
}

/* 80ACB240-80ACB244 001CA0 0004+00 1/0 0/0 0/0 .text            changeBtk__8daNpcT_cFPiPi */
void daNpcT_c::changeBtk(int* param_0, int* param_1) {
    /* empty function */
}

/* ############################################################################################## */
/* 80ACB6AC-80ACB6B8 00027C 000C+00 2/2 0/0 0/0 .data            __vt__18daNpc_seiD_Param_c */
SECTION_DATA extern void* __vt__18daNpc_seiD_Param_c[3] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__18daNpc_seiD_Param_cFv,
};

/* 80ACB6C0-80ACB6CC 000008 000C+00 1/1 0/0 0/0 .bss             @3814 */
static u8 lit_3814[12];

/* 80ACB6CC-80ACB6D0 000014 0004+00 1/1 0/0 0/0 .bss             l_HIO */
static u8 l_HIO[4];

/* 80ACB244-80ACB2AC 001CA4 0068+00 0/0 1/0 0/0 .text            __sinit_d_a_npc_seid_cpp */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __sinit_d_a_npc_seid_cpp() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seid/d_a_npc_seid/__sinit_d_a_npc_seid_cpp.s"
}
#pragma pop

#pragma push
#pragma force_active on
REGISTER_CTORS(0x80ACB244, __sinit_d_a_npc_seid_cpp);
#pragma pop

/* 80ACB2AC-80ACB2F0 001D0C 0044+00 1/1 0/0 0/0 .text
 * __ct__12daNpc_seiD_cFPC26daNpcT_faceMotionAnmData_cPC22daNpcT_motionAnmData_cPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPC16daNpcT_evtData_cPPc
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm daNpc_seiD_c::daNpc_seiD_c(daNpcT_faceMotionAnmData_c const* param_0,
                               daNpcT_motionAnmData_c const* param_1,
                               daNpcT_MotionSeqMngr_c::sequenceStepData_c const* param_2,
                               int param_3,
                               daNpcT_MotionSeqMngr_c::sequenceStepData_c const* param_4,
                               int param_5, daNpcT_evtData_c const* param_6, char** param_7) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seid/d_a_npc_seid/func_80ACB2AC.s"
}
#pragma pop

/* 80ACB2F0-80ACB338 001D50 0048+00 2/1 0/0 0/0 .text            __dt__18daNpc_seiD_Param_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm daNpc_seiD_Param_c::~daNpc_seiD_Param_c() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seid/d_a_npc_seid/__dt__18daNpc_seiD_Param_cFv.s"
}
#pragma pop

/* 80ACB338-80ACB340 001D98 0008+00 1/0 0/0 0/0 .text            @36@__dt__12dBgS_ObjAcchFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void func_80ACB338() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seid/d_a_npc_seid/func_80ACB338.s"
}
#pragma pop

/* 80ACB340-80ACB348 001DA0 0008+00 1/0 0/0 0/0 .text            @20@__dt__12dBgS_ObjAcchFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void func_80ACB340() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seid/d_a_npc_seid/func_80ACB340.s"
}
#pragma pop

/* 80ACB408-80ACB408 0000AC 0000+00 0/0 0/0 0/0 .rodata          @stringBase0 */
