//
// Generated By: dol2asm
// Translation Unit: d_a_npc_zelRo
//

#include "rel/d/a/npc/d_a_npc_zelRo/d_a_npc_zelRo.h"
#include "dol2asm.h"

//
// Types:
//

struct mDoMtx_stack_c {
    static u8 now[48];
};

struct mDoExt_McaMorfCallBack2_c {};

struct mDoExt_McaMorfCallBack1_c {};

struct J3DAnmTransform {};

struct J3DModelData {};

struct Vec {};

struct Z2Creature {
    /* 802C03C8 */ Z2Creature();
    /* 802C0420 */ ~Z2Creature();
    /* 802C0530 */ void init(Vec*, Vec*, u8, u8);
};

struct mDoExt_McaMorfSO {
    /* 800107D0 */ mDoExt_McaMorfSO(J3DModelData*, mDoExt_McaMorfCallBack1_c*,
                                    mDoExt_McaMorfCallBack2_c*, J3DAnmTransform*, int, f32, int,
                                    int, Z2Creature*, u32, u32);
    /* 80011310 */ void stopZelAnime();
};

struct fopAc_ac_c {
    /* 80018B64 */ fopAc_ac_c();
    /* 80018C8C */ ~fopAc_ac_c();
};

struct daNpcT_faceMotionAnmData_c {};

struct daNpcT_MotionSeqMngr_c {
    struct sequenceStepData_c {};

    /* 80145898 */ void initialize();
    /* 80B744B8 */ ~daNpcT_MotionSeqMngr_c();
};

struct daNpcT_evtData_c {};

struct daNpcT_motionAnmData_c {};

struct J3DJoint {};

struct daNpc_ZelRo_c {
    /* 80B71FAC */ ~daNpc_ZelRo_c();
    /* 80B720E4 */ void create();
    /* 80B72378 */ void CreateHeap();
    /* 80B727E4 */ void Delete();
    /* 80B72818 */ void Execute();
    /* 80B72838 */ void Draw();
    /* 80B728FC */ void createHeapCallBack(fopAc_ac_c*);
    /* 80B7291C */ void ctrlJointCallBack(J3DJoint*, int);
    /* 80B72974 */ void getType();
    /* 80B72994 */ void getFlowNodeNo();
    /* 80B729B0 */ void getPath();
    /* 80B729BC */ void isDelete();
    /* 80B72A10 */ void reset();
    /* 80B72B8C */ void afterJntAnm(int);
    /* 80B72C18 */ void ctrlBtk();
    /* 80B72D24 */ void setParam();
    /* 80B72E18 */ void setAfterTalkMotion();
    /* 80B72E78 */ void srchActors();
    /* 80B72E7C */ void evtTalk();
    /* 80B72F7C */ void evtCutProc();
    /* 80B73044 */ void action();
    /* 80B73194 */ void beforeMove();
    /* 80B7320C */ void setAttnPos();
    /* 80B7342C */ void setCollision();
    /* 80B7355C */ bool drawDbgInfo();
    /* 80B73564 */ void selectAction();
    /* 80B735AC */ void chkAction(int (daNpc_ZelRo_c::*)(void*));
    /* 80B735D8 */ void setAction(int (daNpc_ZelRo_c::*)(void*));
    /* 80B73680 */ void wait(void*);
    /* 80B7382C */ void talk(void*);
    /* 80B74AE8 */ daNpc_ZelRo_c(daNpcT_faceMotionAnmData_c const*, daNpcT_motionAnmData_c const*,
                                 daNpcT_MotionSeqMngr_c::sequenceStepData_c const*, int,
                                 daNpcT_MotionSeqMngr_c::sequenceStepData_c const*, int,
                                 daNpcT_evtData_c const*, char**);
    /* 80B74BA8 */ s32 getEyeballRMaterialNo();
    /* 80B74BB0 */ s32 getEyeballLMaterialNo();
    /* 80B74BB8 */ s32 getHeadJointNo();
    /* 80B74BC0 */ s32 getNeckJointNo();
    /* 80B74BC8 */ bool getBackboneJointNo();
    /* 80B74BD0 */ void checkChangeJoint(int);
    /* 80B74BE0 */ void checkRemoveJoint(int);

    static void* mCutNameList;
    static u8 mCutList[12];
};

struct daNpc_ZelRo_Param_c {
    /* 80B74BF0 */ ~daNpc_ZelRo_Param_c();

    static u8 const m[140];
};

struct dCcD_GObjInf {
    /* 80083A28 */ dCcD_GObjInf();
    /* 800840E4 */ ~dCcD_GObjInf();
};

struct _GXColorS10 {};

struct J3DModel {};

struct cXyz {
    /* 80266B34 */ void operator-(Vec const&) const;
    /* 80B73E18 */ ~cXyz();
    /* 80B7446C */ cXyz();
};

struct daNpcT_c {
    /* 80147FA4 */ void tgHitCallBack(fopAc_ac_c*, dCcD_GObjInf*, fopAc_ac_c*, dCcD_GObjInf*);
    /* 801483F8 */ void loadRes(s8 const*, char const**);
    /* 801484AC */ void deleteRes(s8 const*, char const**);
    /* 8014852C */ void execute();
    /* 8014886C */ void draw(int, int, f32, _GXColorS10*, f32, int, int, int);
    /* 80148C70 */ void setEnvTevColor();
    /* 80148CCC */ void setRoomNo();
    /* 80149190 */ void setMtx();
    /* 8014951C */ void ctrlJoint(J3DJoint*, J3DModel*);
    /* 8014997C */ void evtProc();
    /* 80149BB4 */ void setFootPos();
    /* 80149D7C */ void setFootPrtcl(cXyz*, f32, f32);
    /* 8014A05C */ bool checkCullDraw();
    /* 8014A064 */ void twilight();
    /* 8014A0B0 */ void evtOrder();
    /* 8014A224 */ void evtChange();
    /* 8014A324 */ void clrParam();
    /* 8014A388 */ void setFaceMotionAnm(int, bool);
    /* 8014A628 */ void setMotionAnm(int, f32, int);
    /* 8014AA18 */ void setAngle(s16);
    /* 8014AA40 */ void hitChk(dCcD_GObjInf*, u32);
    /* 8014AAD0 */ void setDamage(int, int, int);
    /* 8014B338 */ void srchPlayerActor();
    /* 8014B648 */ void step(s16, int, int, int, int);
    /* 8014BBF0 */ void initTalk(int, fopAc_ac_c**);
    /* 8014BC78 */ void talkProc(int*, int, fopAc_ac_c**, int);
    /* 80B73A90 */ ~daNpcT_c();
    /* 80B73F68 */ daNpcT_c(daNpcT_faceMotionAnmData_c const*, daNpcT_motionAnmData_c const*,
                            daNpcT_MotionSeqMngr_c::sequenceStepData_c const*, int,
                            daNpcT_MotionSeqMngr_c::sequenceStepData_c const*, int,
                            daNpcT_evtData_c const*, char**);
    /* 80B749A8 */ void ctrlSubFaceMotion(int);
    /* 80B749AC */ s32 getFootLJointNo();
    /* 80B749B4 */ s32 getFootRJointNo();
    /* 80B749BC */ bool getEyeballMaterialNo();
    /* 80B749C4 */ bool checkChangeEvt();
    /* 80B749CC */ bool evtEndProc();
    /* 80B749D4 */ void afterMoved();
    /* 80B749D8 */ bool chkXYItems();
    /* 80B749E0 */ void decTmr();
    /* 80B749F8 */ void drawOtherMdl();
    /* 80B749FC */ void drawGhost();
    /* 80B74A00 */ bool afterSetFaceMotionAnm(int, int, f32, int);
    /* 80B74A08 */ bool afterSetMotionAnm(int, int, f32, int);
    /* 80B74A10 */ void getFaceMotionAnm(daNpcT_faceMotionAnmData_c);
    /* 80B74A40 */ void getMotionAnm(daNpcT_motionAnmData_c);
    /* 80B74A70 */ void changeAnm(int*, int*);
    /* 80B74A74 */ void changeBck(int*, int*);
    /* 80B74A78 */ void changeBtp(int*, int*);
    /* 80B74A7C */ void changeBtk(int*, int*);

    static u8 mCcDCyl[68];
};

struct daNpcT_Path_c {
    /* 80145C40 */ void initialize();
    /* 80145C74 */ void setPathInfo(u8, s8, u8);
    /* 80B73E90 */ ~daNpcT_Path_c();
};

struct daNpcT_MatAnm_c {
    /* 80145764 */ void initialize();
};

struct daNpcT_JntAnm_c {
    /* 80146C98 */ void initialize();
    /* 80146CD8 */ void setParam(fopAc_ac_c*, J3DModel*, cXyz*, int, int, int, f32, f32, f32, f32,
                                 f32, f32, f32, f32, f32, f32, cXyz*);
    /* 80147C38 */ void calcJntRad(f32, f32, f32);
    /* 80B74370 */ ~daNpcT_JntAnm_c();
    /* 80B74684 */ void setEyeAngleY(cXyz, s16, int, f32, s16);
    /* 80B747A0 */ void setEyeAngleX(cXyz, f32, s16);
};

struct daNpcT_DmgStagger_c {
    /* 80147DCC */ void setParam(fopAc_ac_c*, fopAc_ac_c*, s16);
    /* 80147E3C */ void calc(int);
};

struct daNpcT_ActorMngr_c {
    /* 801456D4 */ void initialize();
    /* 801456E0 */ void entry(fopAc_ac_c*);
    /* 801456FC */ void remove();
    /* 80B74470 */ ~daNpcT_ActorMngr_c();
};

struct dRes_info_c {};

struct dRes_control_c {
    /* 8003C2EC */ void getRes(char const*, s32, dRes_info_c*, int);
};

struct dMsgFlow_c {
    /* 80249F00 */ dMsgFlow_c();
    /* 80249F48 */ ~dMsgFlow_c();
};

struct dEvt_control_c {
    /* 80042468 */ void reset();
};

struct dEvent_manager_c {
    /* 80047B1C */ void getMyStaffId(char const*, fopAc_ac_c*, int);
    /* 80047E10 */ void getMyActIdx(int, char const* const*, int, int, int);
    /* 8004817C */ void cutEnd(int);
    /* 800487F0 */ void ChkPresentEnd();
};

struct dCcD_Stts {
    /* 80083860 */ void Init(int, int, fopAc_ac_c*);
};

struct dCcD_SrcCyl {};

struct dCcD_GStts {
    /* 80083760 */ dCcD_GStts();
    /* 80B74570 */ ~dCcD_GStts();
};

struct dCcD_Cyl {
    /* 800848B4 */ void Set(dCcD_SrcCyl const&);
};

struct dBgS_PolyPassChk {
    /* 80078E68 */ void SetObj();
};

struct dBgS_ObjAcch {
    /* 80B745CC */ ~dBgS_ObjAcch();
};

struct dBgS_LinChk {
    /* 80077C68 */ dBgS_LinChk();
    /* 80077CDC */ ~dBgS_LinChk();
};

struct dBgS_GndChk {
    /* 8007757C */ dBgS_GndChk();
    /* 800775F0 */ ~dBgS_GndChk();
};

struct dBgS_AcchCir {
    /* 80075EAC */ dBgS_AcchCir();
    /* 80075F40 */ void SetWallR(f32);
    /* 80B74500 */ ~dBgS_AcchCir();
};

struct csXyz {
    /* 80B73E54 */ ~csXyz();
    /* 80B7436C */ csXyz();
};

struct dBgS {};

struct dBgS_Acch {
    /* 80075F94 */ ~dBgS_Acch();
    /* 800760A0 */ dBgS_Acch();
    /* 80076248 */ void Set(cXyz*, cXyz*, fopAc_ac_c*, int, dBgS_AcchCir*, cXyz*, csXyz*, csXyz*);
    /* 80076AAC */ void CrrPos(dBgS&);
};

struct cM3dGCyl {
    /* 8026F1DC */ void SetC(cXyz const&);
    /* 8026F1F8 */ void SetH(f32);
    /* 8026F200 */ void SetR(f32);
    /* 80B73ED8 */ ~cM3dGCyl();
};

struct cM3dGCir {
    /* 8026EF18 */ ~cM3dGCir();
};

struct cM3dGAab {
    /* 80B73F20 */ ~cM3dGAab();
};

struct cCcD_Obj {};

struct cCcS {
    /* 80264BA8 */ void Set(cCcD_Obj*);
};

struct cCcD_GStts {
    /* 80B73A48 */ ~cCcD_GStts();
};

struct cBgS_PolyInfo {
    /* 802680B0 */ ~cBgS_PolyInfo();
};

struct cBgS_GndChk {
    /* 80267C1C */ cBgS_GndChk();
    /* 80267C94 */ ~cBgS_GndChk();
};

struct JMath {
    static u8 sincosTable_[65536];
};

struct J3DTexNoAnm {
    /* 80B726D0 */ ~J3DTexNoAnm();
    /* 80B72718 */ J3DTexNoAnm();
    /* 80B73A18 */ void calc(u16*) const;
};

struct J3DTexMtxAnm {
    /* 80B7273C */ ~J3DTexMtxAnm();
    /* 80B72778 */ J3DTexMtxAnm();
};

struct J3DTevKColorAnm {
    /* 80B72628 */ ~J3DTevKColorAnm();
    /* 80B72664 */ J3DTevKColorAnm();
};

struct J3DTevColorAnm {
    /* 80B7267C */ ~J3DTevColorAnm();
    /* 80B726B8 */ J3DTevColorAnm();
};

struct J3DMaterialAnm {
    /* 8032C320 */ void initialize();
};

struct J3DMatColorAnm {
    /* 80B72790 */ ~J3DMatColorAnm();
    /* 80B727CC */ J3DMatColorAnm();
};

struct J3DFrameCtrl {
    /* 803283FC */ void init(s16);
    /* 80B7463C */ ~J3DFrameCtrl();
};

struct J3DAnmTexPattern {
    /* 8032AF50 */ void getTexNo(u16, u16*) const;
};

//
// Forward References:
//

extern "C" void __dt__13daNpc_ZelRo_cFv();
extern "C" void create__13daNpc_ZelRo_cFv();
extern "C" void CreateHeap__13daNpc_ZelRo_cFv();
extern "C" void __dt__15J3DTevKColorAnmFv();
extern "C" void __ct__15J3DTevKColorAnmFv();
extern "C" void __dt__14J3DTevColorAnmFv();
extern "C" void __ct__14J3DTevColorAnmFv();
extern "C" void __dt__11J3DTexNoAnmFv();
extern "C" void __ct__11J3DTexNoAnmFv();
extern "C" void __dt__12J3DTexMtxAnmFv();
extern "C" void __ct__12J3DTexMtxAnmFv();
extern "C" void __dt__14J3DMatColorAnmFv();
extern "C" void __ct__14J3DMatColorAnmFv();
extern "C" void Delete__13daNpc_ZelRo_cFv();
extern "C" void Execute__13daNpc_ZelRo_cFv();
extern "C" void Draw__13daNpc_ZelRo_cFv();
extern "C" void createHeapCallBack__13daNpc_ZelRo_cFP10fopAc_ac_c();
extern "C" void ctrlJointCallBack__13daNpc_ZelRo_cFP8J3DJointi();
extern "C" void getType__13daNpc_ZelRo_cFv();
extern "C" void getFlowNodeNo__13daNpc_ZelRo_cFv();
extern "C" void getPath__13daNpc_ZelRo_cFv();
extern "C" void isDelete__13daNpc_ZelRo_cFv();
extern "C" void reset__13daNpc_ZelRo_cFv();
extern "C" void afterJntAnm__13daNpc_ZelRo_cFi();
extern "C" void ctrlBtk__13daNpc_ZelRo_cFv();
extern "C" void setParam__13daNpc_ZelRo_cFv();
extern "C" void setAfterTalkMotion__13daNpc_ZelRo_cFv();
extern "C" void srchActors__13daNpc_ZelRo_cFv();
extern "C" void evtTalk__13daNpc_ZelRo_cFv();
extern "C" void evtCutProc__13daNpc_ZelRo_cFv();
extern "C" void action__13daNpc_ZelRo_cFv();
extern "C" void beforeMove__13daNpc_ZelRo_cFv();
extern "C" void setAttnPos__13daNpc_ZelRo_cFv();
extern "C" void setCollision__13daNpc_ZelRo_cFv();
extern "C" bool drawDbgInfo__13daNpc_ZelRo_cFv();
extern "C" void selectAction__13daNpc_ZelRo_cFv();
extern "C" void chkAction__13daNpc_ZelRo_cFM13daNpc_ZelRo_cFPCvPvPv_i();
extern "C" void setAction__13daNpc_ZelRo_cFM13daNpc_ZelRo_cFPCvPvPv_i();
extern "C" void wait__13daNpc_ZelRo_cFPv();
extern "C" void talk__13daNpc_ZelRo_cFPv();
extern "C" static void daNpc_ZelRo_Create__FPv();
extern "C" static void daNpc_ZelRo_Delete__FPv();
extern "C" static void daNpc_ZelRo_Execute__FPv();
extern "C" static void daNpc_ZelRo_Draw__FPv();
extern "C" static bool daNpc_ZelRo_IsDelete__FPv();
extern "C" void calc__11J3DTexNoAnmCFPUs();
extern "C" void __dt__10cCcD_GSttsFv();
extern "C" void __dt__8daNpcT_cFv();
extern "C" void __dt__4cXyzFv();
extern "C" void __dt__5csXyzFv();
extern "C" void __dt__13daNpcT_Path_cFv();
extern "C" void __dt__8cM3dGCylFv();
extern "C" void __dt__8cM3dGAabFv();
extern "C" void
__ct__8daNpcT_cFPC26daNpcT_faceMotionAnmData_cPC22daNpcT_motionAnmData_cPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPC16daNpcT_evtData_cPPc();
extern "C" void __ct__5csXyzFv();
extern "C" void __dt__15daNpcT_JntAnm_cFv();
extern "C" void __ct__4cXyzFv();
extern "C" void __dt__18daNpcT_ActorMngr_cFv();
extern "C" void __dt__22daNpcT_MotionSeqMngr_cFv();
extern "C" void __dt__12dBgS_AcchCirFv();
extern "C" void __dt__10dCcD_GSttsFv();
extern "C" void __dt__12dBgS_ObjAcchFv();
extern "C" void __dt__12J3DFrameCtrlFv();
extern "C" void setEyeAngleY__15daNpcT_JntAnm_cF4cXyzsifs();
extern "C" void setEyeAngleX__15daNpcT_JntAnm_cF4cXyzfs();
extern "C" void ctrlSubFaceMotion__8daNpcT_cFi();
extern "C" s32 getFootLJointNo__8daNpcT_cFv();
extern "C" s32 getFootRJointNo__8daNpcT_cFv();
extern "C" bool getEyeballMaterialNo__8daNpcT_cFv();
extern "C" bool checkChangeEvt__8daNpcT_cFv();
extern "C" bool evtEndProc__8daNpcT_cFv();
extern "C" void afterMoved__8daNpcT_cFv();
extern "C" bool chkXYItems__8daNpcT_cFv();
extern "C" void decTmr__8daNpcT_cFv();
extern "C" void drawOtherMdl__8daNpcT_cFv();
extern "C" void drawGhost__8daNpcT_cFv();
extern "C" bool afterSetFaceMotionAnm__8daNpcT_cFiifi();
extern "C" bool afterSetMotionAnm__8daNpcT_cFiifi();
extern "C" void getFaceMotionAnm__8daNpcT_cF26daNpcT_faceMotionAnmData_c();
extern "C" void getMotionAnm__8daNpcT_cF22daNpcT_motionAnmData_c();
extern "C" void changeAnm__8daNpcT_cFPiPi();
extern "C" void changeBck__8daNpcT_cFPiPi();
extern "C" void changeBtp__8daNpcT_cFPiPi();
extern "C" void changeBtk__8daNpcT_cFPiPi();
extern "C" void __sinit_d_a_npc_zelRo_cpp();
extern "C" void
__ct__13daNpc_ZelRo_cFPC26daNpcT_faceMotionAnmData_cPC22daNpcT_motionAnmData_cPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPC16daNpcT_evtData_cPPc();
extern "C" s32 getEyeballRMaterialNo__13daNpc_ZelRo_cFv();
extern "C" s32 getEyeballLMaterialNo__13daNpc_ZelRo_cFv();
extern "C" s32 getHeadJointNo__13daNpc_ZelRo_cFv();
extern "C" s32 getNeckJointNo__13daNpc_ZelRo_cFv();
extern "C" bool getBackboneJointNo__13daNpc_ZelRo_cFv();
extern "C" void checkChangeJoint__13daNpc_ZelRo_cFi();
extern "C" void checkRemoveJoint__13daNpc_ZelRo_cFi();
extern "C" void __dt__19daNpc_ZelRo_Param_cFv();
extern "C" static void func_80B74C38();
extern "C" static void func_80B74C40();
extern "C" u8 const m__19daNpc_ZelRo_Param_c[140];
extern "C" extern char const* const d_a_npc_zelRo__stringBase0;
extern "C" void* mCutNameList__13daNpc_ZelRo_c;
extern "C" u8 mCutList__13daNpc_ZelRo_c[12];

//
// External References:
//

SECTION_INIT void memset();
extern "C" void mDoMtx_YrotM__FPA4_fs();
extern "C" void mDoMtx_ZrotM__FPA4_fs();
extern "C" void
__ct__16mDoExt_McaMorfSOFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiP10Z2CreatureUlUl();
extern "C" void stopZelAnime__16mDoExt_McaMorfSOFv();
extern "C" void __ct__10fopAc_ac_cFv();
extern "C" void __dt__10fopAc_ac_cFv();
extern "C" void fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl();
extern "C" void fopAcM_setCullSizeBox__FP10fopAc_ac_cffffff();
extern "C" void fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c();
extern "C" void dComIfGs_wolfeye_effect_check__Fv();
extern "C" void getRes__14dRes_control_cFPCclP11dRes_info_ci();
extern "C" void reset__14dEvt_control_cFv();
extern "C" void getMyStaffId__16dEvent_manager_cFPCcP10fopAc_ac_ci();
extern "C" void getMyActIdx__16dEvent_manager_cFiPCPCciii();
extern "C" void cutEnd__16dEvent_manager_cFi();
extern "C" void ChkPresentEnd__16dEvent_manager_cFv();
extern "C" void __ct__12dBgS_AcchCirFv();
extern "C" void SetWallR__12dBgS_AcchCirFf();
extern "C" void __dt__9dBgS_AcchFv();
extern "C" void __ct__9dBgS_AcchFv();
extern "C" void Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz();
extern "C" void CrrPos__9dBgS_AcchFR4dBgS();
extern "C" void __ct__11dBgS_GndChkFv();
extern "C" void __dt__11dBgS_GndChkFv();
extern "C" void __ct__11dBgS_LinChkFv();
extern "C" void __dt__11dBgS_LinChkFv();
extern "C" void SetObj__16dBgS_PolyPassChkFv();
extern "C" void __ct__10dCcD_GSttsFv();
extern "C" void Init__9dCcD_SttsFiiP10fopAc_ac_c();
extern "C" void __ct__12dCcD_GObjInfFv();
extern "C" void __dt__12dCcD_GObjInfFv();
extern "C" void Set__8dCcD_CylFRC11dCcD_SrcCyl();
extern "C" void initialize__18daNpcT_ActorMngr_cFv();
extern "C" void entry__18daNpcT_ActorMngr_cFP10fopAc_ac_c();
extern "C" void remove__18daNpcT_ActorMngr_cFv();
extern "C" void initialize__15daNpcT_MatAnm_cFv();
extern "C" void initialize__22daNpcT_MotionSeqMngr_cFv();
extern "C" void initialize__13daNpcT_Path_cFv();
extern "C" void setPathInfo__13daNpcT_Path_cFUcScUc();
extern "C" void initialize__15daNpcT_JntAnm_cFv();
extern "C" void setParam__15daNpcT_JntAnm_cFP10fopAc_ac_cP8J3DModelP4cXyziiiffffffffffP4cXyz();
extern "C" void calcJntRad__15daNpcT_JntAnm_cFfff();
extern "C" void setParam__19daNpcT_DmgStagger_cFP10fopAc_ac_cP10fopAc_ac_cs();
extern "C" void calc__19daNpcT_DmgStagger_cFi();
extern "C" void tgHitCallBack__8daNpcT_cFP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf();
extern "C" void loadRes__8daNpcT_cFPCScPPCc();
extern "C" void deleteRes__8daNpcT_cFPCScPPCc();
extern "C" void execute__8daNpcT_cFv();
extern "C" void draw__8daNpcT_cFiifP11_GXColorS10fiii();
extern "C" void setEnvTevColor__8daNpcT_cFv();
extern "C" void setRoomNo__8daNpcT_cFv();
extern "C" void setMtx__8daNpcT_cFv();
extern "C" void ctrlJoint__8daNpcT_cFP8J3DJointP8J3DModel();
extern "C" void evtProc__8daNpcT_cFv();
extern "C" void setFootPos__8daNpcT_cFv();
extern "C" void setFootPrtcl__8daNpcT_cFP4cXyzff();
extern "C" bool checkCullDraw__8daNpcT_cFv();
extern "C" void twilight__8daNpcT_cFv();
extern "C" void evtOrder__8daNpcT_cFv();
extern "C" void evtChange__8daNpcT_cFv();
extern "C" void clrParam__8daNpcT_cFv();
extern "C" void setFaceMotionAnm__8daNpcT_cFib();
extern "C" void setMotionAnm__8daNpcT_cFifi();
extern "C" void setAngle__8daNpcT_cFs();
extern "C" void hitChk__8daNpcT_cFP12dCcD_GObjInfUl();
extern "C" void setDamage__8daNpcT_cFiii();
extern "C" void srchPlayerActor__8daNpcT_cFv();
extern "C" void step__8daNpcT_cFsiiii();
extern "C" void initTalk__8daNpcT_cFiPP10fopAc_ac_c();
extern "C" void talkProc__8daNpcT_cFPiiPP10fopAc_ac_ci();
extern "C" void daNpcT_getDistTableIdx__Fii();
extern "C" void daNpcT_chkEvtBit__FUl();
extern "C" void __ct__10dMsgFlow_cFv();
extern "C" void __dt__10dMsgFlow_cFv();
extern "C" void Set__4cCcSFP8cCcD_Obj();
extern "C" void __mi__4cXyzCFRC3Vec();
extern "C" void cM_atan2s__Fff();
extern "C" void cM_rndF__Ff();
extern "C" void __ct__11cBgS_GndChkFv();
extern "C" void __dt__11cBgS_GndChkFv();
extern "C" void __dt__13cBgS_PolyInfoFv();
extern "C" void __dt__8cM3dGCirFv();
extern "C" void SetC__8cM3dGCylFRC4cXyz();
extern "C" void SetH__8cM3dGCylFf();
extern "C" void SetR__8cM3dGCylFf();
extern "C" void __ct__10Z2CreatureFv();
extern "C" void __dt__10Z2CreatureFv();
extern "C" void init__10Z2CreatureFP3VecP3VecUcUc();
extern "C" void* __nw__FUl();
extern "C" void __dl__FPv();
extern "C" void init__12J3DFrameCtrlFs();
extern "C" void getTexNo__16J3DAnmTexPatternCFUsPUs();
extern "C" void initialize__14J3DMaterialAnmFv();
extern "C" void PSMTXCopy();
extern "C" void PSMTXMultVec();
extern "C" void PSVECSquareMag();
extern "C" void __destroy_arr();
extern "C" void __construct_array();
extern "C" void __ptmf_test();
extern "C" void __ptmf_cmpr();
extern "C" void __ptmf_scall();
extern "C" void _savegpr_22();
extern "C" void _savegpr_27();
extern "C" void _savegpr_28();
extern "C" void _savegpr_29();
extern "C" void _restgpr_22();
extern "C" void _restgpr_27();
extern "C" void _restgpr_28();
extern "C" void _restgpr_29();
extern "C" extern u8 const __ptmf_null[12 + 4 /* padding */];
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" extern void* __vt__8dCcD_Cyl[36];
extern "C" extern void* __vt__9dCcD_Stts[11];
extern "C" u8 mCcDCyl__8daNpcT_c[68];
extern "C" extern void* __vt__8daNpcT_c[49];
extern "C" extern void* __vt__15daNpcT_MatAnm_c[4 + 1 /* padding */];
extern "C" extern void* __vt__12cCcD_CylAttr[25];
extern "C" extern void* __vt__14cCcD_ShapeAttr[22];
extern "C" extern void* __vt__9cCcD_Stts[8];
extern "C" extern void* __vt__14J3DMaterialAnm[4];
extern "C" u8 now__14mDoMtx_stack_c[48];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 j3dSys[284];
extern "C" u8 sincosTable___5JMath[65536];
extern "C" extern u32 __float_nan;
extern "C" void __register_global_object();

//
// Declarations:
//

/* ############################################################################################## */
/* 80B74D3C-80B74D3C 0000E0 0000+00 0/0 0/0 0/0 .rodata          @stringBase0 */
#pragma push
#pragma force_active on
SECTION_DEAD static char const* const stringBase_80B74D3C = "";
SECTION_DEAD static char const* const stringBase_80B74D3D = "NO_RESPONSE";
SECTION_DEAD static char const* const stringBase_80B74D49 = "zelRo";
#pragma pop

/* 80B74D58-80B74D64 000000 000C+00 1/1 0/0 0/0 .data            cNullVec__6Z2Calc */
SECTION_DATA static u8 cNullVec__6Z2Calc[12] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80B74D64-80B74D78 00000C 0004+10 0/0 0/0 0/0 .data            @1787 */
#pragma push
#pragma force_active on
SECTION_DATA static u32 lit_1787[1 + 4 /* padding */] = {
    0x02000201,
    /* padding */
    0x40080000,
    0x00000000,
    0x3FE00000,
    0x00000000,
};
#pragma pop

/* 80B74D78-80B74D80 000020 0008+00 1/1 0/0 0/0 .data            l_bmdData */
SECTION_DATA static u8 l_bmdData[8] = {
    0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x01,
};

/* 80B74D80-80B74D90 -00001 0010+00 0/1 0/0 0/0 .data            l_evtList */
#pragma push
#pragma force_active on
SECTION_DATA static void* l_evtList[4] = {
    (void*)&d_a_npc_zelRo__stringBase0,
    (void*)NULL,
    (void*)(((char*)&d_a_npc_zelRo__stringBase0) + 0x1),
    (void*)NULL,
};
#pragma pop

/* 80B74D90-80B74D98 -00001 0008+00 2/3 0/0 0/0 .data            l_resNameList */
SECTION_DATA static void* l_resNameList[2] = {
    (void*)&d_a_npc_zelRo__stringBase0,
    (void*)(((char*)&d_a_npc_zelRo__stringBase0) + 0xD),
};

/* 80B74D98-80B74D9C 000040 0002+02 1/0 0/0 0/0 .data            l_loadResPtrn0 */
SECTION_DATA static u16 l_loadResPtrn0[1 + 1 /* padding */] = {
    0x01FF,
    /* padding */
    0x0000,
};

/* 80B74D9C-80B74DA4 -00001 0008+00 1/2 0/0 0/0 .data            l_loadResPtrnList */
SECTION_DATA static void* l_loadResPtrnList[2] = {
    (void*)&l_loadResPtrn0,
    (void*)&l_loadResPtrn0,
};

/* 80B74DA4-80B74DDC 00004C 0038+00 0/1 0/0 0/0 .data            l_faceMotionAnmData */
#pragma push
#pragma force_active on
SECTION_DATA static u8 l_faceMotionAnmData[56] = {
    0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x10, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
    0x00, 0x10, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01,
};
#pragma pop

/* 80B74DDC-80B74DF8 000084 001C+00 0/1 0/0 0/0 .data            l_motionAnmData */
#pragma push
#pragma force_active on
SECTION_DATA static u8 l_motionAnmData[28] = {
    0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
    0x00, 0x0D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00,
};
#pragma pop

/* 80B74DF8-80B74E18 0000A0 0020+00 0/1 0/0 0/0 .data            l_faceMotionSequenceData */
#pragma push
#pragma force_active on
SECTION_DATA static u8 l_faceMotionSequenceData[32] = {
    0x00, 0x01, 0xFF, 0x01, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
    0x00, 0x00, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
};
#pragma pop

/* 80B74E18-80B74E28 0000C0 0010+00 0/1 0/0 0/0 .data            l_motionSequenceData */
#pragma push
#pragma force_active on
SECTION_DATA static u8 l_motionSequenceData[16] = {
    0x00, 0x00, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
};
#pragma pop

/* 80B74E28-80B74E2C -00001 0004+00 1/1 0/0 0/0 .data            mCutNameList__13daNpc_ZelRo_c */
SECTION_DATA void* daNpc_ZelRo_c::mCutNameList = (void*)&d_a_npc_zelRo__stringBase0;

/* 80B74E2C-80B74E38 0000D4 000C+00 2/2 0/0 0/0 .data            mCutList__13daNpc_ZelRo_c */
SECTION_DATA u8 daNpc_ZelRo_c::mCutList[12] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80B74E38-80B74E44 -00001 000C+00 1/1 0/0 0/0 .data            @4609 */
SECTION_DATA static void* lit_4609[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)talk__13daNpc_ZelRo_cFPv,
};

/* 80B74E44-80B74E50 -00001 000C+00 1/1 0/0 0/0 .data            @4619 */
SECTION_DATA static void* lit_4619[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)talk__13daNpc_ZelRo_cFPv,
};

/* 80B74E50-80B74E5C -00001 000C+00 1/1 0/0 0/0 .data            @4842 */
SECTION_DATA static void* lit_4842[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)wait__13daNpc_ZelRo_cFPv,
};

/* 80B74E5C-80B74E7C -00001 0020+00 1/0 0/0 0/0 .data            daNpc_ZelRo_MethodTable */
SECTION_DATA static void* daNpc_ZelRo_MethodTable[8] = {
    (void*)daNpc_ZelRo_Create__FPv,
    (void*)daNpc_ZelRo_Delete__FPv,
    (void*)daNpc_ZelRo_Execute__FPv,
    (void*)daNpc_ZelRo_IsDelete__FPv,
    (void*)daNpc_ZelRo_Draw__FPv,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
};

/* 80B74E7C-80B74EAC -00001 0030+00 0/0 0/0 1/0 .data            g_profile_NPC_ZELRO */
SECTION_DATA extern void* g_profile_NPC_ZELRO[12] = {
    (void*)0xFFFFFFFD, (void*)0x0007FFFD,
    (void*)0x02810000, (void*)&g_fpcLf_Method,
    (void*)0x00000FC8, (void*)NULL,
    (void*)NULL,       (void*)&g_fopAc_Method,
    (void*)0x01820000, (void*)&daNpc_ZelRo_MethodTable,
    (void*)0x00044108, (void*)0x040E0000,
};

/* 80B74EAC-80B74EB8 000154 000C+00 2/2 0/0 0/0 .data            __vt__11J3DTexNoAnm */
SECTION_DATA extern void* __vt__11J3DTexNoAnm[3] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)calc__11J3DTexNoAnmCFPUs,
};

/* 80B74EB8-80B74EC4 000160 000C+00 3/3 0/0 0/0 .data            __vt__12J3DFrameCtrl */
SECTION_DATA extern void* __vt__12J3DFrameCtrl[3] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__12J3DFrameCtrlFv,
};

/* 80B74EC4-80B74EE8 00016C 0024+00 3/3 0/0 0/0 .data            __vt__12dBgS_ObjAcch */
SECTION_DATA extern void* __vt__12dBgS_ObjAcch[9] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__12dBgS_ObjAcchFv,
    (void*)NULL,
    (void*)NULL,
    (void*)func_80B74C40,
    (void*)NULL,
    (void*)NULL,
    (void*)func_80B74C38,
};

/* 80B74EE8-80B74EF4 000190 000C+00 2/2 0/0 0/0 .data            __vt__12dBgS_AcchCir */
SECTION_DATA extern void* __vt__12dBgS_AcchCir[3] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__12dBgS_AcchCirFv,
};

/* 80B74EF4-80B74F00 00019C 000C+00 3/3 0/0 0/0 .data            __vt__10cCcD_GStts */
SECTION_DATA extern void* __vt__10cCcD_GStts[3] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__10cCcD_GSttsFv,
};

/* 80B74F00-80B74F0C 0001A8 000C+00 2/2 0/0 0/0 .data            __vt__10dCcD_GStts */
SECTION_DATA extern void* __vt__10dCcD_GStts[3] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__10dCcD_GSttsFv,
};

/* 80B74F0C-80B74F18 0001B4 000C+00 3/3 0/0 0/0 .data            __vt__22daNpcT_MotionSeqMngr_c */
SECTION_DATA extern void* __vt__22daNpcT_MotionSeqMngr_c[3] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__22daNpcT_MotionSeqMngr_cFv,
};

/* 80B74F18-80B74F24 0001C0 000C+00 4/4 0/0 0/0 .data            __vt__18daNpcT_ActorMngr_c */
SECTION_DATA extern void* __vt__18daNpcT_ActorMngr_c[3] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__18daNpcT_ActorMngr_cFv,
};

/* 80B74F24-80B74F30 0001CC 000C+00 3/3 0/0 0/0 .data            __vt__15daNpcT_JntAnm_c */
SECTION_DATA extern void* __vt__15daNpcT_JntAnm_c[3] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__15daNpcT_JntAnm_cFv,
};

/* 80B74F30-80B74F3C 0001D8 000C+00 3/3 0/0 0/0 .data            __vt__8cM3dGAab */
SECTION_DATA extern void* __vt__8cM3dGAab[3] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__8cM3dGAabFv,
};

/* 80B74F3C-80B74F48 0001E4 000C+00 3/3 0/0 0/0 .data            __vt__8cM3dGCyl */
SECTION_DATA extern void* __vt__8cM3dGCyl[3] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__8cM3dGCylFv,
};

/* 80B74F48-80B74F54 0001F0 000C+00 3/3 0/0 0/0 .data            __vt__13daNpcT_Path_c */
SECTION_DATA extern void* __vt__13daNpcT_Path_c[3] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__13daNpcT_Path_cFv,
};

/* 80B74F54-80B75018 0001FC 00C4+00 2/2 0/0 0/0 .data            __vt__13daNpc_ZelRo_c */
SECTION_DATA extern void* __vt__13daNpc_ZelRo_c[49] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__13daNpc_ZelRo_cFv,
    (void*)ctrlBtk__13daNpc_ZelRo_cFv,
    (void*)ctrlSubFaceMotion__8daNpcT_cFi,
    (void*)checkChangeJoint__13daNpc_ZelRo_cFi,
    (void*)checkRemoveJoint__13daNpc_ZelRo_cFi,
    (void*)getBackboneJointNo__13daNpc_ZelRo_cFv,
    (void*)getNeckJointNo__13daNpc_ZelRo_cFv,
    (void*)getHeadJointNo__13daNpc_ZelRo_cFv,
    (void*)getFootLJointNo__8daNpcT_cFv,
    (void*)getFootRJointNo__8daNpcT_cFv,
    (void*)getEyeballLMaterialNo__13daNpc_ZelRo_cFv,
    (void*)getEyeballRMaterialNo__13daNpc_ZelRo_cFv,
    (void*)getEyeballMaterialNo__8daNpcT_cFv,
    (void*)ctrlJoint__8daNpcT_cFP8J3DJointP8J3DModel,
    (void*)afterJntAnm__13daNpc_ZelRo_cFi,
    (void*)setParam__13daNpc_ZelRo_cFv,
    (void*)checkChangeEvt__8daNpcT_cFv,
    (void*)evtTalk__13daNpc_ZelRo_cFv,
    (void*)evtEndProc__8daNpcT_cFv,
    (void*)evtCutProc__13daNpc_ZelRo_cFv,
    (void*)setAfterTalkMotion__13daNpc_ZelRo_cFv,
    (void*)evtProc__8daNpcT_cFv,
    (void*)action__13daNpc_ZelRo_cFv,
    (void*)beforeMove__13daNpc_ZelRo_cFv,
    (void*)afterMoved__8daNpcT_cFv,
    (void*)setAttnPos__13daNpc_ZelRo_cFv,
    (void*)setFootPos__8daNpcT_cFv,
    (void*)setCollision__13daNpc_ZelRo_cFv,
    (void*)setFootPrtcl__8daNpcT_cFP4cXyzff,
    (void*)checkCullDraw__8daNpcT_cFv,
    (void*)twilight__8daNpcT_cFv,
    (void*)chkXYItems__8daNpcT_cFv,
    (void*)evtOrder__8daNpcT_cFv,
    (void*)decTmr__8daNpcT_cFv,
    (void*)clrParam__8daNpcT_cFv,
    (void*)drawDbgInfo__13daNpc_ZelRo_cFv,
    (void*)drawOtherMdl__8daNpcT_cFv,
    (void*)drawGhost__8daNpcT_cFv,
    (void*)afterSetFaceMotionAnm__8daNpcT_cFiifi,
    (void*)afterSetMotionAnm__8daNpcT_cFiifi,
    (void*)getFaceMotionAnm__8daNpcT_cF26daNpcT_faceMotionAnmData_c,
    (void*)getMotionAnm__8daNpcT_cF22daNpcT_motionAnmData_c,
    (void*)changeAnm__8daNpcT_cFPiPi,
    (void*)changeBck__8daNpcT_cFPiPi,
    (void*)changeBtp__8daNpcT_cFPiPi,
    (void*)changeBtk__8daNpcT_cFPiPi,
    (void*)setMotionAnm__8daNpcT_cFifi,
};

/* 80B71FAC-80B720E4 0000EC 0138+00 1/0 0/0 0/0 .text            __dt__13daNpc_ZelRo_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm daNpc_ZelRo_c::~daNpc_ZelRo_c() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_zelRo/d_a_npc_zelRo/__dt__13daNpc_ZelRo_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 80B74C5C-80B74CE8 000000 008C+00 6/6 0/0 0/0 .rodata          m__19daNpc_ZelRo_Param_c */
SECTION_RODATA u8 const daNpc_ZelRo_Param_c::m[140] = {
    0x43, 0x3E, 0x00, 0x00, 0xC0, 0x40, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x43, 0xC8, 0x00, 0x00,
    0x43, 0x7F, 0x00, 0x00, 0x43, 0x2A, 0x00, 0x00, 0x42, 0x0C, 0x00, 0x00, 0x41, 0xF0, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x20, 0x00, 0x00, 0xC1, 0x20, 0x00, 0x00,
    0x41, 0xF0, 0x00, 0x00, 0xC1, 0x20, 0x00, 0x00, 0x42, 0x34, 0x00, 0x00, 0xC2, 0x34, 0x00, 0x00,
    0x3F, 0x19, 0x99, 0x9A, 0x41, 0x40, 0x00, 0x00, 0x00, 0x03, 0x00, 0x06, 0x00, 0x05, 0x00, 0x06,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x3C, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x80, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80B74C5C, &daNpc_ZelRo_Param_c::m);

/* 80B74CE8-80B74CEC 00008C 0004+00 0/1 0/0 0/0 .rodata          @4018 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_4018 = -300.0f;
COMPILER_STRIP_GATE(0x80B74CE8, &lit_4018);
#pragma pop

/* 80B74CEC-80B74CF0 000090 0004+00 0/1 0/0 0/0 .rodata          @4019 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_4019 = -50.0f;
COMPILER_STRIP_GATE(0x80B74CEC, &lit_4019);
#pragma pop

/* 80B74CF0-80B74CF4 000094 0004+00 0/1 0/0 0/0 .rodata          @4020 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_4020 = 300.0f;
COMPILER_STRIP_GATE(0x80B74CF0, &lit_4020);
#pragma pop

/* 80B74CF4-80B74CF8 000098 0004+00 0/1 0/0 0/0 .rodata          @4021 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_4021 = 450.0f;
COMPILER_STRIP_GATE(0x80B74CF4, &lit_4021);
#pragma pop

/* 80B720E4-80B72378 000224 0294+00 1/1 0/0 0/0 .text            create__13daNpc_ZelRo_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpc_ZelRo_c::create() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_zelRo/d_a_npc_zelRo/create__13daNpc_ZelRo_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 80B74CF8-80B74CFC 00009C 0004+00 4/8 0/0 0/0 .rodata          @4182 */
SECTION_RODATA static u8 const lit_4182[4] = {
    0x00,
    0x00,
    0x00,
    0x00,
};
COMPILER_STRIP_GATE(0x80B74CF8, &lit_4182);

/* 80B74CFC-80B74D00 0000A0 0004+00 0/2 0/0 0/0 .rodata          @4183 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_4183 = 65536.0f;
COMPILER_STRIP_GATE(0x80B74CFC, &lit_4183);
#pragma pop

/* 80B74D00-80B74D04 0000A4 0004+00 1/4 0/0 0/0 .rodata          @4184 */
SECTION_RODATA static f32 const lit_4184 = 1.0f / 5.0f;
COMPILER_STRIP_GATE(0x80B74D00, &lit_4184);

/* 80B74D04-80B74D08 0000A8 0004+00 2/4 0/0 0/0 .rodata          @4339 */
SECTION_RODATA static f32 const lit_4339 = 1.0f;
COMPILER_STRIP_GATE(0x80B74D04, &lit_4339);

/* 80B72378-80B72628 0004B8 02B0+00 1/1 0/0 0/0 .text            CreateHeap__13daNpc_ZelRo_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpc_ZelRo_c::CreateHeap() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_zelRo/d_a_npc_zelRo/CreateHeap__13daNpc_ZelRo_cFv.s"
}
#pragma pop

/* 80B72628-80B72664 000768 003C+00 1/1 0/0 0/0 .text            __dt__15J3DTevKColorAnmFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DTevKColorAnm::~J3DTevKColorAnm() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_zelRo/d_a_npc_zelRo/__dt__15J3DTevKColorAnmFv.s"
}
#pragma pop

/* 80B72664-80B7267C 0007A4 0018+00 1/1 0/0 0/0 .text            __ct__15J3DTevKColorAnmFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DTevKColorAnm::J3DTevKColorAnm() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_zelRo/d_a_npc_zelRo/__ct__15J3DTevKColorAnmFv.s"
}
#pragma pop

/* 80B7267C-80B726B8 0007BC 003C+00 1/1 0/0 0/0 .text            __dt__14J3DTevColorAnmFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DTevColorAnm::~J3DTevColorAnm() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_zelRo/d_a_npc_zelRo/__dt__14J3DTevColorAnmFv.s"
}
#pragma pop

/* 80B726B8-80B726D0 0007F8 0018+00 1/1 0/0 0/0 .text            __ct__14J3DTevColorAnmFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DTevColorAnm::J3DTevColorAnm() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_zelRo/d_a_npc_zelRo/__ct__14J3DTevColorAnmFv.s"
}
#pragma pop

/* 80B726D0-80B72718 000810 0048+00 1/1 0/0 0/0 .text            __dt__11J3DTexNoAnmFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DTexNoAnm::~J3DTexNoAnm() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_zelRo/d_a_npc_zelRo/__dt__11J3DTexNoAnmFv.s"
}
#pragma pop

/* 80B72718-80B7273C 000858 0024+00 1/1 0/0 0/0 .text            __ct__11J3DTexNoAnmFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DTexNoAnm::J3DTexNoAnm() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_zelRo/d_a_npc_zelRo/__ct__11J3DTexNoAnmFv.s"
}
#pragma pop

/* 80B7273C-80B72778 00087C 003C+00 1/1 0/0 0/0 .text            __dt__12J3DTexMtxAnmFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DTexMtxAnm::~J3DTexMtxAnm() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_zelRo/d_a_npc_zelRo/__dt__12J3DTexMtxAnmFv.s"
}
#pragma pop

/* 80B72778-80B72790 0008B8 0018+00 1/1 0/0 0/0 .text            __ct__12J3DTexMtxAnmFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DTexMtxAnm::J3DTexMtxAnm() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_zelRo/d_a_npc_zelRo/__ct__12J3DTexMtxAnmFv.s"
}
#pragma pop

/* 80B72790-80B727CC 0008D0 003C+00 1/1 0/0 0/0 .text            __dt__14J3DMatColorAnmFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DMatColorAnm::~J3DMatColorAnm() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_zelRo/d_a_npc_zelRo/__dt__14J3DMatColorAnmFv.s"
}
#pragma pop

/* 80B727CC-80B727E4 00090C 0018+00 1/1 0/0 0/0 .text            __ct__14J3DMatColorAnmFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DMatColorAnm::J3DMatColorAnm() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_zelRo/d_a_npc_zelRo/__ct__14J3DMatColorAnmFv.s"
}
#pragma pop

/* 80B727E4-80B72818 000924 0034+00 1/1 0/0 0/0 .text            Delete__13daNpc_ZelRo_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpc_ZelRo_c::Delete() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_zelRo/d_a_npc_zelRo/Delete__13daNpc_ZelRo_cFv.s"
}
#pragma pop

/* 80B72818-80B72838 000958 0020+00 2/2 0/0 0/0 .text            Execute__13daNpc_ZelRo_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpc_ZelRo_c::Execute() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_zelRo/d_a_npc_zelRo/Execute__13daNpc_ZelRo_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 80B74D08-80B74D0C 0000AC 0004+00 1/1 0/0 0/0 .rodata          @4399 */
SECTION_RODATA static f32 const lit_4399 = 100.0f;
COMPILER_STRIP_GATE(0x80B74D08, &lit_4399);

/* 80B72838-80B728FC 000978 00C4+00 1/1 0/0 0/0 .text            Draw__13daNpc_ZelRo_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpc_ZelRo_c::Draw() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_zelRo/d_a_npc_zelRo/Draw__13daNpc_ZelRo_cFv.s"
}
#pragma pop

/* 80B728FC-80B7291C 000A3C 0020+00 1/1 0/0 0/0 .text
 * createHeapCallBack__13daNpc_ZelRo_cFP10fopAc_ac_c            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpc_ZelRo_c::createHeapCallBack(fopAc_ac_c* param_0) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_zelRo/d_a_npc_zelRo/createHeapCallBack__13daNpc_ZelRo_cFP10fopAc_ac_c.s"
}
#pragma pop

/* 80B7291C-80B72974 000A5C 0058+00 1/1 0/0 0/0 .text
 * ctrlJointCallBack__13daNpc_ZelRo_cFP8J3DJointi               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpc_ZelRo_c::ctrlJointCallBack(J3DJoint* param_0, int param_1) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_zelRo/d_a_npc_zelRo/ctrlJointCallBack__13daNpc_ZelRo_cFP8J3DJointi.s"
}
#pragma pop

/* 80B72974-80B72994 000AB4 0020+00 1/1 0/0 0/0 .text            getType__13daNpc_ZelRo_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpc_ZelRo_c::getType() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_zelRo/d_a_npc_zelRo/getType__13daNpc_ZelRo_cFv.s"
}
#pragma pop

/* 80B72994-80B729B0 000AD4 001C+00 1/1 0/0 0/0 .text            getFlowNodeNo__13daNpc_ZelRo_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpc_ZelRo_c::getFlowNodeNo() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_zelRo/d_a_npc_zelRo/getFlowNodeNo__13daNpc_ZelRo_cFv.s"
}
#pragma pop

/* 80B729B0-80B729BC 000AF0 000C+00 1/1 0/0 0/0 .text            getPath__13daNpc_ZelRo_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpc_ZelRo_c::getPath() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_zelRo/d_a_npc_zelRo/getPath__13daNpc_ZelRo_cFv.s"
}
#pragma pop

/* 80B729BC-80B72A10 000AFC 0054+00 1/1 0/0 0/0 .text            isDelete__13daNpc_ZelRo_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpc_ZelRo_c::isDelete() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_zelRo/d_a_npc_zelRo/isDelete__13daNpc_ZelRo_cFv.s"
}
#pragma pop

/* 80B72A10-80B72B8C 000B50 017C+00 1/1 0/0 0/0 .text            reset__13daNpc_ZelRo_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpc_ZelRo_c::reset() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_zelRo/d_a_npc_zelRo/reset__13daNpc_ZelRo_cFv.s"
}
#pragma pop

/* 80B72B8C-80B72C18 000CCC 008C+00 1/0 0/0 0/0 .text            afterJntAnm__13daNpc_ZelRo_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpc_ZelRo_c::afterJntAnm(int param_0) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_zelRo/d_a_npc_zelRo/afterJntAnm__13daNpc_ZelRo_cFi.s"
}
#pragma pop

/* ############################################################################################## */
/* 80B74D0C-80B74D10 0000B0 0004+00 3/3 0/0 0/0 .rodata          @4557 */
SECTION_RODATA static f32 const lit_4557 = -1.0f;
COMPILER_STRIP_GATE(0x80B74D0C, &lit_4557);

/* 80B72C18-80B72D24 000D58 010C+00 1/0 0/0 0/0 .text            ctrlBtk__13daNpc_ZelRo_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpc_ZelRo_c::ctrlBtk() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_zelRo/d_a_npc_zelRo/ctrlBtk__13daNpc_ZelRo_cFv.s"
}
#pragma pop

/* 80B72D24-80B72E18 000E64 00F4+00 1/0 0/0 0/0 .text            setParam__13daNpc_ZelRo_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpc_ZelRo_c::setParam() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_zelRo/d_a_npc_zelRo/setParam__13daNpc_ZelRo_cFv.s"
}
#pragma pop

/* 80B72E18-80B72E78 000F58 0060+00 1/0 0/0 0/0 .text setAfterTalkMotion__13daNpc_ZelRo_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpc_ZelRo_c::setAfterTalkMotion() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_zelRo/d_a_npc_zelRo/setAfterTalkMotion__13daNpc_ZelRo_cFv.s"
}
#pragma pop

/* 80B72E78-80B72E7C 000FB8 0004+00 1/1 0/0 0/0 .text            srchActors__13daNpc_ZelRo_cFv */
void daNpc_ZelRo_c::srchActors() {
    /* empty function */
}

/* 80B72E7C-80B72F7C 000FBC 0100+00 1/0 0/0 0/0 .text            evtTalk__13daNpc_ZelRo_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpc_ZelRo_c::evtTalk() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_zelRo/d_a_npc_zelRo/evtTalk__13daNpc_ZelRo_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 80B74D3C-80B74D3C 0000E0 0000+00 0/0 0/0 0/0 .rodata          @stringBase0 */
#pragma push
#pragma force_active on
SECTION_DEAD static char const* const stringBase_80B74D4F = "ZelRo";
#pragma pop

/* 80B72F7C-80B73044 0010BC 00C8+00 1/0 0/0 0/0 .text            evtCutProc__13daNpc_ZelRo_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpc_ZelRo_c::evtCutProc() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_zelRo/d_a_npc_zelRo/evtCutProc__13daNpc_ZelRo_cFv.s"
}
#pragma pop

/* 80B73044-80B73194 001184 0150+00 1/0 0/0 0/0 .text            action__13daNpc_ZelRo_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpc_ZelRo_c::action() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_zelRo/d_a_npc_zelRo/action__13daNpc_ZelRo_cFv.s"
}
#pragma pop

/* 80B73194-80B7320C 0012D4 0078+00 1/0 0/0 0/0 .text            beforeMove__13daNpc_ZelRo_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpc_ZelRo_c::beforeMove() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_zelRo/d_a_npc_zelRo/beforeMove__13daNpc_ZelRo_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 80B74D10-80B74D14 0000B4 0004+00 0/1 0/0 0/0 .rodata          @4728 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_4728 = 10.0f;
COMPILER_STRIP_GATE(0x80B74D10, &lit_4728);
#pragma pop

/* 80B74D14-80B74D18 0000B8 0004+00 0/1 0/0 0/0 .rodata          @4729 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_4729 = -30.0f;
COMPILER_STRIP_GATE(0x80B74D14, &lit_4729);
#pragma pop

/* 80B74D18-80B74D1C 0000BC 0004+00 0/1 0/0 0/0 .rodata          @4730 */
#pragma push
#pragma force_active on
SECTION_RODATA static u32 const lit_4730 = 0x38C90FDB;
COMPILER_STRIP_GATE(0x80B74D18, &lit_4730);
#pragma pop

/* 80B74D1C-80B74D24 0000C0 0008+00 1/3 0/0 0/0 .rodata          @4732 */
SECTION_RODATA static u8 const lit_4732[8] = {
    0x43, 0x30, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80B74D1C, &lit_4732);

/* 80B7320C-80B7342C 00134C 0220+00 1/0 0/0 0/0 .text            setAttnPos__13daNpc_ZelRo_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpc_ZelRo_c::setAttnPos() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_zelRo/d_a_npc_zelRo/setAttnPos__13daNpc_ZelRo_cFv.s"
}
#pragma pop

/* 80B7342C-80B7355C 00156C 0130+00 1/0 0/0 0/0 .text            setCollision__13daNpc_ZelRo_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpc_ZelRo_c::setCollision() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_zelRo/d_a_npc_zelRo/setCollision__13daNpc_ZelRo_cFv.s"
}
#pragma pop

/* 80B7355C-80B73564 00169C 0008+00 1/0 0/0 0/0 .text            drawDbgInfo__13daNpc_ZelRo_cFv */
bool daNpc_ZelRo_c::drawDbgInfo() {
    return false;
}

/* 80B73564-80B735AC 0016A4 0048+00 1/1 0/0 0/0 .text            selectAction__13daNpc_ZelRo_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpc_ZelRo_c::selectAction() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_zelRo/d_a_npc_zelRo/selectAction__13daNpc_ZelRo_cFv.s"
}
#pragma pop

/* 80B735AC-80B735D8 0016EC 002C+00 1/1 0/0 0/0 .text
 * chkAction__13daNpc_ZelRo_cFM13daNpc_ZelRo_cFPCvPvPv_i        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpc_ZelRo_c::chkAction(int (daNpc_ZelRo_c::*param_0)(void*)) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_zelRo/d_a_npc_zelRo/chkAction__13daNpc_ZelRo_cFM13daNpc_ZelRo_cFPCvPvPv_i.s"
}
#pragma pop

/* 80B735D8-80B73680 001718 00A8+00 2/2 0/0 0/0 .text
 * setAction__13daNpc_ZelRo_cFM13daNpc_ZelRo_cFPCvPvPv_i        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpc_ZelRo_c::setAction(int (daNpc_ZelRo_c::*param_0)(void*)) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_zelRo/d_a_npc_zelRo/setAction__13daNpc_ZelRo_cFM13daNpc_ZelRo_cFPCvPvPv_i.s"
}
#pragma pop

/* 80B73680-80B7382C 0017C0 01AC+00 1/0 0/0 0/0 .text            wait__13daNpc_ZelRo_cFPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpc_ZelRo_c::wait(void* param_0) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_zelRo/d_a_npc_zelRo/wait__13daNpc_ZelRo_cFPv.s"
}
#pragma pop

/* 80B7382C-80B73990 00196C 0164+00 2/0 0/0 0/0 .text            talk__13daNpc_ZelRo_cFPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpc_ZelRo_c::talk(void* param_0) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_zelRo/d_a_npc_zelRo/talk__13daNpc_ZelRo_cFPv.s"
}
#pragma pop

/* 80B73990-80B739B0 001AD0 0020+00 1/0 0/0 0/0 .text            daNpc_ZelRo_Create__FPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void daNpc_ZelRo_Create(void* param_0) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_zelRo/d_a_npc_zelRo/daNpc_ZelRo_Create__FPv.s"
}
#pragma pop

/* 80B739B0-80B739D0 001AF0 0020+00 1/0 0/0 0/0 .text            daNpc_ZelRo_Delete__FPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void daNpc_ZelRo_Delete(void* param_0) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_zelRo/d_a_npc_zelRo/daNpc_ZelRo_Delete__FPv.s"
}
#pragma pop

/* 80B739D0-80B739F0 001B10 0020+00 1/0 0/0 0/0 .text            daNpc_ZelRo_Execute__FPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void daNpc_ZelRo_Execute(void* param_0) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_zelRo/d_a_npc_zelRo/daNpc_ZelRo_Execute__FPv.s"
}
#pragma pop

/* 80B739F0-80B73A10 001B30 0020+00 1/0 0/0 0/0 .text            daNpc_ZelRo_Draw__FPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void daNpc_ZelRo_Draw(void* param_0) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_zelRo/d_a_npc_zelRo/daNpc_ZelRo_Draw__FPv.s"
}
#pragma pop

/* 80B73A10-80B73A18 001B50 0008+00 1/0 0/0 0/0 .text            daNpc_ZelRo_IsDelete__FPv */
static bool daNpc_ZelRo_IsDelete(void* param_0) {
    return true;
}

/* 80B73A18-80B73A48 001B58 0030+00 1/0 0/0 0/0 .text            calc__11J3DTexNoAnmCFPUs */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexNoAnm::calc(u16* param_0) const {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_zelRo/d_a_npc_zelRo/calc__11J3DTexNoAnmCFPUs.s"
}
#pragma pop

/* 80B73A48-80B73A90 001B88 0048+00 1/0 0/0 0/0 .text            __dt__10cCcD_GSttsFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm cCcD_GStts::~cCcD_GStts() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_zelRo/d_a_npc_zelRo/__dt__10cCcD_GSttsFv.s"
}
#pragma pop

/* 80B73A90-80B73E18 001BD0 0388+00 1/1 0/0 0/0 .text            __dt__8daNpcT_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm daNpcT_c::~daNpcT_c() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_zelRo/d_a_npc_zelRo/__dt__8daNpcT_cFv.s"
}
#pragma pop

/* 80B73E18-80B73E54 001F58 003C+00 3/3 0/0 0/0 .text            __dt__4cXyzFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm cXyz::~cXyz() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_zelRo/d_a_npc_zelRo/__dt__4cXyzFv.s"
}
#pragma pop

/* 80B73E54-80B73E90 001F94 003C+00 2/2 0/0 0/0 .text            __dt__5csXyzFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm csXyz::~csXyz() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_zelRo/d_a_npc_zelRo/__dt__5csXyzFv.s"
}
#pragma pop

/* 80B73E90-80B73ED8 001FD0 0048+00 1/0 0/0 0/0 .text            __dt__13daNpcT_Path_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm daNpcT_Path_c::~daNpcT_Path_c() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_zelRo/d_a_npc_zelRo/__dt__13daNpcT_Path_cFv.s"
}
#pragma pop

/* 80B73ED8-80B73F20 002018 0048+00 1/0 0/0 0/0 .text            __dt__8cM3dGCylFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm cM3dGCyl::~cM3dGCyl() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_zelRo/d_a_npc_zelRo/__dt__8cM3dGCylFv.s"
}
#pragma pop

/* 80B73F20-80B73F68 002060 0048+00 1/0 0/0 0/0 .text            __dt__8cM3dGAabFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm cM3dGAab::~cM3dGAab() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_zelRo/d_a_npc_zelRo/__dt__8cM3dGAabFv.s"
}
#pragma pop

/* 80B73F68-80B7436C 0020A8 0404+00 1/1 0/0 0/0 .text
 * __ct__8daNpcT_cFPC26daNpcT_faceMotionAnmData_cPC22daNpcT_motionAnmData_cPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPC16daNpcT_evtData_cPPc
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm daNpcT_c::daNpcT_c(daNpcT_faceMotionAnmData_c const* param_0,
                       daNpcT_motionAnmData_c const* param_1,
                       daNpcT_MotionSeqMngr_c::sequenceStepData_c const* param_2, int param_3,
                       daNpcT_MotionSeqMngr_c::sequenceStepData_c const* param_4, int param_5,
                       daNpcT_evtData_c const* param_6, char** param_7) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_zelRo/d_a_npc_zelRo/func_80B73F68.s"
}
#pragma pop

/* 80B7436C-80B74370 0024AC 0004+00 1/1 0/0 0/0 .text            __ct__5csXyzFv */
csXyz::csXyz() {
    /* empty function */
}

/* 80B74370-80B7446C 0024B0 00FC+00 1/0 0/0 0/0 .text            __dt__15daNpcT_JntAnm_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm daNpcT_JntAnm_c::~daNpcT_JntAnm_c() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_zelRo/d_a_npc_zelRo/__dt__15daNpcT_JntAnm_cFv.s"
}
#pragma pop

/* 80B7446C-80B74470 0025AC 0004+00 1/1 0/0 0/0 .text            __ct__4cXyzFv */
cXyz::cXyz() {
    /* empty function */
}

/* 80B74470-80B744B8 0025B0 0048+00 1/0 0/0 0/0 .text            __dt__18daNpcT_ActorMngr_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm daNpcT_ActorMngr_c::~daNpcT_ActorMngr_c() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_zelRo/d_a_npc_zelRo/__dt__18daNpcT_ActorMngr_cFv.s"
}
#pragma pop

/* 80B744B8-80B74500 0025F8 0048+00 1/0 0/0 0/0 .text            __dt__22daNpcT_MotionSeqMngr_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm daNpcT_MotionSeqMngr_c::~daNpcT_MotionSeqMngr_c() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_zelRo/d_a_npc_zelRo/__dt__22daNpcT_MotionSeqMngr_cFv.s"
}
#pragma pop

/* 80B74500-80B74570 002640 0070+00 1/0 0/0 0/0 .text            __dt__12dBgS_AcchCirFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dBgS_AcchCir::~dBgS_AcchCir() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_zelRo/d_a_npc_zelRo/__dt__12dBgS_AcchCirFv.s"
}
#pragma pop

/* 80B74570-80B745CC 0026B0 005C+00 1/0 0/0 0/0 .text            __dt__10dCcD_GSttsFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dCcD_GStts::~dCcD_GStts() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_zelRo/d_a_npc_zelRo/__dt__10dCcD_GSttsFv.s"
}
#pragma pop

/* 80B745CC-80B7463C 00270C 0070+00 3/2 0/0 0/0 .text            __dt__12dBgS_ObjAcchFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dBgS_ObjAcch::~dBgS_ObjAcch() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_zelRo/d_a_npc_zelRo/__dt__12dBgS_ObjAcchFv.s"
}
#pragma pop

/* 80B7463C-80B74684 00277C 0048+00 1/0 0/0 0/0 .text            __dt__12J3DFrameCtrlFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DFrameCtrl::~J3DFrameCtrl() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_zelRo/d_a_npc_zelRo/__dt__12J3DFrameCtrlFv.s"
}
#pragma pop

/* 80B74684-80B747A0 0027C4 011C+00 1/1 0/0 0/0 .text setEyeAngleY__15daNpcT_JntAnm_cF4cXyzsifs */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpcT_JntAnm_c::setEyeAngleY(cXyz param_0, s16 param_1, int param_2, f32 param_3,
                                       s16 param_4) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_zelRo/d_a_npc_zelRo/setEyeAngleY__15daNpcT_JntAnm_cF4cXyzsifs.s"
}
#pragma pop

/* ############################################################################################## */
/* 80B74D24-80B74D2C 0000C8 0008+00 0/1 0/0 0/0 .rodata          @4790 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const lit_4790[8] = {
    0x3F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80B74D24, &lit_4790);
#pragma pop

/* 80B74D2C-80B74D34 0000D0 0008+00 0/1 0/0 0/0 .rodata          @4791 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const lit_4791[8] = {
    0x40, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80B74D2C, &lit_4791);
#pragma pop

/* 80B74D34-80B74D3C 0000D8 0008+00 0/1 0/0 0/0 .rodata          @4792 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const lit_4792[8] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80B74D34, &lit_4792);
#pragma pop

/* 80B747A0-80B749A8 0028E0 0208+00 1/1 0/0 0/0 .text setEyeAngleX__15daNpcT_JntAnm_cF4cXyzfs */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpcT_JntAnm_c::setEyeAngleX(cXyz param_0, f32 param_1, s16 param_2) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_zelRo/d_a_npc_zelRo/setEyeAngleX__15daNpcT_JntAnm_cF4cXyzfs.s"
}
#pragma pop

/* 80B749A8-80B749AC 002AE8 0004+00 1/0 0/0 0/0 .text            ctrlSubFaceMotion__8daNpcT_cFi */
void daNpcT_c::ctrlSubFaceMotion(int param_0) {
    /* empty function */
}

/* 80B749AC-80B749B4 002AEC 0008+00 1/0 0/0 0/0 .text            getFootLJointNo__8daNpcT_cFv */
s32 daNpcT_c::getFootLJointNo() {
    return -1;
}

/* 80B749B4-80B749BC 002AF4 0008+00 1/0 0/0 0/0 .text            getFootRJointNo__8daNpcT_cFv */
s32 daNpcT_c::getFootRJointNo() {
    return -1;
}

/* 80B749BC-80B749C4 002AFC 0008+00 1/0 0/0 0/0 .text            getEyeballMaterialNo__8daNpcT_cFv
 */
bool daNpcT_c::getEyeballMaterialNo() {
    return false;
}

/* 80B749C4-80B749CC 002B04 0008+00 1/0 0/0 0/0 .text            checkChangeEvt__8daNpcT_cFv */
bool daNpcT_c::checkChangeEvt() {
    return false;
}

/* 80B749CC-80B749D4 002B0C 0008+00 1/0 0/0 0/0 .text            evtEndProc__8daNpcT_cFv */
bool daNpcT_c::evtEndProc() {
    return true;
}

/* 80B749D4-80B749D8 002B14 0004+00 1/0 0/0 0/0 .text            afterMoved__8daNpcT_cFv */
void daNpcT_c::afterMoved() {
    /* empty function */
}

/* 80B749D8-80B749E0 002B18 0008+00 1/0 0/0 0/0 .text            chkXYItems__8daNpcT_cFv */
bool daNpcT_c::chkXYItems() {
    return false;
}

/* 80B749E0-80B749F8 002B20 0018+00 1/0 0/0 0/0 .text            decTmr__8daNpcT_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpcT_c::decTmr() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_zelRo/d_a_npc_zelRo/decTmr__8daNpcT_cFv.s"
}
#pragma pop

/* 80B749F8-80B749FC 002B38 0004+00 1/0 0/0 0/0 .text            drawOtherMdl__8daNpcT_cFv */
void daNpcT_c::drawOtherMdl() {
    /* empty function */
}

/* 80B749FC-80B74A00 002B3C 0004+00 1/0 0/0 0/0 .text            drawGhost__8daNpcT_cFv */
void daNpcT_c::drawGhost() {
    /* empty function */
}

/* 80B74A00-80B74A08 002B40 0008+00 1/0 0/0 0/0 .text afterSetFaceMotionAnm__8daNpcT_cFiifi */
bool daNpcT_c::afterSetFaceMotionAnm(int param_0, int param_1, f32 param_2, int param_3) {
    return true;
}

/* 80B74A08-80B74A10 002B48 0008+00 1/0 0/0 0/0 .text            afterSetMotionAnm__8daNpcT_cFiifi
 */
bool daNpcT_c::afterSetMotionAnm(int param_0, int param_1, f32 param_2, int param_3) {
    return true;
}

/* 80B74A10-80B74A40 002B50 0030+00 1/0 0/0 0/0 .text
 * getFaceMotionAnm__8daNpcT_cF26daNpcT_faceMotionAnmData_c     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpcT_c::getFaceMotionAnm(daNpcT_faceMotionAnmData_c param_0) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_zelRo/d_a_npc_zelRo/getFaceMotionAnm__8daNpcT_cF26daNpcT_faceMotionAnmData_c.s"
}
#pragma pop

/* 80B74A40-80B74A70 002B80 0030+00 1/0 0/0 0/0 .text
 * getMotionAnm__8daNpcT_cF22daNpcT_motionAnmData_c             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpcT_c::getMotionAnm(daNpcT_motionAnmData_c param_0) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_zelRo/d_a_npc_zelRo/getMotionAnm__8daNpcT_cF22daNpcT_motionAnmData_c.s"
}
#pragma pop

/* 80B74A70-80B74A74 002BB0 0004+00 1/0 0/0 0/0 .text            changeAnm__8daNpcT_cFPiPi */
void daNpcT_c::changeAnm(int* param_0, int* param_1) {
    /* empty function */
}

/* 80B74A74-80B74A78 002BB4 0004+00 1/0 0/0 0/0 .text            changeBck__8daNpcT_cFPiPi */
void daNpcT_c::changeBck(int* param_0, int* param_1) {
    /* empty function */
}

/* 80B74A78-80B74A7C 002BB8 0004+00 1/0 0/0 0/0 .text            changeBtp__8daNpcT_cFPiPi */
void daNpcT_c::changeBtp(int* param_0, int* param_1) {
    /* empty function */
}

/* 80B74A7C-80B74A80 002BBC 0004+00 1/0 0/0 0/0 .text            changeBtk__8daNpcT_cFPiPi */
void daNpcT_c::changeBtk(int* param_0, int* param_1) {
    /* empty function */
}

/* ############################################################################################## */
/* 80B75018-80B75024 0002C0 000C+00 2/2 0/0 0/0 .data            __vt__19daNpc_ZelRo_Param_c */
SECTION_DATA extern void* __vt__19daNpc_ZelRo_Param_c[3] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__19daNpc_ZelRo_Param_cFv,
};

/* 80B75030-80B7503C 000008 000C+00 1/1 0/0 0/0 .bss             @3811 */
static u8 lit_3811[12];

/* 80B7503C-80B75040 000014 0004+00 1/1 0/0 0/0 .bss             l_HIO */
static u8 l_HIO[4];

/* 80B74A80-80B74AE8 002BC0 0068+00 0/0 1/0 0/0 .text            __sinit_d_a_npc_zelRo_cpp */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __sinit_d_a_npc_zelRo_cpp() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_zelRo/d_a_npc_zelRo/__sinit_d_a_npc_zelRo_cpp.s"
}
#pragma pop

#pragma push
#pragma force_active on
REGISTER_CTORS(0x80B74A80, __sinit_d_a_npc_zelRo_cpp);
#pragma pop

/* 80B74AE8-80B74BA8 002C28 00C0+00 1/1 0/0 0/0 .text
 * __ct__13daNpc_ZelRo_cFPC26daNpcT_faceMotionAnmData_cPC22daNpcT_motionAnmData_cPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPC16daNpcT_evtData_cPPc
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm daNpc_ZelRo_c::daNpc_ZelRo_c(daNpcT_faceMotionAnmData_c const* param_0,
                                 daNpcT_motionAnmData_c const* param_1,
                                 daNpcT_MotionSeqMngr_c::sequenceStepData_c const* param_2,
                                 int param_3,
                                 daNpcT_MotionSeqMngr_c::sequenceStepData_c const* param_4,
                                 int param_5, daNpcT_evtData_c const* param_6, char** param_7) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_zelRo/d_a_npc_zelRo/func_80B74AE8.s"
}
#pragma pop

/* 80B74BA8-80B74BB0 002CE8 0008+00 1/0 0/0 0/0 .text getEyeballRMaterialNo__13daNpc_ZelRo_cFv */
s32 daNpc_ZelRo_c::getEyeballRMaterialNo() {
    return 7;
}

/* 80B74BB0-80B74BB8 002CF0 0008+00 1/0 0/0 0/0 .text getEyeballLMaterialNo__13daNpc_ZelRo_cFv */
s32 daNpc_ZelRo_c::getEyeballLMaterialNo() {
    return 6;
}

/* 80B74BB8-80B74BC0 002CF8 0008+00 1/0 0/0 0/0 .text            getHeadJointNo__13daNpc_ZelRo_cFv
 */
s32 daNpc_ZelRo_c::getHeadJointNo() {
    return 4;
}

/* 80B74BC0-80B74BC8 002D00 0008+00 1/0 0/0 0/0 .text            getNeckJointNo__13daNpc_ZelRo_cFv
 */
s32 daNpc_ZelRo_c::getNeckJointNo() {
    return 3;
}

/* 80B74BC8-80B74BD0 002D08 0008+00 1/0 0/0 0/0 .text getBackboneJointNo__13daNpc_ZelRo_cFv */
bool daNpc_ZelRo_c::getBackboneJointNo() {
    return true;
}

/* 80B74BD0-80B74BE0 002D10 0010+00 1/0 0/0 0/0 .text            checkChangeJoint__13daNpc_ZelRo_cFi
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpc_ZelRo_c::checkChangeJoint(int param_0) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_zelRo/d_a_npc_zelRo/checkChangeJoint__13daNpc_ZelRo_cFi.s"
}
#pragma pop

/* 80B74BE0-80B74BF0 002D20 0010+00 1/0 0/0 0/0 .text            checkRemoveJoint__13daNpc_ZelRo_cFi
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpc_ZelRo_c::checkRemoveJoint(int param_0) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_zelRo/d_a_npc_zelRo/checkRemoveJoint__13daNpc_ZelRo_cFi.s"
}
#pragma pop

/* 80B74BF0-80B74C38 002D30 0048+00 2/1 0/0 0/0 .text            __dt__19daNpc_ZelRo_Param_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm daNpc_ZelRo_Param_c::~daNpc_ZelRo_Param_c() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_zelRo/d_a_npc_zelRo/__dt__19daNpc_ZelRo_Param_cFv.s"
}
#pragma pop

/* 80B74C38-80B74C40 002D78 0008+00 1/0 0/0 0/0 .text            @36@__dt__12dBgS_ObjAcchFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void func_80B74C38() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_zelRo/d_a_npc_zelRo/func_80B74C38.s"
}
#pragma pop

/* 80B74C40-80B74C48 002D80 0008+00 1/0 0/0 0/0 .text            @20@__dt__12dBgS_ObjAcchFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void func_80B74C40() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_zelRo/d_a_npc_zelRo/func_80B74C40.s"
}
#pragma pop

/* 80B74D3C-80B74D3C 0000E0 0000+00 0/0 0/0 0/0 .rodata          @stringBase0 */
