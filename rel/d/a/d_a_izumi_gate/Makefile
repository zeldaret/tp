#
# Generated By: dol2asm
#

M264_TARGET := $(BUILD_DIR)/rel/d/a/d_a_izumi_gate.plf
M264_LDSCRIPT := $(BUILD_DIR)/rel/d/a/d_a_izumi_gate.lcf
M264_MAP := $(BUILD_DIR)/rel/d/a/d_a_izumi_gate.map

M264_CPP_FILES := \
	rel/executor.cpp \
	rel/d/a/d_a_izumi_gate/d_a_izumi_gate.cpp \

M264_O_FILES := \
	$(BUILD_DIR)/rel/executor.o \
	$(BUILD_DIR)/rel/d/a/d_a_izumi_gate/d_a_izumi_gate.o \

M264_LIBS := \

M264_CFLAGS := \
	-sdata 0 \
	-sdata2 0 \

M264_LDFLAGS := \
	-nodefaults \
	-fp hard \
	-proc gekko \
	-linkmode moreram \
	-sdata 0 \
	-sdata2 0 \
	-m _prolog \
	-lcf $(M264_LDSCRIPT) \
	-unused -map $(M264_MAP) \
	-w off \

$(M264_TARGET): $(M264_O_FILES) $(M264_LIBS)
	@echo [264] creating $(M264_TARGET)
	@echo $(M264_LIBS) $(M264_O_FILES) > build/M264_ofiles
	@python3 tools/lcf.py rel 264 --output $(M264_LDSCRIPT)
	@$(LD) -opt_partial -strip_partial $(M264_LDFLAGS) -o $(M264_TARGET) @build/M264_ofiles

$(BUILD_DIR)/rel/d/a/d_a_izumi_gate/%.o: rel/d/a/d_a_izumi_gate/%.cpp
	@echo [264] building $@
	@mkdir -p $(@D)
	@iconv -f UTF-8 -t CP932 < $< > $@.iconv.cpp
	@$(CC) $(CFLAGS) $(M264_CFLAGS) -c -o $@ $@.iconv.cpp


