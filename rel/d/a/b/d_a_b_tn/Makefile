#
# Generated By: dol2asm
#

M152_TARGET := $(BUILD_DIR)/rel/d/a/b/d_a_b_tn.plf
M152_LDSCRIPT := $(BUILD_DIR)/rel/d/a/b/d_a_b_tn.lcf
M152_MAP := $(BUILD_DIR)/rel/d/a/b/d_a_b_tn.map

M152_CPP_FILES := \
	rel/executor.cpp \
	rel/global_destructor_chain.cpp \
	rel/d/a/b/d_a_b_tn/d_a_b_tn.cpp \

M152_O_FILES := \
	$(BUILD_DIR)/rel/executor.o \
	$(BUILD_DIR)/rel/global_destructor_chain.o \
	$(BUILD_DIR)/rel/d/a/b/d_a_b_tn/d_a_b_tn.o \

M152_LIBS := \

M152_CFLAGS := \
	-sdata 0 \
	-sdata2 0 \

M152_LDFLAGS := \
	-nodefaults \
	-fp hard \
	-proc gekko \
	-linkmode moreram \
	-sdata 0 \
	-sdata2 0 \
	-m _prolog \
	-lcf $(M152_LDSCRIPT) \
	-unused -map $(M152_MAP) \
	-w off \

$(M152_TARGET): $(M152_O_FILES) $(M152_LIBS)
	@echo [152] creating $(M152_TARGET)
	@echo $(M152_LIBS) $(M152_O_FILES) > build/M152_ofiles
	@python3 tools/lcf.py rel 152 --output $(M152_LDSCRIPT)
	@$(LD) -opt_partial -strip_partial $(M152_LDFLAGS) -o $(M152_TARGET) @build/M152_ofiles

$(BUILD_DIR)/rel/d/a/b/d_a_b_tn/%.o: rel/d/a/b/d_a_b_tn/%.cpp
	@echo [152] building $@
	@mkdir -p $(@D)
	@iconv -f UTF-8 -t CP932 < $< > $@.iconv.cpp
	@$(CC) $(CFLAGS) $(M152_CFLAGS) -c -o $@ $@.iconv.cpp


