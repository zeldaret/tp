//
// Generated By: dol2asm
// Translation Unit: d_a_door_push
//

#include "rel/d/a/door/d_a_door_push/d_a_door_push.h"
#include "JSystem/JKernel/JKRHeap.h"
#include "d/a/d_a_player.h"
#include "d/bg/d_bg_s_movebg_actor.h"
#include "d/bg/d_bg_w.h"
#include "d/com/d_com_inf_game.h"
#include "d/d_procname.h"
#include "dol2asm.h"
#include "f_op/f_op_actor_mng.h"

//
// Types:
//

class daDoorPush_c : public dBgS_MoveBgActor {
public:
    /* 80677E08 */ void initBaseMtx();
    /* 80677F38 */ void setBaseMtx();
    /* 8067809C */ int Create();
    /* 806781FC */ int CreateHeap();
    /* 80678318 */ int create1st();
    /* 8067839C */ int Execute(Mtx**);
    /* 8067840C */ void action();
    /* 80678488 */ void init_modeWait();
    /* 806784B4 */ void modeWait();
    /* 80678664 */ void event_proc_call();
    /* 80678708 */ void actionOpenWait();
    /* 8067877C */ void actionOrderEvent();
    /* 806787F8 */ void actionEvent();
    /* 80678818 */ void demoProc();
    /* 80678AEC */ void rotateInit();
    /* 80678B10 */ int rotate();
    /* 80678BC0 */ void setGoal();
    /* 80678C70 */ int Draw();
    /* 80678D2C */ int Delete();

    void setAction(u8 i_action) { mAction = i_action; }
    u32 getSceneNo() { return fopAcM_GetParamBit(this, 4, 6); }

    /* 0x5A0 */ request_of_phase_process_class mPhaseReq;
    /* 0x5A8 */ J3DModel* mpModel[2];
    /* 0x5B0 */ dBgW* field_0x5b0;
    /* 0x5B4 */ Mtx field_0x5b4;
    /* 0x5E4 */ Mtx field_0x5e4;
    /* 0x614 */ cXyz field_0x614[2];
    /* 0x62C */ u8 field_0x62c[2];
    /* 0x62E */ u8 field_0x62e[2];
    /* 0x630 */ s16 field_0x630[2];
    /* 0x634 */ s16 field_0x634[2];
    /* 0x638 */ u8 field_0x638;
    /* 0x639 */ u8 field_0x639;
    /* 0x63A */ s16 field_0x63a[2];
    /* 0x63E */ u8 field_0x63e[2];
    /* 0x640 */ u8 mAction;
    /* 0x641 */ u8 field_0x641;
    /* 0x642 */ u8 field_0x642[0x644 - 0x642];
    /* 0x644 */ s32 field_0x644;
    /* 0x648 */ u8 field_0x648;
    /* 0x649 */ u8 field_0x649;
    /* 0x64A */ s16 field_0x64a;
    /* 0x64C */ s16 field_0x64c;
    /* 0x64E */ s16 field_0x64e;
    /* 0x650 */ s16 field_0x650;
    /* 0x652 */ u8 field_0x652[0x654 - 0x652];
    /* 0x654 */ cXyz field_0x654;
};  // Size: 0x660

//
// Forward References:
//

extern "C" static void PPCallBack__FP10fopAc_ac_cP10fopAc_ac_csQ29dBgW_Base13PushPullLabel();
extern "C" static void PPCallBack2__FP10fopAc_ac_cP10fopAc_ac_csQ29dBgW_Base13PushPullLabel();
extern "C" void initBaseMtx__12daDoorPush_cFv();
extern "C" void setBaseMtx__12daDoorPush_cFv();
extern "C" void __dt__4cXyzFv();
extern "C" void Create__12daDoorPush_cFv();
extern "C" void CreateHeap__12daDoorPush_cFv();
extern "C" void create1st__12daDoorPush_cFv();
extern "C" void Execute__12daDoorPush_cFPPA3_A4_f();
extern "C" void action__12daDoorPush_cFv();
extern "C" void init_modeWait__12daDoorPush_cFv();
extern "C" void modeWait__12daDoorPush_cFv();
extern "C" void event_proc_call__12daDoorPush_cFv();
extern "C" void actionOpenWait__12daDoorPush_cFv();
extern "C" void actionOrderEvent__12daDoorPush_cFv();
extern "C" void actionEvent__12daDoorPush_cFv();
extern "C" void demoProc__12daDoorPush_cFv();
extern "C" void rotateInit__12daDoorPush_cFv();
extern "C" void rotate__12daDoorPush_cFv();
extern "C" void setGoal__12daDoorPush_cFv();
extern "C" void Draw__12daDoorPush_cFv();
extern "C" void Delete__12daDoorPush_cFv();
extern "C" static void daDoorPush_create1st__FP12daDoorPush_c();
extern "C" void __ct__4cXyzFv();
extern "C" static void daDoorPush_MoveBGDelete__FP12daDoorPush_c();
extern "C" static void daDoorPush_MoveBGExecute__FP12daDoorPush_c();
extern "C" static void daDoorPush_MoveBGDraw__FP12daDoorPush_c();
extern "C" void func_80678EA8(void* _this, u8*);
extern "C" extern char const* const d_a_door_push__stringBase0;

//
// External References:
//

extern "C" void mDoMtx_YrotS__FPA4_fs();
extern "C" void mDoMtx_YrotM__FPA4_fs();
extern "C" void transS__14mDoMtx_stack_cFRC4cXyz();
extern "C" void mDoExt_modelUpdateDL__FP8J3DModel();
extern "C" void mDoExt_J3DModel__create__FP12J3DModelDataUlUl();
extern "C" void fopAcM_setCullSizeBox__FP10fopAc_ac_cffffff();
extern "C" void fopAcM_orderOtherEventId__FP10fopAc_ac_csUcUsUsUs();
extern "C" void dStage_changeScene__FifUlScsi();
extern "C" void dComIfG_resLoad__FP30request_of_phase_process_classPCc();
extern "C" void dComIfG_resDelete__FP30request_of_phase_process_classPCc();
extern "C" void dComIfGp_getReverb__Fi();
extern "C" void getRes__14dRes_control_cFPCclP11dRes_info_ci();
extern "C" void getEventIdx__16dEvent_manager_cFP10fopAc_ac_cPCcUc();
extern "C" void getMyStaffId__16dEvent_manager_cFPCcP10fopAc_ac_ci();
extern "C" void getIsAddvance__16dEvent_manager_cFi();
extern "C" void getMyActIdx__16dEvent_manager_cFiPCPCciii();
extern "C" void getMySubstanceP__16dEvent_manager_cFiPCci();
extern "C" void cutEnd__16dEvent_manager_cFi();
extern "C" void setGoal__16dEvent_manager_cFP4cXyz();
extern "C" void Release__4cBgSFP9dBgW_Base();
extern "C" void Regist__4dBgSFP9dBgW_BaseP10fopAc_ac_c();
extern "C" void __ct__16dBgS_MoveBgActorFv();
extern "C" bool IsDelete__16dBgS_MoveBgActorFv();
extern "C" bool ToFore__16dBgS_MoveBgActorFv();
extern "C" bool ToBack__16dBgS_MoveBgActorFv();
extern "C" void
MoveBGCreate__16dBgS_MoveBgActorFPCciPFP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz_vUlPA3_A4_f();
extern "C" void MoveBGDelete__16dBgS_MoveBgActorFv();
extern "C" void MoveBGExecute__16dBgS_MoveBgActorFv();
extern "C" void Set__4cBgWFP6cBgD_tUlPA3_A4_f();
extern "C" void __ct__4dBgWFv();
extern "C" void Move__4dBgWFv();
extern "C" void settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c();
extern "C" void setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c();
extern "C" void ChkUsed__9cBgW_BgIdCFv();
extern "C" void cLib_addCalcAngleS__FPsssss();
extern "C" void cLib_addCalcAngleS2__FPssss();
extern "C" void seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc();
extern "C" void seStartLevel__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc();
extern "C" void* __nw__FUl();
extern "C" void __dl__FPv();

extern "C" void __construct_array();
extern "C" void __ptmf_scall();
extern "C" void _savegpr_25();
extern "C" void _savegpr_26();
extern "C" void _savegpr_28();
extern "C" void _restgpr_25();
extern "C" void _restgpr_26();
extern "C" void _restgpr_28();
extern "C" u8 now__14mDoMtx_stack_c[48];
extern "C" u8 sincosTable___5JMath[65536];
extern "C" u8 mAudioMgrPtr__10Z2AudioMgr[4 + 4 /* padding */];
extern "C" extern u8 struct_80679070[4];

//
// Declarations:
//

/* 80677DB8-80677DE0 000078 0028+00 1/1 0/0 0/0 .text
 * PPCallBack__FP10fopAc_ac_cP10fopAc_ac_csQ29dBgW_Base13PushPullLabel */
#ifdef NONMATCHING
// Later
static void PPCallBack(fopAc_ac_c* i_this, fopAc_ac_c* param_1, s16 param_2,
                           dBgW_Base::PushPullLabel param_3) {
    
    if (cLib_checkBit(param_3, 1) != 0) {
        daDoorPush_c* door = (daDoorPush_c*)i_this;
        door->field_0x62e[0]++;
        door->field_0x62e[1] = 0;
        door->field_0x62c[0] = 1;
    }
}
#else
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void PPCallBack(fopAc_ac_c* param_0, fopAc_ac_c* param_1, s16 param_2,
                           dBgW_Base::PushPullLabel param_3) {
    nofralloc
#include "asm/rel/d/a/door/d_a_door_push/d_a_door_push/PPCallBack__FP10fopAc_ac_cP10fopAc_ac_csQ29dBgW_Base13PushPullLabel.s"
}
#pragma pop
#endif

/* 80677DE0-80677E08 0000A0 0028+00 1/1 0/0 0/0 .text
 * PPCallBack2__FP10fopAc_ac_cP10fopAc_ac_csQ29dBgW_Base13PushPullLabel */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void PPCallBack2(fopAc_ac_c* param_0, fopAc_ac_c* param_1, s16 param_2,
                            dBgW_Base::PushPullLabel param_3) {
    nofralloc
#include "asm/rel/d/a/door/d_a_door_push/d_a_door_push/PPCallBack2__FP10fopAc_ac_cP10fopAc_ac_csQ29dBgW_Base13PushPullLabel.s"
}
#pragma pop

/* ############################################################################################## */
/* 80678ECC-80678ED0 000000 0004+00 4/4 0/0 0/0 .rodata          @3688 */
SECTION_RODATA static f32 const lit_3688 = -550.0f;
COMPILER_STRIP_GATE(0x80678ECC, &lit_3688);

/* 80678ED0-80678ED4 000004 0004+00 0/3 0/0 0/0 .rodata          @3689 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const lit_3689[4] = {
    0x00,
    0x00,
    0x00,
    0x00,
};
COMPILER_STRIP_GATE(0x80678ED0, &lit_3689);
#pragma pop

/* 80678ED4-80678ED8 000008 0004+00 0/1 0/0 0/0 .rodata          @3690 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_3690 = 550.0f;
COMPILER_STRIP_GATE(0x80678ED4, &lit_3690);
#pragma pop

/* 80677E08-80677F38 0000C8 0130+00 1/1 0/0 0/0 .text            initBaseMtx__12daDoorPush_cFv */
#ifdef NONMATCHING
// Matches with literals
void daDoorPush_c::initBaseMtx() {
    mpModel[0]->setBaseScale(mScale);
    mpModel[1]->setBaseScale(mScale);
    field_0x614[0].set(-550.0f, 0.0f, 0.0f);
    mDoMtx_stack_c::YrotS(shape_angle.y);
    mDoMtx_stack_c::multVec(&field_0x614[0], &field_0x614[0]);
    VECAdd(&field_0x614[0], &current.pos, &field_0x614[0]);
    field_0x614[1].set(550.0f, 0.0f, 0.0f);
    mDoMtx_stack_c::YrotS(shape_angle.y);
    mDoMtx_stack_c::multVec(&field_0x614[1], &field_0x614[1]);
    VECAdd(&field_0x614[1], &current.pos, &field_0x614[1]);
    mDoMtx_stack_c::transS(current.pos);
    mDoMtx_stack_c::YrotM(shape_angle.y);
    MTXCopy(mDoMtx_stack_c::get(), field_0x5e4);
    setBaseMtx();
}
#else
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daDoorPush_c::initBaseMtx() {
    nofralloc
#include "asm/rel/d/a/door/d_a_door_push/d_a_door_push/initBaseMtx__12daDoorPush_cFv.s"
}
#pragma pop
#endif

/* ############################################################################################## */
/* 80678ED8-80678EDC 00000C 0004+00 0/1 0/0 0/0 .rodata          @3716 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_3716 = 450.0f;
COMPILER_STRIP_GATE(0x80678ED8, &lit_3716);
#pragma pop

/* 80678EDC-80678EE0 000010 0004+00 0/1 0/0 0/0 .rodata          @3717 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_3717 = 75.0f;
COMPILER_STRIP_GATE(0x80678EDC, &lit_3717);
#pragma pop

/* 80677F38-80678060 0001F8 0128+00 2/2 0/0 0/0 .text            setBaseMtx__12daDoorPush_cFv */
#ifdef NONMATCHING
// Matches with literals
void daDoorPush_c::setBaseMtx() {
    mDoMtx_stack_c::transS(field_0x614[0]);
    mDoMtx_stack_c::YrotM(field_0x630);
    MTXCopy(mDoMtx_stack_c::get(), mpModel[0]->mBaseTransformMtx);
    MTXCopy(mDoMtx_stack_c::get(), mBgMtx);
    mDoMtx_stack_c::transS(field_0x614[1]);
    mDoMtx_stack_c::YrotM(field_0x632);
    MTXCopy(mDoMtx_stack_c::get(), mpModel[1]->mBaseTransformMtx);
    MTXCopy(mDoMtx_stack_c::get(), field_0x5b4);

    if (field_0x639 != 2) {
        cXyz mult(450.0f, 0.0f, 75.0f);

        if (field_0x639 == 1) {
            mult.z = -mult.z;
        }
        mDoMtx_stack_c::transS(field_0x614[field_0x639]);
        mDoMtx_stack_c::YrotM(field_0x63a[field_0x639 - 5]);
        mDoMtx_stack_c::multVec(&mult, &field_0x654);
    }
}
#else
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daDoorPush_c::setBaseMtx() {
    nofralloc
#include "asm/rel/d/a/door/d_a_door_push/d_a_door_push/setBaseMtx__12daDoorPush_cFv.s"
}
#pragma pop
#endif

/* 80678060-8067809C 000320 003C+00 1/1 0/0 0/0 .text            __dt__4cXyzFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// cXyz::~cXyz()
extern "C" asm void __dt__4cXyzFv() {
    nofralloc
#include "asm/rel/d/a/door/d_a_door_push/d_a_door_push/__dt__4cXyzFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 80678EE0-80678EE4 000014 0004+00 1/1 0/0 0/0 .rodata          @3744 */
SECTION_RODATA static f32 const lit_3744 = 5.0f;
COMPILER_STRIP_GATE(0x80678EE0, &lit_3744);

/* 80678F18-80678F18 00004C 0000+00 0/0 0/0 0/0 .rodata          @stringBase0 */
#pragma push
#pragma force_active on
SECTION_DEAD static char const* const stringBase_80678F18 = "V_OsuDoor";
SECTION_DEAD static char const* const stringBase_80678F22 = "PUSH_DOOR_L";
#pragma pop

/* 80678F50-80678F5C 000000 000C+00 1/1 0/0 0/0 .data            cNullVec__6Z2Calc */
SECTION_DATA static u8 cNullVec__6Z2Calc[12] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80678F5C-80678F70 00000C 0004+10 0/0 0/0 0/0 .data            @1787 */
#pragma push
#pragma force_active on
SECTION_DATA static u32 lit_1787[1 + 4 /* padding */] = {
    0x02000201,
    /* padding */
    0x40080000,
    0x00000000,
    0x3FE00000,
    0x00000000,
};
#pragma pop

/* 80678F70-80678F74 -00001 0004+00 4/4 0/0 0/0 .data            l_arcName */
SECTION_DATA static void* l_arcName = (void*)&d_a_door_push__stringBase0;

/* 80678F74-80678F8C 000024 0018+00 1/1 0/0 0/0 .data            l_cull_box */
static Vec l_cull_box[2] = {
    {-600.0f, 0.0f, -600.0f},
    {600.0f, 1000.0f, 600.0f},
};

/* 8067809C-806781FC 00035C 0160+00 1/0 0/0 0/0 .text            Create__12daDoorPush_cFv */
#ifdef NONMATCHING
// Matches with literals
int daDoorPush_c::Create() {
    if (field_0x5b0 != NULL && dComIfG_Bgsp().Regist(field_0x5b0, this)) {
        return 0;
    }
    field_0x630[0] = shape_angle.y;
    field_0x630[1] = shape_angle.y + 0x7fff;
    field_0x634[0] = field_0x630[0];
    field_0x634[1] = field_0x630[1];
    field_0x639 = 2;
    initBaseMtx();
    fopAcM_SetMtx(this, field_0x5e4);
    fopAcM_setCullSizeBox(this, l_cull_box[0].x, l_cull_box[0].y, l_cull_box[0].z, l_cull_box[1].x,
                          l_cull_box[1].y, l_cull_box[1].z);
    mpBgW->SetPushPullCallback((dBgW_Base::PushPull_CallBack)PPCallBack);
    field_0x5b0->SetPushPullCallback((dBgW_Base::PushPull_CallBack)PPCallBack2);
    mEvtInfo.setArchiveName(l_arcName);
    for (int i = 0; i < 2; i++) {
        field_0x63a[i] = i_dComIfGp_getEventManager().getEventIdx(this, "PUSH_DOOR_L", 0xff);
        field_0x63e[i] = 0xff;
    }
    fopAcM_setCullSizeFar(this, 5.0f);
    init_modeWait();
    MoveBGExecute();
    return 1;
}
#else
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm int daDoorPush_c::Create() {
    nofralloc
#include "asm/rel/d/a/door/d_a_door_push/d_a_door_push/Create__12daDoorPush_cFv.s"
}
#pragma pop
#endif

/* 806781FC-80678318 0004BC 011C+00 1/0 0/0 0/0 .text            CreateHeap__12daDoorPush_cFv */
#ifdef NONMATCHING
// Matches with literals (l_arcName)
int daDoorPush_c::CreateHeap() {
    J3DModelData* modelData = (J3DModelData*)dComIfG_getObjectRes((char*)l_arcName, 5);
    for (int i = 0; i < 2; i++) {
        mpModel[i] = mDoExt_J3DModel__create(modelData, 0x80000, 0x11000084);
        if (mpModel[i] == NULL) {
            return 0;
        }
    }
    field_0x5b0 = new dBgW();
    if (field_0x5b0 == NULL ||
        field_0x5b0->Set((cBgD_t*)dComIfG_getObjectRes((char*)l_arcName, 8), 1, &field_0x5b4)) {
        field_0x5b0 = NULL;
        return 0;
    }
    return 1;
}
#else
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm int daDoorPush_c::CreateHeap() {
    nofralloc
#include "asm/rel/d/a/door/d_a_door_push/d_a_door_push/CreateHeap__12daDoorPush_cFv.s"
}
#pragma pop
#endif

/* 80678318-8067839C 0005D8 0084+00 1/1 0/0 0/0 .text            create1st__12daDoorPush_cFv */
#ifdef NONMATCHING
// Matches with literals (l_arcName)
int daDoorPush_c::create1st() {
    int phase = dComIfG_resLoad(&mPhaseReq, l_arcName);
    if (phase == cPhs_COMPLEATE_e) {
        phase = MoveBGCreate(l_arcName, 8, NULL, 0x8600, NULL);
        if (phase == cPhs_ERROR_e) {
            return phase;
        }
    }
    return phase;
}
#else
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm int daDoorPush_c::create1st() {
    nofralloc
#include "asm/rel/d/a/door/d_a_door_push/d_a_door_push/create1st__12daDoorPush_cFv.s"
}
#pragma pop
#endif

/* 8067839C-8067840C 00065C 0070+00 1/0 0/0 0/0 .text            Execute__12daDoorPush_cFPPA3_A4_f
 */
int daDoorPush_c::Execute(Mtx** i_mtx) {
    *i_mtx = &mBgMtx;
    action();
    event_proc_call();
    setBaseMtx();
    field_0x5b0->Move();
    for (int i = 0; i < 2; i++) {
        field_0x62c[i] = 0;
    }
    return 1;
}

/* ############################################################################################## */
/* 80678F8C-80678F98 -00001 000C+00 1/1 0/0 0/0 .data            @3792 */
SECTION_DATA static void* lit_3792[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)modeWait__12daDoorPush_cFv,
};

/* 80678F98-80678FA4 000048 000C+00 1/1 0/0 0/0 .data            l_func$3791 */
SECTION_DATA static u8 l_func_3791[12] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 8067840C-80678488 0006CC 007C+00 1/1 0/0 0/0 .text            action__12daDoorPush_cFv */
#ifdef NONMATCHING
void daDoorPush_c::action() {
    typedef void (daDoorPush_c::*actionFunc)();
    static actionFunc l_func[] = {&daDoorPush_c::modeWait};
    (this->*l_func[field_0x638])();
}
#else
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daDoorPush_c::action() {
    nofralloc
#include "asm/rel/d/a/door/d_a_door_push/d_a_door_push/action__12daDoorPush_cFv.s"
}
#pragma pop
#endif

/* 80678488-806784B4 000748 002C+00 1/1 0/0 0/0 .text            init_modeWait__12daDoorPush_cFv */
void daDoorPush_c::init_modeWait() {
    for (int i = 0; i < 2; i++) {
        field_0x62e[i] = 0;
    }
    field_0x638 = 0;
}

/* ############################################################################################## */
/* 80678EE4-80678EEC 000018 0004+04 1/1 0/0 0/0 .rodata          @3870 */
SECTION_RODATA static f32 const lit_3870[1 + 1 /* padding */] = {
    10.0f,
    /* padding */
    0.0f,
};
COMPILER_STRIP_GATE(0x80678EE4, &lit_3870);

/* 80678EEC-80678EF4 000020 0008+00 1/1 0/0 0/0 .rodata          @3872 */
SECTION_RODATA static u8 const lit_3872[8] = {
    0x43, 0x30, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80678EEC, &lit_3872);

/* 806784B4-80678664 000774 01B0+00 1/0 0/0 0/0 .text            modeWait__12daDoorPush_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daDoorPush_c::modeWait() {
    nofralloc
#include "asm/rel/d/a/door/d_a_door_push/d_a_door_push/modeWait__12daDoorPush_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 80678FA4-80678FB0 -00001 000C+00 0/1 0/0 0/0 .data            @3878 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_3878[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)actionOpenWait__12daDoorPush_cFv,
};
#pragma pop

/* 80678FB0-80678FBC -00001 000C+00 0/1 0/0 0/0 .data            @3879 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_3879[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)actionOrderEvent__12daDoorPush_cFv,
};
#pragma pop

/* 80678FBC-80678FC8 -00001 000C+00 0/1 0/0 0/0 .data            @3880 */
#pragma push
#pragma force_active on
SECTION_DATA static void* lit_3880[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)actionEvent__12daDoorPush_cFv,
};
#pragma pop

/* 80678FC8-80678FEC 000078 0024+00 0/1 0/0 0/0 .data            l_func$3877 */
#pragma push
#pragma force_active on
SECTION_DATA static u8 l_func_3877[36] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
#pragma pop

/* 80678664-80678708 000924 00A4+00 1/1 0/0 0/0 .text            event_proc_call__12daDoorPush_cFv
 */
#ifdef NONMATCHING
void daDoorPush_c::event_proc_call() {
    typedef void (daDoorPush_c::*actionFunc)();
    static actionFunc l_func[] = {
        &daDoorPush_c::actionOpenWait,
        &daDoorPush_c::actionOrderEvent,
        &daDoorPush_c::actionEvent,
    };
    (this->*l_func[field_0x640])();
}
#else
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daDoorPush_c::event_proc_call() {
    nofralloc
#include "asm/rel/d/a/door/d_a_door_push/d_a_door_push/event_proc_call__12daDoorPush_cFv.s"
}
#pragma pop
#endif

/* 80678708-8067877C 0009C8 0074+00 1/0 0/0 0/0 .text            actionOpenWait__12daDoorPush_cFv */
void daDoorPush_c::actionOpenWait() {
    if (field_0x639 != 2) {
        setAction(1);
        fopAcM_orderOtherEventId(this, field_0x63a[field_0x639], field_0x63e[field_0x639], 0xffff,
                                 0, 1);
        mEvtInfo.i_onCondition(2);
    }
}

/* 8067877C-806787F8 000A3C 007C+00 1/0 0/0 0/0 .text            actionOrderEvent__12daDoorPush_cFv
 */
void daDoorPush_c::actionOrderEvent() {
    if (mEvtInfo.i_checkCommandDemoAccrpt()) {
        setAction(2);
        demoProc();
    } else {
        fopAcM_orderOtherEventId(this, field_0x63a[field_0x639], field_0x63e[field_0x639], 0xffff,
                                 0, 1);
        mEvtInfo.i_onCondition(2);
    }
}

/* 806787F8-80678818 000AB8 0020+00 1/0 0/0 0/0 .text            actionEvent__12daDoorPush_cFv */
void daDoorPush_c::actionEvent() {
    demoProc();
}

/* ############################################################################################## */
/* 80678F18-80678F18 00004C 0000+00 0/0 0/0 0/0 .rodata          @stringBase0 */
#pragma push
#pragma force_active on
SECTION_DEAD static char const* const stringBase_80678F2E = "WAIT";
SECTION_DEAD static char const* const stringBase_80678F33 = "OPEN";
SECTION_DEAD static char const* const stringBase_80678F38 = "SCENE_CHG";
SECTION_DEAD static char const* const stringBase_80678F42 = "pdoor";
SECTION_DEAD static char const* const stringBase_80678F48 = "Timer";
#pragma pop

/* 80678FEC-80678FF8 -00001 000C+00 1/1 0/0 0/0 .data            action_table$3910 */
SECTION_DATA static void* action_table[3] = {
    (void*)(((char*)&d_a_door_push__stringBase0) + 0x16),
    (void*)(((char*)&d_a_door_push__stringBase0) + 0x1B),
    (void*)(((char*)&d_a_door_push__stringBase0) + 0x20),
};

/* 80678818-80678AEC 000AD8 02D4+00 2/2 0/0 0/0 .text            demoProc__12daDoorPush_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daDoorPush_c::demoProc() {
    nofralloc
#include "asm/rel/d/a/door/d_a_door_push/d_a_door_push/demoProc__12daDoorPush_cFv.s"
}
#pragma pop

/* 80678AEC-80678B10 000DAC 0024+00 1/1 0/0 0/0 .text            rotateInit__12daDoorPush_cFv */
void daDoorPush_c::rotateInit() {
    daPy_py_c* player = (daPy_py_c*)dComIfGp_getPlayer(0);
    player->i_onPushPullKeep();
    field_0x649 = 0;
}

/* ############################################################################################## */
/* 80678EF4-80678EF8 000028 0004+00 0/0 0/0 0/0 .rodata          @3985 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_3985 = 1.0f;
COMPILER_STRIP_GATE(0x80678EF4, &lit_3985);
#pragma pop

/* 80678EF8-80678EFC 00002C 0004+00 0/0 0/0 0/0 .rodata          @3986 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_3986 = -1.0f;
COMPILER_STRIP_GATE(0x80678EF8, &lit_3986);
#pragma pop

/* 80678EFC-80678F00 000030 0004+00 1/1 0/0 0/0 .rodata          @4009 */
SECTION_RODATA static f32 const lit_4009 = 5461.0f;
COMPILER_STRIP_GATE(0x80678EFC, &lit_4009);

/* 80678F00-80678F04 000034 0004+00 1/1 0/0 0/0 .rodata          @4010 */
SECTION_RODATA static f32 const lit_4010 = 60.0f;
COMPILER_STRIP_GATE(0x80678F00, &lit_4010);

/* 80678F04-80678F0C 000038 0008+00 1/1 0/0 0/0 .rodata          @4012 */
SECTION_RODATA static u8 const lit_4012[8] = {
    0x43, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80678F04, &lit_4012);

/* 80678B10-80678BC0 000DD0 00B0+00 1/1 0/0 0/0 .text            rotate__12daDoorPush_cFv */
#ifdef NONMATCHING
// Matches with literals
int daDoorPush_c::rotate() {
    field_0x649++;
    field_0x630[field_0x639] = field_0x634[field_0x639];
    s16 rotation = field_0x649 / 60.0f * 5461.0f;
    if (field_0x639 == 1) {
        rotation = -rotation;
    }
    field_0x630[field_0x639] += rotation;
    if (field_0x649 == 60) {
        return 1;
    }
    return 0;
}
#else
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm int daDoorPush_c::rotate() {
    nofralloc
#include "asm/rel/d/a/door/d_a_door_push/d_a_door_push/rotate__12daDoorPush_cFv.s"
}
#pragma pop
#endif

/* ############################################################################################## */
/* 80678F0C-80678F10 000040 0004+00 0/1 0/0 0/0 .rodata          @4031 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_4031 = 300.0f;
COMPILER_STRIP_GATE(0x80678F0C, &lit_4031);
#pragma pop

/* 80678F10-80678F14 000044 0004+00 0/1 0/0 0/0 .rodata          @4032 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_4032 = -400.0f;
COMPILER_STRIP_GATE(0x80678F10, &lit_4032);
#pragma pop

/* 80678F14-80678F18 000048 0004+00 0/1 0/0 0/0 .rodata          @4033 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_4033 = -300.0f;
COMPILER_STRIP_GATE(0x80678F14, &lit_4033);
#pragma pop

/* 80678BC0-80678C70 000E80 00B0+00 1/1 0/0 0/0 .text            setGoal__12daDoorPush_cFv */
#ifdef NONMATCHING
// Matches with literals?
void daDoorPush_c::setGoal() {
    cXyz goal;
    if (field_0x639 == 0) {
        goal.set(300.0f, 0.0f, -400.0f);
    } else {
        goal.set(-300.0f, 0.0f, -400.0f);
    }
    mDoMtx_stack_c::transS(current.pos);
    mDoMtx_stack_c::YrotM(orig.angle.y);
    mDoMtx_stack_c::multVec(&goal, &goal);
    dComIfGp_evmng_setGoal(&goal);
}
#else
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daDoorPush_c::setGoal() {
    nofralloc
#include "asm/rel/d/a/door/d_a_door_push/d_a_door_push/setGoal__12daDoorPush_cFv.s"
}
#pragma pop
#endif

/* 80678C70-80678D2C 000F30 00BC+00 1/0 0/0 0/0 .text            Draw__12daDoorPush_cFv */
int daDoorPush_c::Draw() {
    g_env_light.settingTevStruct(0x10, &current.pos, &mTevStr);
    for (int i = 0; i < 2; i++) {
        g_env_light.setLightTevColorType_MAJI(mpModel[i], &mTevStr);
        dComIfGd_setListBG();
        mDoExt_modelUpdateDL(mpModel[i]);
        dComIfGd_setList();
    }
    return 1;
}

/* 80678D2C-80678DAC 000FEC 0080+00 1/0 0/0 0/0 .text            Delete__12daDoorPush_cFv */
#ifdef NONMATCHING
// Matches with literals (l_arcName)
int daDoorPush_c::Delete() {
    if (field_0x5b0 != NULL && field_0x5b0->ChkUsed()) {
        dComIfG_Bgsp().Release(field_0x5b0);
    }
    mpBgW->SetPushPullCallback(NULL);
    field_0x5b0->SetPushPullCallback(NULL);
    dComIfG_resDelete(&mPhaseReq, (char*)l_arcName);
    return 1;
}
#else
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm int daDoorPush_c::Delete() {
    nofralloc
#include "asm/rel/d/a/door/d_a_door_push/d_a_door_push/Delete__12daDoorPush_cFv.s"
}
#pragma pop
#endif

/* ############################################################################################## */
/* 80678FF8-80679018 -00001 0020+00 1/0 0/0 0/0 .data            daDoorPush_METHODS */
SECTION_DATA static void* daDoorPush_METHODS[8] = {
    (void*)daDoorPush_create1st__FP12daDoorPush_c,
    (void*)daDoorPush_MoveBGDelete__FP12daDoorPush_c,
    (void*)daDoorPush_MoveBGExecute__FP12daDoorPush_c,
    (void*)NULL,
    (void*)daDoorPush_MoveBGDraw__FP12daDoorPush_c,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
};

/* 80679018-80679048 -00001 0030+00 0/0 0/0 1/0 .data            g_profile_PushDoor */
SECTION_DATA extern void* g_profile_PushDoor[12] = {
    (void*)0xFFFFFFFD, (void*)0x0003FFFD,
    (void*)0x00BF0000, (void*)&g_fpcLf_Method,
    (void*)0x00000660, (void*)NULL,
    (void*)NULL,       (void*)&g_fopAc_Method,
    (void*)0x02420000, (void*)&daDoorPush_METHODS,
    (void*)0x00040100, (void*)0x000E0000,
};

/* 80679048-80679070 0000F8 0028+00 1/1 0/0 0/0 .data            __vt__12daDoorPush_c */
SECTION_DATA extern void* __vt__12daDoorPush_c[10] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)CreateHeap__12daDoorPush_cFv,
    (void*)Create__12daDoorPush_cFv,
    (void*)Execute__12daDoorPush_cFPPA3_A4_f,
    (void*)Draw__12daDoorPush_cFv,
    (void*)Delete__12daDoorPush_cFv,
    (void*)IsDelete__16dBgS_MoveBgActorFv,
    (void*)ToFore__16dBgS_MoveBgActorFv,
    (void*)ToBack__16dBgS_MoveBgActorFv,
};

/* 80678DAC-80678E38 00106C 008C+00 1/0 0/0 0/0 .text daDoorPush_create1st__FP12daDoorPush_c */
#ifdef NONMATCHING
// vtable
static int daDoorPush_create1st(daDoorPush_c* i_this) {
    fopAcM_SetupActor(i_this, daDoorPush_c);
    return i_this->create1st();
}
#else
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void daDoorPush_create1st(daDoorPush_c* i_this) {
    nofralloc
#include "asm/rel/d/a/door/d_a_door_push/d_a_door_push/daDoorPush_create1st__FP12daDoorPush_c.s"
}
#pragma pop
#endif

/* 80678E38-80678E3C 0010F8 0004+00 1/1 0/0 0/0 .text            __ct__4cXyzFv */
// cXyz::cXyz()
extern "C" void __ct__4cXyzFv() {
    /* empty function */
}

/* 80678E3C-80678E5C 0010FC 0020+00 1/0 0/0 0/0 .text daDoorPush_MoveBGDelete__FP12daDoorPush_c */
static int daDoorPush_MoveBGDelete(daDoorPush_c* i_this) {
    return i_this->MoveBGDelete();
}

/* 80678E5C-80678E7C 00111C 0020+00 1/0 0/0 0/0 .text daDoorPush_MoveBGExecute__FP12daDoorPush_c
 */
static int daDoorPush_MoveBGExecute(daDoorPush_c* i_this) {
    return i_this->MoveBGExecute();
}

/* 80678E7C-80678EA8 00113C 002C+00 1/0 0/0 0/0 .text daDoorPush_MoveBGDraw__FP12daDoorPush_c */
static int daDoorPush_MoveBGDraw(daDoorPush_c* i_this) {
    return i_this->MoveBGDraw();
}

/* 80678EA8-80678EC4 001168 001C+00 1/1 0/0 0/0 .text            cLib_calcTimer<Uc>__FPUc */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void func_80678EA8(void* _this, u8* param_0) {
    nofralloc
#include "asm/rel/d/a/door/d_a_door_push/d_a_door_push/func_80678EA8.s"
}
#pragma pop

/* 80678F18-80678F18 00004C 0000+00 0/0 0/0 0/0 .rodata          @stringBase0 */
