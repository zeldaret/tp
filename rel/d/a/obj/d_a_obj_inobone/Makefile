#
# Generated By: dol2asm
#

M485_TARGET := $(BUILD_DIR)/rel/d/a/obj/d_a_obj_inobone.plf
M485_LDSCRIPT := $(BUILD_DIR)/rel/d/a/obj/d_a_obj_inobone.lcf
M485_MAP := $(BUILD_DIR)/rel/d/a/obj/d_a_obj_inobone.map

M485_CPP_FILES := \
	rel/executor.cpp \
	rel/d/a/obj/d_a_obj_inobone/d_a_obj_inobone.cpp \

M485_O_FILES := \
	$(BUILD_DIR)/rel/executor.o \
	$(BUILD_DIR)/rel/d/a/obj/d_a_obj_inobone/d_a_obj_inobone.o \

M485_LIBS := \

M485_CFLAGS := \
	-sdata 0 \
	-sdata2 0 \

M485_LDFLAGS := \
	-nodefaults \
	-fp hard \
	-proc gekko \
	-linkmode moreram \
	-sdata 0 \
	-sdata2 0 \
	-m _prolog \
	-lcf $(M485_LDSCRIPT) \
	-unused -map $(M485_MAP) \
	-w off \

$(M485_TARGET): $(M485_O_FILES) $(M485_LIBS)
	@echo [485] creating $(M485_TARGET)
	@echo $(M485_LIBS) $(M485_O_FILES) > build/M485_ofiles
	@python3 tools/lcf.py rel 485 --output $(M485_LDSCRIPT)
	@$(LD) -opt_partial -strip_partial $(M485_LDFLAGS) -o $(M485_TARGET) @build/M485_ofiles

$(BUILD_DIR)/rel/d/a/obj/d_a_obj_inobone/%.o: rel/d/a/obj/d_a_obj_inobone/%.cpp $(BUILD_DIR)/rel/d/a/obj/d_a_obj_inobone/%.d
	@echo [485] building $@
	@mkdir -p $(@D)
	@$(ICONV) -f UTF-8 -t CP932 < $< > $(basename $@).cpp
	@$(CC) $(CFLAGS) $(M485_CFLAGS) $(DEPFLAGS) -c -o $(dir $@) $(basename $@).cpp
	@if [ -z '$(DISABLE_DEPS)' ]; then tools/transform-dep.py '$(basename $@).d' '$(basename $@).d'; touch -c $@; fi

ifndef DISABLE_DEPS
M485_D_FILES := $(M485_O_FILES:.o=.d)
$(M485_D_FILES):
include $(wildcard $(M485_D_FILES))
endif


