//
// Generated By: dol2asm
// Translation Unit: d_a_obj_lv3saka00
//

#include "rel/d/a/obj/d_a_obj_lv3saka00/d_a_obj_lv3saka00.h"
#include "dol2asm.h"

//
// Types:
//

struct request_of_phase_process_class {};

struct mDoMtx_stack_c {
    static u8 now[48];
};

struct fopAc_ac_c {};

struct daObjLv3saka_c {
    /* 80C5BE58 */ void initBaseMtx();
    /* 80C5BE78 */ void setBaseMtx();
    /* 80C5BED8 */ void Create();
    /* 80C5BFA0 */ void CreateHeap();
    /* 80C5C058 */ void create1st();
    /* 80C5C0FC */ void Execute(f32 (**)[3][4]);
    /* 80C5C17C */ void setNrmDzb();
    /* 80C5C1F8 */ void setWtrDzb();
    /* 80C5C274 */ bool Draw();
    /* 80C5C27C */ void Delete();
};

struct dSv_info_c {
    /* 80035360 */ void isSwitch(int, int) const;
};

struct dRes_info_c {};

struct dRes_control_c {
    /* 8003C2EC */ void getRes(char const*, s32, dRes_info_c*, int);
};

struct dBgW_Base {};

struct dBgW {
    /* 8007B970 */ dBgW();
    /* 8007B9C0 */ void Move();
};

struct cBgS_PolyInfo {};

struct csXyz {};

struct cXyz {};

struct dBgS_MoveBgActor {
    /* 80078624 */ dBgS_MoveBgActor();
    /* 800786B0 */ bool IsDelete();
    /* 800786B8 */ bool ToFore();
    /* 800786C0 */ bool ToBack();
    /* 800787BC */ void MoveBGCreate(char const*, int,
                                     void (*)(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*,
                                              csXyz*, csXyz*),
                                     u32, f32 (*)[3][4]);
    /* 800788DC */ void MoveBGDelete();
    /* 80078950 */ void MoveBGExecute();
};

struct dBgS {
    /* 80074A08 */ void Regist(dBgW_Base*, fopAc_ac_c*);
};

struct cBgW_BgId {
    /* 802681D4 */ void ChkUsed() const;
};

struct cBgD_t {};

struct cBgW {
    /* 80079F38 */ void Set(cBgD_t*, u32, f32 (*)[3][4]);
};

struct cBgS {
    /* 80074250 */ void Release(dBgW_Base*);
};

//
// Forward References:
//

extern "C" void initBaseMtx__14daObjLv3saka_cFv();
extern "C" void setBaseMtx__14daObjLv3saka_cFv();
extern "C" void Create__14daObjLv3saka_cFv();
extern "C" void CreateHeap__14daObjLv3saka_cFv();
extern "C" void create1st__14daObjLv3saka_cFv();
extern "C" void Execute__14daObjLv3saka_cFPPA3_A4_f();
extern "C" void setNrmDzb__14daObjLv3saka_cFv();
extern "C" void setWtrDzb__14daObjLv3saka_cFv();
extern "C" bool Draw__14daObjLv3saka_cFv();
extern "C" void Delete__14daObjLv3saka_cFv();
extern "C" static void daObjLv3saka_create1st__FP14daObjLv3saka_c();
extern "C" static void daObjLv3saka_MoveBGDelete__FP14daObjLv3saka_c();
extern "C" static void daObjLv3saka_MoveBGExecute__FP14daObjLv3saka_c();
extern "C" static void daObjLv3saka_MoveBGDraw__FP14daObjLv3saka_c();
extern "C" extern char const* const d_a_obj_lv3saka00__stringBase0;

//
// External References:
//

extern "C" void mDoMtx_YrotM__FPA4_fs();
extern "C" void dComIfG_resLoad__FP30request_of_phase_process_classPCc();
extern "C" void dComIfG_resDelete__FP30request_of_phase_process_classPCc();
extern "C" void isSwitch__10dSv_info_cCFii();
extern "C" void getRes__14dRes_control_cFPCclP11dRes_info_ci();
extern "C" void Release__4cBgSFP9dBgW_Base();
extern "C" void Regist__4dBgSFP9dBgW_BaseP10fopAc_ac_c();
extern "C" void dBgS_MoveBGProc_TypicalRotY__FP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz();
extern "C" void __ct__16dBgS_MoveBgActorFv();
extern "C" bool IsDelete__16dBgS_MoveBgActorFv();
extern "C" bool ToFore__16dBgS_MoveBgActorFv();
extern "C" bool ToBack__16dBgS_MoveBgActorFv();
extern "C" void
MoveBGCreate__16dBgS_MoveBgActorFPCciPFP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz_vUlPA3_A4_f();
extern "C" void MoveBGDelete__16dBgS_MoveBgActorFv();
extern "C" void MoveBGExecute__16dBgS_MoveBgActorFv();
extern "C" void Set__4cBgWFP6cBgD_tUlPA3_A4_f();
extern "C" void __ct__4dBgWFv();
extern "C" void Move__4dBgWFv();
extern "C" void ChkUsed__9cBgW_BgIdCFv();
extern "C" void* __nw__FUl();
extern "C" void PSMTXCopy();
extern "C" void PSMTXTrans();
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" u8 now__14mDoMtx_stack_c[48];
extern "C" extern u8 g_dComIfG_gameInfo[122384];

//
// Declarations:
//

/* 80C5BE58-80C5BE78 000078 0020+00 1/1 0/0 0/0 .text            initBaseMtx__14daObjLv3saka_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daObjLv3saka_c::initBaseMtx() {
    nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv3saka00/d_a_obj_lv3saka00/initBaseMtx__14daObjLv3saka_cFv.s"
}
#pragma pop

/* 80C5BE78-80C5BED8 000098 0060+00 2/2 0/0 0/0 .text            setBaseMtx__14daObjLv3saka_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daObjLv3saka_c::setBaseMtx() {
    nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv3saka00/d_a_obj_lv3saka00/setBaseMtx__14daObjLv3saka_cFv.s"
}
#pragma pop

/* 80C5BED8-80C5BFA0 0000F8 00C8+00 1/0 0/0 0/0 .text            Create__14daObjLv3saka_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daObjLv3saka_c::Create() {
    nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv3saka00/d_a_obj_lv3saka00/Create__14daObjLv3saka_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 80C5C3C4-80C5C3CC 000000 0008+00 1/1 0/0 0/0 .rodata          l_dzbIdx */
SECTION_RODATA static u8 const l_dzbIdx[8] = {
    0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x03,
};
COMPILER_STRIP_GATE(0x80C5C3C4, &l_dzbIdx);

/* 80C5C3CC-80C5C3D4 000008 0008+00 1/1 0/0 0/0 .rodata          l_dzbIdx2 */
SECTION_RODATA static u8 const l_dzbIdx2[8] = {
    0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04,
};
COMPILER_STRIP_GATE(0x80C5C3CC, &l_dzbIdx2);

/* 80C5C3DC-80C5C3DC 000018 0000+00 0/0 0/0 0/0 .rodata          @stringBase0 */
#pragma push
#pragma force_active on
SECTION_DEAD static char const* const stringBase_80C5C3DC = "Obj_saka";
SECTION_DEAD static char const* const stringBase_80C5C3E5 = "Obj_saka2";
#pragma pop

/* 80C5C3F0-80C5C3F8 -00001 0008+00 3/3 0/0 0/0 .data            l_arcName */
SECTION_DATA static void* l_arcName[2] = {
    (void*)&d_a_obj_lv3saka00__stringBase0,
    (void*)(((char*)&d_a_obj_lv3saka00__stringBase0) + 0x9),
};

/* 80C5BFA0-80C5C058 0001C0 00B8+00 1/0 0/0 0/0 .text            CreateHeap__14daObjLv3saka_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daObjLv3saka_c::CreateHeap() {
    nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv3saka00/d_a_obj_lv3saka00/CreateHeap__14daObjLv3saka_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 80C5C3D4-80C5C3DC 000010 0008+00 1/1 0/0 0/0 .rodata          l_heap_size */
SECTION_RODATA static u8 const l_heap_size[8] = {
    0x00, 0x00, 0x4E, 0x00, 0x00, 0x00, 0x29, 0x00,
};
COMPILER_STRIP_GATE(0x80C5C3D4, &l_heap_size);

/* 80C5C058-80C5C0FC 000278 00A4+00 1/1 0/0 0/0 .text            create1st__14daObjLv3saka_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daObjLv3saka_c::create1st() {
    nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv3saka00/d_a_obj_lv3saka00/create1st__14daObjLv3saka_cFv.s"
}
#pragma pop

/* 80C5C0FC-80C5C17C 00031C 0080+00 1/0 0/0 0/0 .text            Execute__14daObjLv3saka_cFPPA3_A4_f
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daObjLv3saka_c::Execute(f32 (**param_0)[3][4]) {
    nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv3saka00/d_a_obj_lv3saka00/Execute__14daObjLv3saka_cFPPA3_A4_f.s"
}
#pragma pop

/* 80C5C17C-80C5C1F8 00039C 007C+00 1/1 0/0 0/0 .text            setNrmDzb__14daObjLv3saka_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daObjLv3saka_c::setNrmDzb() {
    nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv3saka00/d_a_obj_lv3saka00/setNrmDzb__14daObjLv3saka_cFv.s"
}
#pragma pop

/* 80C5C1F8-80C5C274 000418 007C+00 1/1 0/0 0/0 .text            setWtrDzb__14daObjLv3saka_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daObjLv3saka_c::setWtrDzb() {
    nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv3saka00/d_a_obj_lv3saka00/setWtrDzb__14daObjLv3saka_cFv.s"
}
#pragma pop

/* 80C5C274-80C5C27C 000494 0008+00 1/0 0/0 0/0 .text            Draw__14daObjLv3saka_cFv */
bool daObjLv3saka_c::Draw() {
    return true;
}

/* 80C5C27C-80C5C2F0 00049C 0074+00 1/0 0/0 0/0 .text            Delete__14daObjLv3saka_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daObjLv3saka_c::Delete() {
    nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv3saka00/d_a_obj_lv3saka00/Delete__14daObjLv3saka_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 80C5C3F8-80C5C418 -00001 0020+00 1/0 0/0 0/0 .data            daObjLv3saka_METHODS */
SECTION_DATA static void* daObjLv3saka_METHODS[8] = {
    (void*)daObjLv3saka_create1st__FP14daObjLv3saka_c,
    (void*)daObjLv3saka_MoveBGDelete__FP14daObjLv3saka_c,
    (void*)daObjLv3saka_MoveBGExecute__FP14daObjLv3saka_c,
    (void*)NULL,
    (void*)daObjLv3saka_MoveBGDraw__FP14daObjLv3saka_c,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
};

/* 80C5C418-80C5C448 -00001 0030+00 0/0 0/0 1/0 .data            g_profile_Obj_Lv3R10Saka */
SECTION_DATA extern void* g_profile_Obj_Lv3R10Saka[12] = {
    (void*)0xFFFFFFFD, (void*)0x0003FFFD,
    (void*)0x00D40000, (void*)&g_fpcLf_Method,
    (void*)0x000005AC, (void*)NULL,
    (void*)NULL,       (void*)&g_fopAc_Method,
    (void*)0x02100000, (void*)&daObjLv3saka_METHODS,
    (void*)0x00040100, (void*)0x000E0000,
};

/* 80C5C448-80C5C470 000058 0028+00 1/1 0/0 0/0 .data            __vt__14daObjLv3saka_c */
SECTION_DATA extern void* __vt__14daObjLv3saka_c[10] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)CreateHeap__14daObjLv3saka_cFv,
    (void*)Create__14daObjLv3saka_cFv,
    (void*)Execute__14daObjLv3saka_cFPPA3_A4_f,
    (void*)Draw__14daObjLv3saka_cFv,
    (void*)Delete__14daObjLv3saka_cFv,
    (void*)IsDelete__16dBgS_MoveBgActorFv,
    (void*)ToFore__16dBgS_MoveBgActorFv,
    (void*)ToBack__16dBgS_MoveBgActorFv,
};

/* 80C5C2F0-80C5C350 000510 0060+00 1/0 0/0 0/0 .text daObjLv3saka_create1st__FP14daObjLv3saka_c
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void daObjLv3saka_create1st(daObjLv3saka_c* param_0) {
    nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv3saka00/d_a_obj_lv3saka00/daObjLv3saka_create1st__FP14daObjLv3saka_c.s"
}
#pragma pop

/* 80C5C350-80C5C370 000570 0020+00 1/0 0/0 0/0 .text
 * daObjLv3saka_MoveBGDelete__FP14daObjLv3saka_c                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void daObjLv3saka_MoveBGDelete(daObjLv3saka_c* param_0) {
    nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv3saka00/d_a_obj_lv3saka00/daObjLv3saka_MoveBGDelete__FP14daObjLv3saka_c.s"
}
#pragma pop

/* 80C5C370-80C5C390 000590 0020+00 1/0 0/0 0/0 .text
 * daObjLv3saka_MoveBGExecute__FP14daObjLv3saka_c               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void daObjLv3saka_MoveBGExecute(daObjLv3saka_c* param_0) {
    nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv3saka00/d_a_obj_lv3saka00/daObjLv3saka_MoveBGExecute__FP14daObjLv3saka_c.s"
}
#pragma pop

/* 80C5C390-80C5C3BC 0005B0 002C+00 1/0 0/0 0/0 .text daObjLv3saka_MoveBGDraw__FP14daObjLv3saka_c
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void daObjLv3saka_MoveBGDraw(daObjLv3saka_c* param_0) {
    nofralloc
#include "asm/rel/d/a/obj/d_a_obj_lv3saka00/d_a_obj_lv3saka00/daObjLv3saka_MoveBGDraw__FP14daObjLv3saka_c.s"
}
#pragma pop

/* 80C5C3DC-80C5C3DC 000018 0000+00 0/0 0/0 0/0 .rodata          @stringBase0 */
