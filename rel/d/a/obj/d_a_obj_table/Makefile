#
# Generated By: dol2asm
#

M651_TARGET := $(BUILD_DIR)/rel/d/a/obj/d_a_obj_table.plf
M651_LDSCRIPT := $(BUILD_DIR)/rel/d/a/obj/d_a_obj_table.lcf
M651_MAP := $(BUILD_DIR)/rel/d/a/obj/d_a_obj_table.map

M651_CPP_FILES := \
	rel/executor.cpp \
	rel/d/a/obj/d_a_obj_table/d_a_obj_table.cpp \

M651_O_FILES := \
	$(BUILD_DIR)/rel/executor.o \
	$(BUILD_DIR)/rel/d/a/obj/d_a_obj_table/d_a_obj_table.o \

M651_LIBS := \

M651_CFLAGS := \
	-sdata 0 \
	-sdata2 0 \

M651_LDFLAGS := \
	-nodefaults \
	-fp hard \
	-proc gekko \
	-linkmode moreram \
	-sdata 0 \
	-sdata2 0 \
	-m _prolog \
	-lcf $(M651_LDSCRIPT) \
	-unused -map $(M651_MAP) \
	-w off \

$(M651_TARGET): $(M651_O_FILES) $(M651_LIBS)
	@echo [651] creating $(M651_TARGET)
	@echo $(M651_LIBS) $(M651_O_FILES) > build/M651_ofiles
	@python3 tools/lcf.py rel 651 --output $(M651_LDSCRIPT)
	@$(LD) -opt_partial -strip_partial $(M651_LDFLAGS) -o $(M651_TARGET) @build/M651_ofiles

$(BUILD_DIR)/rel/d/a/obj/d_a_obj_table/%.o: rel/d/a/obj/d_a_obj_table/%.cpp
	@echo [651] building $@
	@mkdir -p $(@D)
	@iconv -f UTF-8 -t CP932 < $< > $@.iconv.cpp
	@$(CC) $(CFLAGS) $(M651_CFLAGS) -c -o $@ $@.iconv.cpp


