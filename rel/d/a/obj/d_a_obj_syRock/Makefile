#
# Generated By: dol2asm
#

M648_TARGET := $(BUILD_DIR)/rel/d/a/obj/d_a_obj_syRock.plf
M648_LDSCRIPT := $(BUILD_DIR)/rel/d/a/obj/d_a_obj_syRock.lcf
M648_MAP := $(BUILD_DIR)/rel/d/a/obj/d_a_obj_syRock.map

M648_CPP_FILES := \
	rel/executor.cpp \
	rel/global_destructor_chain.cpp \
	rel/d/a/obj/d_a_obj_syRock/d_a_obj_syRock.cpp \

M648_O_FILES := \
	$(BUILD_DIR)/rel/executor.o \
	$(BUILD_DIR)/rel/global_destructor_chain.o \
	$(BUILD_DIR)/rel/d/a/obj/d_a_obj_syRock/d_a_obj_syRock.o \

M648_LIBS := \

M648_CFLAGS := \
	-sdata 0 \
	-sdata2 0 \

M648_LDFLAGS := \
	-nodefaults \
	-fp hard \
	-proc gekko \
	-linkmode moreram \
	-sdata 0 \
	-sdata2 0 \
	-m _prolog \
	-lcf $(M648_LDSCRIPT) \
	-unused -map $(M648_MAP) \
	-w off \

$(M648_TARGET): $(M648_O_FILES) $(M648_LIBS)
	@echo [648] creating $(M648_TARGET)
	@echo $(M648_LIBS) $(M648_O_FILES) > build/M648_ofiles
	@python3 tools/lcf.py rel 648 --output $(M648_LDSCRIPT)
	@$(LD) -opt_partial -strip_partial $(M648_LDFLAGS) -o $(M648_TARGET) @build/M648_ofiles

$(BUILD_DIR)/rel/d/a/obj/d_a_obj_syRock/%.o: rel/d/a/obj/d_a_obj_syRock/%.cpp
	@echo [648] building $@
	@mkdir -p $(@D)
	@iconv -f UTF-8 -t CP932 < $< > $@.iconv.cpp
	@$(CC) $(CFLAGS) $(M648_CFLAGS) -c -o $@ $@.iconv.cpp


