#
# Generated By: dol2asm
#

M625_TARGET := $(BUILD_DIR)/rel/d/a/obj/d_a_obj_smw_stone.plf
M625_LDSCRIPT := $(BUILD_DIR)/rel/d/a/obj/d_a_obj_smw_stone.lcf
M625_MAP := $(BUILD_DIR)/rel/d/a/obj/d_a_obj_smw_stone.map

M625_CPP_FILES := \
	rel/executor.cpp \
	rel/d/a/obj/d_a_obj_smw_stone/d_a_obj_smw_stone.cpp \

M625_O_FILES := \
	$(BUILD_DIR)/rel/executor.o \
	$(BUILD_DIR)/rel/d/a/obj/d_a_obj_smw_stone/d_a_obj_smw_stone.o \

M625_LIBS := \

M625_CFLAGS := \
	-sdata 0 \
	-sdata2 0 \

M625_LDFLAGS := \
	-nodefaults \
	-fp hard \
	-proc gekko \
	-linkmode moreram \
	-sdata 0 \
	-sdata2 0 \
	-m _prolog \
	-lcf $(M625_LDSCRIPT) \
	-unused -map $(M625_MAP) \
	-w off \

$(M625_TARGET): $(M625_O_FILES) $(M625_LIBS)
	@echo [625] creating $(M625_TARGET)
	@echo $(M625_LIBS) $(M625_O_FILES) > build/M625_ofiles
	@python3 tools/lcf.py rel 625 --output $(M625_LDSCRIPT)
	@$(LD) -opt_partial -strip_partial $(M625_LDFLAGS) -o $(M625_TARGET) @build/M625_ofiles

$(BUILD_DIR)/rel/d/a/obj/d_a_obj_smw_stone/%.o: rel/d/a/obj/d_a_obj_smw_stone/%.cpp
	@echo [625] building $@
	@mkdir -p $(@D)
	@iconv -f UTF-8 -t CP932 < $< > $@.iconv.cpp
	@$(CC) $(CFLAGS) $(M625_CFLAGS) -c -o $@ $@.iconv.cpp


