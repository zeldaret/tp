#
# Generated By: dol2asm
#

M650_TARGET := $(BUILD_DIR)/rel/d/a/obj/d_a_obj_taFence.plf
M650_LDSCRIPT := $(BUILD_DIR)/rel/d/a/obj/d_a_obj_taFence.lcf
M650_MAP := $(BUILD_DIR)/rel/d/a/obj/d_a_obj_taFence.map

M650_CPP_FILES := \
	rel/executor.cpp \
	rel/global_destructor_chain.cpp \
	rel/d/a/obj/d_a_obj_taFence/d_a_obj_taFence.cpp \

M650_O_FILES := \
	$(BUILD_DIR)/rel/executor.o \
	$(BUILD_DIR)/rel/global_destructor_chain.o \
	$(BUILD_DIR)/rel/d/a/obj/d_a_obj_taFence/d_a_obj_taFence.o \

M650_LIBS := \

M650_CFLAGS := \
	-sdata 0 \
	-sdata2 0 \

M650_LDFLAGS := \
	-nodefaults \
	-fp hard \
	-proc gekko \
	-linkmode moreram \
	-sdata 0 \
	-sdata2 0 \
	-m _prolog \
	-lcf $(M650_LDSCRIPT) \
	-unused -map $(M650_MAP) \
	-w off \

$(M650_TARGET): $(M650_O_FILES) $(M650_LIBS)
	@echo [650] creating $(M650_TARGET)
	@echo $(M650_LIBS) $(M650_O_FILES) > build/M650_ofiles
	@python3 tools/lcf.py rel 650 --output $(M650_LDSCRIPT)
	@$(LD) -opt_partial -strip_partial $(M650_LDFLAGS) -o $(M650_TARGET) @build/M650_ofiles

$(BUILD_DIR)/rel/d/a/obj/d_a_obj_taFence/%.o: rel/d/a/obj/d_a_obj_taFence/%.cpp
	@echo [650] building $@
	@mkdir -p $(@D)
	@iconv -f UTF-8 -t CP932 < $< > $@.iconv.cpp
	@$(CC) $(CFLAGS) $(M650_CFLAGS) -c -o $@ $@.iconv.cpp


