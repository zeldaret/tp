#
# Generated By: dol2asm
#

M572_TARGET := $(BUILD_DIR)/rel/d/a/obj/mirror/d_a_obj_mirror_6pole.plf
M572_LDSCRIPT := $(BUILD_DIR)/rel/d/a/obj/mirror/d_a_obj_mirror_6pole.lcf
M572_MAP := $(BUILD_DIR)/rel/d/a/obj/mirror/d_a_obj_mirror_6pole.map

M572_CPP_FILES := \
	rel/executor.cpp \
	rel/d/a/obj/mirror/d_a_obj_mirror_6pole/d_a_obj_mirror_6pole.cpp \

M572_O_FILES := \
	$(BUILD_DIR)/rel/executor.o \
	$(BUILD_DIR)/rel/d/a/obj/mirror/d_a_obj_mirror_6pole/d_a_obj_mirror_6pole.o \

M572_LIBS := \

M572_CFLAGS := \
	-sdata 0 \
	-sdata2 0 \

M572_LDFLAGS := \
	-nodefaults \
	-fp hard \
	-proc gekko \
	-linkmode moreram \
	-sdata 0 \
	-sdata2 0 \
	-m _prolog \
	-lcf $(M572_LDSCRIPT) \
	-unused -map $(M572_MAP) \
	-w off \

$(M572_TARGET): $(M572_O_FILES) $(M572_LIBS)
	@echo [572] creating $(M572_TARGET)
	@echo $(M572_LIBS) $(M572_O_FILES) > build/M572_ofiles
	@python3 tools/lcf.py rel 572 --output $(M572_LDSCRIPT)
	@$(LD) -opt_partial -strip_partial $(M572_LDFLAGS) -o $(M572_TARGET) @build/M572_ofiles

$(BUILD_DIR)/rel/d/a/obj/mirror/d_a_obj_mirror_6pole/%.o: rel/d/a/obj/mirror/d_a_obj_mirror_6pole/%.cpp
	@echo [572] building $@
	@mkdir -p $(@D)
	@iconv -f UTF-8 -t CP932 < $< > $@.iconv.cpp
	@$(CC) $(CFLAGS) $(M572_CFLAGS) -c -o $@ $@.iconv.cpp


