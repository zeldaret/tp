#
# Generated By: dol2asm
#

M615_TARGET := $(BUILD_DIR)/rel/d/a/obj/d_a_obj_scannon_ten.plf
M615_LDSCRIPT := $(BUILD_DIR)/rel/d/a/obj/d_a_obj_scannon_ten.lcf
M615_MAP := $(BUILD_DIR)/rel/d/a/obj/d_a_obj_scannon_ten.map

M615_CPP_FILES := \
	rel/executor.cpp \
	rel/d/a/obj/d_a_obj_scannon_ten/d_a_obj_scannon_ten.cpp \

M615_O_FILES := \
	$(BUILD_DIR)/rel/executor.o \
	$(BUILD_DIR)/rel/d/a/obj/d_a_obj_scannon_ten/d_a_obj_scannon_ten.o \

M615_LIBS := \

M615_CFLAGS := \
	-sdata 0 \
	-sdata2 0 \

M615_LDFLAGS := \
	-nodefaults \
	-fp hard \
	-proc gekko \
	-linkmode moreram \
	-sdata 0 \
	-sdata2 0 \
	-m _prolog \
	-lcf $(M615_LDSCRIPT) \
	-unused -map $(M615_MAP) \
	-w off \

$(M615_TARGET): $(M615_O_FILES) $(M615_LIBS)
	@echo [615] creating $(M615_TARGET)
	@echo $(M615_LIBS) $(M615_O_FILES) > build/M615_ofiles
	@python3 tools/lcf.py rel 615 --output $(M615_LDSCRIPT)
	@$(LD) -opt_partial -strip_partial $(M615_LDFLAGS) -o $(M615_TARGET) @build/M615_ofiles

$(BUILD_DIR)/rel/d/a/obj/d_a_obj_scannon_ten/%.o: rel/d/a/obj/d_a_obj_scannon_ten/%.cpp $(BUILD_DIR)/rel/d/a/obj/d_a_obj_scannon_ten/%.d
	@echo [615] building $@
	@mkdir -p $(@D)
	@$(ICONV) -f UTF-8 -t CP932 < $< > $(basename $@).cpp
	@$(CC) $(CFLAGS) $(M615_CFLAGS) $(DEPFLAGS) -c -o $(dir $@) $(basename $@).cpp
	@if [ -z '$(DISABLE_DEPS)' ]; then tools/transform-dep.py '$(basename $@).d' '$(basename $@).d'; touch -c $@; fi

ifndef DISABLE_DEPS
M615_D_FILES := $(M615_O_FILES:.o=.d)
$(M615_D_FILES):
include $(wildcard $(M615_D_FILES))
endif


