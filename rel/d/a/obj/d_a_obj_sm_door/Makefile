#
# Generated By: dol2asm
#

M620_TARGET := $(BUILD_DIR)/rel/d/a/obj/d_a_obj_sm_door.plf
M620_LDSCRIPT := $(BUILD_DIR)/rel/d/a/obj/d_a_obj_sm_door.lcf
M620_MAP := $(BUILD_DIR)/rel/d/a/obj/d_a_obj_sm_door.map

M620_CPP_FILES := \
	rel/executor.cpp \
	rel/d/a/obj/d_a_obj_sm_door/d_a_obj_sm_door.cpp \

M620_O_FILES := \
	$(BUILD_DIR)/rel/executor.o \
	$(BUILD_DIR)/rel/d/a/obj/d_a_obj_sm_door/d_a_obj_sm_door.o \

M620_LIBS := \

M620_CFLAGS := \
	-sdata 0 \
	-sdata2 0 \

M620_LDFLAGS := \
	-nodefaults \
	-fp hard \
	-proc gekko \
	-linkmode moreram \
	-sdata 0 \
	-sdata2 0 \
	-m _prolog \
	-lcf $(M620_LDSCRIPT) \
	-unused -map $(M620_MAP) \
	-w off \

$(M620_TARGET): $(M620_O_FILES) $(M620_LIBS)
	@echo [620] creating $(M620_TARGET)
	@echo $(M620_LIBS) $(M620_O_FILES) > build/M620_ofiles
	@python3 tools/lcf.py rel 620 --output $(M620_LDSCRIPT)
	@$(LD) -opt_partial -strip_partial $(M620_LDFLAGS) -o $(M620_TARGET) @build/M620_ofiles

$(BUILD_DIR)/rel/d/a/obj/d_a_obj_sm_door/%.o: rel/d/a/obj/d_a_obj_sm_door/%.cpp
	@echo [620] building $@
	@mkdir -p $(@D)
	@iconv -f UTF-8 -t CP932 < $< > $@.iconv.cpp
	@$(CC) $(CFLAGS) $(M620_CFLAGS) -c -o $@ $@.iconv.cpp


