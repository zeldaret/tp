#
# Generated By: dol2asm
#

M684_TARGET := $(BUILD_DIR)/rel/d/a/obj/d_a_obj_web0.plf
M684_LDSCRIPT := $(BUILD_DIR)/rel/d/a/obj/d_a_obj_web0.lcf
M684_MAP := $(BUILD_DIR)/rel/d/a/obj/d_a_obj_web0.map

M684_CPP_FILES := \
	rel/executor.cpp \
	rel/global_destructor_chain.cpp \
	rel/d/a/obj/d_a_obj_web0/d_a_obj_web0.cpp \

M684_O_FILES := \
	$(BUILD_DIR)/rel/executor.o \
	$(BUILD_DIR)/rel/global_destructor_chain.o \
	$(BUILD_DIR)/rel/d/a/obj/d_a_obj_web0/d_a_obj_web0.o \

M684_LIBS := \

M684_CFLAGS := \
	-sdata 0 \
	-sdata2 0 \

M684_LDFLAGS := \
	-nodefaults \
	-fp hard \
	-proc gekko \
	-linkmode moreram \
	-sdata 0 \
	-sdata2 0 \
	-m _prolog \
	-lcf $(M684_LDSCRIPT) \
	-unused -map $(M684_MAP) \
	-w off \

$(M684_TARGET): $(M684_O_FILES) $(M684_LIBS)
	@echo [684] creating $(M684_TARGET)
	@echo $(M684_LIBS) $(M684_O_FILES) > build/M684_ofiles
	@python3 tools/lcf.py rel 684 --output $(M684_LDSCRIPT)
	@$(LD) -opt_partial -strip_partial $(M684_LDFLAGS) -o $(M684_TARGET) @build/M684_ofiles

$(BUILD_DIR)/rel/d/a/obj/d_a_obj_web0/%.o: rel/d/a/obj/d_a_obj_web0/%.cpp $(BUILD_DIR)/rel/d/a/obj/d_a_obj_web0/%.d
	@echo [684] building $@
	@mkdir -p $(@D)
	@$(ICONV) -f UTF-8 -t CP932 < $< > $(basename $@).cpp
	@$(CC) $(CFLAGS) $(M684_CFLAGS) $(DEPFLAGS) -c -o $(dir $@) $(basename $@).cpp
	@if [ -z '$(DISABLE_DEPS)' ]; then tools/transform-dep.py '$(basename $@).d' '$(basename $@).d'; touch -c $@; fi

ifndef DISABLE_DEPS
M684_D_FILES := $(M684_O_FILES:.o=.d)
$(M684_D_FILES):
include $(wildcard $(M684_D_FILES))
endif


