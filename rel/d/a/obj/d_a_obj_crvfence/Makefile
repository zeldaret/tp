#
# Generated By: dol2asm
#

M426_TARGET := $(BUILD_DIR)/rel/d/a/obj/d_a_obj_crvfence.plf
M426_LDSCRIPT := $(BUILD_DIR)/rel/d/a/obj/d_a_obj_crvfence.lcf
M426_MAP := $(BUILD_DIR)/rel/d/a/obj/d_a_obj_crvfence.map

M426_CPP_FILES := \
	rel/executor.cpp \
	rel/d/a/obj/d_a_obj_crvfence/d_a_obj_crvfence.cpp \

M426_O_FILES := \
	$(BUILD_DIR)/rel/executor.o \
	$(BUILD_DIR)/rel/d/a/obj/d_a_obj_crvfence/d_a_obj_crvfence.o \

M426_LIBS := \

M426_CFLAGS := \
	-sdata 0 \
	-sdata2 0 \

M426_LDFLAGS := \
	-nodefaults \
	-fp hard \
	-proc gekko \
	-linkmode moreram \
	-sdata 0 \
	-sdata2 0 \
	-m _prolog \
	-lcf $(M426_LDSCRIPT) \
	-unused -map $(M426_MAP) \
	-w off \

$(M426_TARGET): $(M426_O_FILES) $(M426_LIBS)
	@echo [426] creating $(M426_TARGET)
	@echo $(M426_LIBS) $(M426_O_FILES) > build/M426_ofiles
	@python3 tools/lcf.py rel 426 --output $(M426_LDSCRIPT)
	@$(LD) -opt_partial -strip_partial $(M426_LDFLAGS) -o $(M426_TARGET) @build/M426_ofiles

$(BUILD_DIR)/rel/d/a/obj/d_a_obj_crvfence/%.o: rel/d/a/obj/d_a_obj_crvfence/%.cpp
	@echo [426] building $@
	@mkdir -p $(@D)
	@iconv -f UTF-8 -t CP932 < $< > $@.iconv.cpp
	@$(CC) $(CFLAGS) $(M426_CFLAGS) -c -o $@ $@.iconv.cpp


