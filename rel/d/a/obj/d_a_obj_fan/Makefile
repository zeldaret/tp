#
# Generated By: dol2asm
#

M443_TARGET := $(BUILD_DIR)/rel/d/a/obj/d_a_obj_fan.plf
M443_LDSCRIPT := $(BUILD_DIR)/rel/d/a/obj/d_a_obj_fan.lcf
M443_MAP := $(BUILD_DIR)/rel/d/a/obj/d_a_obj_fan.map

M443_CPP_FILES := \
	rel/executor.cpp \
	rel/d/a/obj/d_a_obj_fan/d_a_obj_fan.cpp \

M443_O_FILES := \
	$(BUILD_DIR)/rel/executor.o \
	$(BUILD_DIR)/rel/d/a/obj/d_a_obj_fan/d_a_obj_fan.o \

M443_LIBS := \

M443_CFLAGS := \
	-sdata 0 \
	-sdata2 0 \

M443_LDFLAGS := \
	-nodefaults \
	-fp hard \
	-proc gekko \
	-linkmode moreram \
	-sdata 0 \
	-sdata2 0 \
	-m _prolog \
	-lcf $(M443_LDSCRIPT) \
	-unused -map $(M443_MAP) \
	-w off \

$(M443_TARGET): $(M443_O_FILES) $(M443_LIBS)
	@echo [443] creating $(M443_TARGET)
	@echo $(M443_LIBS) $(M443_O_FILES) > build/M443_ofiles
	@python3 tools/lcf.py rel 443 --output $(M443_LDSCRIPT)
	@$(LD) -opt_partial -strip_partial $(M443_LDFLAGS) -o $(M443_TARGET) @build/M443_ofiles

$(BUILD_DIR)/rel/d/a/obj/d_a_obj_fan/%.o: rel/d/a/obj/d_a_obj_fan/%.cpp
	@echo [443] building $@
	@mkdir -p $(@D)
	@iconv -f UTF-8 -t CP932 < $< > $@.iconv.cpp
	@$(CC) $(CFLAGS) $(M443_CFLAGS) -c -o $@ $@.iconv.cpp


