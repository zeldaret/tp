#
# Generated By: dol2asm
#

M662_TARGET := $(BUILD_DIR)/rel/d/a/obj/d_a_obj_toaru_maki.plf
M662_LDSCRIPT := $(BUILD_DIR)/rel/d/a/obj/d_a_obj_toaru_maki.lcf
M662_MAP := $(BUILD_DIR)/rel/d/a/obj/d_a_obj_toaru_maki.map

M662_CPP_FILES := \
	rel/executor.cpp \
	rel/d/a/obj/d_a_obj_toaru_maki/d_a_obj_toaru_maki.cpp \

M662_O_FILES := \
	$(BUILD_DIR)/rel/executor.o \
	$(BUILD_DIR)/rel/d/a/obj/d_a_obj_toaru_maki/d_a_obj_toaru_maki.o \

M662_LIBS := \

M662_CFLAGS := \
	-sdata 0 \
	-sdata2 0 \

M662_LDFLAGS := \
	-nodefaults \
	-fp hard \
	-proc gekko \
	-linkmode moreram \
	-sdata 0 \
	-sdata2 0 \
	-m _prolog \
	-lcf $(M662_LDSCRIPT) \
	-unused -map $(M662_MAP) \
	-w off \

$(M662_TARGET): $(M662_O_FILES) $(M662_LIBS)
	@echo [662] creating $(M662_TARGET)
	@echo $(M662_LIBS) $(M662_O_FILES) > build/M662_ofiles
	@python3 tools/lcf.py rel 662 --output $(M662_LDSCRIPT)
	@$(LD) -opt_partial -strip_partial $(M662_LDFLAGS) -o $(M662_TARGET) @build/M662_ofiles

$(BUILD_DIR)/rel/d/a/obj/d_a_obj_toaru_maki/%.o: rel/d/a/obj/d_a_obj_toaru_maki/%.cpp
	@echo [662] building $@
	@mkdir -p $(@D)
	@iconv -f UTF-8 -t CP932 < $< > $@.iconv.cpp
	@$(CC) $(CFLAGS) $(M662_CFLAGS) -c -o $@ $@.iconv.cpp


