#
# Generated By: dol2asm
#

M605_TARGET := $(BUILD_DIR)/rel/d/a/obj/d_a_obj_rotBridge.plf
M605_LDSCRIPT := $(BUILD_DIR)/rel/d/a/obj/d_a_obj_rotBridge.lcf
M605_MAP := $(BUILD_DIR)/rel/d/a/obj/d_a_obj_rotBridge.map

M605_CPP_FILES := \
	rel/executor.cpp \
	rel/global_destructor_chain.cpp \
	rel/d/a/obj/d_a_obj_rotBridge/d_a_obj_rotBridge.cpp \

M605_O_FILES := \
	$(BUILD_DIR)/rel/executor.o \
	$(BUILD_DIR)/rel/global_destructor_chain.o \
	$(BUILD_DIR)/rel/d/a/obj/d_a_obj_rotBridge/d_a_obj_rotBridge.o \

M605_LIBS := \

M605_CFLAGS := \
	-sdata 0 \
	-sdata2 0 \

M605_LDFLAGS := \
	-nodefaults \
	-fp hard \
	-proc gekko \
	-linkmode moreram \
	-sdata 0 \
	-sdata2 0 \
	-m _prolog \
	-lcf $(M605_LDSCRIPT) \
	-unused -map $(M605_MAP) \
	-w off \

$(M605_TARGET): $(M605_O_FILES) $(M605_LIBS)
	@echo [605] creating $(M605_TARGET)
	@echo $(M605_LIBS) $(M605_O_FILES) > build/M605_ofiles
	@python3 tools/lcf.py rel 605 --output $(M605_LDSCRIPT)
	@$(LD) -opt_partial -strip_partial $(M605_LDFLAGS) -o $(M605_TARGET) @build/M605_ofiles

$(BUILD_DIR)/rel/d/a/obj/d_a_obj_rotBridge/%.o: rel/d/a/obj/d_a_obj_rotBridge/%.cpp $(BUILD_DIR)/rel/d/a/obj/d_a_obj_rotBridge/%.d
	@echo [605] building $@
	@mkdir -p $(@D)
	@$(ICONV) -f UTF-8 -t CP932 < $< > $(basename $@).cpp
	@$(CC) $(CFLAGS) $(M605_CFLAGS) $(DEPFLAGS) -c -o $(dir $@) $(basename $@).cpp
	@if [ -z '$(DISABLE_DEPS)' ]; then tools/transform-dep.py '$(basename $@).d' '$(basename $@).d'; touch -c $@; fi

ifndef DISABLE_DEPS
M605_D_FILES := $(M605_O_FILES:.o=.d)
$(M605_D_FILES):
include $(wildcard $(M605_D_FILES))
endif


