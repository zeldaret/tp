#
# Generated By: dol2asm
#

M601_TARGET := $(BUILD_DIR)/rel/d/a/obj/d_a_obj_rfHole.plf
M601_LDSCRIPT := $(BUILD_DIR)/rel/d/a/obj/d_a_obj_rfHole.lcf
M601_MAP := $(BUILD_DIR)/rel/d/a/obj/d_a_obj_rfHole.map

M601_CPP_FILES := \
	rel/executor.cpp \
	rel/global_destructor_chain.cpp \
	rel/d/a/obj/d_a_obj_rfHole/d_a_obj_rfHole.cpp \

M601_O_FILES := \
	$(BUILD_DIR)/rel/executor.o \
	$(BUILD_DIR)/rel/global_destructor_chain.o \
	$(BUILD_DIR)/rel/d/a/obj/d_a_obj_rfHole/d_a_obj_rfHole.o \

M601_LIBS := \

M601_CFLAGS := \
	-sdata 0 \
	-sdata2 0 \

M601_LDFLAGS := \
	-nodefaults \
	-fp hard \
	-proc gekko \
	-linkmode moreram \
	-sdata 0 \
	-sdata2 0 \
	-m _prolog \
	-lcf $(M601_LDSCRIPT) \
	-unused -map $(M601_MAP) \
	-w off \

$(M601_TARGET): $(M601_O_FILES) $(M601_LIBS)
	@echo [601] creating $(M601_TARGET)
	@echo $(M601_LIBS) $(M601_O_FILES) > build/M601_ofiles
	@python3 tools/lcf.py rel 601 --output $(M601_LDSCRIPT)
	@$(LD) -opt_partial -strip_partial $(M601_LDFLAGS) -o $(M601_TARGET) @build/M601_ofiles

$(BUILD_DIR)/rel/d/a/obj/d_a_obj_rfHole/%.o: rel/d/a/obj/d_a_obj_rfHole/%.cpp $(BUILD_DIR)/rel/d/a/obj/d_a_obj_rfHole/%.d
	@echo [601] building $@
	@mkdir -p $(@D)
	@$(ICONV) -f UTF-8 -t CP932 < $< > $(basename $@).cpp
	@$(CC) $(CFLAGS) $(M601_CFLAGS) $(DEPFLAGS) -c -o $(dir $@) $(basename $@).cpp
	@if [ -z '$(DISABLE_DEPS)' ]; then tools/transform-dep.py '$(basename $@).d' '$(basename $@).d'; touch -c $@; fi

ifndef DISABLE_DEPS
M601_D_FILES := $(M601_O_FILES:.o=.d)
$(M601_D_FILES):
include $(wildcard $(M601_D_FILES))
endif


