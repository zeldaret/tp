//
// Generated By: dol2asm
// Translation Unit: d_a_e_hz
//

#include "rel/d/a/e/d_a_e_hz/d_a_e_hz.h"
#include "dol2asm.h"

//
// Types:
//

struct request_of_phase_process_class {};

struct csXyz {};

struct Vec {};

struct cXyz {
    /* 80266AE4 */ void operator+(Vec const&) const;
    /* 80266B34 */ void operator-(Vec const&) const;
    /* 8026702C */ bool operator==(Vec const&) const;
    /* 806F0810 */ ~cXyz();
};

struct mDoMtx_stack_c {
    /* 8000CD64 */ void transS(cXyz const&);
    /* 8000CD9C */ void transM(f32, f32, f32);
    /* 8000CE38 */ void scaleM(f32, f32, f32);
    /* 8000CF44 */ void ZXYrotM(csXyz const&);

    static u8 now[48];
};

struct mDoExt_McaMorfCallBack2_c {};

struct mDoExt_McaMorfCallBack1_c {};

struct J3DAnmTransform {};

struct J3DModelData {};

struct Z2Creature {};

struct mDoExt_McaMorfSO {
    /* 800107D0 */ mDoExt_McaMorfSO(J3DModelData*, mDoExt_McaMorfCallBack1_c*,
                                    mDoExt_McaMorfCallBack2_c*, J3DAnmTransform*, int, f32, int,
                                    int, Z2Creature*, u32, u32);
    /* 80010E70 */ void setAnm(J3DAnmTransform*, int, f32, f32, f32, f32);
    /* 800110B0 */ void play(u32, s8);
    /* 800111C0 */ void entryDL();
    /* 800111EC */ void modelCalc();
};

struct fopEn_enemy_c {};

struct fopAc_ac_c {
    /* 80018B64 */ fopAc_ac_c();
};

struct daPy_py_c {
    /* 8015F8D0 */ void getThrowBoomerangActor();

    static u8 m_midnaActor[4];
};

struct daObjCarry_c {
    /* 80474448 */ void mode_init_drop(u8);
};

struct J3DModel {};

struct J3DJoint {};

struct daE_HZ_c {
    /* 806EA690 */ void setBck(int, u8, f32, f32);
    /* 806EA734 */ void checkBck(int);
    /* 806EA790 */ void draw();
    /* 806EAADC */ void setActionMode(int);
    /* 806EAB68 */ void checkHideStart();
    /* 806EAEDC */ void checkAttackStart();
    /* 806EB05C */ void checkArrowCharge();
    /* 806EB0A4 */ void setTgSetBit(int);
    /* 806EB0FC */ void isWait();
    /* 806EB13C */ void checkFall();
    /* 806EB2E8 */ void setCloseSmokeEffect();
    /* 806EB3EC */ void executeWait();
    /* 806EB7B0 */ void getHideSpeed();
    /* 806EB818 */ void executeHide();
    /* 806EBD44 */ void executeAttack();
    /* 806EC068 */ void initBackWalk();
    /* 806EC348 */ void executeAway();
    /* 806ECAEC */ void setWindEnd();
    /* 806ECB64 */ void executeWind();
    /* 806ED5B0 */ void executeChance();
    /* 806ED6C8 */ void initRollDamage();
    /* 806ED7A8 */ void doRollDamage();
    /* 806ED8A4 */ void executeDamage();
    /* 806EDAA8 */ void executeDeath();
    /* 806EDDCC */ void setWindChanceEnd();
    /* 806EDDE8 */ void executeWindChance();
    /* 806EE120 */ void executeWindWalk();
    /* 806EE2A4 */ void setWaterEffect();
    /* 806EE3BC */ void executeWaterDeath();
    /* 806EE820 */ void executeDeathWait();
    /* 806EE978 */ void damage_check();
    /* 806EEE10 */ void checkWaterSurface();
    /* 806EEEE4 */ void action();
    /* 806EF144 */ void mtx_set();
    /* 806EF2C8 */ void cc_set();
    /* 806EF46C */ void execute();
    /* 806EF6B4 */ void _delete();
    /* 806EF770 */ void ctrlJoint(J3DJoint*, J3DModel*);
    /* 806EF880 */ void JointCallBack(J3DJoint*, int);
    /* 806EF8CC */ void CreateHeap();
    /* 806EFB54 */ void setInitPos();
    /* 806EFC18 */ void create();
};

struct daE_HZ_HIO_c {
    /* 806EA60C */ daE_HZ_HIO_c();
    /* 806F0368 */ ~daE_HZ_HIO_c();
};

struct dSv_info_c {
    /* 80035200 */ void onSwitch(int, int);
    /* 80035360 */ void isSwitch(int, int) const;
};

struct dKy_tevstr_c {};

struct dScnKy_env_light_c {
    /* 801A37C4 */ void settingTevStruct(int, cXyz*, dKy_tevstr_c*);
    /* 801A4DA0 */ void setLightTevColorType_MAJI(J3DModelData*, dKy_tevstr_c*);
};

struct dRes_info_c {};

struct dRes_control_c {
    /* 8003C2EC */ void getRes(char const*, s32, dRes_info_c*, int);
};

struct dPa_levelEcallBack {};

struct cBgS_PolyInfo {
    /* 802680B0 */ ~cBgS_PolyInfo();
};

struct _GXColor {};

struct dPa_control_c {
    /* 8004CA90 */ void set(u8, u16, cXyz const*, dKy_tevstr_c const*, csXyz const*, cXyz const*,
                            u8, dPa_levelEcallBack*, s8, _GXColor const*, _GXColor const*,
                            cXyz const*, f32);
    /* 8004D4CC */ void set(u32, u8, u16, cXyz const*, dKy_tevstr_c const*, csXyz const*,
                            cXyz const*, u8, dPa_levelEcallBack*, s8, _GXColor const*,
                            _GXColor const*, cXyz const*, f32);
    /* 8004D068 */ void setPoly(u16, cBgS_PolyInfo&, cXyz const*, dKy_tevstr_c const*, csXyz const*,
                                cXyz const*, int, dPa_levelEcallBack*, s8, cXyz const*);
};

struct dEvt_control_c {
    /* 80042468 */ void reset();
};

struct dDlst_shadowControl_c {
    static u8 mSimpleTexObj[32];
};

struct dCcU_AtInfo {};

struct dCcD_Stts {
    /* 80083860 */ void Init(int, int, fopAc_ac_c*);
};

struct dCcD_SrcSph {};

struct dCcD_Sph {
    /* 80084A34 */ void Set(dCcD_SrcSph const&);
    /* 806EFFAC */ ~dCcD_Sph();
    /* 806F0078 */ dCcD_Sph();
};

struct dCcD_GStts {
    /* 80083760 */ dCcD_GStts();
    /* 80083830 */ void Move();
    /* 806F018C */ ~dCcD_GStts();
};

struct dCcD_GObjInf {
    /* 80083A28 */ dCcD_GObjInf();
    /* 800840E4 */ ~dCcD_GObjInf();
    /* 80084460 */ void ChkTgHit();
    /* 800844F8 */ void GetTgHitObj();
};

struct dCamera_c {
    /* 80181500 */ void GetForceLockOnActor();
    /* 80181534 */ void ForceLockOn(fopAc_ac_c*);
    /* 8018159C */ void ForceLockOff(fopAc_ac_c*);
};

struct dBgW_Base {};

struct dBgW {
    /* 8007B970 */ dBgW();
    /* 8007B9C0 */ void Move();
};

struct dBgS_PolyPassChk {
    /* 80078E68 */ void SetObj();
};

struct dBgS_ObjGndChk_Spl {
    /* 800777B0 */ dBgS_ObjGndChk_Spl();
    /* 80077848 */ ~dBgS_ObjGndChk_Spl();
};

struct dBgS_ObjAcch {
    /* 806F01E8 */ ~dBgS_ObjAcch();
};

struct dBgS_LinChk {
    /* 80077C68 */ dBgS_LinChk();
    /* 80077CDC */ ~dBgS_LinChk();
    /* 80077D64 */ void Set(cXyz const*, cXyz const*, fopAc_ac_c const*);
};

struct dBgS_GndChk {
    /* 8007757C */ dBgS_GndChk();
    /* 800775F0 */ ~dBgS_GndChk();
};

struct dBgS_AcchCir {
    /* 80075EAC */ dBgS_AcchCir();
    /* 80075F58 */ void SetWall(f32, f32);
    /* 806F0258 */ ~dBgS_AcchCir();
};

struct dBgS {
    /* 80074A08 */ void Regist(dBgW_Base*, fopAc_ac_c*);
    /* 80074EF0 */ void GetGroundCode(cBgS_PolyInfo const&);
};

struct dBgS_Acch {
    /* 80075F94 */ ~dBgS_Acch();
    /* 800760A0 */ dBgS_Acch();
    /* 80076248 */ void Set(cXyz*, cXyz*, fopAc_ac_c*, int, dBgS_AcchCir*, cXyz*, csXyz*, csXyz*);
    /* 80076AAC */ void CrrPos(dBgS&);
};

struct cM3dGSph {
    /* 8026F648 */ void SetC(cXyz const&);
    /* 8026F708 */ void SetR(f32);
    /* 806F00FC */ ~cM3dGSph();
};

struct cM3dGCir {
    /* 8026EF18 */ ~cM3dGCir();
};

struct cM3dGAab {
    /* 806F0144 */ ~cM3dGAab();
};

struct cCcD_Obj {};

struct cCcS {
    /* 80264BA8 */ void Set(cCcD_Obj*);
};

struct cCcD_GStts {
    /* 806F0320 */ ~cCcD_GStts();
};

struct cBgD_t {};

struct cBgW {
    /* 80079F38 */ void Set(cBgD_t*, u32, f32 (*)[3][4]);
};

struct cBgS_LinChk {};

struct cBgS_GndChk {
    /* 80267D28 */ void SetPos(cXyz const*);
    /* 80267D0C */ void SetPos(Vec const*);
};

struct cBgS {
    /* 80074250 */ void Release(dBgW_Base*);
    /* 800743B4 */ void LineCross(cBgS_LinChk*);
    /* 800744A0 */ void GroundCross(cBgS_GndChk*);
};

struct _GXTexObj {};

struct Z2CreatureEnemy {
    /* 802C0F64 */ Z2CreatureEnemy();
    /* 802C1094 */ void init(Vec*, Vec*, u8, u8);
    /* 802C1B7C */ void setLinkSearch(bool);
    /* 802C1B90 */ void setEnemyName(char const*);
};

struct JMath {
    static u8 sincosTable_[65536];
};

struct J3DSys {
    static u8 mCurrentMtx[48];
};

struct J3DLightObj {
    /* 806F02C8 */ J3DLightObj();
};

struct J3DLightInfo {
    /* 803256C4 */ void operator=(J3DLightInfo const&);
};

struct J3DFrameCtrl {
    /* 8032842C */ void checkPass(f32);
};

//
// Forward References:
//

extern "C" void __ct__12daE_HZ_HIO_cFv();
extern "C" void setBck__8daE_HZ_cFiUcff();
extern "C" void checkBck__8daE_HZ_cFi();
extern "C" void draw__8daE_HZ_cFv();
extern "C" static void daE_HZ_Draw__FP8daE_HZ_c();
extern "C" static void s_obj_sub__FPvPv();
extern "C" void setActionMode__8daE_HZ_cFi();
extern "C" void checkHideStart__8daE_HZ_cFv();
extern "C" void checkAttackStart__8daE_HZ_cFv();
extern "C" void checkArrowCharge__8daE_HZ_cFv();
extern "C" void setTgSetBit__8daE_HZ_cFi();
extern "C" void isWait__8daE_HZ_cFv();
extern "C" void checkFall__8daE_HZ_cFv();
extern "C" void setCloseSmokeEffect__8daE_HZ_cFv();
extern "C" void executeWait__8daE_HZ_cFv();
extern "C" void getHideSpeed__8daE_HZ_cFv();
extern "C" void executeHide__8daE_HZ_cFv();
extern "C" void executeAttack__8daE_HZ_cFv();
extern "C" void initBackWalk__8daE_HZ_cFv();
extern "C" void executeAway__8daE_HZ_cFv();
extern "C" void setWindEnd__8daE_HZ_cFv();
extern "C" void executeWind__8daE_HZ_cFv();
extern "C" void executeChance__8daE_HZ_cFv();
extern "C" void initRollDamage__8daE_HZ_cFv();
extern "C" void doRollDamage__8daE_HZ_cFv();
extern "C" void executeDamage__8daE_HZ_cFv();
extern "C" void executeDeath__8daE_HZ_cFv();
extern "C" void setWindChanceEnd__8daE_HZ_cFv();
extern "C" void executeWindChance__8daE_HZ_cFv();
extern "C" void executeWindWalk__8daE_HZ_cFv();
extern "C" void setWaterEffect__8daE_HZ_cFv();
extern "C" void executeWaterDeath__8daE_HZ_cFv();
extern "C" void executeDeathWait__8daE_HZ_cFv();
extern "C" void damage_check__8daE_HZ_cFv();
extern "C" void checkWaterSurface__8daE_HZ_cFv();
extern "C" void action__8daE_HZ_cFv();
extern "C" void mtx_set__8daE_HZ_cFv();
extern "C" void cc_set__8daE_HZ_cFv();
extern "C" void execute__8daE_HZ_cFv();
extern "C" static void daE_HZ_Execute__FP8daE_HZ_c();
extern "C" static bool daE_HZ_IsDelete__FP8daE_HZ_c();
extern "C" void _delete__8daE_HZ_cFv();
extern "C" static void daE_HZ_Delete__FP8daE_HZ_c();
extern "C" void ctrlJoint__8daE_HZ_cFP8J3DJointP8J3DModel();
extern "C" void JointCallBack__8daE_HZ_cFP8J3DJointi();
extern "C" void CreateHeap__8daE_HZ_cFv();
extern "C" static void useHeapInit__FP10fopAc_ac_c();
extern "C" void setInitPos__8daE_HZ_cFv();
extern "C" void create__8daE_HZ_cFv();
extern "C" void __dt__8dCcD_SphFv();
extern "C" void __ct__8dCcD_SphFv();
extern "C" void __dt__8cM3dGSphFv();
extern "C" void __dt__8cM3dGAabFv();
extern "C" void __dt__10dCcD_GSttsFv();
extern "C" void __dt__12dBgS_ObjAcchFv();
extern "C" void __dt__12dBgS_AcchCirFv();
extern "C" void __ct__11J3DLightObjFv();
extern "C" static void daE_HZ_Create__FP8daE_HZ_c();
extern "C" void __dt__10cCcD_GSttsFv();
extern "C" void __dt__12daE_HZ_HIO_cFv();
extern "C" void __sinit_d_a_e_hz_cpp();
extern "C" static void func_806F03EC();
extern "C" static void func_806F03F4();
extern "C" static void setMidnaBindEffect__FP13fopEn_enemy_cP15Z2CreatureEnemyP4cXyzP4cXyz();
extern "C" void __dt__4cXyzFv();
extern "C" extern char const* const d_a_e_hz__stringBase0;

//
// External References:
//

extern "C" void mDoMtx_YrotM__FPA4_fs();
extern "C" void mDoMtx_ZrotM__FPA4_fs();
extern "C" void transS__14mDoMtx_stack_cFRC4cXyz();
extern "C" void transM__14mDoMtx_stack_cFfff();
extern "C" void scaleM__14mDoMtx_stack_cFfff();
extern "C" void ZXYrotM__14mDoMtx_stack_cFRC5csXyz();
extern "C" void mDoExt_modelUpdateDL__FP8J3DModel();
extern "C" void
__ct__16mDoExt_McaMorfSOFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiP10Z2CreatureUlUl();
extern "C" void setAnm__16mDoExt_McaMorfSOFP15J3DAnmTransformiffff();
extern "C" void play__16mDoExt_McaMorfSOFUlSc();
extern "C" void entryDL__16mDoExt_McaMorfSOFv();
extern "C" void modelCalc__16mDoExt_McaMorfSOFv();
extern "C" void mDoExt_J3DModel__create__FP12J3DModelDataUlUl();
extern "C" void __ct__10fopAc_ac_cFv();
extern "C" void fopAc_IsActor__FPv();
extern "C" void fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl();
extern "C" void fopAcM_SetMin__FP10fopAc_ac_cfff();
extern "C" void fopAcM_SetMax__FP10fopAc_ac_cfff();
extern "C" void fopAcM_posMoveF__FP10fopAc_ac_cPC4cXyz();
extern "C" void fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c();
extern "C" void fopAcM_searchActorDistance__FPC10fopAc_ac_cPC10fopAc_ac_c();
extern "C" void fopAcM_searchActorDistanceXZ__FPC10fopAc_ac_cPC10fopAc_ac_c();
extern "C" void fopAcM_orderPotentialEvent__FP10fopAc_ac_cUsUsUs();
extern "C" void fopAcM_createDisappear__FPC10fopAc_ac_cPC4cXyzUcUcUc();
extern "C" void fopAcM_effSmokeSet1__FPUlPUlPC4cXyzPC5csXyzfPC12dKy_tevstr_ci();
extern "C" void fopAcM_effHamonSet__FPUlPC4cXyzff();
extern "C" void fpcEx_Search__FPFPvPv_PvPv();
extern "C" void fpcM_IsCreating__FUi();
extern "C" void dComIfG_resLoad__FP30request_of_phase_process_classPCc();
extern "C" void dComIfG_resDelete__FP30request_of_phase_process_classPCc();
extern "C" void dComIfGp_getReverb__Fi();
extern "C" void
dComIfGd_setShadow__FUlScP8J3DModelP4cXyzffffR13cBgS_PolyInfoP12dKy_tevstr_csfP9_GXTexObj();
extern "C" void onSwitch__10dSv_info_cFii();
extern "C" void isSwitch__10dSv_info_cCFii();
extern "C" void getRes__14dRes_control_cFPCclP11dRes_info_ci();
extern "C" void reset__14dEvt_control_cFv();
extern "C" void
set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf();
extern "C" void
setPoly__13dPa_control_cFUsR13cBgS_PolyInfoPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyziP18dPa_levelEcallBackScPC4cXyz();
extern "C" void
set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf();
extern "C" void Release__4cBgSFP9dBgW_Base();
extern "C" void LineCross__4cBgSFP11cBgS_LinChk();
extern "C" void GroundCross__4cBgSFP11cBgS_GndChk();
extern "C" void Regist__4dBgSFP9dBgW_BaseP10fopAc_ac_c();
extern "C" void GetGroundCode__4dBgSFRC13cBgS_PolyInfo();
extern "C" void dBgS_MoveBGProc_Typical__FP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz();
extern "C" void __ct__12dBgS_AcchCirFv();
extern "C" void SetWall__12dBgS_AcchCirFff();
extern "C" void __dt__9dBgS_AcchFv();
extern "C" void __ct__9dBgS_AcchFv();
extern "C" void Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz();
extern "C" void CrrPos__9dBgS_AcchFR4dBgS();
extern "C" void __ct__11dBgS_GndChkFv();
extern "C" void __dt__11dBgS_GndChkFv();
extern "C" void __ct__18dBgS_ObjGndChk_SplFv();
extern "C" void __dt__18dBgS_ObjGndChk_SplFv();
extern "C" void __ct__11dBgS_LinChkFv();
extern "C" void __dt__11dBgS_LinChkFv();
extern "C" void Set__11dBgS_LinChkFPC4cXyzPC4cXyzPC10fopAc_ac_c();
extern "C" void SetObj__16dBgS_PolyPassChkFv();
extern "C" void Set__4cBgWFP6cBgD_tUlPA3_A4_f();
extern "C" void __ct__4dBgWFv();
extern "C" void Move__4dBgWFv();
extern "C" void __ct__10dCcD_GSttsFv();
extern "C" void Move__10dCcD_GSttsFv();
extern "C" void Init__9dCcD_SttsFiiP10fopAc_ac_c();
extern "C" void __ct__12dCcD_GObjInfFv();
extern "C" void __dt__12dCcD_GObjInfFv();
extern "C" void ChkTgHit__12dCcD_GObjInfFv();
extern "C" void GetTgHitObj__12dCcD_GObjInfFv();
extern "C" void Set__8dCcD_SphFRC11dCcD_SrcSph();
extern "C" void cc_pl_cut_bit_get__Fv();
extern "C" void cc_at_check__FP10fopAc_ac_cP11dCcU_AtInfo();
extern "C" void getThrowBoomerangActor__9daPy_py_cFv();
extern "C" void GetForceLockOnActor__9dCamera_cFv();
extern "C" void ForceLockOn__9dCamera_cFP10fopAc_ac_c();
extern "C" void ForceLockOff__9dCamera_cFP10fopAc_ac_c();
extern "C" void dCam_getBody__Fv();
extern "C" void settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c();
extern "C" void setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c();
extern "C" void dKy_tevstr_init__FP12dKy_tevstr_cScUc();
extern "C" void dKy_darkworld_check__Fv();
extern "C" void Set__4cCcSFP8cCcD_Obj();
extern "C" void __pl__4cXyzCFRC3Vec();
extern "C" void __mi__4cXyzCFRC3Vec();
extern "C" bool __eq__4cXyzCFRC3Vec();
extern "C" void cM_atan2s__Fff();
extern "C" void cM_rndF__Ff();
extern "C" void SetPos__11cBgS_GndChkFPC3Vec();
extern "C" void SetPos__11cBgS_GndChkFPC4cXyz();
extern "C" void __dt__13cBgS_PolyInfoFv();
extern "C" void __dt__8cM3dGCirFv();
extern "C" void SetC__8cM3dGSphFRC4cXyz();
extern "C" void SetR__8cM3dGSphFf();
extern "C" void cLib_addCalc2__FPffff();
extern "C" void cLib_addCalcPosXZ__FP4cXyzRC4cXyzfff();
extern "C" void cLib_chaseF__FPfff();
extern "C" void cLib_chaseAngleS__FPsss();
extern "C" void cLib_targetAngleY__FPC3VecPC3Vec();
extern "C" void cLib_offsetPos__FP4cXyzPC4cXyzsPC4cXyz();
extern "C" void cLib_distanceAngleS__Fss();
extern "C" void __ct__15Z2CreatureEnemyFv();
extern "C" void init__15Z2CreatureEnemyFP3VecP3VecUcUc();
extern "C" void setLinkSearch__15Z2CreatureEnemyFb();
extern "C" void setEnemyName__15Z2CreatureEnemyFPCc();
extern "C" void* __nw__FUl();
extern "C" void __dl__FPv();
extern "C" void __as__12J3DLightInfoFRC12J3DLightInfo();
extern "C" void checkPass__12J3DFrameCtrlFf();
extern "C" void PSMTXCopy();
extern "C" void PSMTXTrans();
extern "C" void PSMTXMultVec();
extern "C" void PSVECSquareMag();
extern "C" void PSVECSquareDistance();
extern "C" void __construct_array();
extern "C" void _savegpr_19();
extern "C" void _savegpr_23();
extern "C" void _savegpr_24();
extern "C" void _savegpr_26();
extern "C" void _savegpr_28();
extern "C" void _savegpr_29();
extern "C" void _restgpr_19();
extern "C" void _restgpr_23();
extern "C" void _restgpr_24();
extern "C" void _restgpr_26();
extern "C" void _restgpr_28();
extern "C" void _restgpr_29();
extern "C" void abs();
extern "C" extern u8 const j3dDefaultLightInfo[52];
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" extern void* __vt__8dCcD_Sph[36];
extern "C" extern void* __vt__9dCcD_Stts[11];
extern "C" extern void* __vt__12cCcD_SphAttr[25];
extern "C" extern void* __vt__14cCcD_ShapeAttr[22];
extern "C" extern void* __vt__9cCcD_Stts[8];
extern "C" u8 now__14mDoMtx_stack_c[48];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" u8 mSimpleTexObj__21dDlst_shadowControl_c[32];
extern "C" extern u8 g_env_light[4880];
extern "C" extern u8 j3dSys[284];
extern "C" u8 mCurrentMtx__6J3DSys[48];
extern "C" u8 sincosTable___5JMath[65536];
extern "C" extern u32 __float_nan;
extern "C" u8 m_midnaActor__9daPy_py_c[4];
extern "C" void mode_init_drop__12daObjCarry_cFUc();
extern "C" void __register_global_object();

//
// Declarations:
//

/* ############################################################################################## */
/* 806F0860-806F0864 000000 0004+00 29/29 0/0 0/0 .rodata          @3966 */
SECTION_RODATA static f32 const lit_3966 = 100.0f;
COMPILER_STRIP_GATE(0x806F0860, &lit_3966);

/* 806F0864-806F0868 000004 0004+00 2/23 0/0 0/0 .rodata          @3967 */
SECTION_RODATA static u8 const lit_3967[4] = {
    0x00,
    0x00,
    0x00,
    0x00,
};
COMPILER_STRIP_GATE(0x806F0864, &lit_3967);

/* 806F0868-806F0870 000008 0004+04 2/17 0/0 0/0 .rodata          @3968 */
SECTION_RODATA static f32 const lit_3968[1 + 1 /* padding */] = {
    1.0f,
    /* padding */
    0.0f,
};
COMPILER_STRIP_GATE(0x806F0868, &lit_3968);

/* 806F0870-806F0878 000010 0008+00 0/5 0/0 0/0 .rodata          @3969 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const lit_3969[8] = {
    0x3F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x806F0870, &lit_3969);
#pragma pop

/* 806F0878-806F0880 000018 0008+00 0/5 0/0 0/0 .rodata          @3970 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const lit_3970[8] = {
    0x40, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x806F0878, &lit_3970);
#pragma pop

/* 806F0880-806F0888 000020 0008+00 0/5 0/0 0/0 .rodata          @3971 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const lit_3971[8] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x806F0880, &lit_3971);
#pragma pop

/* 806F0888-806F088C 000028 0004+00 0/1 0/0 0/0 .rodata          @3972 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_3972 = 1.0f / 100.0f;
COMPILER_STRIP_GATE(0x806F0888, &lit_3972);
#pragma pop

/* 806F088C-806F0890 00002C 0004+00 0/2 0/0 0/0 .rodata          @3987 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_3987 = 700.0f;
COMPILER_STRIP_GATE(0x806F088C, &lit_3987);
#pragma pop

/* 806F0890-806F0894 000030 0004+00 0/1 0/0 0/0 .rodata          @3988 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_3988 = 1200.0f;
COMPILER_STRIP_GATE(0x806F0890, &lit_3988);
#pragma pop

/* 806F0894-806F0898 000034 0004+00 0/8 0/0 0/0 .rodata          @3989 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_3989 = 20.0f;
COMPILER_STRIP_GATE(0x806F0894, &lit_3989);
#pragma pop

/* 806F0898-806F089C 000038 0004+00 0/1 0/0 0/0 .rodata          @3990 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_3990 = 160.0f;
COMPILER_STRIP_GATE(0x806F0898, &lit_3990);
#pragma pop

/* 806F089C-806F08A0 00003C 0004+00 0/1 0/0 0/0 .rodata          @3991 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_3991 = 5000.0f;
COMPILER_STRIP_GATE(0x806F089C, &lit_3991);
#pragma pop

/* 806F08A0-806F08A4 000040 0004+00 0/3 0/0 0/0 .rodata          @3992 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_3992 = 400.0f;
COMPILER_STRIP_GATE(0x806F08A0, &lit_3992);
#pragma pop

/* 806F08A4-806F08A8 000044 0004+00 0/4 0/0 0/0 .rodata          @3993 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_3993 = 15.0f;
COMPILER_STRIP_GATE(0x806F08A4, &lit_3993);
#pragma pop

/* 806F08A8-806F08AC 000048 0004+00 0/1 0/0 0/0 .rodata          @3994 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_3994 = 7.0f / 10.0f;
COMPILER_STRIP_GATE(0x806F08A8, &lit_3994);
#pragma pop

/* 806F08AC-806F08B0 00004C 0004+00 0/1 0/0 0/0 .rodata          @3995 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_3995 = 7.0f;
COMPILER_STRIP_GATE(0x806F08AC, &lit_3995);
#pragma pop

/* 806F08B0-806F08B4 000050 0004+00 0/7 0/0 0/0 .rodata          @3996 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_3996 = 50.0f;
COMPILER_STRIP_GATE(0x806F08B0, &lit_3996);
#pragma pop

/* 806F0974-806F0980 000000 000C+00 1/1 0/0 0/0 .data            cNullVec__6Z2Calc */
SECTION_DATA static u8 cNullVec__6Z2Calc[12] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 806F0980-806F0994 00000C 0004+10 0/0 0/0 0/0 .data            @1787 */
#pragma push
#pragma force_active on
SECTION_DATA static u32 lit_1787[1 + 4 /* padding */] = {
    0x02000201,
    /* padding */
    0x40080000,
    0x00000000,
    0x3FE00000,
    0x00000000,
};
#pragma pop

/* 806F0994-806F099C 000020 0008+00 0/1 0/0 0/0 .data            e_prim$3845 */
#pragma push
#pragma force_active on
SECTION_DATA static u8 e_prim[8] = {
    0xFF, 0x78, 0x00, 0x00, 0xFF, 0x64, 0x78, 0x00,
};
#pragma pop

/* 806F099C-806F09A4 000028 0008+00 0/1 0/0 0/0 .data            e_env$3846 */
#pragma push
#pragma force_active on
SECTION_DATA static u8 e_env[8] = {
    0x5A, 0x2D, 0x2D, 0x00, 0x3C, 0x1E, 0x1E, 0x00,
};
#pragma pop

/* 806F09A4-806F09AC 000030 0006+02 0/1 0/0 0/0 .data            eff_id$3854 */
#pragma push
#pragma force_active on
SECTION_DATA static u8 eff_id[6 + 2 /* padding */] = {
    0x02,
    0x9D,
    0x02,
    0x9E,
    0x02,
    0x9F,
    /* padding */
    0x00,
    0x00,
};
#pragma pop

/* 806F09AC-806F09B0 000038 0004+00 1/1 0/0 0/0 .data            d_HZ_JUMP_EFFECT_ID$4653 */
SECTION_DATA static u8 d_HZ_JUMP_EFFECT_ID[4] = {
    0x82,
    0xE0,
    0x82,
    0xE1,
};

/* 806F09B0-806F09B8 00003C 0008+00 1/1 0/0 0/0 .data            w_eff_id$5588 */
SECTION_DATA static u8 w_eff_id[8] = {
    0x01, 0xB8, 0x01, 0xB9, 0x01, 0xBA, 0x01, 0xBB,
};

/* 806F09B8-806F09E8 -00001 0030+00 1/1 0/0 0/0 .data            @5940 */
SECTION_DATA static void* lit_5940[12] = {
    (void*)(((char*)action__8daE_HZ_cFv) + 0xA0),  (void*)(((char*)action__8daE_HZ_cFv) + 0xAC),
    (void*)(((char*)action__8daE_HZ_cFv) + 0xC0),  (void*)(((char*)action__8daE_HZ_cFv) + 0xCC),
    (void*)(((char*)action__8daE_HZ_cFv) + 0xD8),  (void*)(((char*)action__8daE_HZ_cFv) + 0xE4),
    (void*)(((char*)action__8daE_HZ_cFv) + 0xF0),  (void*)(((char*)action__8daE_HZ_cFv) + 0x104),
    (void*)(((char*)action__8daE_HZ_cFv) + 0x110), (void*)(((char*)action__8daE_HZ_cFv) + 0x11C),
    (void*)(((char*)action__8daE_HZ_cFv) + 0x128), (void*)(((char*)action__8daE_HZ_cFv) + 0x13C),
};

/* 806F09E8-806F0A28 000074 0040+00 1/1 0/0 0/0 .data            cc_sph_src$6246 */
SECTION_DATA static u8 cc_sph_src[64] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x01, 0x00, 0x40, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0x20, 0x00, 0x00,
};

/* 806F0A28-806F0A68 0000B4 0040+00 1/1 0/0 0/0 .data            cc_sph_src2$6247 */
SECTION_DATA static u8 cc_sph_src2[64] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xD8, 0xFA, 0xFD, 0xFF, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x75, 0x09, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0x20, 0x00, 0x00,
};

/* 806F0A68-806F0A88 -00001 0020+00 1/0 0/0 0/0 .data            l_daE_HZ_Method */
SECTION_DATA static void* l_daE_HZ_Method[8] = {
    (void*)daE_HZ_Create__FP8daE_HZ_c,
    (void*)daE_HZ_Delete__FP8daE_HZ_c,
    (void*)daE_HZ_Execute__FP8daE_HZ_c,
    (void*)daE_HZ_IsDelete__FP8daE_HZ_c,
    (void*)daE_HZ_Draw__FP8daE_HZ_c,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
};

/* 806F0A88-806F0AB8 -00001 0030+00 0/0 0/0 1/0 .data            g_profile_E_HZ */
SECTION_DATA extern void* g_profile_E_HZ[12] = {
    (void*)0xFFFFFFFD, (void*)0x0007FFFD,
    (void*)0x01FC0000, (void*)&g_fpcLf_Method,
    (void*)0x00001238, (void*)NULL,
    (void*)NULL,       (void*)&g_fopAc_Method,
    (void*)0x00C70000, (void*)&l_daE_HZ_Method,
    (void*)0x00040000, (void*)0x020E0000,
};

/* 806F0AB8-806F0AC4 000144 000C+00 1/1 0/0 0/0 .data            __vt__12dBgS_AcchCir */
SECTION_DATA extern void* __vt__12dBgS_AcchCir[3] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__12dBgS_AcchCirFv,
};

/* 806F0AC4-806F0AD0 000150 000C+00 2/2 0/0 0/0 .data            __vt__10cCcD_GStts */
SECTION_DATA extern void* __vt__10cCcD_GStts[3] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__10cCcD_GSttsFv,
};

/* 806F0AD0-806F0ADC 00015C 000C+00 1/1 0/0 0/0 .data            __vt__10dCcD_GStts */
SECTION_DATA extern void* __vt__10dCcD_GStts[3] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__10dCcD_GSttsFv,
};

/* 806F0ADC-806F0AE8 000168 000C+00 3/3 0/0 0/0 .data            __vt__8cM3dGAab */
SECTION_DATA extern void* __vt__8cM3dGAab[3] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__8cM3dGAabFv,
};

/* 806F0AE8-806F0AF4 000174 000C+00 3/3 0/0 0/0 .data            __vt__8cM3dGSph */
SECTION_DATA extern void* __vt__8cM3dGSph[3] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__8cM3dGSphFv,
};

/* 806F0AF4-806F0B18 000180 0024+00 2/2 0/0 0/0 .data            __vt__12dBgS_ObjAcch */
SECTION_DATA extern void* __vt__12dBgS_ObjAcch[9] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__12dBgS_ObjAcchFv,
    (void*)NULL,
    (void*)NULL,
    (void*)func_806F03F4,
    (void*)NULL,
    (void*)NULL,
    (void*)func_806F03EC,
};

/* 806F0B18-806F0B24 0001A4 000C+00 2/2 0/0 0/0 .data            __vt__12daE_HZ_HIO_c */
SECTION_DATA extern void* __vt__12daE_HZ_HIO_c[3] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__12daE_HZ_HIO_cFv,
};

/* 806EA60C-806EA690 0000EC 0084+00 1/1 0/0 0/0 .text            __ct__12daE_HZ_HIO_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm daE_HZ_HIO_c::daE_HZ_HIO_c() {
    nofralloc
#include "asm/rel/d/a/e/d_a_e_hz/d_a_e_hz/__ct__12daE_HZ_HIO_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 806F08B4-806F08B8 000054 0004+00 1/1 0/0 0/0 .rodata          @4010 */
SECTION_RODATA static f32 const lit_4010 = -1.0f;
COMPILER_STRIP_GATE(0x806F08B4, &lit_4010);

/* 806F095C-806F095C 0000FC 0000+00 0/0 0/0 0/0 .rodata          @stringBase0 */
#pragma push
#pragma force_active on
SECTION_DEAD static char const* const stringBase_806F095C = "E_HZ";
#pragma pop

/* 806EA690-806EA734 000170 00A4+00 12/12 0/0 0/0 .text            setBck__8daE_HZ_cFiUcff */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daE_HZ_c::setBck(int param_0, u8 param_1, f32 param_2, f32 param_3) {
    nofralloc
#include "asm/rel/d/a/e/d_a_e_hz/d_a_e_hz/setBck__8daE_HZ_cFiUcff.s"
}
#pragma pop

/* 806EA734-806EA790 000214 005C+00 5/5 0/0 0/0 .text            checkBck__8daE_HZ_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daE_HZ_c::checkBck(int param_0) {
    nofralloc
#include "asm/rel/d/a/e/d_a_e_hz/d_a_e_hz/checkBck__8daE_HZ_cFi.s"
}
#pragma pop

/* ############################################################################################## */
/* 806F08B8-806F08BC 000058 0004+00 0/1 0/0 0/0 .rodata          @4064 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_4064 = 800.0f;
COMPILER_STRIP_GATE(0x806F08B8, &lit_4064);
#pragma pop

/* 806EA790-806EA998 000270 0208+00 1/1 0/0 0/0 .text            draw__8daE_HZ_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daE_HZ_c::draw() {
    nofralloc
#include "asm/rel/d/a/e/d_a_e_hz/d_a_e_hz/draw__8daE_HZ_cFv.s"
}
#pragma pop

/* 806EA998-806EA9B8 000478 0020+00 1/0 0/0 0/0 .text            daE_HZ_Draw__FP8daE_HZ_c */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void daE_HZ_Draw(daE_HZ_c* param_0) {
    nofralloc
#include "asm/rel/d/a/e/d_a_e_hz/d_a_e_hz/daE_HZ_Draw__FP8daE_HZ_c.s"
}
#pragma pop

/* ############################################################################################## */
/* 806F08BC-806F08C0 00005C 0004+00 0/6 0/0 0/0 .rodata          @4115 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_4115 = 500.0f;
COMPILER_STRIP_GATE(0x806F08BC, &lit_4115);
#pragma pop

/* 806F0B30-806F0B34 000008 0001+03 4/4 0/0 0/0 .bss             @1109 */
static u8 lit_1109[1 + 3 /* padding */];

/* 806F0B34-806F0B38 00000C 0001+03 0/0 0/0 0/0 .bss             @1107 */
#pragma push
#pragma force_active on
static u8 lit_1107[1 + 3 /* padding */];
#pragma pop

/* 806F0B38-806F0B3C 000010 0001+03 0/0 0/0 0/0 .bss             @1105 */
#pragma push
#pragma force_active on
static u8 lit_1105[1 + 3 /* padding */];
#pragma pop

/* 806F0B3C-806F0B40 000014 0001+03 0/0 0/0 0/0 .bss             @1104 */
#pragma push
#pragma force_active on
static u8 lit_1104[1 + 3 /* padding */];
#pragma pop

/* 806F0B40-806F0B44 000018 0001+03 0/0 0/0 0/0 .bss             @1099 */
#pragma push
#pragma force_active on
static u8 lit_1099[1 + 3 /* padding */];
#pragma pop

/* 806F0B44-806F0B48 00001C 0001+03 0/0 0/0 0/0 .bss             @1097 */
#pragma push
#pragma force_active on
static u8 lit_1097[1 + 3 /* padding */];
#pragma pop

/* 806F0B48-806F0B4C 000020 0001+03 0/0 0/0 0/0 .bss             @1095 */
#pragma push
#pragma force_active on
static u8 lit_1095[1 + 3 /* padding */];
#pragma pop

/* 806F0B4C-806F0B50 000024 0001+03 0/0 0/0 0/0 .bss             @1094 */
#pragma push
#pragma force_active on
static u8 lit_1094[1 + 3 /* padding */];
#pragma pop

/* 806F0B50-806F0B54 000028 0001+03 0/0 0/0 0/0 .bss             @1057 */
#pragma push
#pragma force_active on
static u8 lit_1057[1 + 3 /* padding */];
#pragma pop

/* 806F0B54-806F0B58 00002C 0001+03 0/0 0/0 0/0 .bss             @1055 */
#pragma push
#pragma force_active on
static u8 lit_1055[1 + 3 /* padding */];
#pragma pop

/* 806F0B58-806F0B5C 000030 0001+03 0/0 0/0 0/0 .bss             @1053 */
#pragma push
#pragma force_active on
static u8 lit_1053[1 + 3 /* padding */];
#pragma pop

/* 806F0B5C-806F0B60 000034 0001+03 0/0 0/0 0/0 .bss             @1052 */
#pragma push
#pragma force_active on
static u8 lit_1052[1 + 3 /* padding */];
#pragma pop

/* 806F0B60-806F0B64 000038 0001+03 0/0 0/0 0/0 .bss             @1014 */
#pragma push
#pragma force_active on
static u8 lit_1014[1 + 3 /* padding */];
#pragma pop

/* 806F0B64-806F0B68 00003C 0001+03 0/0 0/0 0/0 .bss             @1012 */
#pragma push
#pragma force_active on
static u8 lit_1012[1 + 3 /* padding */];
#pragma pop

/* 806F0B68-806F0B6C 000040 0001+03 0/0 0/0 0/0 .bss             @1010 */
#pragma push
#pragma force_active on
static u8 lit_1010[1 + 3 /* padding */];
#pragma pop

/* 806F0B6C-806F0B70 -00001 0004+00 2/2 0/0 0/0 .bss             None */
/* 806F0B6C 0001+00 data_806F0B6C @1009 */
/* 806F0B6D 0003+00 data_806F0B6D None */
static u8 struct_806F0B6C[4];

/* 806F0B70-806F0B7C 000048 000C+00 1/1 0/0 0/0 .bss             @3982 */
static u8 lit_3982[12];

/* 806F0B7C-806F0BB8 000054 003C+00 8/9 0/0 0/0 .bss             l_HIO */
static u8 l_HIO[60];

/* 806F0BB8-806F0BBC 000090 0004+00 0/3 0/0 0/0 .bss             m_near_bomb */
#pragma push
#pragma force_active on
static u8 m_near_bomb[4];
#pragma pop

/* 806F0BBC-806F0BC0 000094 0004+00 0/3 0/0 0/0 .bss             m_near_carry */
#pragma push
#pragma force_active on
static u8 m_near_carry[4];
#pragma pop

/* 806F0BC0-806F0BC4 000098 0004+00 0/3 0/0 0/0 .bss             m_near_weapon */
#pragma push
#pragma force_active on
static u8 m_near_weapon[4];
#pragma pop

/* 806EA9B8-806EAADC 000498 0124+00 2/2 0/0 0/0 .text            s_obj_sub__FPvPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void s_obj_sub(void* param_0, void* param_1) {
    nofralloc
#include "asm/rel/d/a/e/d_a_e_hz/d_a_e_hz/s_obj_sub__FPvPv.s"
}
#pragma pop

/* 806EAADC-806EAB68 0005BC 008C+00 16/16 0/0 0/0 .text            setActionMode__8daE_HZ_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daE_HZ_c::setActionMode(int param_0) {
    nofralloc
#include "asm/rel/d/a/e/d_a_e_hz/d_a_e_hz/setActionMode__8daE_HZ_cFi.s"
}
#pragma pop

/* 806EAB68-806EAEDC 000648 0374+00 3/3 0/0 0/0 .text            checkHideStart__8daE_HZ_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daE_HZ_c::checkHideStart() {
    nofralloc
#include "asm/rel/d/a/e/d_a_e_hz/d_a_e_hz/checkHideStart__8daE_HZ_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 806F08C0-806F08C4 000060 0004+00 0/1 0/0 0/0 .rodata          @4262 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_4262 = 110.0f;
COMPILER_STRIP_GATE(0x806F08C0, &lit_4262);
#pragma pop

/* 806F08C4-806F08C8 000064 0004+00 2/6 0/0 0/0 .rodata          @4263 */
SECTION_RODATA static f32 const lit_4263 = 2.0f;
COMPILER_STRIP_GATE(0x806F08C4, &lit_4263);

/* 806F08C8-806F08CC 000068 0004+00 0/8 0/0 0/0 .rodata          @4264 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_4264 = 10.0f;
COMPILER_STRIP_GATE(0x806F08C8, &lit_4264);
#pragma pop

/* 806EAEDC-806EB05C 0009BC 0180+00 1/1 0/0 0/0 .text            checkAttackStart__8daE_HZ_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daE_HZ_c::checkAttackStart() {
    nofralloc
#include "asm/rel/d/a/e/d_a_e_hz/d_a_e_hz/checkAttackStart__8daE_HZ_cFv.s"
}
#pragma pop

/* 806EB05C-806EB0A4 000B3C 0048+00 1/1 0/0 0/0 .text            checkArrowCharge__8daE_HZ_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daE_HZ_c::checkArrowCharge() {
    nofralloc
#include "asm/rel/d/a/e/d_a_e_hz/d_a_e_hz/checkArrowCharge__8daE_HZ_cFv.s"
}
#pragma pop

/* 806EB0A4-806EB0FC 000B84 0058+00 11/11 0/0 0/0 .text            setTgSetBit__8daE_HZ_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daE_HZ_c::setTgSetBit(int param_0) {
    nofralloc
#include "asm/rel/d/a/e/d_a_e_hz/d_a_e_hz/setTgSetBit__8daE_HZ_cFi.s"
}
#pragma pop

/* 806EB0FC-806EB13C 000BDC 0040+00 0/0 0/0 1/1 .text            isWait__8daE_HZ_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daE_HZ_c::isWait() {
    nofralloc
#include "asm/rel/d/a/e/d_a_e_hz/d_a_e_hz/isWait__8daE_HZ_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 806F08CC-806F08D0 00006C 0004+00 0/5 0/0 0/0 .rodata          @4377 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_4377 = 300.0f;
COMPILER_STRIP_GATE(0x806F08CC, &lit_4377);
#pragma pop

/* 806F08D0-806F08D4 000070 0004+00 2/3 0/0 0/0 .rodata          @4378 */
SECTION_RODATA static f32 const lit_4378 = -1000000000.0f;
COMPILER_STRIP_GATE(0x806F08D0, &lit_4378);

/* 806EB13C-806EB2E8 000C1C 01AC+00 1/1 0/0 0/0 .text            checkFall__8daE_HZ_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daE_HZ_c::checkFall() {
    nofralloc
#include "asm/rel/d/a/e/d_a_e_hz/d_a_e_hz/checkFall__8daE_HZ_cFv.s"
}
#pragma pop

/* 806EB2E8-806EB3EC 000DC8 0104+00 3/3 0/0 0/0 .text            setCloseSmokeEffect__8daE_HZ_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daE_HZ_c::setCloseSmokeEffect() {
    nofralloc
#include "asm/rel/d/a/e/d_a_e_hz/d_a_e_hz/setCloseSmokeEffect__8daE_HZ_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 806F08D4-806F08D8 000074 0004+00 1/4 0/0 0/0 .rodata          @4505 */
SECTION_RODATA static f32 const lit_4505 = 30.0f;
COMPILER_STRIP_GATE(0x806F08D4, &lit_4505);

/* 806F08D8-806F08DC 000078 0004+00 0/8 0/0 0/0 .rodata          @4506 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_4506 = 5.0f;
COMPILER_STRIP_GATE(0x806F08D8, &lit_4506);
#pragma pop

/* 806F08DC-806F08E0 00007C 0004+00 0/3 0/0 0/0 .rodata          @4507 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_4507 = 1.5f;
COMPILER_STRIP_GATE(0x806F08DC, &lit_4507);
#pragma pop

/* 806EB3EC-806EB7B0 000ECC 03C4+00 1/1 0/0 0/0 .text            executeWait__8daE_HZ_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daE_HZ_c::executeWait() {
    nofralloc
#include "asm/rel/d/a/e/d_a_e_hz/d_a_e_hz/executeWait__8daE_HZ_cFv.s"
}
#pragma pop

/* 806EB7B0-806EB818 001290 0068+00 1/1 0/0 0/0 .text            getHideSpeed__8daE_HZ_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daE_HZ_c::getHideSpeed() {
    nofralloc
#include "asm/rel/d/a/e/d_a_e_hz/d_a_e_hz/getHideSpeed__8daE_HZ_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 806F08E0-806F08E4 000080 0004+00 0/8 0/0 0/0 .rodata          @4641 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_4641 = 3.0f;
COMPILER_STRIP_GATE(0x806F08E0, &lit_4641);
#pragma pop

/* 806F08E4-806F08E8 000084 0004+00 0/4 0/0 0/0 .rodata          @4642 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_4642 = 35.0f;
COMPILER_STRIP_GATE(0x806F08E4, &lit_4642);
#pragma pop

/* 806F08E8-806F08EC 000088 0004+00 0/1 0/0 0/0 .rodata          @4643 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_4643 = 73.0f;
COMPILER_STRIP_GATE(0x806F08E8, &lit_4643);
#pragma pop

/* 806EB818-806EBD44 0012F8 052C+00 1/1 0/0 0/0 .text            executeHide__8daE_HZ_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daE_HZ_c::executeHide() {
    nofralloc
#include "asm/rel/d/a/e/d_a_e_hz/d_a_e_hz/executeHide__8daE_HZ_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 806F08EC-806F08F0 00008C 0004+00 0/1 0/0 0/0 .rodata          @4751 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_4751 = 8.0f;
COMPILER_STRIP_GATE(0x806F08EC, &lit_4751);
#pragma pop

/* 806F08F0-806F08F4 000090 0004+00 0/2 0/0 0/0 .rodata          @4752 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_4752 = 38.0f;
COMPILER_STRIP_GATE(0x806F08F0, &lit_4752);
#pragma pop

/* 806F08F4-806F08F8 000094 0004+00 0/2 0/0 0/0 .rodata          @4753 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_4753 = 60.0f;
COMPILER_STRIP_GATE(0x806F08F4, &lit_4753);
#pragma pop

/* 806EBD44-806EC068 001824 0324+00 1/1 0/0 0/0 .text            executeAttack__8daE_HZ_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daE_HZ_c::executeAttack() {
    nofralloc
#include "asm/rel/d/a/e/d_a_e_hz/d_a_e_hz/executeAttack__8daE_HZ_cFv.s"
}
#pragma pop

/* 806EC068-806EC348 001B48 02E0+00 2/2 0/0 0/0 .text            initBackWalk__8daE_HZ_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daE_HZ_c::initBackWalk() {
    nofralloc
#include "asm/rel/d/a/e/d_a_e_hz/d_a_e_hz/initBackWalk__8daE_HZ_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 806F08F8-806F08FC 000098 0004+00 0/1 0/0 0/0 .rodata          @4997 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_4997 = 4.0f;
COMPILER_STRIP_GATE(0x806F08F8, &lit_4997);
#pragma pop

/* 806F08FC-806F0900 00009C 0004+00 0/5 0/0 0/0 .rodata          @4998 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_4998 = -5.0f;
COMPILER_STRIP_GATE(0x806F08FC, &lit_4998);
#pragma pop

/* 806F0900-806F0904 0000A0 0004+00 0/2 0/0 0/0 .rodata          @4999 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_4999 = -20.0f;
COMPILER_STRIP_GATE(0x806F0900, &lit_4999);
#pragma pop

/* 806F0904-806F0908 0000A4 0004+00 0/2 0/0 0/0 .rodata          @5000 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_5000 = 23.0f;
COMPILER_STRIP_GATE(0x806F0904, &lit_5000);
#pragma pop

/* 806F0908-806F090C 0000A8 0004+00 0/3 0/0 0/0 .rodata          @5001 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_5001 = 14.0f;
COMPILER_STRIP_GATE(0x806F0908, &lit_5001);
#pragma pop

/* 806F090C-806F0910 0000AC 0004+00 0/2 0/0 0/0 .rodata          @5002 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_5002 = 28.0f;
COMPILER_STRIP_GATE(0x806F090C, &lit_5002);
#pragma pop

/* 806EC348-806ECAEC 001E28 07A4+00 1/1 0/0 0/0 .text            executeAway__8daE_HZ_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daE_HZ_c::executeAway() {
    nofralloc
#include "asm/rel/d/a/e/d_a_e_hz/d_a_e_hz/executeAway__8daE_HZ_cFv.s"
}
#pragma pop

/* 806ECAEC-806ECB64 0025CC 0078+00 1/1 0/0 0/0 .text            setWindEnd__8daE_HZ_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daE_HZ_c::setWindEnd() {
    nofralloc
#include "asm/rel/d/a/e/d_a_e_hz/d_a_e_hz/setWindEnd__8daE_HZ_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 806F0910-806F0914 0000B0 0004+00 0/1 0/0 0/0 .rodata          @5308 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_5308 = 1000.0f;
COMPILER_STRIP_GATE(0x806F0910, &lit_5308);
#pragma pop

/* 806F0914-806F0918 0000B4 0004+00 0/1 0/0 0/0 .rodata          @5309 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_5309 = 6.0f;
COMPILER_STRIP_GATE(0x806F0914, &lit_5309);
#pragma pop

/* 806F0918-806F091C 0000B8 0004+00 0/1 0/0 0/0 .rodata          @5310 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_5310 = 8192.0f;
COMPILER_STRIP_GATE(0x806F0918, &lit_5310);
#pragma pop

/* 806F091C-806F0920 0000BC 0004+00 0/1 0/0 0/0 .rodata          @5311 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_5311 = 512.0f;
COMPILER_STRIP_GATE(0x806F091C, &lit_5311);
#pragma pop

/* 806F0920-806F0924 0000C0 0004+00 0/2 0/0 0/0 .rodata          @5312 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_5312 = 13.0f;
COMPILER_STRIP_GATE(0x806F0920, &lit_5312);
#pragma pop

/* 806F0924-806F0928 0000C4 0004+00 0/1 0/0 0/0 .rodata          @5313 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_5313 = 25.0f;
COMPILER_STRIP_GATE(0x806F0924, &lit_5313);
#pragma pop

/* 806F0928-806F0930 0000C8 0008+00 0/2 0/0 0/0 .rodata          @5315 */
#pragma push
#pragma force_active on
SECTION_RODATA static u8 const lit_5315[8] = {
    0x43, 0x30, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x806F0928, &lit_5315);
#pragma pop

/* 806ECB64-806ED5B0 002644 0A4C+00 1/1 0/0 0/0 .text            executeWind__8daE_HZ_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daE_HZ_c::executeWind() {
    nofralloc
#include "asm/rel/d/a/e/d_a_e_hz/d_a_e_hz/executeWind__8daE_HZ_cFv.s"
}
#pragma pop

/* 806ED5B0-806ED6C8 003090 0118+00 1/1 0/0 0/0 .text            executeChance__8daE_HZ_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daE_HZ_c::executeChance() {
    nofralloc
#include "asm/rel/d/a/e/d_a_e_hz/d_a_e_hz/executeChance__8daE_HZ_cFv.s"
}
#pragma pop

/* 806ED6C8-806ED7A8 0031A8 00E0+00 2/2 0/0 0/0 .text            initRollDamage__8daE_HZ_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daE_HZ_c::initRollDamage() {
    nofralloc
#include "asm/rel/d/a/e/d_a_e_hz/d_a_e_hz/initRollDamage__8daE_HZ_cFv.s"
}
#pragma pop

/* 806ED7A8-806ED8A4 003288 00FC+00 2/2 0/0 0/0 .text            doRollDamage__8daE_HZ_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daE_HZ_c::doRollDamage() {
    nofralloc
#include "asm/rel/d/a/e/d_a_e_hz/d_a_e_hz/doRollDamage__8daE_HZ_cFv.s"
}
#pragma pop

/* 806ED8A4-806EDAA8 003384 0204+00 1/1 0/0 0/0 .text            executeDamage__8daE_HZ_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daE_HZ_c::executeDamage() {
    nofralloc
#include "asm/rel/d/a/e/d_a_e_hz/d_a_e_hz/executeDamage__8daE_HZ_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 806F0930-806F0934 0000D0 0004+00 0/1 0/0 0/0 .rodata          @5482 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_5482 = 41.5f;
COMPILER_STRIP_GATE(0x806F0930, &lit_5482);
#pragma pop

/* 806F0934-806F0938 0000D4 0004+00 0/1 0/0 0/0 .rodata          @5483 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_5483 = 2.0f / 5.0f;
COMPILER_STRIP_GATE(0x806F0934, &lit_5483);
#pragma pop

/* 806EDAA8-806EDDCC 003588 0324+00 1/1 0/0 0/0 .text            executeDeath__8daE_HZ_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daE_HZ_c::executeDeath() {
    nofralloc
#include "asm/rel/d/a/e/d_a_e_hz/d_a_e_hz/executeDeath__8daE_HZ_cFv.s"
}
#pragma pop

/* 806EDDCC-806EDDE8 0038AC 001C+00 1/1 0/0 0/0 .text            setWindChanceEnd__8daE_HZ_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daE_HZ_c::setWindChanceEnd() {
    nofralloc
#include "asm/rel/d/a/e/d_a_e_hz/d_a_e_hz/setWindChanceEnd__8daE_HZ_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 806F0938-806F093C 0000D8 0004+00 0/1 0/0 0/0 .rodata          @5546 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_5546 = 6144.0f;
COMPILER_STRIP_GATE(0x806F0938, &lit_5546);
#pragma pop

/* 806EDDE8-806EE120 0038C8 0338+00 1/1 0/0 0/0 .text            executeWindChance__8daE_HZ_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daE_HZ_c::executeWindChance() {
    nofralloc
#include "asm/rel/d/a/e/d_a_e_hz/d_a_e_hz/executeWindChance__8daE_HZ_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 806F093C-806F0940 0000DC 0004+00 0/1 0/0 0/0 .rodata          @5580 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_5580 = 24.0f;
COMPILER_STRIP_GATE(0x806F093C, &lit_5580);
#pragma pop

/* 806EE120-806EE2A4 003C00 0184+00 1/1 0/0 0/0 .text            executeWindWalk__8daE_HZ_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daE_HZ_c::executeWindWalk() {
    nofralloc
#include "asm/rel/d/a/e/d_a_e_hz/d_a_e_hz/executeWindWalk__8daE_HZ_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 806F0BC4-806F0BD4 00009C 000C+04 0/1 0/0 0/0 .bss             @5585 */
#pragma push
#pragma force_active on
static u8 lit_5585[12 + 4 /* padding */];
#pragma pop

/* 806F0BD4-806F0BE0 0000AC 000C+00 0/1 0/0 0/0 .bss             sc$5584 */
#pragma push
#pragma force_active on
static u8 sc[12];
#pragma pop

/* 806EE2A4-806EE3BC 003D84 0118+00 1/1 0/0 0/0 .text            setWaterEffect__8daE_HZ_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daE_HZ_c::setWaterEffect() {
    nofralloc
#include "asm/rel/d/a/e/d_a_e_hz/d_a_e_hz/setWaterEffect__8daE_HZ_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 806F0940-806F0944 0000E0 0004+00 0/1 0/0 0/0 .rodata          @5703 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_5703 = 36.0f;
COMPILER_STRIP_GATE(0x806F0940, &lit_5703);
#pragma pop

/* 806F0944-806F0948 0000E4 0004+00 0/1 0/0 0/0 .rodata          @5704 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_5704 = 57.0f;
COMPILER_STRIP_GATE(0x806F0944, &lit_5704);
#pragma pop

/* 806F0948-806F094C 0000E8 0004+00 0/2 0/0 0/0 .rodata          @5705 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_5705 = 150.0f;
COMPILER_STRIP_GATE(0x806F0948, &lit_5705);
#pragma pop

/* 806EE3BC-806EE820 003E9C 0464+00 1/1 0/0 0/0 .text            executeWaterDeath__8daE_HZ_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daE_HZ_c::executeWaterDeath() {
    nofralloc
#include "asm/rel/d/a/e/d_a_e_hz/d_a_e_hz/executeWaterDeath__8daE_HZ_cFv.s"
}
#pragma pop

/* 806EE820-806EE978 004300 0158+00 1/1 0/0 0/0 .text            executeDeathWait__8daE_HZ_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daE_HZ_c::executeDeathWait() {
    nofralloc
#include "asm/rel/d/a/e/d_a_e_hz/d_a_e_hz/executeDeathWait__8daE_HZ_cFv.s"
}
#pragma pop

/* 806EE978-806EEE10 004458 0498+00 1/1 0/0 0/0 .text            damage_check__8daE_HZ_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daE_HZ_c::damage_check() {
    nofralloc
#include "asm/rel/d/a/e/d_a_e_hz/d_a_e_hz/damage_check__8daE_HZ_cFv.s"
}
#pragma pop

/* 806EEE10-806EEEE4 0048F0 00D4+00 1/1 0/0 0/0 .text            checkWaterSurface__8daE_HZ_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daE_HZ_c::checkWaterSurface() {
    nofralloc
#include "asm/rel/d/a/e/d_a_e_hz/d_a_e_hz/checkWaterSurface__8daE_HZ_cFv.s"
}
#pragma pop

/* 806EEEE4-806EF144 0049C4 0260+00 2/1 0/0 0/0 .text            action__8daE_HZ_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daE_HZ_c::action() {
    nofralloc
#include "asm/rel/d/a/e/d_a_e_hz/d_a_e_hz/action__8daE_HZ_cFv.s"
}
#pragma pop

/* 806EF144-806EF2C8 004C24 0184+00 1/1 0/0 0/0 .text            mtx_set__8daE_HZ_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daE_HZ_c::mtx_set() {
    nofralloc
#include "asm/rel/d/a/e/d_a_e_hz/d_a_e_hz/mtx_set__8daE_HZ_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 806F094C-806F0950 0000EC 0004+00 1/1 0/0 0/0 .rodata          @6030 */
SECTION_RODATA static f32 const lit_6030 = 80.0f;
COMPILER_STRIP_GATE(0x806F094C, &lit_6030);

/* 806EF2C8-806EF46C 004DA8 01A4+00 1/1 0/0 0/0 .text            cc_set__8daE_HZ_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daE_HZ_c::cc_set() {
    nofralloc
#include "asm/rel/d/a/e/d_a_e_hz/d_a_e_hz/cc_set__8daE_HZ_cFv.s"
}
#pragma pop

/* 806EF46C-806EF68C 004F4C 0220+00 1/1 0/0 0/0 .text            execute__8daE_HZ_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daE_HZ_c::execute() {
    nofralloc
#include "asm/rel/d/a/e/d_a_e_hz/d_a_e_hz/execute__8daE_HZ_cFv.s"
}
#pragma pop

/* 806EF68C-806EF6AC 00516C 0020+00 2/1 0/0 0/0 .text            daE_HZ_Execute__FP8daE_HZ_c */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void daE_HZ_Execute(daE_HZ_c* param_0) {
    nofralloc
#include "asm/rel/d/a/e/d_a_e_hz/d_a_e_hz/daE_HZ_Execute__FP8daE_HZ_c.s"
}
#pragma pop

/* 806EF6AC-806EF6B4 00518C 0008+00 1/0 0/0 0/0 .text            daE_HZ_IsDelete__FP8daE_HZ_c */
static bool daE_HZ_IsDelete(daE_HZ_c* param_0) {
    return true;
}

/* 806EF6B4-806EF750 005194 009C+00 1/1 0/0 0/0 .text            _delete__8daE_HZ_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daE_HZ_c::_delete() {
    nofralloc
#include "asm/rel/d/a/e/d_a_e_hz/d_a_e_hz/_delete__8daE_HZ_cFv.s"
}
#pragma pop

/* 806EF750-806EF770 005230 0020+00 1/0 0/0 0/0 .text            daE_HZ_Delete__FP8daE_HZ_c */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void daE_HZ_Delete(daE_HZ_c* param_0) {
    nofralloc
#include "asm/rel/d/a/e/d_a_e_hz/d_a_e_hz/daE_HZ_Delete__FP8daE_HZ_c.s"
}
#pragma pop

/* 806EF770-806EF880 005250 0110+00 1/1 0/0 0/0 .text ctrlJoint__8daE_HZ_cFP8J3DJointP8J3DModel */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daE_HZ_c::ctrlJoint(J3DJoint* param_0, J3DModel* param_1) {
    nofralloc
#include "asm/rel/d/a/e/d_a_e_hz/d_a_e_hz/ctrlJoint__8daE_HZ_cFP8J3DJointP8J3DModel.s"
}
#pragma pop

/* 806EF880-806EF8CC 005360 004C+00 1/1 0/0 0/0 .text JointCallBack__8daE_HZ_cFP8J3DJointi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daE_HZ_c::JointCallBack(J3DJoint* param_0, int param_1) {
    nofralloc
#include "asm/rel/d/a/e/d_a_e_hz/d_a_e_hz/JointCallBack__8daE_HZ_cFP8J3DJointi.s"
}
#pragma pop

/* ############################################################################################## */
/* 806F095C-806F095C 0000FC 0000+00 0/0 0/0 0/0 .rodata          @stringBase0 */
#pragma push
#pragma force_active on
SECTION_DEAD static char const* const stringBase_806F0961 = "E_hzp";
#pragma pop

/* 806EF8CC-806EFB34 0053AC 0268+00 1/1 0/0 0/0 .text            CreateHeap__8daE_HZ_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daE_HZ_c::CreateHeap() {
    nofralloc
#include "asm/rel/d/a/e/d_a_e_hz/d_a_e_hz/CreateHeap__8daE_HZ_cFv.s"
}
#pragma pop

/* 806EFB34-806EFB54 005614 0020+00 1/1 0/0 0/0 .text            useHeapInit__FP10fopAc_ac_c */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void useHeapInit(fopAc_ac_c* param_0) {
    nofralloc
#include "asm/rel/d/a/e/d_a_e_hz/d_a_e_hz/useHeapInit__FP10fopAc_ac_c.s"
}
#pragma pop

/* 806EFB54-806EFC18 005634 00C4+00 1/1 0/0 0/0 .text            setInitPos__8daE_HZ_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daE_HZ_c::setInitPos() {
    nofralloc
#include "asm/rel/d/a/e/d_a_e_hz/d_a_e_hz/setInitPos__8daE_HZ_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 806F0950-806F0954 0000F0 0004+00 0/1 0/0 0/0 .rodata          @6337 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_6337 = -200.0f;
COMPILER_STRIP_GATE(0x806F0950, &lit_6337);
#pragma pop

/* 806F0954-806F0958 0000F4 0004+00 0/1 0/0 0/0 .rodata          @6338 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_6338 = 200.0f;
COMPILER_STRIP_GATE(0x806F0954, &lit_6338);
#pragma pop

/* 806F0958-806F095C 0000F8 0004+00 0/1 0/0 0/0 .rodata          @6339 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_6339 = -60.0f;
COMPILER_STRIP_GATE(0x806F0958, &lit_6339);
#pragma pop

/* 806F095C-806F095C 0000FC 0000+00 0/0 0/0 0/0 .rodata          @stringBase0 */
#pragma push
#pragma force_active on
SECTION_DEAD static char const* const stringBase_806F0967 = "E_hzp2";
SECTION_DEAD static char const* const stringBase_806F096E = "E_hz";
#pragma pop

/* 806EFC18-806EFFAC 0056F8 0394+00 1/1 0/0 0/0 .text            create__8daE_HZ_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daE_HZ_c::create() {
    nofralloc
#include "asm/rel/d/a/e/d_a_e_hz/d_a_e_hz/create__8daE_HZ_cFv.s"
}
#pragma pop

/* 806EFFAC-806F0078 005A8C 00CC+00 1/1 0/0 0/0 .text            __dt__8dCcD_SphFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dCcD_Sph::~dCcD_Sph() {
    nofralloc
#include "asm/rel/d/a/e/d_a_e_hz/d_a_e_hz/__dt__8dCcD_SphFv.s"
}
#pragma pop

/* 806F0078-806F00FC 005B58 0084+00 1/1 0/0 0/0 .text            __ct__8dCcD_SphFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dCcD_Sph::dCcD_Sph() {
    nofralloc
#include "asm/rel/d/a/e/d_a_e_hz/d_a_e_hz/__ct__8dCcD_SphFv.s"
}
#pragma pop

/* 806F00FC-806F0144 005BDC 0048+00 1/0 0/0 0/0 .text            __dt__8cM3dGSphFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm cM3dGSph::~cM3dGSph() {
    nofralloc
#include "asm/rel/d/a/e/d_a_e_hz/d_a_e_hz/__dt__8cM3dGSphFv.s"
}
#pragma pop

/* 806F0144-806F018C 005C24 0048+00 1/0 0/0 0/0 .text            __dt__8cM3dGAabFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm cM3dGAab::~cM3dGAab() {
    nofralloc
#include "asm/rel/d/a/e/d_a_e_hz/d_a_e_hz/__dt__8cM3dGAabFv.s"
}
#pragma pop

/* 806F018C-806F01E8 005C6C 005C+00 1/0 0/0 0/0 .text            __dt__10dCcD_GSttsFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dCcD_GStts::~dCcD_GStts() {
    nofralloc
#include "asm/rel/d/a/e/d_a_e_hz/d_a_e_hz/__dt__10dCcD_GSttsFv.s"
}
#pragma pop

/* 806F01E8-806F0258 005CC8 0070+00 3/2 0/0 0/0 .text            __dt__12dBgS_ObjAcchFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dBgS_ObjAcch::~dBgS_ObjAcch() {
    nofralloc
#include "asm/rel/d/a/e/d_a_e_hz/d_a_e_hz/__dt__12dBgS_ObjAcchFv.s"
}
#pragma pop

/* 806F0258-806F02C8 005D38 0070+00 1/0 0/0 0/0 .text            __dt__12dBgS_AcchCirFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dBgS_AcchCir::~dBgS_AcchCir() {
    nofralloc
#include "asm/rel/d/a/e/d_a_e_hz/d_a_e_hz/__dt__12dBgS_AcchCirFv.s"
}
#pragma pop

/* 806F02C8-806F0300 005DA8 0038+00 1/1 0/0 0/0 .text            __ct__11J3DLightObjFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DLightObj::J3DLightObj() {
    nofralloc
#include "asm/rel/d/a/e/d_a_e_hz/d_a_e_hz/__ct__11J3DLightObjFv.s"
}
#pragma pop

/* 806F0300-806F0320 005DE0 0020+00 1/0 0/0 0/0 .text            daE_HZ_Create__FP8daE_HZ_c */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void daE_HZ_Create(daE_HZ_c* param_0) {
    nofralloc
#include "asm/rel/d/a/e/d_a_e_hz/d_a_e_hz/daE_HZ_Create__FP8daE_HZ_c.s"
}
#pragma pop

/* 806F0320-806F0368 005E00 0048+00 1/0 0/0 0/0 .text            __dt__10cCcD_GSttsFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm cCcD_GStts::~cCcD_GStts() {
    nofralloc
#include "asm/rel/d/a/e/d_a_e_hz/d_a_e_hz/__dt__10cCcD_GSttsFv.s"
}
#pragma pop

/* 806F0368-806F03B0 005E48 0048+00 2/1 0/0 0/0 .text            __dt__12daE_HZ_HIO_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm daE_HZ_HIO_c::~daE_HZ_HIO_c() {
    nofralloc
#include "asm/rel/d/a/e/d_a_e_hz/d_a_e_hz/__dt__12daE_HZ_HIO_cFv.s"
}
#pragma pop

/* 806F03B0-806F03EC 005E90 003C+00 0/0 1/0 0/0 .text            __sinit_d_a_e_hz_cpp */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __sinit_d_a_e_hz_cpp() {
    nofralloc
#include "asm/rel/d/a/e/d_a_e_hz/d_a_e_hz/__sinit_d_a_e_hz_cpp.s"
}
#pragma pop

#pragma push
#pragma force_active on
REGISTER_CTORS(0x806F03B0, __sinit_d_a_e_hz_cpp);
#pragma pop

/* 806F03EC-806F03F4 005ECC 0008+00 1/0 0/0 0/0 .text            @36@__dt__12dBgS_ObjAcchFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void func_806F03EC() {
    nofralloc
#include "asm/rel/d/a/e/d_a_e_hz/d_a_e_hz/func_806F03EC.s"
}
#pragma pop

/* 806F03F4-806F03FC 005ED4 0008+00 1/0 0/0 0/0 .text            @20@__dt__12dBgS_ObjAcchFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void func_806F03F4() {
    nofralloc
#include "asm/rel/d/a/e/d_a_e_hz/d_a_e_hz/func_806F03F4.s"
}
#pragma pop

/* 806F03FC-806F0810 005EDC 0414+00 1/1 0/0 0/0 .text
 * setMidnaBindEffect__FP13fopEn_enemy_cP15Z2CreatureEnemyP4cXyzP4cXyz */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void setMidnaBindEffect(fopEn_enemy_c* param_0, Z2CreatureEnemy* param_1, cXyz* param_2,
                                   cXyz* param_3) {
    nofralloc
#include "asm/rel/d/a/e/d_a_e_hz/d_a_e_hz/setMidnaBindEffect__FP13fopEn_enemy_cP15Z2CreatureEnemyP4cXyzP4cXyz.s"
}
#pragma pop

/* 806F0810-806F084C 0062F0 003C+00 1/1 0/0 0/0 .text            __dt__4cXyzFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm cXyz::~cXyz() {
    nofralloc
#include "asm/rel/d/a/e/d_a_e_hz/d_a_e_hz/__dt__4cXyzFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 806F0BE0-806F0BE4 0000B8 0004+00 0/0 0/0 0/0 .bss
 * sInstance__40JASGlobalInstance<19JASDefaultBankTable>        */
#pragma push
#pragma force_active on
static u8 data_806F0BE0[4];
#pragma pop

/* 806F0BE4-806F0BE8 0000BC 0004+00 0/0 0/0 0/0 .bss
 * sInstance__35JASGlobalInstance<14JASAudioThread>             */
#pragma push
#pragma force_active on
static u8 data_806F0BE4[4];
#pragma pop

/* 806F0BE8-806F0BEC 0000C0 0004+00 0/0 0/0 0/0 .bss sInstance__27JASGlobalInstance<7Z2SeMgr> */
#pragma push
#pragma force_active on
static u8 data_806F0BE8[4];
#pragma pop

/* 806F0BEC-806F0BF0 0000C4 0004+00 0/0 0/0 0/0 .bss sInstance__28JASGlobalInstance<8Z2SeqMgr> */
#pragma push
#pragma force_active on
static u8 data_806F0BEC[4];
#pragma pop

/* 806F0BF0-806F0BF4 0000C8 0004+00 0/0 0/0 0/0 .bss sInstance__31JASGlobalInstance<10Z2SceneMgr>
 */
#pragma push
#pragma force_active on
static u8 data_806F0BF0[4];
#pragma pop

/* 806F0BF4-806F0BF8 0000CC 0004+00 0/0 0/0 0/0 .bss sInstance__32JASGlobalInstance<11Z2StatusMgr>
 */
#pragma push
#pragma force_active on
static u8 data_806F0BF4[4];
#pragma pop

/* 806F0BF8-806F0BFC 0000D0 0004+00 0/0 0/0 0/0 .bss sInstance__31JASGlobalInstance<10Z2DebugSys>
 */
#pragma push
#pragma force_active on
static u8 data_806F0BF8[4];
#pragma pop

/* 806F0BFC-806F0C00 0000D4 0004+00 0/0 0/0 0/0 .bss
 * sInstance__36JASGlobalInstance<15JAISoundStarter>            */
#pragma push
#pragma force_active on
static u8 data_806F0BFC[4];
#pragma pop

/* 806F0C00-806F0C04 0000D8 0004+00 0/0 0/0 0/0 .bss
 * sInstance__35JASGlobalInstance<14Z2SoundStarter>             */
#pragma push
#pragma force_active on
static u8 data_806F0C00[4];
#pragma pop

/* 806F0C04-806F0C08 0000DC 0004+00 0/0 0/0 0/0 .bss
 * sInstance__33JASGlobalInstance<12Z2SpeechMgr2>               */
#pragma push
#pragma force_active on
static u8 data_806F0C04[4];
#pragma pop

/* 806F0C08-806F0C0C 0000E0 0004+00 0/0 0/0 0/0 .bss sInstance__28JASGlobalInstance<8JAISeMgr> */
#pragma push
#pragma force_active on
static u8 data_806F0C08[4];
#pragma pop

/* 806F0C0C-806F0C10 0000E4 0004+00 0/0 0/0 0/0 .bss sInstance__29JASGlobalInstance<9JAISeqMgr> */
#pragma push
#pragma force_active on
static u8 data_806F0C0C[4];
#pragma pop

/* 806F0C10-806F0C14 0000E8 0004+00 0/0 0/0 0/0 .bss
 * sInstance__33JASGlobalInstance<12JAIStreamMgr>               */
#pragma push
#pragma force_active on
static u8 data_806F0C10[4];
#pragma pop

/* 806F0C14-806F0C18 0000EC 0004+00 0/0 0/0 0/0 .bss sInstance__31JASGlobalInstance<10Z2SoundMgr>
 */
#pragma push
#pragma force_active on
static u8 data_806F0C14[4];
#pragma pop

/* 806F0C18-806F0C1C 0000F0 0004+00 0/0 0/0 0/0 .bss
 * sInstance__33JASGlobalInstance<12JAISoundInfo>               */
#pragma push
#pragma force_active on
static u8 data_806F0C18[4];
#pragma pop

/* 806F0C1C-806F0C20 0000F4 0004+00 0/0 0/0 0/0 .bss
 * sInstance__34JASGlobalInstance<13JAUSoundTable>              */
#pragma push
#pragma force_active on
static u8 data_806F0C1C[4];
#pragma pop

/* 806F0C20-806F0C24 0000F8 0004+00 0/0 0/0 0/0 .bss
 * sInstance__38JASGlobalInstance<17JAUSoundNameTable>          */
#pragma push
#pragma force_active on
static u8 data_806F0C20[4];
#pragma pop

/* 806F0C24-806F0C28 0000FC 0004+00 0/0 0/0 0/0 .bss
 * sInstance__33JASGlobalInstance<12JAUSoundInfo>               */
#pragma push
#pragma force_active on
static u8 data_806F0C24[4];
#pragma pop

/* 806F0C28-806F0C2C 000100 0004+00 0/0 0/0 0/0 .bss sInstance__32JASGlobalInstance<11Z2SoundInfo>
 */
#pragma push
#pragma force_active on
static u8 data_806F0C28[4];
#pragma pop

/* 806F0C2C-806F0C30 000104 0004+00 0/0 0/0 0/0 .bss
 * sInstance__34JASGlobalInstance<13Z2SoundObjMgr>              */
#pragma push
#pragma force_active on
static u8 data_806F0C2C[4];
#pragma pop

/* 806F0C30-806F0C34 000108 0004+00 0/0 0/0 0/0 .bss sInstance__31JASGlobalInstance<10Z2Audience>
 */
#pragma push
#pragma force_active on
static u8 data_806F0C30[4];
#pragma pop

/* 806F0C34-806F0C38 00010C 0004+00 0/0 0/0 0/0 .bss sInstance__32JASGlobalInstance<11Z2FxLineMgr>
 */
#pragma push
#pragma force_active on
static u8 data_806F0C34[4];
#pragma pop

/* 806F0C38-806F0C3C 000110 0004+00 0/0 0/0 0/0 .bss sInstance__31JASGlobalInstance<10Z2EnvSeMgr>
 */
#pragma push
#pragma force_active on
static u8 data_806F0C38[4];
#pragma pop

/* 806F0C3C-806F0C40 000114 0004+00 0/0 0/0 0/0 .bss sInstance__32JASGlobalInstance<11Z2SpeechMgr>
 */
#pragma push
#pragma force_active on
static u8 data_806F0C3C[4];
#pragma pop

/* 806F0C40-806F0C44 000118 0004+00 0/0 0/0 0/0 .bss
 * sInstance__34JASGlobalInstance<13Z2WolfHowlMgr>              */
#pragma push
#pragma force_active on
static u8 data_806F0C40[4];
#pragma pop

/* 806F095C-806F095C 0000FC 0000+00 0/0 0/0 0/0 .rodata          @stringBase0 */
