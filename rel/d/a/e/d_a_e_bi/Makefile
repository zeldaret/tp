#
# Generated By: dol2asm
#

M175_TARGET := $(BUILD_DIR)/rel/d/a/e/d_a_e_bi.plf
M175_LDSCRIPT := $(BUILD_DIR)/rel/d/a/e/d_a_e_bi.lcf
M175_MAP := $(BUILD_DIR)/rel/d/a/e/d_a_e_bi.map

M175_CPP_FILES := \
	rel/executor.cpp \
	rel/global_destructor_chain.cpp \
	rel/d/a/e/d_a_e_bi/d_a_e_bi.cpp \

M175_O_FILES := \
	$(BUILD_DIR)/rel/executor.o \
	$(BUILD_DIR)/rel/global_destructor_chain.o \
	$(BUILD_DIR)/rel/d/a/e/d_a_e_bi/d_a_e_bi.o \

M175_LIBS := \

M175_CFLAGS := \
	-sdata 0 \
	-sdata2 0 \

M175_LDFLAGS := \
	-nodefaults \
	-fp hard \
	-proc gekko \
	-linkmode moreram \
	-sdata 0 \
	-sdata2 0 \
	-m _prolog \
	-lcf $(M175_LDSCRIPT) \
	-unused -map $(M175_MAP) \
	-w off \

$(M175_TARGET): $(M175_O_FILES) $(M175_LIBS)
	@echo [175] creating $(M175_TARGET)
	@echo $(M175_LIBS) $(M175_O_FILES) > build/M175_ofiles
	@python3 tools/lcf.py rel 175 --output $(M175_LDSCRIPT)
	@$(LD) -opt_partial -strip_partial $(M175_LDFLAGS) -o $(M175_TARGET) @build/M175_ofiles

$(BUILD_DIR)/rel/d/a/e/d_a_e_bi/%.o: rel/d/a/e/d_a_e_bi/%.cpp $(BUILD_DIR)/rel/d/a/e/d_a_e_bi/%.d
	@echo [175] building $@
	@mkdir -p $(@D)
	@$(ICONV) -f UTF-8 -t CP932 < $< > $(basename $@).cpp
	@$(CC) $(CFLAGS) $(M175_CFLAGS) $(DEPFLAGS) -c -o $(dir $@) $(basename $@).cpp
	@if [ -z '$(DISABLE_DEPS)' ]; then tools/transform-dep.py '$(basename $@).d' '$(basename $@).d'; touch -c $@; fi

ifndef DISABLE_DEPS
M175_D_FILES := $(M175_O_FILES:.o=.d)
$(M175_D_FILES):
include $(wildcard $(M175_D_FILES))
endif


