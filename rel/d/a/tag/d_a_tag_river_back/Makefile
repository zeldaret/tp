#
# Generated By: dol2asm
#

M736_TARGET := $(BUILD_DIR)/rel/d/a/tag/d_a_tag_river_back.plf
M736_LDSCRIPT := $(BUILD_DIR)/rel/d/a/tag/d_a_tag_river_back.lcf
M736_MAP := $(BUILD_DIR)/rel/d/a/tag/d_a_tag_river_back.map

M736_CPP_FILES := \
	rel/executor.cpp \
	rel/d/a/tag/d_a_tag_river_back/unknown_translation_unit_bss.cpp \
	rel/d/a/tag/d_a_tag_river_back/d_a_tag_river_back.cpp \

M736_O_FILES := \
	$(BUILD_DIR)/rel/executor.o \
	$(BUILD_DIR)/rel/d/a/tag/d_a_tag_river_back/unknown_translation_unit_bss.o \
	$(BUILD_DIR)/rel/d/a/tag/d_a_tag_river_back/d_a_tag_river_back.o \

M736_LIBS := \

M736_CFLAGS := \
	-sdata 0 \
	-sdata2 0 \

M736_LDFLAGS := \
	-nodefaults \
	-fp hard \
	-proc gekko \
	-linkmode moreram \
	-sdata 0 \
	-sdata2 0 \
	-m _prolog \
	-lcf $(M736_LDSCRIPT) \
	-unused -map $(M736_MAP) \
	-w off \

$(M736_TARGET): $(M736_O_FILES) $(M736_LIBS)
	@echo [736] creating $(M736_TARGET)
	@echo $(M736_LIBS) $(M736_O_FILES) > build/M736_ofiles
	@python3 tools/lcf.py rel 736 --output $(M736_LDSCRIPT)
	@$(LD) -opt_partial -strip_partial $(M736_LDFLAGS) -o $(M736_TARGET) @build/M736_ofiles

$(BUILD_DIR)/rel/d/a/tag/d_a_tag_river_back/%.o: rel/d/a/tag/d_a_tag_river_back/%.cpp
	@echo [736] building $@
	@mkdir -p $(@D)
	@iconv -f UTF-8 -t CP932 < $< > $@.iconv.cpp
	@$(CC) $(CFLAGS) $(M736_CFLAGS) -c -o $@ $@.iconv.cpp


