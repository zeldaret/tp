//
// Generated By: dol2asm
// Translation Unit: d_a_tag_TWgate
//

#include "rel/d/a/tag/d_a_tag_TWgate/d_a_tag_TWgate.h"
#include "JSystem/JKernel/JKRHeap.h"
#include "d/a/d_a_player.h"
#include "d/com/d_com_inf_game.h"
#include "d/msg/d_msg_flow.h"
#include "dol2asm.h"
#include "dolphin/types.h"
#include "f_op/f_op_actor_mng.h"

//
// Types:
//

class daTagTWGate_c;
typedef void (daTagTWGate_c::*actionFunc)();

class daTagTWGate_c : public fopAc_ac_c {
public:
    enum EType {
        /* 0x0 */ TYPE_FILONE,
        /* 0x1 */ TYPE_ORDIN,
        /* 0x2 */ TYPE_RANAIL,
        /* 0x3 */ TYPE_HYRAL,
    };

    enum EAction {
        /* 0x00 */ ACT_WAIT,
        /* 0x01 */ ACT_DEMO_FILONE_1,
        /* 0x02 */ ACT_DEMO_FILONE_2,
        /* 0x03 */ ACT_DEMO_FILONE_3,
        /* 0x04 */ ACT_DEMO_ORDIN_1,
        /* 0x05 */ ACT_DEMO_ORDIN_2,
        /* 0x06 */ ACT_DEMO_ORDIN_3,
        /* 0x07 */ ACT_DEMO_RANAIL_1,
        /* 0x08 */ ACT_DEMO_RANAIL_2,
        /* 0x09 */ ACT_DEMO_RANAIL_3,
        /* 0x0A */ ACT_DEMO_HYRAL_1,
        /* 0x0B */ ACT_DEMO_HYRAL_2,
        /* 0x0C */ ACT_DEMO_HYRAL_3,
    };

    inline ~daTagTWGate_c();

    /* 80D525F8 */ void initWait();
    /* 80D52604 */ void executeWait();
    /* 80D528F0 */ void initDemoFilone1();
    /* 80D5297C */ void executeDemoFilone1();
    /* 80D52AF4 */ void initDemoFilone2();
    /* 80D52BF0 */ void executeDemoFilone2();
    /* 80D52DB4 */ void initDemoFilone3();
    /* 80D52E7C */ void executeDemoFilone3();
    /* 80D53250 */ void initDemoOrdin1();
    /* 80D532DC */ void executeDemoOrdin1();
    /* 80D53454 */ void initDemoOrdin2();
    /* 80D53550 */ void executeDemoOrdin2();
    /* 80D53714 */ void initDemoOrdin3();
    /* 80D537DC */ void executeDemoOrdin3();
    /* 80D53BD0 */ void initDemoRanail1();
    /* 80D53C5C */ void executeDemoRanail1();
    /* 80D53DD4 */ void initDemoRanail2();
    /* 80D53ED0 */ void executeDemoRanail2();
    /* 80D54094 */ void initDemoRanail3();
    /* 80D54178 */ void executeDemoRanail3();
    /* 80D5456C */ void initDemoHyral1();
    /* 80D545F8 */ void executeDemoHyral1();
    /* 80D54770 */ void initDemoHyral2();
    /* 80D5486C */ void executeDemoHyral2();
    /* 80D54A30 */ void initDemoHyral3();
    /* 80D54AF8 */ void executeDemoHyral3();
    /* 80D54ECC */ void initBaseMtx();
    /* 80D54F88 */ int downloadModels();
    /* 80D5502C */ void initTalk(int, fopAc_ac_c**);
    /* 80D55068 */ bool talkProc(int*, int, fopAc_ac_c**);
    /* 80D55160 */ static int createHeapCallBack(fopAc_ac_c*);
    /* 80D55180 */ int CreateHeap();

    u8 getSwitch() { return fopAcM_GetParam(this) >> 8; }
    u8 getType() { return fopAcM_GetParam(this); }

    inline int create();

    void create_init() {
        field_0x5e0 = 0;
        mActionID = 0;
        mAction = &ActionTable[mActionID][0];
        (this->**mAction)();
    }

    void callExecute() {
        (this->*mAction[1])();
        i_mDoAud_seStartLevel(Z2SE_OBJ_DARK_GATE, &current.pos, 0, 0);
    }

    int execute() {
        callExecute();

        if (field_0x5e0 != 0) {
            mpMorf->play(0, 0);
            mpMorf->modelCalc();
        }
        return 1;
    }

    int draw() {
        if (field_0x5e0 != 0) {
            mpMorf->entryDL();
        }
        return 1;
    }

    static u8 const mAttr[1 + 3 /* padding */];
    static actionFunc ActionTable[13][2];

private:
    /* 0x568 */ mDoExt_McaMorfSO* mpMorf;
    /* 0x56C */ request_of_phase_process_class mPhaseZevArc;
    /* 0x574 */ request_of_phase_process_class mPhaseMdRes;
    /* 0x57C */ request_of_phase_process_class mPhasePyRes;
    /* 0x584 */ actionFunc* mAction;
    /* 0x588 */ int mActionID;
    /* 0x58C */ dMsgFlow_c mMsgFlow;
    /* 0x5D8 */ u8 field_0x5d8[4];
    /* 0x5DC */ s16 mEventID;
    /* 0x5DE */ u8 field_0x5de;
    /* 0x5DF */ bool mIsWolf;
    /* 0x5E0 */ u8 field_0x5e0;
    /* 0x5E1 */ u8 field_0x5e1;
    /* 0x5E2 */ u8 mType;
};

struct dMsgObject_c {
    /* 802382C8 */ void offMsgSendControl();
    /* 802382F4 */ void isMsgSendControl();
};

struct daTagTWGate_zevParam {
    /* 0x00 */ char* mArcName;
    /* 0x04 */ char* mEventName;
    /* 0x08 */ char* mTalkEventName;
    /* 0x0C */ char* mInEventName;
    /* 0x10 */ int mLv;
    /* 0x14 */ char* mStage;
    /* 0x18 */ s16 mPoint;
    /* 0x1A */ s8 mRoomNo;
    /* 0x1B */ s8 mLayer;
};

//
// Forward References:
//

extern "C" void initWait__13daTagTWGate_cFv();
extern "C" void executeWait__13daTagTWGate_cFv();
extern "C" void initDemoFilone1__13daTagTWGate_cFv();
extern "C" void executeDemoFilone1__13daTagTWGate_cFv();
extern "C" void initDemoFilone2__13daTagTWGate_cFv();
extern "C" void executeDemoFilone2__13daTagTWGate_cFv();
extern "C" void initDemoFilone3__13daTagTWGate_cFv();
extern "C" void executeDemoFilone3__13daTagTWGate_cFv();
extern "C" void initDemoOrdin1__13daTagTWGate_cFv();
extern "C" void executeDemoOrdin1__13daTagTWGate_cFv();
extern "C" void initDemoOrdin2__13daTagTWGate_cFv();
extern "C" void executeDemoOrdin2__13daTagTWGate_cFv();
extern "C" void initDemoOrdin3__13daTagTWGate_cFv();
extern "C" void executeDemoOrdin3__13daTagTWGate_cFv();
extern "C" void initDemoRanail1__13daTagTWGate_cFv();
extern "C" void executeDemoRanail1__13daTagTWGate_cFv();
extern "C" void initDemoRanail2__13daTagTWGate_cFv();
extern "C" void executeDemoRanail2__13daTagTWGate_cFv();
extern "C" void initDemoRanail3__13daTagTWGate_cFv();
extern "C" void executeDemoRanail3__13daTagTWGate_cFv();
extern "C" void initDemoHyral1__13daTagTWGate_cFv();
extern "C" void executeDemoHyral1__13daTagTWGate_cFv();
extern "C" void initDemoHyral2__13daTagTWGate_cFv();
extern "C" void executeDemoHyral2__13daTagTWGate_cFv();
extern "C" void initDemoHyral3__13daTagTWGate_cFv();
extern "C" void executeDemoHyral3__13daTagTWGate_cFv();
extern "C" void initBaseMtx__13daTagTWGate_cFv();
extern "C" void downloadModels__13daTagTWGate_cFv();
extern "C" void initTalk__13daTagTWGate_cFiPP10fopAc_ac_c();
extern "C" void talkProc__13daTagTWGate_cFPiiPP10fopAc_ac_c();
extern "C" void createHeapCallBack__13daTagTWGate_cFP10fopAc_ac_c();
extern "C" void CreateHeap__13daTagTWGate_cFv();
extern "C" static void daTagTWGate_Create__FP10fopAc_ac_c();
extern "C" static void daTagTWGate_Delete__FP13daTagTWGate_c();
extern "C" static void daTagTWGate_Execute__FP13daTagTWGate_c();
extern "C" static void daTagTWGate_Draw__FP13daTagTWGate_c();
extern "C" static bool daTagTWGate_IsDelete__FP13daTagTWGate_c();
extern "C" void __sinit_d_a_tag_TWgate_cpp();
extern "C" u8 const mAttr__13daTagTWGate_c[1 + 3 /* padding */];
extern "C" extern char const* const d_a_tag_TWgate__stringBase0;
extern "C" u8 ActionTable__13daTagTWGate_c[312];
extern "C" extern void* g_profile_Tag_TWGate[12];

//
// External References:
//

extern "C" void mDoMtx_YrotM__FPA4_fs();
extern "C" void transS__14mDoMtx_stack_cFRC4cXyz();
extern "C" void transM__14mDoMtx_stack_cFfff();
extern "C" void
__ct__16mDoExt_McaMorfSOFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiP10Z2CreatureUlUl();
extern "C" void play__16mDoExt_McaMorfSOFUlSc();
extern "C" void entryDL__16mDoExt_McaMorfSOFv();
extern "C" void modelCalc__16mDoExt_McaMorfSOFv();
extern "C" void stopZelAnime__16mDoExt_McaMorfSOFv();
extern "C" void __ct__10fopAc_ac_cFv();
extern "C" void __dt__10fopAc_ac_cFv();
extern "C" void fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl();
extern "C" void fopAcM_searchActorDistanceXZ2__FPC10fopAc_ac_cPC10fopAc_ac_c();
extern "C" void fopAcM_orderChangeEventId__FP10fopAc_ac_csUsUs();
extern "C" void fopAcM_orderOtherEventId__FP10fopAc_ac_csUcUsUsUs();
extern "C" void dComIfG_resLoad__FP30request_of_phase_process_classPCc();
extern "C" void dComIfG_resDelete__FP30request_of_phase_process_classPCc();
extern "C" void dComIfGp_setNextStage__FPCcsScSc();
extern "C" void isDarkClearLV__21dSv_player_status_b_cCFi();
extern "C" void onEventBit__11dSv_event_cFUs();
extern "C" void onSwitch__10dSv_info_cFii();
extern "C" void isSwitch__10dSv_info_cCFii();
extern "C" void getRes__14dRes_control_cFPCclP11dRes_info_ci();
extern "C" void reset__14dEvt_control_cFv();
extern "C" void reset__14dEvt_control_cFPv();
extern "C" void dEv_noFinishSkipProc__FPvi();
extern "C" void setSkipProc__14dEvt_control_cFPvPFPvi_ii();
extern "C" void onSkipFade__14dEvt_control_cFv();
extern "C" void setObjectArchive__16dEvent_manager_cFPc();
extern "C" void getEventIdx__16dEvent_manager_cFP10fopAc_ac_cPCcUc();
extern "C" void endCheck__16dEvent_manager_cFs();
extern "C" void getMyStaffId__16dEvent_manager_cFPCcP10fopAc_ac_ci();
extern "C" void getIsAddvance__16dEvent_manager_cFi();
extern "C" void getMyNowCutName__16dEvent_manager_cFi();
extern "C" void cutEnd__16dEvent_manager_cFi();
extern "C" void
set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf();
extern "C" void offMsgSendControl__12dMsgObject_cFv();
extern "C" void isMsgSendControl__12dMsgObject_cFv();
extern "C" void __ct__10dMsgFlow_cFv();
extern "C" void __dt__10dMsgFlow_cFv();
extern "C" void init__10dMsgFlow_cFP10fopAc_ac_ciiPP10fopAc_ac_c();
extern "C" void doFlow__10dMsgFlow_cFP10fopAc_ac_cPP10fopAc_ac_ci();
extern "C" void getMsgNo__10dMsgFlow_cFv();
extern "C" void getMsg__10dMsgFlow_cFv();
extern "C" void __ct__5csXyzFsss();
extern "C" void seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc();
extern "C" void seStartLevel__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc();
extern "C" void* __nw__FUl();
extern "C" void __ptmf_scall();
extern "C" void _savegpr_26();
extern "C" void _savegpr_27();
extern "C" void _savegpr_28();
extern "C" void _savegpr_29();
extern "C" void _restgpr_26();
extern "C" void _restgpr_27();
extern "C" void _restgpr_28();
extern "C" void _restgpr_29();
extern "C" u8 saveBitLabels__16dSv_event_flag_c[1644 + 4 /* padding */];
extern "C" u8 now__14mDoMtx_stack_c[48];
extern "C" u8 mAudioMgrPtr__10Z2AudioMgr[4 + 4 /* padding */];

//
// Declarations:
//

/* 80D525F8-80D52604 000078 000C+00 1/0 0/0 0/0 .text            initWait__13daTagTWGate_cFv */
void daTagTWGate_c::initWait() {
    mEventID = -1;
}

/* ############################################################################################## */
/* 80D55848-80D55852 00009C 000A+00 4/3 0/0 0/0 .rodata          None */
extern "C" char const* const stringBase_80D55848;

/* 80D55852-80D55861 0000A6 000F+00 1/0 0/0 0/0 .rodata          None */
extern "C" char const* const stringBase_80D55852;

/* 80D55861-80D55875 0000B5 0014+00 1/0 0/0 0/0 .rodata          None */
extern "C" char const* const stringBase_80D55861;

/* 80D55875-80D55887 0000C9 0012+00 1/0 0/0 0/0 .rodata          None */
extern "C" char const* const stringBase_80D55875;

/* 80D55887-80D5588F 0000DB 0008+00 1/0 0/0 0/0 .rodata          None */
extern "C" char const* const stringBase_80D55887;

/* 80D5588F-80D55899 0000E3 000A+00 1/0 0/0 0/0 .rodata          None */
extern "C" char const* const stringBase_80D5588F;

/* 80D55899-80D558A7 0000ED 000E+00 1/0 0/0 0/0 .rodata          None */
extern "C" char const* const stringBase_80D55899;

/* 80D558A7-80D558BA 0000FB 0013+00 1/0 0/0 0/0 .rodata          None */
extern "C" char const* const stringBase_80D558A7;

/* 80D558BA-80D558CB 00010E 0011+00 1/0 0/0 0/0 .rodata          None */
extern "C" char const* const stringBase_80D558BA;

/* 80D558CB-80D558D3 00011F 0008+00 1/0 0/0 0/0 .rodata          None */
extern "C" char const* const stringBase_80D558CB;

/* 80D558D3-80D558DD 000127 000A+00 1/0 0/0 0/0 .rodata          None */
extern "C" char const* const stringBase_80D558D3;

/* 80D558DD-80D558EC 000131 000F+00 1/0 0/0 0/0 .rodata          None */
extern "C" char const* const stringBase_80D558DD;

/* 80D558EC-80D55900 000140 0014+00 1/0 0/0 0/0 .rodata          None */
extern "C" char const* const stringBase_80D558EC;

/* 80D55900-80D55912 000154 0012+00 1/0 0/0 0/0 .rodata          None */
extern "C" char const* const stringBase_80D55900;

/* 80D55912-80D5591C 000166 000A+00 1/0 0/0 0/0 .rodata          None */
extern "C" char const* const stringBase_80D55912;

/* 80D5591C-80D5592A 000170 000E+00 1/0 0/0 0/0 .rodata          None */
extern "C" char const* const stringBase_80D5591C;

/* 80D5592A-80D5593D 00017E 0013+00 1/0 0/0 0/0 .rodata          None */
extern "C" char const* const stringBase_80D5592A;

/* 80D5593D-80D5594E 000191 0011+00 1/0 0/0 0/0 .rodata          None */
extern "C" char const* const stringBase_80D5593D;

/* 80D557AC-80D557B0 000000 0001+03 5/5 0/0 0/0 .rodata          mAttr__13daTagTWGate_c */
SECTION_RODATA u8 const daTagTWGate_c::mAttr[1 + 3 /* padding */] = {
    0x00,
    /* padding */
    0x00,
    0x00,
    0x00,
};
COMPILER_STRIP_GATE(0x80D557AC, &daTagTWGate_c::mAttr);

/* 80D557B0-80D55820 -00001 0070+00 14/18 0/0 0/0 .rodata          l_zevParamTbl */
SECTION_RODATA static daTagTWGate_zevParam const l_zevParamTbl[4] = {
    {
        "TWGate_FL",
        "TW_GATE_FILONE",
        "TW_GATE_FILONE_TALK",
        "TW_GATE_FILONE_IN",
        0,
        "F_SP108",
        23,
        0,
        10,
    },
    {
        "TWGate_OD",
        "TW_GATE_ORDIN",
        "TW_GATE_ORDIN_TALK",
        "TW_GATE_ORDIN_IN",
        1,
        "F_SP121",
        10,
        2,
        14,
    },
    {
        "TWGate_RN",
        "TW_GATE_RANAIL",
        "TW_GATE_RANAIL_TALK",
        "TW_GATE_RANAIL_IN",
        2,
        "F_SP121",
        10,
        9,
        14,
    },
    {
        "TWGate_HY",
        "TW_GATE_HYRAL",
        "TW_GATE_HYRAL_TALK",
        "TW_GATE_HYRAL_IN",
        4,
        "F_SP121",
        10,
        2,
        14,
    },
};
COMPILER_STRIP_GATE(0x80D557B0, &l_zevParamTbl);

/* 80D55820-80D55824 000074 0004+00 1/1 0/0 0/0 .rodata          @3857 */
SECTION_RODATA static f32 const lit_3857 = 100.0f;
COMPILER_STRIP_GATE(0x80D55820, &lit_3857);

/* 80D55824-80D5582C 000078 0008+00 1/1 0/0 0/0 .rodata          @3858 */
SECTION_RODATA static u8 const lit_3858[8] = {
    0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
COMPILER_STRIP_GATE(0x80D55824, &lit_3858);

/* 80D55848-80D55848 00009C 0000+00 0/0 0/0 0/0 .rodata          @stringBase0 */
#pragma push
#pragma force_active on
SECTION_DEAD static char const* const stringBase_80D55848 = "TWGate_FL";
SECTION_DEAD static char const* const stringBase_80D55852 = "TW_GATE_FILONE";
SECTION_DEAD static char const* const stringBase_80D55861 = "TW_GATE_FILONE_TALK";
SECTION_DEAD static char const* const stringBase_80D55875 = "TW_GATE_FILONE_IN";
SECTION_DEAD static char const* const stringBase_80D55887 = "F_SP108";
SECTION_DEAD static char const* const stringBase_80D5588F = "TWGate_OD";
SECTION_DEAD static char const* const stringBase_80D55899 = "TW_GATE_ORDIN";
SECTION_DEAD static char const* const stringBase_80D558A7 = "TW_GATE_ORDIN_TALK";
SECTION_DEAD static char const* const stringBase_80D558BA = "TW_GATE_ORDIN_IN";
SECTION_DEAD static char const* const stringBase_80D558CB = "F_SP121";
SECTION_DEAD static char const* const stringBase_80D558D3 = "TWGate_RN";
SECTION_DEAD static char const* const stringBase_80D558DD = "TW_GATE_RANAIL";
SECTION_DEAD static char const* const stringBase_80D558EC = "TW_GATE_RANAIL_TALK";
SECTION_DEAD static char const* const stringBase_80D55900 = "TW_GATE_RANAIL_IN";
SECTION_DEAD static char const* const stringBase_80D55912 = "TWGate_HY";
SECTION_DEAD static char const* const stringBase_80D5591C = "TW_GATE_HYRAL";
SECTION_DEAD static char const* const stringBase_80D5592A = "TW_GATE_HYRAL_TALK";
SECTION_DEAD static char const* const stringBase_80D5593D = "TW_GATE_HYRAL_IN";
SECTION_DEAD static char const* const stringBase_80D5594E = "Gate";
#pragma pop

/* 80D55974-80D55980 000000 000C+00 1/1 0/0 0/0 .data            cNullVec__6Z2Calc */
SECTION_DATA static u8 cNullVec__6Z2Calc[12] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80D55980-80D55994 00000C 0004+10 0/0 0/0 0/0 .data            @1787 */
#pragma push
#pragma force_active on
SECTION_DATA static u32 lit_1787[1 + 4 /* padding */] = {
    0x02000201,
    /* padding */
    0x40080000,
    0x00000000,
    0x3FE00000,
    0x00000000,
};
#pragma pop

/* 80D55994-80D55998 -00001 0004+00 12/12 0/0 0/0 .data            l_myName */
SECTION_DATA static const char* l_myName = "Gate";

/* 80D55AD0-80D55C08 00015C 0138+00 14/15 0/0 0/0 .data            ActionTable__13daTagTWGate_c */
SECTION_DATA actionFunc daTagTWGate_c::ActionTable[13][2] = {
    {&daTagTWGate_c::initWait, &daTagTWGate_c::executeWait},
    {&daTagTWGate_c::initDemoFilone1, &daTagTWGate_c::executeDemoFilone1},
    {&daTagTWGate_c::initDemoFilone2, &daTagTWGate_c::executeDemoFilone2},
    {&daTagTWGate_c::initDemoFilone3, &daTagTWGate_c::executeDemoFilone3},
    {&daTagTWGate_c::initDemoOrdin1, &daTagTWGate_c::executeDemoOrdin1},
    {&daTagTWGate_c::initDemoOrdin2, &daTagTWGate_c::executeDemoOrdin2},
    {&daTagTWGate_c::initDemoOrdin3, &daTagTWGate_c::executeDemoOrdin3},
    {&daTagTWGate_c::initDemoRanail1, &daTagTWGate_c::executeDemoRanail1},
    {&daTagTWGate_c::initDemoRanail2, &daTagTWGate_c::executeDemoRanail2},
    {&daTagTWGate_c::initDemoRanail3, &daTagTWGate_c::executeDemoRanail3},
    {&daTagTWGate_c::initDemoHyral1, &daTagTWGate_c::executeDemoHyral1},
    {&daTagTWGate_c::initDemoHyral2, &daTagTWGate_c::executeDemoHyral2},
    {&daTagTWGate_c::initDemoHyral3, &daTagTWGate_c::executeDemoHyral3},
};

/* 80D52604-80D528F0 000084 02EC+00 1/0 0/0 0/0 .text            executeWait__13daTagTWGate_cFv */
void daTagTWGate_c::executeWait() {
    f32 radius = pow(mScale.x * 100.0f, 2.0f);
    f32 distance = fopAcM_searchActorDistanceXZ2(this, (fopAc_ac_c*)dComIfGp_getPlayer(0));

    if (distance < radius) {
        if (field_0x5de == 0) {
            field_0x5de = 1;

            switch (mType) {
            case TYPE_FILONE:
                if (i_fopAcM_isSwitch(this, getSwitch())) {
                    mActionID = ACT_DEMO_FILONE_2;
                    mAction = &ActionTable[mActionID][0];
                    (this->**mAction)();
                } else {
                    mActionID = ACT_DEMO_FILONE_1;
                    mAction = &ActionTable[mActionID][0];
                    (this->**mAction)();
                }
                break;
            case TYPE_ORDIN:
                if (i_fopAcM_isSwitch(this, getSwitch())) {
                    mActionID = ACT_DEMO_ORDIN_2;
                    mAction = &ActionTable[mActionID][0];
                    (this->**mAction)();
                } else {
                    mActionID = ACT_DEMO_ORDIN_1;
                    mAction = &ActionTable[mActionID][0];
                    (this->**mAction)();
                }
                break;
            case TYPE_RANAIL:
                if (i_fopAcM_isSwitch(this, getSwitch())) {
                    mActionID = ACT_DEMO_RANAIL_2;
                    mAction = &ActionTable[mActionID][0];
                    (this->**mAction)();
                } else {
                    mActionID = ACT_DEMO_RANAIL_1;
                    mAction = &ActionTable[mActionID][0];
                    (this->**mAction)();
                }
                break;
            case TYPE_HYRAL:
                if (i_fopAcM_isSwitch(this, getSwitch())) {
                    mActionID = ACT_DEMO_HYRAL_2;
                    mAction = &ActionTable[mActionID][0];
                    (this->**mAction)();
                } else {
                    mActionID = ACT_DEMO_HYRAL_1;
                    mAction = &ActionTable[mActionID][0];
                    (this->**mAction)();
                }
                break;
            }
        }
    } else {
        field_0x5de = 0;
    }
}

/* 80D528F0-80D5297C 000370 008C+00 1/0 0/0 0/0 .text            initDemoFilone1__13daTagTWGate_cFv
 */
void daTagTWGate_c::initDemoFilone1() {
    mEvtInfo.setArchiveName(l_zevParamTbl[mType].mArcName);
    mEventID = i_dComIfGp_getEventManager().getEventIdx(this, l_zevParamTbl[mType].mEventName, -1);
    fopAcM_orderOtherEventId(this, mEventID, -1, -1, 4, 1);
}

/* 80D5297C-80D52AF4 0003FC 0178+00 1/0 0/0 0/0 .text executeDemoFilone1__13daTagTWGate_cFv */
// swapped r30 / r31
#ifdef NONMATCHING
void daTagTWGate_c::executeDemoFilone1() {
    int staffId = i_dComIfGp_evmng_getMyStaffId(l_myName, NULL, 0);

    if (staffId != -1) {
        int* cutName = (int*)i_dComIfGp_getEventManager().getMyNowCutName(staffId);

        if (dComIfGp_evmng_getIsAddvance(staffId)) {
            switch (*cutName) {
            case 0x30303031:
                i_dComIfGp_getEvent().setSkipProc(this, dEv_noFinishSkipProc, 0);
                break;
            }
        }

        switch (*cutName) {
        case 0x30303031:
            if (i_dComIfGp_getEvent().chkFlag2(8)) {
                i_dComIfGp_getEvent().onSkipFade();
                mActionID = ACT_DEMO_FILONE_2;
                mAction = ActionTable[mActionID];
                (this->**mAction)();
            }
            dComIfGp_evmng_cutEnd(staffId);
        }

        if (mEvtInfo.i_checkCommandDemoAccrpt() && mEventID != -1 &&
            dComIfGp_evmng_endCheck(mEventID)) {
            mActionID = ACT_DEMO_FILONE_2;
            mAction = ActionTable[mActionID];
            (this->**mAction)();
        }
    }
}
#else
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daTagTWGate_c::executeDemoFilone1() {
    nofralloc
#include "asm/rel/d/a/tag/d_a_tag_TWgate/d_a_tag_TWgate/executeDemoFilone1__13daTagTWGate_cFv.s"
}
#pragma pop
#endif

/* 80D52AF4-80D52BF0 000574 00FC+00 1/0 0/0 0/0 .text            initDemoFilone2__13daTagTWGate_cFv
 */
#ifdef NONMATCHING
void daTagTWGate_c::initDemoFilone2() {
    i_fopAcM_onSwitch(this, getSwitch());
    mEvtInfo.setArchiveName(l_zevParamTbl[mType].mArcName);
    i_dComIfGp_getEventManager().setObjectArchive(mEvtInfo.getArchiveName());
    mEventID =
        i_dComIfGp_getEventManager().getEventIdx(this, l_zevParamTbl[mType].mTalkEventName, -1);

    if (g_dComIfG_gameInfo.play.mEvent.mEventStatus != 0) {
        i_dComIfGp_getEvent().reset(this);
        fopAcM_orderChangeEventId(this, mEventID, 1, -1);
    } else {
        fopAcM_orderOtherEventId(this, mEventID, -1, -1, 4, 1);
    }
}
#else
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daTagTWGate_c::initDemoFilone2() {
    nofralloc
#include "asm/rel/d/a/tag/d_a_tag_TWgate/d_a_tag_TWgate/initDemoFilone2__13daTagTWGate_cFv.s"
}
#pragma pop
#endif

/* 80D52BF0-80D52DB4 000670 01C4+00 1/0 0/0 0/0 .text executeDemoFilone2__13daTagTWGate_cFv */
void daTagTWGate_c::executeDemoFilone2() {
    s32 staffId = i_dComIfGp_evmng_getMyStaffId(l_myName, NULL, 0);

    if (staffId != -1) {
        int* cutName = (int*)i_dComIfGp_getEventManager().getMyNowCutName(staffId);

        if (dComIfGp_evmng_getIsAddvance(staffId)) {
            switch (*cutName) {
            case '0002':
                initTalk(0xBC1, NULL);
                break;
            case '0001':
            case '0003':
                break;
            }
        }

        switch (*cutName) {
        case '0001':
        case '0003':
            dComIfGp_evmng_cutEnd(staffId);
            break;
        case '0002':
            if (talkProc(NULL, 1, NULL)) {
                if (mMsgFlow.getChoiceNo() == 0) {
                    mActionID = ACT_DEMO_FILONE_3;
                    mAction = ActionTable[mActionID];
                    (this->**mAction)();
                }
                dComIfGp_evmng_cutEnd(staffId);
            }
            break;
        }

        if (mEvtInfo.i_checkCommandDemoAccrpt() && mEventID != -1 &&
            dComIfGp_evmng_endCheck(mEventID)) {
            i_dComIfGp_getEvent().reset();
            field_0x5e0 = 0;
            mActionID = ACT_WAIT;
            mAction = ActionTable[mActionID];
            (this->**mAction)();
        }
    }
}

/* 80D52DB4-80D52E7C 000834 00C8+00 1/0 0/0 0/0 .text            initDemoFilone3__13daTagTWGate_cFv
 */
void daTagTWGate_c::initDemoFilone3() {
    field_0x5de = 1;
    mIsWolf = (dComIfGp_getLinkPlayer()->mNoResetFlg1 >> 25) & 1;  // checking if wolf?
    mEvtInfo.setArchiveName(l_zevParamTbl[mType].mArcName);
    i_dComIfGp_getEventManager().setObjectArchive(mEvtInfo.getArchiveName());
    mEventID =
        i_dComIfGp_getEventManager().getEventIdx(this, l_zevParamTbl[mType].mInEventName, -1);
    i_dComIfGp_getEvent().reset(this);
    fopAcM_orderChangeEventId(this, mEventID, 1, -1);
}

/* ############################################################################################## */
/* 80D5582C-80D55830 000080 0004+00 1/5 0/0 0/0 .rodata          @4079 */
SECTION_RODATA static f32 const lit_4079 = 1.0f;
COMPILER_STRIP_GATE(0x80D5582C, &lit_4079);

/* 80D55830-80D55834 000084 0004+00 1/6 0/0 0/0 .rodata          @4080 */
SECTION_RODATA static u8 const lit_4080[4] = {
    0x00,
    0x00,
    0x00,
    0x00,
};
COMPILER_STRIP_GATE(0x80D55830, &lit_4080);

/* 80D55834-80D55838 000088 0004+00 0/4 0/0 0/0 .rodata          @4081 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_4081 = 240.0f;
COMPILER_STRIP_GATE(0x80D55834, &lit_4081);
#pragma pop

/* 80D55838-80D5583C 00008C 0004+00 0/4 0/0 0/0 .rodata          @4082 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_4082 = -710.0f;
COMPILER_STRIP_GATE(0x80D55838, &lit_4082);
#pragma pop

/* 80D5583C-80D55840 000090 0004+00 1/5 0/0 0/0 .rodata          @4083 */
SECTION_RODATA static f32 const lit_4083 = -1.0f;
COMPILER_STRIP_GATE(0x80D5583C, &lit_4083);

/* 80D52E7C-80D53250 0008FC 03D4+00 1/0 0/0 0/0 .text executeDemoFilone3__13daTagTWGate_cFv */
// matches without literals
#ifdef NONMATCHING
void daTagTWGate_c::executeDemoFilone3() {
    s32 staffId = i_dComIfGp_evmng_getMyStaffId(l_myName, NULL, 0);

    if (staffId != -1) {
        int* cutName = (int*)i_dComIfGp_getEventManager().getMyNowCutName(staffId);

        if (dComIfGp_evmng_getIsAddvance(staffId)) {
            switch (*cutName) {
            case 0x30303031:
                break;
            case 0x30303032:
                i_dComIfGp_getEvent().setSkipProc(this, dEv_noFinishSkipProc, 0);
                field_0x5e1 = 0;
                break;
            case 0x30303033:
                initBaseMtx();
                mpMorf->setPlaySpeed(1.0f);
                field_0x5e0 = 1;
                break;
            }
        }

        switch (*cutName) {
        case 0x30303031:
            int modelSts = downloadModels();
            if (modelSts == 1) {
                dComIfGp_evmng_cutEnd(staffId);
            } else if (modelSts == -1) {
                dComIfGp_setNextStage(l_zevParamTbl[mType].mStage,
                                      l_zevParamTbl[mType].mPoint,
                                      l_zevParamTbl[mType].mRoomNo,
                                      l_zevParamTbl[mType].mLayer);
            }
            break;
        case 0x30303032:
            if (i_dComIfGp_getEvent().chkFlag2(8)) {
                i_dComIfGp_getEvent().onSkipFade();
                dComIfGp_setNextStage(l_zevParamTbl[mType].mStage,
                                      l_zevParamTbl[mType].mPoint,
                                      l_zevParamTbl[mType].mRoomNo,
                                      l_zevParamTbl[mType].mLayer);
            }

            u8 old_5e1 = field_0x5e1;
            field_0x5e1++;

            if (old_5e1 == 43) {
                daPy_py_c* player = daPy_getPlayerActorClass();
                csXyz sxyz(0, player->shape_angle.y + 0x8000, 0);

                mDoMtx_stack_c::transS(player->current.pos);
                mDoMtx_stack_c::YrotM(sxyz.y);
                mDoMtx_stack_c::transM(0.0f, 240.0f, -710.0f);
                
                cXyz pos;
                pos.x = mDoMtx_stack_c::get()[0][3];
                pos.y = mDoMtx_stack_c::get()[1][3];
                pos.z = mDoMtx_stack_c::get()[2][3];
                dComIfGp_particle_set(0x86C5, &pos, &sxyz, NULL);
                mDoAud_seStart(Z2SE_OBJ_DARK_GATE_RIPPLE, &pos, 0, 0);
                dComIfGp_evmng_cutEnd(staffId);
            }
            break;
        case 0x30303033:
            if (i_dComIfGp_getEvent().chkFlag2(8)) {
                i_dComIfGp_getEvent().onSkipFade();
                dComIfGp_setNextStage(l_zevParamTbl[mType].mStage,
                                      l_zevParamTbl[mType].mPoint,
                                      l_zevParamTbl[mType].mRoomNo,
                                      l_zevParamTbl[mType].mLayer);
            }

            if (mpMorf->isStop()) {
                dComIfGp_evmng_cutEnd(staffId);
            }
            break;
        }

        if (mEvtInfo.i_checkCommandDemoAccrpt() && mEventID != -1 &&
            dComIfGp_evmng_endCheck(mEventID)) {
            i_dComIfGp_getEvent().reset();
            field_0x5e0 = 0;
            mActionID = ACT_WAIT;
            mAction = ActionTable[mActionID];
            (this->**mAction)();
        }
    }
}
#else
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daTagTWGate_c::executeDemoFilone3() {
    nofralloc
#include "asm/rel/d/a/tag/d_a_tag_TWgate/d_a_tag_TWgate/executeDemoFilone3__13daTagTWGate_cFv.s"
}
#pragma pop
#endif

/* 80D53250-80D532DC 000CD0 008C+00 1/0 0/0 0/0 .text            initDemoOrdin1__13daTagTWGate_cFv
 */
void daTagTWGate_c::initDemoOrdin1() {
    mEvtInfo.setArchiveName(l_zevParamTbl[mType].mArcName);
    mEventID = i_dComIfGp_getEventManager().getEventIdx(this, l_zevParamTbl[mType].mEventName, -1);
    fopAcM_orderOtherEventId(this, mEventID, -1, -1, 4, 1);
}

/* 80D532DC-80D53454 000D5C 0178+00 1/0 0/0 0/0 .text executeDemoOrdin1__13daTagTWGate_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daTagTWGate_c::executeDemoOrdin1() {
    nofralloc
#include "asm/rel/d/a/tag/d_a_tag_TWgate/d_a_tag_TWgate/executeDemoOrdin1__13daTagTWGate_cFv.s"
}
#pragma pop

/* 80D53454-80D53550 000ED4 00FC+00 1/0 0/0 0/0 .text            initDemoOrdin2__13daTagTWGate_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daTagTWGate_c::initDemoOrdin2() {
    nofralloc
#include "asm/rel/d/a/tag/d_a_tag_TWgate/d_a_tag_TWgate/initDemoOrdin2__13daTagTWGate_cFv.s"
}
#pragma pop

/* 80D53550-80D53714 000FD0 01C4+00 1/0 0/0 0/0 .text executeDemoOrdin2__13daTagTWGate_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daTagTWGate_c::executeDemoOrdin2() {
    nofralloc
#include "asm/rel/d/a/tag/d_a_tag_TWgate/d_a_tag_TWgate/executeDemoOrdin2__13daTagTWGate_cFv.s"
}
#pragma pop

/* 80D53714-80D537DC 001194 00C8+00 1/0 0/0 0/0 .text            initDemoOrdin3__13daTagTWGate_cFv
 */
void daTagTWGate_c::initDemoOrdin3() {
    field_0x5de = 1;
    mIsWolf = (dComIfGp_getLinkPlayer()->mNoResetFlg1 >> 25) & 1;  // checking if wolf?
    mEvtInfo.setArchiveName(l_zevParamTbl[mType].mArcName);
    i_dComIfGp_getEventManager().setObjectArchive(mEvtInfo.getArchiveName());
    mEventID =
        i_dComIfGp_getEventManager().getEventIdx(this, l_zevParamTbl[mType].mInEventName, -1);
    i_dComIfGp_getEvent().reset(this);
    fopAcM_orderChangeEventId(this, mEventID, 1, -1);
}

/* 80D537DC-80D53BD0 00125C 03F4+00 1/0 0/0 0/0 .text executeDemoOrdin3__13daTagTWGate_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daTagTWGate_c::executeDemoOrdin3() {
    nofralloc
#include "asm/rel/d/a/tag/d_a_tag_TWgate/d_a_tag_TWgate/executeDemoOrdin3__13daTagTWGate_cFv.s"
}
#pragma pop

/* 80D53BD0-80D53C5C 001650 008C+00 1/0 0/0 0/0 .text            initDemoRanail1__13daTagTWGate_cFv
 */
void daTagTWGate_c::initDemoRanail1() {
    mEvtInfo.setArchiveName(l_zevParamTbl[mType].mArcName);
    mEventID = i_dComIfGp_getEventManager().getEventIdx(this, l_zevParamTbl[mType].mEventName, -1);
    fopAcM_orderOtherEventId(this, mEventID, -1, -1, 4, 1);
}

/* 80D53C5C-80D53DD4 0016DC 0178+00 1/0 0/0 0/0 .text executeDemoRanail1__13daTagTWGate_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daTagTWGate_c::executeDemoRanail1() {
    nofralloc
#include "asm/rel/d/a/tag/d_a_tag_TWgate/d_a_tag_TWgate/executeDemoRanail1__13daTagTWGate_cFv.s"
}
#pragma pop

/* 80D53DD4-80D53ED0 001854 00FC+00 1/0 0/0 0/0 .text            initDemoRanail2__13daTagTWGate_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daTagTWGate_c::initDemoRanail2() {
    nofralloc
#include "asm/rel/d/a/tag/d_a_tag_TWgate/d_a_tag_TWgate/initDemoRanail2__13daTagTWGate_cFv.s"
}
#pragma pop

/* 80D53ED0-80D54094 001950 01C4+00 1/0 0/0 0/0 .text executeDemoRanail2__13daTagTWGate_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daTagTWGate_c::executeDemoRanail2() {
    nofralloc
#include "asm/rel/d/a/tag/d_a_tag_TWgate/d_a_tag_TWgate/executeDemoRanail2__13daTagTWGate_cFv.s"
}
#pragma pop

/* 80D54094-80D54178 001B14 00E4+00 1/0 0/0 0/0 .text            initDemoRanail3__13daTagTWGate_cFv
 */
void daTagTWGate_c::initDemoRanail3() {
    field_0x5de = 1;
    mIsWolf = (dComIfGp_getLinkPlayer()->mNoResetFlg1 >> 25) & 1;  // checking if wolf?
    mEvtInfo.setArchiveName(l_zevParamTbl[mType].mArcName);
    i_dComIfGp_getEventManager().setObjectArchive(mEvtInfo.getArchiveName());
    mEventID =
        i_dComIfGp_getEventManager().getEventIdx(this, l_zevParamTbl[mType].mInEventName, -1);
    i_dComIfGp_getEvent().reset(this);
    fopAcM_orderChangeEventId(this, mEventID, 1, -1);
    dComIfGs_onEventBit(dSv_event_flag_c::saveBitLabels[170]);
}

/* 80D54178-80D5456C 001BF8 03F4+00 1/0 0/0 0/0 .text executeDemoRanail3__13daTagTWGate_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daTagTWGate_c::executeDemoRanail3() {
    nofralloc
#include "asm/rel/d/a/tag/d_a_tag_TWgate/d_a_tag_TWgate/executeDemoRanail3__13daTagTWGate_cFv.s"
}
#pragma pop

/* 80D5456C-80D545F8 001FEC 008C+00 1/0 0/0 0/0 .text            initDemoHyral1__13daTagTWGate_cFv
 */
void daTagTWGate_c::initDemoHyral1() {
    mEvtInfo.setArchiveName(l_zevParamTbl[mType].mArcName);
    mEventID = i_dComIfGp_getEventManager().getEventIdx(this, l_zevParamTbl[mType].mEventName, -1);
    fopAcM_orderOtherEventId(this, mEventID, -1, -1, 4, 1);
}

/* 80D545F8-80D54770 002078 0178+00 1/0 0/0 0/0 .text executeDemoHyral1__13daTagTWGate_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daTagTWGate_c::executeDemoHyral1() {
    nofralloc
#include "asm/rel/d/a/tag/d_a_tag_TWgate/d_a_tag_TWgate/executeDemoHyral1__13daTagTWGate_cFv.s"
}
#pragma pop

/* 80D54770-80D5486C 0021F0 00FC+00 1/0 0/0 0/0 .text            initDemoHyral2__13daTagTWGate_cFv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daTagTWGate_c::initDemoHyral2() {
    nofralloc
#include "asm/rel/d/a/tag/d_a_tag_TWgate/d_a_tag_TWgate/initDemoHyral2__13daTagTWGate_cFv.s"
}
#pragma pop

/* 80D5486C-80D54A30 0022EC 01C4+00 1/0 0/0 0/0 .text executeDemoHyral2__13daTagTWGate_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daTagTWGate_c::executeDemoHyral2() {
    nofralloc
#include "asm/rel/d/a/tag/d_a_tag_TWgate/d_a_tag_TWgate/executeDemoHyral2__13daTagTWGate_cFv.s"
}
#pragma pop

/* 80D54A30-80D54AF8 0024B0 00C8+00 1/0 0/0 0/0 .text            initDemoHyral3__13daTagTWGate_cFv
 */
void daTagTWGate_c::initDemoHyral3() {
    field_0x5de = 1;
    mIsWolf = (dComIfGp_getLinkPlayer()->mNoResetFlg1 >> 25) & 1;  // checking if wolf?
    mEvtInfo.setArchiveName(l_zevParamTbl[mType].mArcName);
    i_dComIfGp_getEventManager().setObjectArchive(mEvtInfo.getArchiveName());
    mEventID =
        i_dComIfGp_getEventManager().getEventIdx(this, l_zevParamTbl[mType].mInEventName, -1);
    i_dComIfGp_getEvent().reset(this);
    fopAcM_orderChangeEventId(this, mEventID, 1, -1);
}

/* 80D54AF8-80D54ECC 002578 03D4+00 1/0 0/0 0/0 .text executeDemoHyral3__13daTagTWGate_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daTagTWGate_c::executeDemoHyral3() {
    nofralloc
#include "asm/rel/d/a/tag/d_a_tag_TWgate/d_a_tag_TWgate/executeDemoHyral3__13daTagTWGate_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 80D55840-80D55844 000094 0004+00 0/1 0/0 0/0 .rodata          @4790 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_4790 = 250.0f;
COMPILER_STRIP_GATE(0x80D55840, &lit_4790);
#pragma pop

/* 80D55844-80D55848 000098 0004+00 0/1 0/0 0/0 .rodata          @4791 */
#pragma push
#pragma force_active on
SECTION_RODATA static f32 const lit_4791 = -840.0f;
COMPILER_STRIP_GATE(0x80D55844, &lit_4791);
#pragma pop

/* 80D54ECC-80D54F88 00294C 00BC+00 4/4 0/0 0/0 .text            initBaseMtx__13daTagTWGate_cFv */
// matches with literals
#ifdef NONMATCHING
void daTagTWGate_c::initBaseMtx() {
    mCullMtx = mpMorf->getModel()->getBaseTRMtx();
    fopAc_ac_c* player = (fopAc_ac_c*)dComIfGp_getPlayer(0);

    shape_angle.y = player->shape_angle.y + 0x8000;
    mDoMtx_stack_c::transS(player->current.pos);
    mDoMtx_stack_c::YrotM(shape_angle.y);
    mDoMtx_stack_c::transM(0.0f, 250.0f, -840.0f);

    current.pos.x = mDoMtx_stack_c::get()[0][3];
    current.pos.y = mDoMtx_stack_c::get()[1][3];
    current.pos.z = mDoMtx_stack_c::get()[2][3];

    mpMorf->getModel()->i_setBaseTRMtx(mDoMtx_stack_c::get());
}
#else
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daTagTWGate_c::initBaseMtx() {
    nofralloc
#include "asm/rel/d/a/tag/d_a_tag_TWgate/d_a_tag_TWgate/initBaseMtx__13daTagTWGate_cFv.s"
}
#pragma pop
#endif

/* 80D54F88-80D5502C 002A08 00A4+00 4/4 0/0 0/0 .text            downloadModels__13daTagTWGate_cFv
 */
int daTagTWGate_c::downloadModels() {
    int phase_state = dComIfG_resLoad(&mPhaseMdRes, "TWGate_Md");

    if (phase_state == cPhs_COMPLEATE_e) {
        phase_state = dComIfG_resLoad(&mPhasePyRes, mIsWolf ? "TWGate_Wf" : "TWGate_Lk");
    }

    if (phase_state == cPhs_COMPLEATE_e) {
        if (fopAcM_entrySolidHeap(this, createHeapCallBack, 0x3140)) {
            return 1;
        } else {
            return -1;
        }
    }

    return phase_state == cPhs_ERROR_e ? -1 : 0;
}

/* 80D5502C-80D55068 002AAC 003C+00 4/4 0/0 0/0 .text initTalk__13daTagTWGate_cFiPP10fopAc_ac_c */
void daTagTWGate_c::initTalk(int param_0, fopAc_ac_c** param_1) {
    mMsgFlow.init(this, param_0, 0, param_1);
}

/* 80D55068-80D55160 002AE8 00F8+00 4/4 0/0 0/0 .text talkProc__13daTagTWGate_cFPiiPP10fopAc_ac_c
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm bool daTagTWGate_c::talkProc(int* param_0, int param_1, fopAc_ac_c** param_2) {
    nofralloc
#include "asm/rel/d/a/tag/d_a_tag_TWgate/d_a_tag_TWgate/talkProc__13daTagTWGate_cFPiiPP10fopAc_ac_c.s"
}
#pragma pop

/* 80D55160-80D55180 002BE0 0020+00 1/1 0/0 0/0 .text
 * createHeapCallBack__13daTagTWGate_cFP10fopAc_ac_c            */
int daTagTWGate_c::createHeapCallBack(fopAc_ac_c* i_actor) {
    return ((daTagTWGate_c*)i_actor)->CreateHeap();
}

/* 80D55180-80D55288 002C00 0108+00 1/1 0/0 0/0 .text            CreateHeap__13daTagTWGate_cFv */
#ifdef NONMATCHING
bool daTagTWGate_c::CreateHeap() {
    J3DModelData* modelData = (J3DModelData*)dComIfG_getObjectRes("TWGate_Md", 7);
    mpMorf = new mDoExt_McaMorfSO(modelData, NULL, NULL,
                                  (J3DAnmTransform*)dComIfG_getObjectRes("TWGate_Md", 4), 0, 0.0f,
                                  0, -1, NULL, 0, 0x11000084);

    mDoExt_McaMorfSO* morf = mpMorf;
    if (morf != NULL && morf->getModel() == NULL) {
        morf->stopZelAnime();
        mpMorf = NULL;
    }

    return mpMorf != NULL;
}
#else
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm int daTagTWGate_c::CreateHeap() {
    nofralloc
#include "asm/rel/d/a/tag/d_a_tag_TWgate/d_a_tag_TWgate/CreateHeap__13daTagTWGate_cFv.s"
}
#pragma pop
#endif

int daTagTWGate_c::create() {
    if (!fopAcM_CheckCondition(this, 8)) {
        new (this) daTagTWGate_c();
        fopAcM_OnCondition(this, 8);
    }

    mType = getType();

    int phase_state;
    if (dComIfGs_isDarkClearLV(l_zevParamTbl[mType].mLv)) {
        phase_state = cPhs_ERROR_e;
    } else {
        phase_state = dComIfG_resLoad(&mPhaseZevArc, l_zevParamTbl[mType].mArcName);
        if (phase_state == cPhs_COMPLEATE_e) {
            create_init();
        }
    }

    return phase_state;
}

/* 80D55288-80D55388 002D08 0100+00 1/0 0/0 0/0 .text            daTagTWGate_Create__FP10fopAc_ac_c
 */
static int daTagTWGate_Create(fopAc_ac_c* i_actor) {
    return ((daTagTWGate_c*)i_actor)->create();
}

inline daTagTWGate_c::~daTagTWGate_c() {
    dComIfG_resDelete(&mPhaseZevArc, l_zevParamTbl[mType].mArcName);

    if (mPhaseMdRes.id != cPhs_ZERO_e) {
        dComIfG_resDelete(&mPhaseMdRes, "TWGate_Md");
    }

    if (mPhasePyRes.id != cPhs_ZERO_e) {
        dComIfG_resDelete(&mPhasePyRes, mIsWolf ? "TWGate_Wf" : "TWGate_Lk");
    }
}

/* 80D55388-80D5543C 002E08 00B4+00 1/0 0/0 0/0 .text daTagTWGate_Delete__FP13daTagTWGate_c */
static int daTagTWGate_Delete(daTagTWGate_c* i_gate) {
    i_gate->~daTagTWGate_c();
    return 1;
}

/* 80D5543C-80D554E4 002EBC 00A8+00 1/0 0/0 0/0 .text daTagTWGate_Execute__FP13daTagTWGate_c */
// matches with literals
#ifdef NONMATCHING
static int daTagTWGate_Execute(daTagTWGate_c* i_gate) {
    return i_gate->execute();
}
#else
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void daTagTWGate_Execute(daTagTWGate_c* param_0) {
    nofralloc
#include "asm/rel/d/a/tag/d_a_tag_TWgate/d_a_tag_TWgate/daTagTWGate_Execute__FP13daTagTWGate_c.s"
}
#pragma pop
#endif

/* 80D554E4-80D55518 002F64 0034+00 1/0 0/0 0/0 .text            daTagTWGate_Draw__FP13daTagTWGate_c
 */
static int daTagTWGate_Draw(daTagTWGate_c* i_gate) {
    return i_gate->draw();
}

/* 80D55518-80D55520 002F98 0008+00 1/0 0/0 0/0 .text daTagTWGate_IsDelete__FP13daTagTWGate_c */
static int daTagTWGate_IsDelete(daTagTWGate_c*) {
    return 1;
}

/* ############################################################################################## */
/* 80D55C08-80D55C28 -00001 0020+00 1/0 0/0 0/0 .data            l_daTagTWGate_Method */
SECTION_DATA static void* l_daTagTWGate_Method[8] = {
    (void*)daTagTWGate_Create__FP10fopAc_ac_c,
    (void*)daTagTWGate_Delete__FP13daTagTWGate_c,
    (void*)daTagTWGate_Execute__FP13daTagTWGate_c,
    (void*)daTagTWGate_IsDelete__FP13daTagTWGate_c,
    (void*)daTagTWGate_Draw__FP13daTagTWGate_c,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
};

/* 80D55C28-80D55C58 -00001 0030+00 0/0 0/0 1/0 .data            g_profile_Tag_TWGate */
SECTION_DATA extern void* g_profile_Tag_TWGate[12] = {
    (void*)0xFFFFFFFD, (void*)0x0007FFFD,
    (void*)0x02C80000, (void*)&g_fpcLf_Method,
    (void*)0x000005E4, (void*)NULL,
    (void*)NULL,       (void*)&g_fopAc_Method,
    (void*)0x01050000, (void*)&l_daTagTWGate_Method,
    (void*)0x00040000, (void*)0x000E0000,
};

/* 80D55848-80D55848 00009C 0000+00 0/0 0/0 0/0 .rodata          @stringBase0 */
