#
# Generated By: dol2asm
#

M708_TARGET := $(BUILD_DIR)/rel/d/a/d_a_swLBall.plf
M708_LDSCRIPT := $(BUILD_DIR)/rel/d/a/d_a_swLBall.lcf
M708_MAP := $(BUILD_DIR)/rel/d/a/d_a_swLBall.map

M708_CPP_FILES := \
	rel/executor.cpp \
	rel/d/a/d_a_swLBall/d_a_swLBall.cpp \

M708_O_FILES := \
	$(BUILD_DIR)/rel/executor.o \
	$(BUILD_DIR)/rel/d/a/d_a_swLBall/d_a_swLBall.o \

M708_LIBS := \

M708_CFLAGS := \
	-sdata 0 \
	-sdata2 0 \

M708_LDFLAGS := \
	-nodefaults \
	-fp hard \
	-proc gekko \
	-linkmode moreram \
	-sdata 0 \
	-sdata2 0 \
	-m _prolog \
	-lcf $(M708_LDSCRIPT) \
	-unused -map $(M708_MAP) \
	-w off \

$(M708_TARGET): $(M708_O_FILES) $(M708_LIBS)
	@echo [708] creating $(M708_TARGET)
	@echo $(M708_LIBS) $(M708_O_FILES) > build/M708_ofiles
	@python3 tools/lcf.py rel 708 --output $(M708_LDSCRIPT)
	@$(LD) -opt_partial -strip_partial $(M708_LDFLAGS) -o $(M708_TARGET) @build/M708_ofiles

$(BUILD_DIR)/rel/d/a/d_a_swLBall/%.o: rel/d/a/d_a_swLBall/%.cpp
	@echo [708] building $@
	@mkdir -p $(@D)
	@iconv -f UTF-8 -t CP932 < $< > $@.iconv.cpp
	@$(CC) $(CFLAGS) $(M708_CFLAGS) -c -o $@ $@.iconv.cpp


