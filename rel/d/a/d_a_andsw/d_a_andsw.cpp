//
// Generated By: dol2asm
// Translation Unit: d_a_andsw
//

#include "rel/d/a/d_a_andsw/d_a_andsw.h"
#include "dol2asm.h"
#include "dolphin/types.h"

//
// Types:
//

struct fopAc_ac_c {
    /* 80018B64 */ fopAc_ac_c();
};

struct daAndsw_c {
    /* 80457978 */ void Create();
    /* 804579B8 */ void create();
    /* 80457A20 */ void execute();
    /* 80457ABC */ bool _delete();
};

struct dSv_info_c {
    /* 800352B0 */ void offSwitch(int, int);
    /* 80035360 */ void isSwitch(int, int) const;
};

//
// Forward References:
//

extern "C" void Create__9daAndsw_cFv();
extern "C" void create__9daAndsw_cFv();
extern "C" void execute__9daAndsw_cFv();
extern "C" bool _delete__9daAndsw_cFv();
extern "C" static void daAndsw_Execute__FP9daAndsw_c();
extern "C" static void daAndsw_Delete__FP9daAndsw_c();
extern "C" static void daAndsw_Create__FP10fopAc_ac_c();
extern "C" extern void* g_profile_ANDSW[12];

//
// External References:
//

extern "C" void __ct__10fopAc_ac_cFv();
extern "C" void fopAcM_delete__FP10fopAc_ac_c();
extern "C" void offSwitch__10dSv_info_cFii();
extern "C" void isSwitch__10dSv_info_cCFii();
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" extern u8 g_dComIfG_gameInfo[122384];

//
// Declarations:
//

/* 80457978-804579B8 000078 0040+00 1/1 0/0 0/0 .text            Create__9daAndsw_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAndsw_c::Create() {
    nofralloc
#include "asm/rel/d/a/d_a_andsw/d_a_andsw/Create__9daAndsw_cFv.s"
}
#pragma pop

/* 804579B8-80457A20 0000B8 0068+00 1/1 0/0 0/0 .text            create__9daAndsw_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAndsw_c::create() {
    nofralloc
#include "asm/rel/d/a/d_a_andsw/d_a_andsw/func_804579B8.s"
}
#pragma pop

/* 80457A20-80457ABC 000120 009C+00 1/1 0/0 0/0 .text            execute__9daAndsw_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAndsw_c::execute() {
    nofralloc
#include "asm/rel/d/a/d_a_andsw/d_a_andsw/execute__9daAndsw_cFv.s"
}
#pragma pop

/* 80457ABC-80457AC4 0001BC 0008+00 1/1 0/0 0/0 .text            _delete__9daAndsw_cFv */
bool daAndsw_c::_delete() {
    return true;
}

/* 80457AC4-80457AE4 0001C4 0020+00 1/0 0/0 0/0 .text            daAndsw_Execute__FP9daAndsw_c */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void daAndsw_Execute(daAndsw_c* param_0) {
    nofralloc
#include "asm/rel/d/a/d_a_andsw/d_a_andsw/daAndsw_Execute__FP9daAndsw_c.s"
}
#pragma pop

/* 80457AE4-80457B04 0001E4 0020+00 1/0 0/0 0/0 .text            daAndsw_Delete__FP9daAndsw_c */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void daAndsw_Delete(daAndsw_c* param_0) {
    nofralloc
#include "asm/rel/d/a/d_a_andsw/d_a_andsw/daAndsw_Delete__FP9daAndsw_c.s"
}
#pragma pop

/* 80457B04-80457B24 000204 0020+00 1/0 0/0 0/0 .text            daAndsw_Create__FP10fopAc_ac_c */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void daAndsw_Create(fopAc_ac_c* param_0) {
    nofralloc
#include "asm/rel/d/a/d_a_andsw/d_a_andsw/daAndsw_Create__FP10fopAc_ac_c.s"
}
#pragma pop

/* ############################################################################################## */
/* 80457B2C-80457B4C -00001 0020+00 1/0 0/0 0/0 .data            l_daAndsw_Method */
SECTION_DATA static void* l_daAndsw_Method[8] = {
    (void*)daAndsw_Create__FP10fopAc_ac_c,
    (void*)daAndsw_Delete__FP9daAndsw_c,
    (void*)daAndsw_Execute__FP9daAndsw_c,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
};

/* 80457B4C-80457B7C -00001 0030+00 0/0 0/0 1/0 .data            g_profile_ANDSW */
SECTION_DATA extern void* g_profile_ANDSW[12] = {
    (void*)0xFFFFFFFD, (void*)0x0007FFFD,
    (void*)0x02300000, (void*)&g_fpcLf_Method,
    (void*)0x0000056C, (void*)NULL,
    (void*)NULL,       (void*)&g_fopAc_Method,
    (void*)0x012E0000, (void*)&l_daAndsw_Method,
    (void*)0x00040000, (void*)0x000E0000,
};
