#ifndef C_REQUEST_H
#define C_REQUEST_H

#include "dolphin/types.h"

struct request_base_class {
    struct {
        u8 flag0 : 1;
        u8 flag1 : 1;
        u8 flag2 : 6;
    } field_0x0;
    u8 field_0x1;
    u8 field_0x2;
    u8 field_0x3;
    u16 field_0x4;
    u8 field_0x6;
    u8 field_0x7;
    u32 field_0x8;
    s8 field_0xc;
    u8 field_0xd;
    u8 field_0xe;
    u8 field_0xf;
    int* field_0x10;
    // u8 field_0x11;
    // u8 field_0x12;
    // u8 field_0x13;
    u8 field_0x14;
    u8 field_0x15;
    u8 field_0x16;
    u8 field_0x17;
    u8 field_0x18;
    u8 field_0x19;
    u8 field_0x1a;
    u8 field_0x1b;
    u8 field_0x1c;
    u8 field_0x1d;
    u8 field_0x1e;
    u8 field_0x1f;
    u32* field_0x20;
    u8 field_0x24;
    u8 field_0x25;
    u8 field_0x26;
    u8 field_0x27;
    u8 field_0x28;
    u8 field_0x29;
    u8 field_0x2a;
    u8 field_0x2b;
    u8 field_0x2c;
    u8 field_0x2d;
    u8 field_0x2e;
    u8 field_0x2f;
    u8 field_0x30;
    u8 field_0x31;
    u8 field_0x32;
    u8 field_0x33;
    u8 field_0x34;
    u8 field_0x35;
    u8 field_0x36;
    u8 field_0x37;
    u8 field_0x38;
    u8 field_0x39;
    u8 field_0x3a;
    u8 field_0x3b;
    u8 field_0x3c;
    u8 field_0x3d;
    u8 field_0x3e;
    u8 field_0x3f;
    u8 field_0x40;
    u8 field_0x41;
    u8 field_0x42;
    u8 field_0x43;
    u8 field_0x44;
    u8 field_0x45;
    u8 field_0x46;
    u8 field_0x47;
    u8 field_0x48;
    u8 field_0x49;
    u8 field_0x4a;
    u8 field_0x4b;
    u8 field_0x4c;
    u8 field_0x4d;
    u8 field_0x4e;
    u8 field_0x4f;
    u8 field_0x50;
    u8 field_0x51;
    u8 field_0x52;
    u8 field_0x53;
    u8 field_0x54;
    u8 field_0x55;
    u8 field_0x56;
    u8 field_0x57;
    u8 field_0x58;
    u8 field_0x59;
    u8 field_0x5a;
    u8 field_0x5b;
    u8 field_0x5c;
    u8 field_0x5d;
    u8 field_0x5e;
    u8 field_0x5f;
    u8 field_0x60;
    u8 field_0x61;
    u8 field_0x62;
    u8 field_0x63;
    u8 field_0x64;
    u8 field_0x65;
    u8 field_0x66;
    u8 field_0x67;
    u8 field_0x68;
    u8 field_0x69;
    u8 field_0x6a;
    u8 field_0x6b;
    u8 field_0x6c;
    u8 field_0x6d;
    u8 field_0x6e;
    u8 field_0x6f;
    u8 field_0x70;
    u8 field_0x71;
    u8 field_0x72;
    u8 field_0x73;
    u8 field_0x74;
    u8 field_0x75;
    u8 field_0x76;
    u8 field_0x77;
    u8 field_0x78;
    u8 field_0x79;
    u8 field_0x7a;
    u8 field_0x7b;
    u8 field_0x7c;
    u8 field_0x7d;
    u8 field_0x7e;
    u8 field_0x7f;
    u8 field_0x80;
    u8 field_0x81;
    u8 field_0x82;
    u8 field_0x83;
    u8 field_0x84;
    u8 field_0x85;
    u8 field_0x86;
    u8 field_0x87;
    u8 field_0x88;
    u8 field_0x89;
    u8 field_0x8a;
    u8 field_0x8b;
    u8 field_0x8c;
    u8 field_0x8d;
    u8 field_0x8e;
    u8 field_0x8f;
    u8 field_0x90;
    u8 field_0x91;
    u8 field_0x92;
    u8 field_0x93;
    u8 field_0x94;
    u8 field_0x95;
    u8 field_0x96;
    u8 field_0x97;
    u8 field_0x98;
    u8 field_0x99;
    u8 field_0x9a;
    u8 field_0x9b;
    u8 field_0x9c;
    u8 field_0x9d;
    u8 field_0x9e;
    u8 field_0x9f;
    u8 field_0xa0;
    u8 field_0xa1;
    u8 field_0xa2;
    u8 field_0xa3;
    u8 field_0xa4;
    u8 field_0xa5;
    u8 field_0xa6;
    u8 field_0xa7;
    u8 field_0xa8;
    u8 field_0xa9;
    u8 field_0xaa;
    u8 field_0xab;
    u8 field_0xac;
    u8 field_0xad;
    u8 field_0xae;
    u8 field_0xaf;
    u8 field_0xb0;
    u8 field_0xb1;
    u8 field_0xb2;
    u8 field_0xb3;
    u8 field_0xb4;
    u8 field_0xb5;
    u8 field_0xb6;
    u8 field_0xb7;
    u8 field_0xb8;
    u8 field_0xb9;
    u8 field_0xba;
    u8 field_0xbb;
    u8 field_0xbc;
    u8 field_0xbd;
    u8 field_0xbe;
    u8 field_0xbf;
    u32 field_0xc0;
    // u8 field_0xc1;
    // u8 field_0xc2;
    // u8 field_0xc3;
    request_base_class* field_0xc4;
    // u8 field_0xc5;
    // u8 field_0xc6;
    // u8 field_0xc7;
    u32* field_0xc8;
};

int cReq_Is_Done(request_base_class*);
void cReq_Done(request_base_class*);
void cReq_Command(request_base_class*, u8);
void cReq_Create(request_base_class*, u8);

#endif /* C_REQUEST_H */
